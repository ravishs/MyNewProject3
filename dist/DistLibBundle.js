/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 227);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js

;(function (global, factory) {
     true ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks () {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback (callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return (Object.getOwnPropertyNames(obj).length === 0);
        } else {
            var k;
            for (k in obj) {
                if (obj.hasOwnProperty(k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
    }

    function map(arr, fn) {
        var res = [], i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty           : false,
            unusedTokens    : [],
            unusedInput     : [],
            overflow        : -2,
            charsLeftOver   : 0,
            nullInput       : false,
            invalidMonth    : null,
            invalidFormat   : false,
            userInvalidated : false,
            iso             : false,
            parsedDateParts : [],
            meridiem        : null,
            rfc2822         : false,
            weekdayMismatch : false
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this);
            var len = t.length >>> 0;

            for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
            });
            var isNowValid = !isNaN(m._d.getTime()) &&
                flags.overflow < 0 &&
                !flags.empty &&
                !flags.invalidMonth &&
                !flags.invalidWeekday &&
                !flags.weekdayMismatch &&
                !flags.nullInput &&
                !flags.invalidFormat &&
                !flags.userInvalidated &&
                (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid = isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            }
            else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid (flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        }
        else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment (obj) {
        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
    }

    function absFloor (number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false &&
                (typeof console !==  'undefined') && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (var key in arguments[0]) {
                            arg += key + ': ' + arguments[0][key] + ', ';
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }

    function set (config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (isFunction(prop)) {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' + (/\d{1,2}/).source);
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig), prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) &&
                    !hasOwnProp(childConfig, prop) &&
                    isObject(parentConfig[prop])) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i, res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    };

    function calendar (key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS  : 'h:mm:ss A',
        LT   : 'h:mm A',
        L    : 'MM/DD/YYYY',
        LL   : 'MMMM D, YYYY',
        LLL  : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    };

    function longDateFormat (key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
            return val.slice(1);
        });

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate () {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal (number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future : 'in %s',
        past   : '%s ago',
        s  : 'a few seconds',
        ss : '%d seconds',
        m  : 'a minute',
        mm : '%d minutes',
        h  : 'an hour',
        hh : '%d hours',
        d  : 'a day',
        dd : '%d days',
        M  : 'a month',
        MM : '%d months',
        y  : 'a year',
        yy : '%d years'
    };

    function relativeTime (number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return (isFunction(output)) ?
            output(number, withoutSuffix, string, isFuture) :
            output.replace(/%d/i, number);
    }

    function pastFuture (diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias (unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [];
        for (var u in unitsObj) {
            units.push({unit: u, priority: priorities[u]});
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken (token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '', i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1         = /\d/;            //       0 - 9
    var match2         = /\d\d/;          //      00 - 99
    var match3         = /\d{3}/;         //     000 - 999
    var match4         = /\d{4}/;         //    0000 - 9999
    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
    var match1to2      = /\d\d?/;         //       0 - 99
    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
    var match1to3      = /\d{1,3}/;       //       0 - 999
    var match1to4      = /\d{1,4}/;       //       0 - 9999
    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

    var matchUnsigned  = /\d+/;           //       0 - inf
    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

    // any word (or two) characters or numbers including two/three word month in arabic.
    // includes scottish gaelic two word and hyphenated months
    var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

    var regexes = {};

    function addRegexToken (token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
            return (isStrict && strictRegex) ? strictRegex : regex;
        };
    }

    function getParseRegexForToken (token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }));
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken (token, callback) {
        var i, func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken (token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;
    var WEEK = 7;
    var WEEKDAY = 8;

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY',   4],       0, 'year');
    addFormatToken(0, ['YYYYY',  5],       0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y',      matchSigned);
    addRegexToken('YY',     match1to2, match2);
    addRegexToken('YYYY',   match1to4, match4);
    addRegexToken('YYYYY',  match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear () {
        return isLeapYear(this.year());
    }

    function makeGetSet (unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get (mom, unit) {
        return mom.isValid() ?
            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
    }

    function set$1 (mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
            }
            else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet (units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }


    function stringSet (units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M',    match1to2);
    addRegexToken('MM',   match1to2, match2);
    addRegexToken('MMM',  function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths (m, format) {
        if (!m) {
            return isArray(this._months) ? this._months :
                this._months['standalone'];
        }
        return isArray(this._months) ? this._months[m.month()] :
            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort (m, format) {
        if (!m) {
            return isArray(this._monthsShort) ? this._monthsShort :
                this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i, ii, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse (monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth (mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth (value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth () {
        return daysInMonth(this.year(), this.month());
    }

    var defaultMonthsShortRegex = matchWord;
    function monthsShortRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict ?
                this._monthsShortStrictRegex : this._monthsShortRegex;
        }
    }

    var defaultMonthsRegex = matchWord;
    function monthsRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict ?
                this._monthsStrictRegex : this._monthsRegex;
        }
    }

    function computeMonthsParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    }

    function createDate (y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate (y) {
        var date;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            var args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear, resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek, resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w',  match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W',  match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek (mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek () {
        return this._week.dow;
    }

    function localeFirstDayOfYear () {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek (input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek (input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d',    match1to2);
    addRegexToken('e',    match1to2);
    addRegexToken('E',    match1to2);
    addRegexToken('dd',   function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd',   function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd',   function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays (ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays (m, format) {
        var weekdays = isArray(this._weekdays) ? this._weekdays :
            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];
        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)
            : (m) ? weekdays[m.day()] : weekdays;
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse (weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
            }
            if (!this._weekdaysParse[i]) {
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    var defaultWeekdaysRegex = matchWord;
    function weekdaysRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict ?
                this._weekdaysStrictRegex : this._weekdaysRegex;
        }
    }

    var defaultWeekdaysShortRegex = matchWord;
    function weekdaysShortRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict ?
                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
    }

    var defaultWeekdaysMinRegex = matchWord;
    function weekdaysMinRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict ?
                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
    }


    function computeWeekdaysParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom, minp, shortp, longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = this.weekdaysMin(mom, '');
            shortp = this.weekdaysShort(mom, '');
            longp = this.weekdays(mom, '');
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    function meridiem (token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem (isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a',  matchMeridiem);
    addRegexToken('A',  matchMeridiem);
    addRegexToken('H',  match1to2);
    addRegexToken('h',  match1to2);
    addRegexToken('k',  match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM (input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return ((input + '').toLowerCase().charAt(0) === 'p');
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }


    // MOMENTS

    // Setting the hour should keep the time, because the user explicitly
    // specified which hour they want. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    var getSetHour = makeGetSet('Hours', true);

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse
    };

    // internal storage for locale config files
    var locales = {};
    var localeFamilies = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null;
        // TODO: Find a better way to register and load all the locales in Node
        if (!locales[name] && (typeof module !== 'undefined') &&
                module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                var aliasedRequire = require;
                __webpack_require__(224)("./" + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {}
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale (key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            }
            else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            }
            else {
                if ((typeof console !==  'undefined') && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale (name, config) {
        if (config !== null) {
            var locale, parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple('defineLocaleOverride',
                        'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);


            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale, tmpLocale, parentConfig = baseConfig;
            // MERGE
            tmpLocale = loadLocale(name);
            if (tmpLocale != null) {
                parentConfig = tmpLocale._config;
            }
            config = mergeConfigs(parentConfig, config);
            locale = new Locale(config);
            locale.parentLocale = locales[name];
            locales[name] = locale;

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow (m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray (config) {
        var i, date, input = [], currentDate, expectedWeekday, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            var curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

    var isoDates = [
        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
        ['YYYY-DDD', /\d{4}-\d{3}/],
        ['YYYY-MM', /\d{4}-\d\d/, false],
        ['YYYYYYMMDD', /[+-]\d{10}/],
        ['YYYYMMDD', /\d{8}/],
        // YYYYMM is NOT allowed by the standard
        ['GGGG[W]WWE', /\d{4}W\d{3}/],
        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
        ['YYYYDDD', /\d{7}/]
    ];

    // iso time formats and regexes
    var isoTimes = [
        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
        ['HH:mm', /\d\d:\d\d/],
        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
        ['HHmmss', /\d\d\d\d\d\d/],
        ['HHmm', /\d\d\d\d/],
        ['HH', /\d\d/]
    ];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    // date from iso format
    function configFromISO(config) {
        var i, l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime, dateFormat, timeFormat, tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10)
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    var obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
    };

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10);
            var m = hm % 100, h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i));
        if (match) {
            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        // Final attempt, use Input Fallback
        hooks.createFromInputFallback(config);
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
        'discouraged and will be removed in an upcoming major release. Please refer to ' +
        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            // console.log('token', token, 'parsedInput', parsedInput,
            //         'regex', getParseRegexForToken(token, config));
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                }
                else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }


    function meridiemFixWrap (locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
            return obj && parseInt(obj, 10);
        });

        configFromArray(config);
    }

    function createFromConfig (config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig (config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        }  else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC (input, format, locale, strict, isUTC) {
        var c = {};

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if ((isObject(input) && isObjectEmpty(input)) ||
                (isArray(input) && input.length === 0)) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other < this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    var prototypeMax = deprecate(
        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other > this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +(new Date());
    };

    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

    function isDurationValid(m) {
        for (var key in m) {
            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                return false;
            }
        }

        var unitHasDecimal = false;
        for (var i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration (duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration (obj) {
        return obj instanceof Duration;
    }

    function absRound (number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // FORMATTING

    function offset (token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z',  matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher);

        if (matches === null) {
            return null;
        }

        var chunk   = matches[matches.length - 1] || [];
        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ?
          0 :
          parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset (m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset (input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone (input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC (keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal (keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset () {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            }
            else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset (input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime () {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted () {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {};

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted = this.isValid() &&
                compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal () {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset () {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc () {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
    // and further modified to allow for strings containing both week and day
    var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms : input._milliseconds,
                d  : input._days,
                M  : input._months
            };
        } else if (isNumber(input)) {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y  : 0,
                d  : toInt(match[DATE])                         * sign,
                h  : toInt(match[HOUR])                         * sign,
                m  : toInt(match[MINUTE])                       * sign,
                s  : toInt(match[SECOND])                       * sign,
                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
            };
        } else if (!!(match = isoRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y : parseIso(match[2], sign),
                M : parseIso(match[3], sign),
                w : parseIso(match[4], sign),
                d : parseIso(match[5], sign),
                h : parseIso(match[6], sign),
                m : parseIso(match[7], sign),
                s : parseIso(match[8], sign)
            };
        } else if (duration == null) {// checks for null or undefined
            duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso (inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return {milliseconds: 0, months: 0};
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract (mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add      = createAdder(1, 'add');
    var subtract = createAdder(-1, 'subtract');

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
    }

    function calendar$1 (time, formats) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse';

        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
    }

    function clone () {
        return new Moment(this);
    }

    function isAfter (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween (from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
    }

    function isSame (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
    }

    function isSameOrAfter (input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore (input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff (input, units, asFloat) {
        var that,
            zoneDelta,
            output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year': output = monthDiff(this, that) / 12; break;
            case 'month': output = monthDiff(this, that); break;
            case 'quarter': output = monthDiff(this, that) / 3; break;
            case 'second': output = (this - that) / 1e3; break; // 1000
            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default: output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff (a, b) {
        // difference in months
        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2, adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString () {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true;
        var m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect () {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment';
        var zone = '';
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        var prefix = '[' + func + '("]';
        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
        var suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format (inputString) {
        if (!inputString) {
            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow (withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow (withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale (key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData () {
        return this._locale;
    }

    var MS_PER_SECOND = 1000;
    var MS_PER_MINUTE = 60 * MS_PER_SECOND;
    var MS_PER_HOUR = 60 * MS_PER_MINUTE;
    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return (dividend % divisor + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf () {
        return this._d.valueOf() - ((this._offset || 0) * 60000);
    }

    function unix () {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate () {
        return new Date(this.valueOf());
    }

    function toArray () {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function toObject () {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        };
    }

    function toJSON () {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2 () {
        return isValid(this);
    }

    function parsingFlags () {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt () {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        };
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken (token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg',     'weekYear');
    addWeekYearFormatToken('ggggg',    'weekYear');
    addWeekYearFormatToken('GGGG',  'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);


    // PARSING

    addRegexToken('G',      matchSigned);
    addRegexToken('g',      matchSigned);
    addRegexToken('GG',     match1to2, match2);
    addRegexToken('gg',     match1to2, match2);
    addRegexToken('GGGG',   match1to4, match4);
    addRegexToken('gggg',   match1to4, match4);
    addRegexToken('GGGGG',  match1to6, match6);
    addRegexToken('ggggg',  match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input,
                this.week(),
                this.weekday(),
                this.localeData()._week.dow,
                this.localeData()._week.doy);
    }

    function getSetISOWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input, this.isoWeek(), this.isoWeekday(), 1, 4);
    }

    function getISOWeeksInYear () {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear () {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter (input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D',  match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict ?
          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
          locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD',  match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear (input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m',  match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s',  match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });


    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S',    match1to3, match1);
    addRegexToken('SS',   match1to3, match2);
    addRegexToken('SSS',  match1to3, match3);

    var token;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }
    // MOMENTS

    var getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z',  0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr () {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName () {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add               = add;
    proto.calendar          = calendar$1;
    proto.clone             = clone;
    proto.diff              = diff;
    proto.endOf             = endOf;
    proto.format            = format;
    proto.from              = from;
    proto.fromNow           = fromNow;
    proto.to                = to;
    proto.toNow             = toNow;
    proto.get               = stringGet;
    proto.invalidAt         = invalidAt;
    proto.isAfter           = isAfter;
    proto.isBefore          = isBefore;
    proto.isBetween         = isBetween;
    proto.isSame            = isSame;
    proto.isSameOrAfter     = isSameOrAfter;
    proto.isSameOrBefore    = isSameOrBefore;
    proto.isValid           = isValid$2;
    proto.lang              = lang;
    proto.locale            = locale;
    proto.localeData        = localeData;
    proto.max               = prototypeMax;
    proto.min               = prototypeMin;
    proto.parsingFlags      = parsingFlags;
    proto.set               = stringSet;
    proto.startOf           = startOf;
    proto.subtract          = subtract;
    proto.toArray           = toArray;
    proto.toObject          = toObject;
    proto.toDate            = toDate;
    proto.toISOString       = toISOString;
    proto.inspect           = inspect;
    proto.toJSON            = toJSON;
    proto.toString          = toString;
    proto.unix              = unix;
    proto.valueOf           = valueOf;
    proto.creationData      = creationData;
    proto.year       = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear    = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month       = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week           = proto.weeks        = getSetWeek;
    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
    proto.weeksInYear    = getWeeksInYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.date       = getSetDayOfMonth;
    proto.day        = proto.days             = getSetDayOfWeek;
    proto.weekday    = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear  = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset            = getSetOffset;
    proto.utc                  = setOffsetToUTC;
    proto.local                = setOffsetToLocal;
    proto.parseZone            = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST                = isDaylightSavingTime;
    proto.isLocal              = isLocal;
    proto.isUtcOffset          = isUtcOffset;
    proto.isUtc                = isUtc;
    proto.isUTC                = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

    function createUnix (input) {
        return createLocal(input * 1000);
    }

    function createInZone () {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat (string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar        = calendar;
    proto$1.longDateFormat  = longDateFormat;
    proto$1.invalidDate     = invalidDate;
    proto$1.ordinal         = ordinal;
    proto$1.preparse        = preParsePostFormat;
    proto$1.postformat      = preParsePostFormat;
    proto$1.relativeTime    = relativeTime;
    proto$1.pastFuture      = pastFuture;
    proto$1.set             = set;

    proto$1.months            =        localeMonths;
    proto$1.monthsShort       =        localeMonthsShort;
    proto$1.monthsParse       =        localeMonthsParse;
    proto$1.monthsRegex       = monthsRegex;
    proto$1.monthsShortRegex  = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays       =        localeWeekdays;
    proto$1.weekdaysMin    =        localeWeekdaysMin;
    proto$1.weekdaysShort  =        localeWeekdaysShort;
    proto$1.weekdaysParse  =        localeWeekdaysParse;

    proto$1.weekdaysRegex       =        weekdaysRegex;
    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1 (format, index, field, setter) {
        var locale = getLocale();
        var utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl (format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i;
        var out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl (localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];
        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths (format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort (format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    // Side effect imports

    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

    var mathAbs = Math.abs;

    function abs () {
        var data           = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days         = mathAbs(this._days);
        this._months       = mathAbs(this._months);

        data.milliseconds  = mathAbs(data.milliseconds);
        data.seconds       = mathAbs(data.seconds);
        data.minutes       = mathAbs(data.minutes);
        data.hours         = mathAbs(data.hours);
        data.months        = mathAbs(data.months);
        data.years         = mathAbs(data.years);

        return this;
    }

    function addSubtract$1 (duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days         += direction * other._days;
        duration._months       += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1 (input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1 (input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil (number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble () {
        var milliseconds = this._milliseconds;
        var days         = this._days;
        var months       = this._months;
        var data         = this._data;
        var seconds, minutes, hours, years, monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0))) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds           = absFloor(milliseconds / 1000);
        data.seconds      = seconds % 60;

        minutes           = absFloor(seconds / 60);
        data.minutes      = minutes % 60;

        hours             = absFloor(minutes / 60);
        data.hours        = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days   = days;
        data.months = months;
        data.years  = years;

        return this;
    }

    function daysToMonths (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return days * 4800 / 146097;
    }

    function monthsToDays (months) {
        // the reverse of daysToMonths
        return months * 146097 / 4800;
    }

    function as (units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':   return months;
                case 'quarter': return months / 3;
                case 'year':    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week'   : return days / 7     + milliseconds / 6048e5;
                case 'day'    : return days         + milliseconds / 864e5;
                case 'hour'   : return days * 24    + milliseconds / 36e5;
                case 'minute' : return days * 1440  + milliseconds / 6e4;
                case 'second' : return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
                default: throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1 () {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs (alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds      = makeAs('s');
    var asMinutes      = makeAs('m');
    var asHours        = makeAs('h');
    var asDays         = makeAs('d');
    var asWeeks        = makeAs('w');
    var asMonths       = makeAs('M');
    var asQuarters     = makeAs('Q');
    var asYears        = makeAs('y');

    function clone$1 () {
        return createDuration(this);
    }

    function get$2 (units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds');
    var seconds      = makeGetter('seconds');
    var minutes      = makeGetter('minutes');
    var hours        = makeGetter('hours');
    var days         = makeGetter('days');
    var months       = makeGetter('months');
    var years        = makeGetter('years');

    function weeks () {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        ss: 44,         // a few seconds to seconds
        s : 45,         // seconds to minute
        m : 45,         // minutes to hour
        h : 22,         // hours to day
        d : 26,         // days to month
        M : 11          // months to year
    };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
        var duration = createDuration(posNegDuration).abs();
        var seconds  = round(duration.as('s'));
        var minutes  = round(duration.as('m'));
        var hours    = round(duration.as('h'));
        var days     = round(duration.as('d'));
        var months   = round(duration.as('M'));
        var years    = round(duration.as('y'));

        var a = seconds <= thresholds.ss && ['s', seconds]  ||
                seconds < thresholds.s   && ['ss', seconds] ||
                minutes <= 1             && ['m']           ||
                minutes < thresholds.m   && ['mm', minutes] ||
                hours   <= 1             && ['h']           ||
                hours   < thresholds.h   && ['hh', hours]   ||
                days    <= 1             && ['d']           ||
                days    < thresholds.d   && ['dd', days]    ||
                months  <= 1             && ['M']           ||
                months  < thresholds.M   && ['MM', months]  ||
                years   <= 1             && ['y']           || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding (roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof(roundingFunction) === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold (threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize (withSuffix) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var locale = this.localeData();
        var output = relativeTime$1(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return ((x > 0) - (x < 0)) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000;
        var days         = abs$1(this._days);
        var months       = abs$1(this._months);
        var minutes, hours, years;

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes           = absFloor(seconds / 60);
        hours             = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years  = absFloor(months / 12);
        months %= 12;


        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
        var total = this.asSeconds();

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        var totalSign = total < 0 ? '-' : '';
        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return totalSign + 'P' +
            (Y ? ymSign + Y + 'Y' : '') +
            (M ? ymSign + M + 'M' : '') +
            (D ? daysSign + D + 'D' : '') +
            ((h || m || s) ? 'T' : '') +
            (h ? hmsSign + h + 'H' : '') +
            (m ? hmsSign + m + 'M' : '') +
            (s ? hmsSign + s + 'S' : '');
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid        = isValid$1;
    proto$2.abs            = abs;
    proto$2.add            = add$1;
    proto$2.subtract       = subtract$1;
    proto$2.as             = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds      = asSeconds;
    proto$2.asMinutes      = asMinutes;
    proto$2.asHours        = asHours;
    proto$2.asDays         = asDays;
    proto$2.asWeeks        = asWeeks;
    proto$2.asMonths       = asMonths;
    proto$2.asQuarters     = asQuarters;
    proto$2.asYears        = asYears;
    proto$2.valueOf        = valueOf$1;
    proto$2._bubble        = bubble;
    proto$2.clone          = clone$1;
    proto$2.get            = get$2;
    proto$2.milliseconds   = milliseconds;
    proto$2.seconds        = seconds;
    proto$2.minutes        = minutes;
    proto$2.hours          = hours;
    proto$2.days           = days;
    proto$2.weeks          = weeks;
    proto$2.months         = months;
    proto$2.years          = years;
    proto$2.humanize       = humanize;
    proto$2.toISOString    = toISOString$1;
    proto$2.toString       = toISOString$1;
    proto$2.toJSON         = toISOString$1;
    proto$2.locale         = locale;
    proto$2.localeData     = localeData;

    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
    proto$2.lang = lang;

    // Side effect imports

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    // Side effect imports


    hooks.version = '2.24.0';

    setHookCallback(createLocal);

    hooks.fn                    = proto;
    hooks.min                   = min;
    hooks.max                   = max;
    hooks.now                   = now;
    hooks.utc                   = createUTC;
    hooks.unix                  = createUnix;
    hooks.months                = listMonths;
    hooks.isDate                = isDate;
    hooks.locale                = getSetGlobalLocale;
    hooks.invalid               = createInvalid;
    hooks.duration              = createDuration;
    hooks.isMoment              = isMoment;
    hooks.weekdays              = listWeekdays;
    hooks.parseZone             = createInZone;
    hooks.localeData            = getLocale;
    hooks.isDuration            = isDuration;
    hooks.monthsShort           = listMonthsShort;
    hooks.weekdaysMin           = listWeekdaysMin;
    hooks.defineLocale          = defineLocale;
    hooks.updateLocale          = updateLocale;
    hooks.locales               = listLocales;
    hooks.weekdaysShort         = listWeekdaysShort;
    hooks.normalizeUnits        = normalizeUnits;
    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat        = getCalendarFormat;
    hooks.prototype             = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD',                             // <input type="date" />
        TIME: 'HH:mm',                                  // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW',                             // <input type="week" />
        MONTH: 'YYYY-MM'                                // <input type="month" />
    };

    return hooks;

})));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(226)(module)))

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory();
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define([], factory);
	}
	else {
		// Global (browser)
		root.CryptoJS = factory();
	}
}(this, function () {

	/**
	 * CryptoJS core components.
	 */
	var CryptoJS = CryptoJS || (function (Math, undefined) {
	    /*
	     * Local polyfil of Object.create
	     */
	    var create = Object.create || (function () {
	        function F() {};

	        return function (obj) {
	            var subtype;

	            F.prototype = obj;

	            subtype = new F();

	            F.prototype = null;

	            return subtype;
	        };
	    }())

	    /**
	     * CryptoJS namespace.
	     */
	    var C = {};

	    /**
	     * Library namespace.
	     */
	    var C_lib = C.lib = {};

	    /**
	     * Base object for prototypal inheritance.
	     */
	    var Base = C_lib.Base = (function () {


	        return {
	            /**
	             * Creates a new object that inherits from this object.
	             *
	             * @param {Object} overrides Properties to copy into the new object.
	             *
	             * @return {Object} The new object.
	             *
	             * @static
	             *
	             * @example
	             *
	             *     var MyType = CryptoJS.lib.Base.extend({
	             *         field: 'value',
	             *
	             *         method: function () {
	             *         }
	             *     });
	             */
	            extend: function (overrides) {
	                // Spawn
	                var subtype = create(this);

	                // Augment
	                if (overrides) {
	                    subtype.mixIn(overrides);
	                }

	                // Create default initializer
	                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {
	                    subtype.init = function () {
	                        subtype.$super.init.apply(this, arguments);
	                    };
	                }

	                // Initializer's prototype is the subtype object
	                subtype.init.prototype = subtype;

	                // Reference supertype
	                subtype.$super = this;

	                return subtype;
	            },

	            /**
	             * Extends this object and runs the init method.
	             * Arguments to create() will be passed to init().
	             *
	             * @return {Object} The new object.
	             *
	             * @static
	             *
	             * @example
	             *
	             *     var instance = MyType.create();
	             */
	            create: function () {
	                var instance = this.extend();
	                instance.init.apply(instance, arguments);

	                return instance;
	            },

	            /**
	             * Initializes a newly created object.
	             * Override this method to add some logic when your objects are created.
	             *
	             * @example
	             *
	             *     var MyType = CryptoJS.lib.Base.extend({
	             *         init: function () {
	             *             // ...
	             *         }
	             *     });
	             */
	            init: function () {
	            },

	            /**
	             * Copies properties into this object.
	             *
	             * @param {Object} properties The properties to mix in.
	             *
	             * @example
	             *
	             *     MyType.mixIn({
	             *         field: 'value'
	             *     });
	             */
	            mixIn: function (properties) {
	                for (var propertyName in properties) {
	                    if (properties.hasOwnProperty(propertyName)) {
	                        this[propertyName] = properties[propertyName];
	                    }
	                }

	                // IE won't copy toString using the loop above
	                if (properties.hasOwnProperty('toString')) {
	                    this.toString = properties.toString;
	                }
	            },

	            /**
	             * Creates a copy of this object.
	             *
	             * @return {Object} The clone.
	             *
	             * @example
	             *
	             *     var clone = instance.clone();
	             */
	            clone: function () {
	                return this.init.prototype.extend(this);
	            }
	        };
	    }());

	    /**
	     * An array of 32-bit words.
	     *
	     * @property {Array} words The array of 32-bit words.
	     * @property {number} sigBytes The number of significant bytes in this word array.
	     */
	    var WordArray = C_lib.WordArray = Base.extend({
	        /**
	         * Initializes a newly created word array.
	         *
	         * @param {Array} words (Optional) An array of 32-bit words.
	         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.lib.WordArray.create();
	         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
	         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
	         */
	        init: function (words, sigBytes) {
	            words = this.words = words || [];

	            if (sigBytes != undefined) {
	                this.sigBytes = sigBytes;
	            } else {
	                this.sigBytes = words.length * 4;
	            }
	        },

	        /**
	         * Converts this word array to a string.
	         *
	         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
	         *
	         * @return {string} The stringified word array.
	         *
	         * @example
	         *
	         *     var string = wordArray + '';
	         *     var string = wordArray.toString();
	         *     var string = wordArray.toString(CryptoJS.enc.Utf8);
	         */
	        toString: function (encoder) {
	            return (encoder || Hex).stringify(this);
	        },

	        /**
	         * Concatenates a word array to this word array.
	         *
	         * @param {WordArray} wordArray The word array to append.
	         *
	         * @return {WordArray} This word array.
	         *
	         * @example
	         *
	         *     wordArray1.concat(wordArray2);
	         */
	        concat: function (wordArray) {
	            // Shortcuts
	            var thisWords = this.words;
	            var thatWords = wordArray.words;
	            var thisSigBytes = this.sigBytes;
	            var thatSigBytes = wordArray.sigBytes;

	            // Clamp excess bits
	            this.clamp();

	            // Concat
	            if (thisSigBytes % 4) {
	                // Copy one byte at a time
	                for (var i = 0; i < thatSigBytes; i++) {
	                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);
	                }
	            } else {
	                // Copy one word at a time
	                for (var i = 0; i < thatSigBytes; i += 4) {
	                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];
	                }
	            }
	            this.sigBytes += thatSigBytes;

	            // Chainable
	            return this;
	        },

	        /**
	         * Removes insignificant bits.
	         *
	         * @example
	         *
	         *     wordArray.clamp();
	         */
	        clamp: function () {
	            // Shortcuts
	            var words = this.words;
	            var sigBytes = this.sigBytes;

	            // Clamp
	            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);
	            words.length = Math.ceil(sigBytes / 4);
	        },

	        /**
	         * Creates a copy of this word array.
	         *
	         * @return {WordArray} The clone.
	         *
	         * @example
	         *
	         *     var clone = wordArray.clone();
	         */
	        clone: function () {
	            var clone = Base.clone.call(this);
	            clone.words = this.words.slice(0);

	            return clone;
	        },

	        /**
	         * Creates a word array filled with random bytes.
	         *
	         * @param {number} nBytes The number of random bytes to generate.
	         *
	         * @return {WordArray} The random word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.lib.WordArray.random(16);
	         */
	        random: function (nBytes) {
	            var words = [];

	            var r = (function (m_w) {
	                var m_w = m_w;
	                var m_z = 0x3ade68b1;
	                var mask = 0xffffffff;

	                return function () {
	                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;
	                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;
	                    var result = ((m_z << 0x10) + m_w) & mask;
	                    result /= 0x100000000;
	                    result += 0.5;
	                    return result * (Math.random() > .5 ? 1 : -1);
	                }
	            });

	            for (var i = 0, rcache; i < nBytes; i += 4) {
	                var _r = r((rcache || Math.random()) * 0x100000000);

	                rcache = _r() * 0x3ade67b7;
	                words.push((_r() * 0x100000000) | 0);
	            }

	            return new WordArray.init(words, nBytes);
	        }
	    });

	    /**
	     * Encoder namespace.
	     */
	    var C_enc = C.enc = {};

	    /**
	     * Hex encoding strategy.
	     */
	    var Hex = C_enc.Hex = {
	        /**
	         * Converts a word array to a hex string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The hex string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var hexChars = [];
	            for (var i = 0; i < sigBytes; i++) {
	                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                hexChars.push((bite >>> 4).toString(16));
	                hexChars.push((bite & 0x0f).toString(16));
	            }

	            return hexChars.join('');
	        },

	        /**
	         * Converts a hex string to a word array.
	         *
	         * @param {string} hexStr The hex string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
	         */
	        parse: function (hexStr) {
	            // Shortcut
	            var hexStrLength = hexStr.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < hexStrLength; i += 2) {
	                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);
	            }

	            return new WordArray.init(words, hexStrLength / 2);
	        }
	    };

	    /**
	     * Latin1 encoding strategy.
	     */
	    var Latin1 = C_enc.Latin1 = {
	        /**
	         * Converts a word array to a Latin1 string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The Latin1 string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var latin1Chars = [];
	            for (var i = 0; i < sigBytes; i++) {
	                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                latin1Chars.push(String.fromCharCode(bite));
	            }

	            return latin1Chars.join('');
	        },

	        /**
	         * Converts a Latin1 string to a word array.
	         *
	         * @param {string} latin1Str The Latin1 string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
	         */
	        parse: function (latin1Str) {
	            // Shortcut
	            var latin1StrLength = latin1Str.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < latin1StrLength; i++) {
	                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);
	            }

	            return new WordArray.init(words, latin1StrLength);
	        }
	    };

	    /**
	     * UTF-8 encoding strategy.
	     */
	    var Utf8 = C_enc.Utf8 = {
	        /**
	         * Converts a word array to a UTF-8 string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The UTF-8 string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            try {
	                return decodeURIComponent(escape(Latin1.stringify(wordArray)));
	            } catch (e) {
	                throw new Error('Malformed UTF-8 data');
	            }
	        },

	        /**
	         * Converts a UTF-8 string to a word array.
	         *
	         * @param {string} utf8Str The UTF-8 string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
	         */
	        parse: function (utf8Str) {
	            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
	        }
	    };

	    /**
	     * Abstract buffered block algorithm template.
	     *
	     * The property blockSize must be implemented in a concrete subtype.
	     *
	     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0
	     */
	    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
	        /**
	         * Resets this block algorithm's data buffer to its initial state.
	         *
	         * @example
	         *
	         *     bufferedBlockAlgorithm.reset();
	         */
	        reset: function () {
	            // Initial values
	            this._data = new WordArray.init();
	            this._nDataBytes = 0;
	        },

	        /**
	         * Adds new data to this block algorithm's buffer.
	         *
	         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
	         *
	         * @example
	         *
	         *     bufferedBlockAlgorithm._append('data');
	         *     bufferedBlockAlgorithm._append(wordArray);
	         */
	        _append: function (data) {
	            // Convert string to WordArray, else assume WordArray already
	            if (typeof data == 'string') {
	                data = Utf8.parse(data);
	            }

	            // Append
	            this._data.concat(data);
	            this._nDataBytes += data.sigBytes;
	        },

	        /**
	         * Processes available data blocks.
	         *
	         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
	         *
	         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
	         *
	         * @return {WordArray} The processed data.
	         *
	         * @example
	         *
	         *     var processedData = bufferedBlockAlgorithm._process();
	         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
	         */
	        _process: function (doFlush) {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;
	            var dataSigBytes = data.sigBytes;
	            var blockSize = this.blockSize;
	            var blockSizeBytes = blockSize * 4;

	            // Count blocks ready
	            var nBlocksReady = dataSigBytes / blockSizeBytes;
	            if (doFlush) {
	                // Round up to include partial blocks
	                nBlocksReady = Math.ceil(nBlocksReady);
	            } else {
	                // Round down to include only full blocks,
	                // less the number of blocks that must remain in the buffer
	                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
	            }

	            // Count words ready
	            var nWordsReady = nBlocksReady * blockSize;

	            // Count bytes ready
	            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

	            // Process blocks
	            if (nWordsReady) {
	                for (var offset = 0; offset < nWordsReady; offset += blockSize) {
	                    // Perform concrete-algorithm logic
	                    this._doProcessBlock(dataWords, offset);
	                }

	                // Remove processed words
	                var processedWords = dataWords.splice(0, nWordsReady);
	                data.sigBytes -= nBytesReady;
	            }

	            // Return processed words
	            return new WordArray.init(processedWords, nBytesReady);
	        },

	        /**
	         * Creates a copy of this object.
	         *
	         * @return {Object} The clone.
	         *
	         * @example
	         *
	         *     var clone = bufferedBlockAlgorithm.clone();
	         */
	        clone: function () {
	            var clone = Base.clone.call(this);
	            clone._data = this._data.clone();

	            return clone;
	        },

	        _minBufferSize: 0
	    });

	    /**
	     * Abstract hasher template.
	     *
	     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
	     */
	    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({
	        /**
	         * Configuration options.
	         */
	        cfg: Base.extend(),

	        /**
	         * Initializes a newly created hasher.
	         *
	         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
	         *
	         * @example
	         *
	         *     var hasher = CryptoJS.algo.SHA256.create();
	         */
	        init: function (cfg) {
	            // Apply config defaults
	            this.cfg = this.cfg.extend(cfg);

	            // Set initial values
	            this.reset();
	        },

	        /**
	         * Resets this hasher to its initial state.
	         *
	         * @example
	         *
	         *     hasher.reset();
	         */
	        reset: function () {
	            // Reset data buffer
	            BufferedBlockAlgorithm.reset.call(this);

	            // Perform concrete-hasher logic
	            this._doReset();
	        },

	        /**
	         * Updates this hasher with a message.
	         *
	         * @param {WordArray|string} messageUpdate The message to append.
	         *
	         * @return {Hasher} This hasher.
	         *
	         * @example
	         *
	         *     hasher.update('message');
	         *     hasher.update(wordArray);
	         */
	        update: function (messageUpdate) {
	            // Append
	            this._append(messageUpdate);

	            // Update the hash
	            this._process();

	            // Chainable
	            return this;
	        },

	        /**
	         * Finalizes the hash computation.
	         * Note that the finalize operation is effectively a destructive, read-once operation.
	         *
	         * @param {WordArray|string} messageUpdate (Optional) A final message update.
	         *
	         * @return {WordArray} The hash.
	         *
	         * @example
	         *
	         *     var hash = hasher.finalize();
	         *     var hash = hasher.finalize('message');
	         *     var hash = hasher.finalize(wordArray);
	         */
	        finalize: function (messageUpdate) {
	            // Final message update
	            if (messageUpdate) {
	                this._append(messageUpdate);
	            }

	            // Perform concrete-hasher logic
	            var hash = this._doFinalize();

	            return hash;
	        },

	        blockSize: 512/32,

	        /**
	         * Creates a shortcut function to a hasher's object interface.
	         *
	         * @param {Hasher} hasher The hasher to create a helper for.
	         *
	         * @return {Function} The shortcut function.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
	         */
	        _createHelper: function (hasher) {
	            return function (message, cfg) {
	                return new hasher.init(cfg).finalize(message);
	            };
	        },

	        /**
	         * Creates a shortcut function to the HMAC's object interface.
	         *
	         * @param {Hasher} hasher The hasher to use in this HMAC helper.
	         *
	         * @return {Function} The shortcut function.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
	         */
	        _createHmacHelper: function (hasher) {
	            return function (message, key) {
	                return new C_algo.HMAC.init(hasher, key).finalize(message);
	            };
	        }
	    });

	    /**
	     * Algorithm namespace.
	     */
	    var C_algo = C.algo = {};

	    return C;
	}(Math));


	return CryptoJS;

}));

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(4));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./evpkdf"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	/**
	 * Cipher core components.
	 */
	CryptoJS.lib.Cipher || (function (undefined) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var WordArray = C_lib.WordArray;
	    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;
	    var C_enc = C.enc;
	    var Utf8 = C_enc.Utf8;
	    var Base64 = C_enc.Base64;
	    var C_algo = C.algo;
	    var EvpKDF = C_algo.EvpKDF;

	    /**
	     * Abstract base cipher template.
	     *
	     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)
	     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)
	     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.
	     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.
	     */
	    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {WordArray} iv The IV to use for this operation.
	         */
	        cfg: Base.extend(),

	        /**
	         * Creates this cipher in encryption mode.
	         *
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {Cipher} A cipher instance.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
	         */
	        createEncryptor: function (key, cfg) {
	            return this.create(this._ENC_XFORM_MODE, key, cfg);
	        },

	        /**
	         * Creates this cipher in decryption mode.
	         *
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {Cipher} A cipher instance.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
	         */
	        createDecryptor: function (key, cfg) {
	            return this.create(this._DEC_XFORM_MODE, key, cfg);
	        },

	        /**
	         * Initializes a newly created cipher.
	         *
	         * @param {number} xformMode Either the encryption or decryption transormation mode constant.
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @example
	         *
	         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
	         */
	        init: function (xformMode, key, cfg) {
	            // Apply config defaults
	            this.cfg = this.cfg.extend(cfg);

	            // Store transform mode and key
	            this._xformMode = xformMode;
	            this._key = key;

	            // Set initial values
	            this.reset();
	        },

	        /**
	         * Resets this cipher to its initial state.
	         *
	         * @example
	         *
	         *     cipher.reset();
	         */
	        reset: function () {
	            // Reset data buffer
	            BufferedBlockAlgorithm.reset.call(this);

	            // Perform concrete-cipher logic
	            this._doReset();
	        },

	        /**
	         * Adds data to be encrypted or decrypted.
	         *
	         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
	         *
	         * @return {WordArray} The data after processing.
	         *
	         * @example
	         *
	         *     var encrypted = cipher.process('data');
	         *     var encrypted = cipher.process(wordArray);
	         */
	        process: function (dataUpdate) {
	            // Append
	            this._append(dataUpdate);

	            // Process available blocks
	            return this._process();
	        },

	        /**
	         * Finalizes the encryption or decryption process.
	         * Note that the finalize operation is effectively a destructive, read-once operation.
	         *
	         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
	         *
	         * @return {WordArray} The data after final processing.
	         *
	         * @example
	         *
	         *     var encrypted = cipher.finalize();
	         *     var encrypted = cipher.finalize('data');
	         *     var encrypted = cipher.finalize(wordArray);
	         */
	        finalize: function (dataUpdate) {
	            // Final data update
	            if (dataUpdate) {
	                this._append(dataUpdate);
	            }

	            // Perform concrete-cipher logic
	            var finalProcessedData = this._doFinalize();

	            return finalProcessedData;
	        },

	        keySize: 128/32,

	        ivSize: 128/32,

	        _ENC_XFORM_MODE: 1,

	        _DEC_XFORM_MODE: 2,

	        /**
	         * Creates shortcut functions to a cipher's object interface.
	         *
	         * @param {Cipher} cipher The cipher to create a helper for.
	         *
	         * @return {Object} An object with encrypt and decrypt shortcut functions.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
	         */
	        _createHelper: (function () {
	            function selectCipherStrategy(key) {
	                if (typeof key == 'string') {
	                    return PasswordBasedCipher;
	                } else {
	                    return SerializableCipher;
	                }
	            }

	            return function (cipher) {
	                return {
	                    encrypt: function (message, key, cfg) {
	                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);
	                    },

	                    decrypt: function (ciphertext, key, cfg) {
	                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);
	                    }
	                };
	            };
	        }())
	    });

	    /**
	     * Abstract base stream cipher template.
	     *
	     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)
	     */
	    var StreamCipher = C_lib.StreamCipher = Cipher.extend({
	        _doFinalize: function () {
	            // Process partial blocks
	            var finalProcessedBlocks = this._process(!!'flush');

	            return finalProcessedBlocks;
	        },

	        blockSize: 1
	    });

	    /**
	     * Mode namespace.
	     */
	    var C_mode = C.mode = {};

	    /**
	     * Abstract base block cipher mode template.
	     */
	    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({
	        /**
	         * Creates this mode for encryption.
	         *
	         * @param {Cipher} cipher A block cipher instance.
	         * @param {Array} iv The IV words.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
	         */
	        createEncryptor: function (cipher, iv) {
	            return this.Encryptor.create(cipher, iv);
	        },

	        /**
	         * Creates this mode for decryption.
	         *
	         * @param {Cipher} cipher A block cipher instance.
	         * @param {Array} iv The IV words.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
	         */
	        createDecryptor: function (cipher, iv) {
	            return this.Decryptor.create(cipher, iv);
	        },

	        /**
	         * Initializes a newly created mode.
	         *
	         * @param {Cipher} cipher A block cipher instance.
	         * @param {Array} iv The IV words.
	         *
	         * @example
	         *
	         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
	         */
	        init: function (cipher, iv) {
	            this._cipher = cipher;
	            this._iv = iv;
	        }
	    });

	    /**
	     * Cipher Block Chaining mode.
	     */
	    var CBC = C_mode.CBC = (function () {
	        /**
	         * Abstract base CBC mode.
	         */
	        var CBC = BlockCipherMode.extend();

	        /**
	         * CBC encryptor.
	         */
	        CBC.Encryptor = CBC.extend({
	            /**
	             * Processes the data block at offset.
	             *
	             * @param {Array} words The data words to operate on.
	             * @param {number} offset The offset where the block starts.
	             *
	             * @example
	             *
	             *     mode.processBlock(data.words, offset);
	             */
	            processBlock: function (words, offset) {
	                // Shortcuts
	                var cipher = this._cipher;
	                var blockSize = cipher.blockSize;

	                // XOR and encrypt
	                xorBlock.call(this, words, offset, blockSize);
	                cipher.encryptBlock(words, offset);

	                // Remember this block to use with next block
	                this._prevBlock = words.slice(offset, offset + blockSize);
	            }
	        });

	        /**
	         * CBC decryptor.
	         */
	        CBC.Decryptor = CBC.extend({
	            /**
	             * Processes the data block at offset.
	             *
	             * @param {Array} words The data words to operate on.
	             * @param {number} offset The offset where the block starts.
	             *
	             * @example
	             *
	             *     mode.processBlock(data.words, offset);
	             */
	            processBlock: function (words, offset) {
	                // Shortcuts
	                var cipher = this._cipher;
	                var blockSize = cipher.blockSize;

	                // Remember this block to use with next block
	                var thisBlock = words.slice(offset, offset + blockSize);

	                // Decrypt and XOR
	                cipher.decryptBlock(words, offset);
	                xorBlock.call(this, words, offset, blockSize);

	                // This block becomes the previous block
	                this._prevBlock = thisBlock;
	            }
	        });

	        function xorBlock(words, offset, blockSize) {
	            // Shortcut
	            var iv = this._iv;

	            // Choose mixing block
	            if (iv) {
	                var block = iv;

	                // Remove IV for subsequent blocks
	                this._iv = undefined;
	            } else {
	                var block = this._prevBlock;
	            }

	            // XOR blocks
	            for (var i = 0; i < blockSize; i++) {
	                words[offset + i] ^= block[i];
	            }
	        }

	        return CBC;
	    }());

	    /**
	     * Padding namespace.
	     */
	    var C_pad = C.pad = {};

	    /**
	     * PKCS #5/7 padding strategy.
	     */
	    var Pkcs7 = C_pad.Pkcs7 = {
	        /**
	         * Pads data using the algorithm defined in PKCS #5/7.
	         *
	         * @param {WordArray} data The data to pad.
	         * @param {number} blockSize The multiple that the data should be padded to.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
	         */
	        pad: function (data, blockSize) {
	            // Shortcut
	            var blockSizeBytes = blockSize * 4;

	            // Count padding bytes
	            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

	            // Create padding word
	            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;

	            // Create padding
	            var paddingWords = [];
	            for (var i = 0; i < nPaddingBytes; i += 4) {
	                paddingWords.push(paddingWord);
	            }
	            var padding = WordArray.create(paddingWords, nPaddingBytes);

	            // Add padding
	            data.concat(padding);
	        },

	        /**
	         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
	         *
	         * @param {WordArray} data The data to unpad.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     CryptoJS.pad.Pkcs7.unpad(wordArray);
	         */
	        unpad: function (data) {
	            // Get number of padding bytes from last byte
	            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

	            // Remove padding
	            data.sigBytes -= nPaddingBytes;
	        }
	    };

	    /**
	     * Abstract base block cipher template.
	     *
	     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)
	     */
	    var BlockCipher = C_lib.BlockCipher = Cipher.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {Mode} mode The block mode to use. Default: CBC
	         * @property {Padding} padding The padding strategy to use. Default: Pkcs7
	         */
	        cfg: Cipher.cfg.extend({
	            mode: CBC,
	            padding: Pkcs7
	        }),

	        reset: function () {
	            // Reset cipher
	            Cipher.reset.call(this);

	            // Shortcuts
	            var cfg = this.cfg;
	            var iv = cfg.iv;
	            var mode = cfg.mode;

	            // Reset block mode
	            if (this._xformMode == this._ENC_XFORM_MODE) {
	                var modeCreator = mode.createEncryptor;
	            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {
	                var modeCreator = mode.createDecryptor;
	                // Keep at least one block in the buffer for unpadding
	                this._minBufferSize = 1;
	            }

	            if (this._mode && this._mode.__creator == modeCreator) {
	                this._mode.init(this, iv && iv.words);
	            } else {
	                this._mode = modeCreator.call(mode, this, iv && iv.words);
	                this._mode.__creator = modeCreator;
	            }
	        },

	        _doProcessBlock: function (words, offset) {
	            this._mode.processBlock(words, offset);
	        },

	        _doFinalize: function () {
	            // Shortcut
	            var padding = this.cfg.padding;

	            // Finalize
	            if (this._xformMode == this._ENC_XFORM_MODE) {
	                // Pad data
	                padding.pad(this._data, this.blockSize);

	                // Process final blocks
	                var finalProcessedBlocks = this._process(!!'flush');
	            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {
	                // Process final blocks
	                var finalProcessedBlocks = this._process(!!'flush');

	                // Unpad data
	                padding.unpad(finalProcessedBlocks);
	            }

	            return finalProcessedBlocks;
	        },

	        blockSize: 128/32
	    });

	    /**
	     * A collection of cipher parameters.
	     *
	     * @property {WordArray} ciphertext The raw ciphertext.
	     * @property {WordArray} key The key to this ciphertext.
	     * @property {WordArray} iv The IV used in the ciphering operation.
	     * @property {WordArray} salt The salt used with a key derivation function.
	     * @property {Cipher} algorithm The cipher algorithm.
	     * @property {Mode} mode The block mode used in the ciphering operation.
	     * @property {Padding} padding The padding scheme used in the ciphering operation.
	     * @property {number} blockSize The block size of the cipher.
	     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.
	     */
	    var CipherParams = C_lib.CipherParams = Base.extend({
	        /**
	         * Initializes a newly created cipher params object.
	         *
	         * @param {Object} cipherParams An object with any of the possible cipher parameters.
	         *
	         * @example
	         *
	         *     var cipherParams = CryptoJS.lib.CipherParams.create({
	         *         ciphertext: ciphertextWordArray,
	         *         key: keyWordArray,
	         *         iv: ivWordArray,
	         *         salt: saltWordArray,
	         *         algorithm: CryptoJS.algo.AES,
	         *         mode: CryptoJS.mode.CBC,
	         *         padding: CryptoJS.pad.PKCS7,
	         *         blockSize: 4,
	         *         formatter: CryptoJS.format.OpenSSL
	         *     });
	         */
	        init: function (cipherParams) {
	            this.mixIn(cipherParams);
	        },

	        /**
	         * Converts this cipher params object to a string.
	         *
	         * @param {Format} formatter (Optional) The formatting strategy to use.
	         *
	         * @return {string} The stringified cipher params.
	         *
	         * @throws Error If neither the formatter nor the default formatter is set.
	         *
	         * @example
	         *
	         *     var string = cipherParams + '';
	         *     var string = cipherParams.toString();
	         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
	         */
	        toString: function (formatter) {
	            return (formatter || this.formatter).stringify(this);
	        }
	    });

	    /**
	     * Format namespace.
	     */
	    var C_format = C.format = {};

	    /**
	     * OpenSSL formatting strategy.
	     */
	    var OpenSSLFormatter = C_format.OpenSSL = {
	        /**
	         * Converts a cipher params object to an OpenSSL-compatible string.
	         *
	         * @param {CipherParams} cipherParams The cipher params object.
	         *
	         * @return {string} The OpenSSL-compatible string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
	         */
	        stringify: function (cipherParams) {
	            // Shortcuts
	            var ciphertext = cipherParams.ciphertext;
	            var salt = cipherParams.salt;

	            // Format
	            if (salt) {
	                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);
	            } else {
	                var wordArray = ciphertext;
	            }

	            return wordArray.toString(Base64);
	        },

	        /**
	         * Converts an OpenSSL-compatible string to a cipher params object.
	         *
	         * @param {string} openSSLStr The OpenSSL-compatible string.
	         *
	         * @return {CipherParams} The cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
	         */
	        parse: function (openSSLStr) {
	            // Parse base64
	            var ciphertext = Base64.parse(openSSLStr);

	            // Shortcut
	            var ciphertextWords = ciphertext.words;

	            // Test for salt
	            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {
	                // Extract salt
	                var salt = WordArray.create(ciphertextWords.slice(2, 4));

	                // Remove salt from ciphertext
	                ciphertextWords.splice(0, 4);
	                ciphertext.sigBytes -= 16;
	            }

	            return CipherParams.create({ ciphertext: ciphertext, salt: salt });
	        }
	    };

	    /**
	     * A cipher wrapper that returns ciphertext as a serializable cipher params object.
	     */
	    var SerializableCipher = C_lib.SerializableCipher = Base.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
	         */
	        cfg: Base.extend({
	            format: OpenSSLFormatter
	        }),

	        /**
	         * Encrypts a message.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {WordArray|string} message The message to encrypt.
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {CipherParams} A cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
	         */
	        encrypt: function (cipher, message, key, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Encrypt
	            var encryptor = cipher.createEncryptor(key, cfg);
	            var ciphertext = encryptor.finalize(message);

	            // Shortcut
	            var cipherCfg = encryptor.cfg;

	            // Create and return serializable cipher params
	            return CipherParams.create({
	                ciphertext: ciphertext,
	                key: key,
	                iv: cipherCfg.iv,
	                algorithm: cipher,
	                mode: cipherCfg.mode,
	                padding: cipherCfg.padding,
	                blockSize: cipher.blockSize,
	                formatter: cfg.format
	            });
	        },

	        /**
	         * Decrypts serialized ciphertext.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {WordArray} The plaintext.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
	         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
	         */
	        decrypt: function (cipher, ciphertext, key, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Convert string to CipherParams
	            ciphertext = this._parse(ciphertext, cfg.format);

	            // Decrypt
	            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);

	            return plaintext;
	        },

	        /**
	         * Converts serialized ciphertext to CipherParams,
	         * else assumed CipherParams already and returns ciphertext unchanged.
	         *
	         * @param {CipherParams|string} ciphertext The ciphertext.
	         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
	         *
	         * @return {CipherParams} The unserialized ciphertext.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
	         */
	        _parse: function (ciphertext, format) {
	            if (typeof ciphertext == 'string') {
	                return format.parse(ciphertext, this);
	            } else {
	                return ciphertext;
	            }
	        }
	    });

	    /**
	     * Key derivation function namespace.
	     */
	    var C_kdf = C.kdf = {};

	    /**
	     * OpenSSL key derivation function.
	     */
	    var OpenSSLKdf = C_kdf.OpenSSL = {
	        /**
	         * Derives a key and IV from a password.
	         *
	         * @param {string} password The password to derive from.
	         * @param {number} keySize The size in words of the key to generate.
	         * @param {number} ivSize The size in words of the IV to generate.
	         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
	         *
	         * @return {CipherParams} A cipher params object with the key, IV, and salt.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
	         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
	         */
	        execute: function (password, keySize, ivSize, salt) {
	            // Generate random salt
	            if (!salt) {
	                salt = WordArray.random(64/8);
	            }

	            // Derive key and IV
	            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);

	            // Separate key and IV
	            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);
	            key.sigBytes = keySize * 4;

	            // Return params
	            return CipherParams.create({ key: key, iv: iv, salt: salt });
	        }
	    };

	    /**
	     * A serializable cipher wrapper that derives the key from a password,
	     * and returns ciphertext as a serializable cipher params object.
	     */
	    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
	         */
	        cfg: SerializableCipher.cfg.extend({
	            kdf: OpenSSLKdf
	        }),

	        /**
	         * Encrypts a message using a password.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {WordArray|string} message The message to encrypt.
	         * @param {string} password The password.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {CipherParams} A cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
	         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
	         */
	        encrypt: function (cipher, message, password, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Derive key and other params
	            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);

	            // Add IV to config
	            cfg.iv = derivedParams.iv;

	            // Encrypt
	            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);

	            // Mix in derived params
	            ciphertext.mixIn(derivedParams);

	            return ciphertext;
	        },

	        /**
	         * Decrypts serialized ciphertext using a password.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
	         * @param {string} password The password.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {WordArray} The plaintext.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
	         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
	         */
	        decrypt: function (cipher, ciphertext, password, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Convert string to CipherParams
	            ciphertext = this._parse(ciphertext, cfg.format);

	            // Derive key and other params
	            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);

	            // Add IV to config
	            cfg.iv = derivedParams.iv;

	            // Decrypt
	            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);

	            return plaintext;
	        }
	    });
	}());


}));

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/** @module B BaseObject*/

/**
 * Web Apps Javascript Distribution Library
 * Base implementation for the User Object
 *
 */
class BaseObject {

  constructor() {
    /**
         * Set of getProperty functions
         * the object key is the property name to be set/get
         *
         */
    this.getProperty = {
      width: (objName) => {
        return this.getElemFromName(objName).width();
      },
      height: (objName) => {
        return this.getElemFromName(objName).height();
      },
      x: (objName) => {
        var elem = this.getElemFromName(objName);
        // return Math.round(parseFloat(($(elem)[0].style.transform.split('(')[1].split(')')[0].split(','))[0], 10));  // elem.css('transform').split(',')[4])
        return elem.position().left;
      },
      y: (objName) => {
        var elem = this.getElemFromName(objName);
        //return Math.round(parseFloat(($(elem)[0].style.transform.split('(')[1].split(')')[0].split(','))[1], 10));  // elem.css('transform').split(',')[5])
        return elem.position().top;
      },
      Alpha: (objName) => {
        return this.getElemFromName(objName).css("opacity");
      },
      "Background color": (objName) => {
        return this.getElemFromName(objName).css("background-color");
      },
      "Horizontal scroll": (objName) => {
        return this.getElemFromName(objName).css("overflow-x");
      },
      "Vertical scroll": (objName) => {
        return this.getElemFromName(objName).css("overflow-y");
      },
      "Constraints": (objName, _side) => {
        const side = _side.toLowerCase();
        const elem = document.getElementById(this.getElemFromName(objName).attr("id"));
        if (!elem) return;
        if (side === "top") return this.pxToNumber(elem.style.top);
        if (side === "left") return this.pxToNumber(elem.style.left);
        if (side === "right") return this.pxToNumber(elem.style.right);
        if (side === "bottom") return this.pxToNumber(elem.style.bottom);
      },
      "Border color": (objName) => {
        return this.getElemFromName(objName).css("border-color");
      },
      "Border width": (objName) => {
        return this.getElemFromName(objName).css("border-width");
      },
      "Border radius": (objName) => {
        return this.getElemFromName(objName).css("border-radius");
      },
      "Name": (objName) => {
        return objName || "";
      }
    };

    /**
     * Set of setProperty functions
     * the object key is the property name to be set/get
     *
     */
    this.setProperty = {
      width: (objName, value) => {
        const elem = this.getElemFromName(objName);
        const _elem = document.getElementById(elem.attr("id"));
        if (_elem.style.left && _elem.style.right) return;
        elem.css("width", value + "px");
      },
      height: (objName, value) => {
        const elem = this.getElemFromName(objName);
        const _elem = document.getElementById(elem.attr("id"));
        if (_elem.style.top && _elem.style.bottom) return;
        elem.css("height", value + "px");
      },
      x: (objName, value) => {
        var elem = this.getElemFromName(objName);
        //var yPos = Math.round(parseFloat(($(elem)[0].style.transform.split('(')[1].split(')')[0].split(','))[1], 10)); // elem.css('transform').split(',')[5])
        let yPos = elem.position().top;
        // remove constraints
        // this.removeConstraints(elem, "x");
        // do nothing if constraint is applied
        const _elem = document.getElementById(elem.attr("id"));
        if (_elem.style.left || _elem.style.right) return;
        if (_elem.style.top || _elem.style.bottom) yPos = 0;
        elem.css("transform", "translate(" + value + "px," + yPos + "px)");
      },
      y: (objName, value) => {
        var elem = this.getElemFromName(objName);
        //var xPos = Math.round(parseFloat(($(elem)[0].style.transform.split('(')[1].split(')')[0].split(','))[0], 10)); // elem.css('transform').split(',')[4])
        let xPos = elem.position().left;
        // remove constraints if applied
        // this.removeConstraints(elem, "y");
        // do nothing if constraint is applied
        const _elem = document.getElementById(elem.attr("id"));
        if (_elem.style.top || _elem.style.bottom) return;
        if (_elem.style.left || _elem.style.right) xPos = 0;
        elem.css("transform", "translate(" + xPos + "px," + value + "px)");
      },
      Alpha: (objName, value) => {
        this.getElemFromName(objName).css("opacity", value/100 );
      },
      "Background color": (objName, value) => {
        this.getElemFromName(objName).css("background-color", value);
      },
      "Horizontal scroll": (objName, value) => {
        this.getElemFromName(objName).css("overflow-x", "hidden");
        if (value) this.getElemFromName(objName).css("overflow-x", "scroll");
      },
      "Vertical scroll": (objName, value) => {
        this.getElemFromName(objName).css("overflow-y", "hidden");
        if (value) this.getElemFromName(objName).css("overflow-y", "scroll");
      },
      "Constraints": (objName, value, _side) => {
        try {
          const side = _side.toLowerCase();
          var elem = this.getElemFromName(objName);
          // if value is null remove constraint
          if (value == null) {
            const x = elem.position().left, y = elem.position().top;
            elem.css(side, "");
            elem.css("transform", "translate(" + x + "px," + y +"px)");
          } else {
            // translate element to use margin as position
            if ((side == "top") || (side == "bottom")) {
              var xPos = elem.position().left;
              elem.css("transform", "translate(" + xPos + "px,0px)");
            } else {
              var yPos = elem.position().top;
              elem.css("transform", "translate(0px," + yPos + "px)");
            }
            // apply margin rule
            elem.css(side, value + "px");

            // check if stretch is needed
            if (elem.parent().hasClass("element")) {
              const _elem = document.getElementById(elem.attr("id"));
              if (_elem.style.top && _elem.style.bottom) elem.css("height", "auto");
              if (_elem.style.left && _elem.style.right) elem.css("width", "auto");
              if ((_elem.style.top || _elem.style.bottom) && (_elem.style.left || _elem.style.right)) {
                elem.css("transform", "translate(0px,0px)");
              }
            }
            if ((elem.parent().hasClass("ListViewCell")) || (elem.parent().hasClass("GridViewCell"))) {
              elem.css("transform", "translate(0px,0px)");
            }
          }
        } catch (e) {
          console.log (e);
        } 
                
      },
      "Border color": (objName, value) => {
        this.getElemFromName(objName).css("border-color", value);
      },
      "Border width": (objName, value) => {
        this.getElemFromName(objName).css("border-width", value);
      },
      "Border radius": (objName, value) => {
        this.getElemFromName(objName).css("border-radius", value);
      }
    };
  }

  /**
    * Find model of provided objName to set property
    */
  setGenericProperty(objName, prop, value) {
    if (!objName || !prop) return;
    const elem = this.getElemFromName(objName);
    if (elem.length < 1) return;
    const model = elem.attr("class").split(" ").pop();
    if (model) {
      try {
        com.fc.JavaScriptDistLib[model].setProperty[prop](objName, value);
      } catch (err) {
        console.warn("Could not set " + prop + " to " + objName);
      }
    } else {
      try {
        this.setProperty[prop](objName, value);
      } catch (err) {
        console.warn("Could not set " + prop + " to " + objName);
      }
    }
  }

  /**
     * Remove all constraints if we move the object
     * @param objName
     * @param axis
     */
  removeConstraints(elem, axis) {
    if (elem.css("top") && axis == "y") elem.css("top", "");
    if (elem.css("left") && axis == "x") elem.css("left", "");
    if (elem.css("bottom") && axis == "y") elem.css("bottom", "");
    if (elem.css("right") && axis == "x") elem.css("right", "");
    // here restore the height and width params
    if (axis == "y") elem.css("height", elem.attr("original-height") + "px");
    else elem.css("width", elem.attr("original-width") + "px");
  }

  /**
     * Retrieves the element with a given object-name attribute
     * @param objName
     * @returns {*|jQuery|HTMLElement}
     */
  getElemFromName(objName) {
    return $("[obj-name= \"" + objName + "\"]");
  }

  /**
     * Generic removeGesture block implementation
     * @param objName
     * @param gesture
     */
  removeGesture (objName, gesture) {
    try {
      var elem = this.getElemFromName(objName);
      var gestureStr = this.gestureStr(gesture);
      return elem.unbind(gestureStr);
    } catch (e) {
      throw(e);
    }
  }
    
  animationStart(objName, animation, onCompleteCallback) {
    var elem = this.getElemFromName(objName);
    let duration = animation.duration*1000;
    let options = {duration: duration, complete: onCompleteCallback, queue: animation.id};

    switch(animation.type) {
    case "move":
      elem.animate({left: "+=" + animation.dX + "px", top: "+=" + animation.dY + "px"}, options);
      elem.dequeue(animation.id);
      break;
    case "scale":
      let newWidth = elem.width() * animation.dX;
      let newHeight = elem.height() * animation.dY;
      let leftDelta = (newWidth - elem.width()) / 2;
      let topDelta = (newHeight - elem.height()) / 2;
      elem.animate({width:newWidth+"px", height:newHeight+"px", left: "-="+leftDelta+"px", top: "-="+topDelta+"px"}, options);
      elem.dequeue(animation.id);
      break;
    case "rotate":
      let angle = animation.angle;
      let currAngle = 0;
      if( elem.attr("data-angle") ) {
        currAngle = elem.attr("data-angle");
      }
      let finalAngle = parseInt(currAngle) + parseInt(angle);
      elem.attr("data-angle", finalAngle);
      var left = elem.position().left;
      var top = elem.position().top;
                 
      let stepFunc = function(now) {
        elem.css({
          "transform":"rotate("+now+"deg)",
          "left": left+"px",
          "top": top+"px"
        });
      };
                 
      let completeFunc = function() {
        //hs:traaping before calling scrip's callback incase you want to do any post processing on the data
        onCompleteCallback();
      };
      options.step = stepFunc;
      options.complete = completeFunc;
      elem.animate({deg: finalAngle}, options);
      elem.dequeue(animation.id);
      break;
    case "fade":
      let alpha = (animation.alpha / 100);
      elem.animate({opacity:alpha}, options);
      elem.dequeue(animation.id);
      break;
    }
  }

  animationCancel(objName, animation) {
    var elem = this.getElemFromName(objName);
    elem.stop(animation.id, false, false);
  }

  animationStop(objName, animation) {
    var elem = this.getElemFromName(objName);
    elem.stop(animation.id, true, true);
  }

  animationStopAll(objName) {
    var elem = this.getElemFromName(objName);
    elem.stop();
  }

  pxToNumber(pxAmountString) {
    if (pxAmountString && pxAmountString.indexOf("px") >= 0) {
      return parseInt(pxAmountString.replace("px", ""));
    }
  }
}

/* harmony default export */ __webpack_exports__["a"] = (BaseObject);




/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(11), __webpack_require__(10));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./sha1", "./hmac"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var WordArray = C_lib.WordArray;
	    var C_algo = C.algo;
	    var MD5 = C_algo.MD5;

	    /**
	     * This key derivation function is meant to conform with EVP_BytesToKey.
	     * www.openssl.org/docs/crypto/EVP_BytesToKey.html
	     */
	    var EvpKDF = C_algo.EvpKDF = Base.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
	         * @property {Hasher} hasher The hash algorithm to use. Default: MD5
	         * @property {number} iterations The number of iterations to perform. Default: 1
	         */
	        cfg: Base.extend({
	            keySize: 128/32,
	            hasher: MD5,
	            iterations: 1
	        }),

	        /**
	         * Initializes a newly created key derivation function.
	         *
	         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
	         *
	         * @example
	         *
	         *     var kdf = CryptoJS.algo.EvpKDF.create();
	         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
	         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
	         */
	        init: function (cfg) {
	            this.cfg = this.cfg.extend(cfg);
	        },

	        /**
	         * Derives a key from a password.
	         *
	         * @param {WordArray|string} password The password.
	         * @param {WordArray|string} salt A salt.
	         *
	         * @return {WordArray} The derived key.
	         *
	         * @example
	         *
	         *     var key = kdf.compute(password, salt);
	         */
	        compute: function (password, salt) {
	            // Shortcut
	            var cfg = this.cfg;

	            // Init hasher
	            var hasher = cfg.hasher.create();

	            // Initial values
	            var derivedKey = WordArray.create();

	            // Shortcuts
	            var derivedKeyWords = derivedKey.words;
	            var keySize = cfg.keySize;
	            var iterations = cfg.iterations;

	            // Generate key
	            while (derivedKeyWords.length < keySize) {
	                if (block) {
	                    hasher.update(block);
	                }
	                var block = hasher.update(password).finalize(salt);
	                hasher.reset();

	                // Iterations
	                for (var i = 1; i < iterations; i++) {
	                    block = hasher.finalize(block);
	                    hasher.reset();
	                }

	                derivedKey.concat(block);
	            }
	            derivedKey.sigBytes = keySize * 4;

	            return derivedKey;
	        }
	    });

	    /**
	     * Derives a key from a password.
	     *
	     * @param {WordArray|string} password The password.
	     * @param {WordArray|string} salt A salt.
	     * @param {Object} cfg (Optional) The configuration options to use for this computation.
	     *
	     * @return {WordArray} The derived key.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var key = CryptoJS.EvpKDF(password, salt);
	     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });
	     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });
	     */
	    C.EvpKDF = function (password, salt, cfg) {
	        return EvpKDF.create(cfg).compute(password, salt);
	    };
	}());


	return CryptoJS.EvpKDF;

}));

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var C_enc = C.enc;

	    /**
	     * Base64 encoding strategy.
	     */
	    var Base64 = C_enc.Base64 = {
	        /**
	         * Converts a word array to a Base64 string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The Base64 string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;
	            var map = this._map;

	            // Clamp excess bits
	            wordArray.clamp();

	            // Convert
	            var base64Chars = [];
	            for (var i = 0; i < sigBytes; i += 3) {
	                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;
	                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;
	                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;

	                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;

	                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {
	                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));
	                }
	            }

	            // Add padding
	            var paddingChar = map.charAt(64);
	            if (paddingChar) {
	                while (base64Chars.length % 4) {
	                    base64Chars.push(paddingChar);
	                }
	            }

	            return base64Chars.join('');
	        },

	        /**
	         * Converts a Base64 string to a word array.
	         *
	         * @param {string} base64Str The Base64 string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
	         */
	        parse: function (base64Str) {
	            // Shortcuts
	            var base64StrLength = base64Str.length;
	            var map = this._map;
	            var reverseMap = this._reverseMap;

	            if (!reverseMap) {
	                    reverseMap = this._reverseMap = [];
	                    for (var j = 0; j < map.length; j++) {
	                        reverseMap[map.charCodeAt(j)] = j;
	                    }
	            }

	            // Ignore padding
	            var paddingChar = map.charAt(64);
	            if (paddingChar) {
	                var paddingIndex = base64Str.indexOf(paddingChar);
	                if (paddingIndex !== -1) {
	                    base64StrLength = paddingIndex;
	                }
	            }

	            // Convert
	            return parseLoop(base64Str, base64StrLength, reverseMap);

	        },

	        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
	    };

	    function parseLoop(base64Str, base64StrLength, reverseMap) {
	      var words = [];
	      var nBytes = 0;
	      for (var i = 0; i < base64StrLength; i++) {
	          if (i % 4) {
	              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);
	              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);
	              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);
	              nBytes++;
	          }
	      }
	      return WordArray.create(words, nBytes);
	    }
	}());


	return CryptoJS.enc.Base64;

}));

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Constants table
	    var T = [];

	    // Compute constants
	    (function () {
	        for (var i = 0; i < 64; i++) {
	            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;
	        }
	    }());

	    /**
	     * MD5 hash algorithm.
	     */
	    var MD5 = C_algo.MD5 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init([
	                0x67452301, 0xefcdab89,
	                0x98badcfe, 0x10325476
	            ]);
	        },

	        _doProcessBlock: function (M, offset) {
	            // Swap endian
	            for (var i = 0; i < 16; i++) {
	                // Shortcuts
	                var offset_i = offset + i;
	                var M_offset_i = M[offset_i];

	                M[offset_i] = (
	                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
	                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
	                );
	            }

	            // Shortcuts
	            var H = this._hash.words;

	            var M_offset_0  = M[offset + 0];
	            var M_offset_1  = M[offset + 1];
	            var M_offset_2  = M[offset + 2];
	            var M_offset_3  = M[offset + 3];
	            var M_offset_4  = M[offset + 4];
	            var M_offset_5  = M[offset + 5];
	            var M_offset_6  = M[offset + 6];
	            var M_offset_7  = M[offset + 7];
	            var M_offset_8  = M[offset + 8];
	            var M_offset_9  = M[offset + 9];
	            var M_offset_10 = M[offset + 10];
	            var M_offset_11 = M[offset + 11];
	            var M_offset_12 = M[offset + 12];
	            var M_offset_13 = M[offset + 13];
	            var M_offset_14 = M[offset + 14];
	            var M_offset_15 = M[offset + 15];

	            // Working varialbes
	            var a = H[0];
	            var b = H[1];
	            var c = H[2];
	            var d = H[3];

	            // Computation
	            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);
	            d = FF(d, a, b, c, M_offset_1,  12, T[1]);
	            c = FF(c, d, a, b, M_offset_2,  17, T[2]);
	            b = FF(b, c, d, a, M_offset_3,  22, T[3]);
	            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);
	            d = FF(d, a, b, c, M_offset_5,  12, T[5]);
	            c = FF(c, d, a, b, M_offset_6,  17, T[6]);
	            b = FF(b, c, d, a, M_offset_7,  22, T[7]);
	            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);
	            d = FF(d, a, b, c, M_offset_9,  12, T[9]);
	            c = FF(c, d, a, b, M_offset_10, 17, T[10]);
	            b = FF(b, c, d, a, M_offset_11, 22, T[11]);
	            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);
	            d = FF(d, a, b, c, M_offset_13, 12, T[13]);
	            c = FF(c, d, a, b, M_offset_14, 17, T[14]);
	            b = FF(b, c, d, a, M_offset_15, 22, T[15]);

	            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);
	            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);
	            c = GG(c, d, a, b, M_offset_11, 14, T[18]);
	            b = GG(b, c, d, a, M_offset_0,  20, T[19]);
	            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);
	            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);
	            c = GG(c, d, a, b, M_offset_15, 14, T[22]);
	            b = GG(b, c, d, a, M_offset_4,  20, T[23]);
	            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);
	            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);
	            c = GG(c, d, a, b, M_offset_3,  14, T[26]);
	            b = GG(b, c, d, a, M_offset_8,  20, T[27]);
	            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);
	            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);
	            c = GG(c, d, a, b, M_offset_7,  14, T[30]);
	            b = GG(b, c, d, a, M_offset_12, 20, T[31]);

	            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);
	            d = HH(d, a, b, c, M_offset_8,  11, T[33]);
	            c = HH(c, d, a, b, M_offset_11, 16, T[34]);
	            b = HH(b, c, d, a, M_offset_14, 23, T[35]);
	            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);
	            d = HH(d, a, b, c, M_offset_4,  11, T[37]);
	            c = HH(c, d, a, b, M_offset_7,  16, T[38]);
	            b = HH(b, c, d, a, M_offset_10, 23, T[39]);
	            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);
	            d = HH(d, a, b, c, M_offset_0,  11, T[41]);
	            c = HH(c, d, a, b, M_offset_3,  16, T[42]);
	            b = HH(b, c, d, a, M_offset_6,  23, T[43]);
	            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);
	            d = HH(d, a, b, c, M_offset_12, 11, T[45]);
	            c = HH(c, d, a, b, M_offset_15, 16, T[46]);
	            b = HH(b, c, d, a, M_offset_2,  23, T[47]);

	            a = II(a, b, c, d, M_offset_0,  6,  T[48]);
	            d = II(d, a, b, c, M_offset_7,  10, T[49]);
	            c = II(c, d, a, b, M_offset_14, 15, T[50]);
	            b = II(b, c, d, a, M_offset_5,  21, T[51]);
	            a = II(a, b, c, d, M_offset_12, 6,  T[52]);
	            d = II(d, a, b, c, M_offset_3,  10, T[53]);
	            c = II(c, d, a, b, M_offset_10, 15, T[54]);
	            b = II(b, c, d, a, M_offset_1,  21, T[55]);
	            a = II(a, b, c, d, M_offset_8,  6,  T[56]);
	            d = II(d, a, b, c, M_offset_15, 10, T[57]);
	            c = II(c, d, a, b, M_offset_6,  15, T[58]);
	            b = II(b, c, d, a, M_offset_13, 21, T[59]);
	            a = II(a, b, c, d, M_offset_4,  6,  T[60]);
	            d = II(d, a, b, c, M_offset_11, 10, T[61]);
	            c = II(c, d, a, b, M_offset_2,  15, T[62]);
	            b = II(b, c, d, a, M_offset_9,  21, T[63]);

	            // Intermediate hash value
	            H[0] = (H[0] + a) | 0;
	            H[1] = (H[1] + b) | 0;
	            H[2] = (H[2] + c) | 0;
	            H[3] = (H[3] + d) | 0;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);

	            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
	            var nBitsTotalL = nBitsTotal;
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (
	                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |
	                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)
	            );
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
	                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |
	                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)
	            );

	            data.sigBytes = (dataWords.length + 1) * 4;

	            // Hash final blocks
	            this._process();

	            // Shortcuts
	            var hash = this._hash;
	            var H = hash.words;

	            // Swap endian
	            for (var i = 0; i < 4; i++) {
	                // Shortcut
	                var H_i = H[i];

	                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
	                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
	            }

	            // Return final computed hash
	            return hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });

	    function FF(a, b, c, d, x, s, t) {
	        var n = a + ((b & c) | (~b & d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function GG(a, b, c, d, x, s, t) {
	        var n = a + ((b & d) | (c & ~d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function HH(a, b, c, d, x, s, t) {
	        var n = a + (b ^ c ^ d) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function II(a, b, c, d, x, s, t) {
	        var n = a + (c ^ (b | ~d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.MD5('message');
	     *     var hash = CryptoJS.MD5(wordArray);
	     */
	    C.MD5 = Hasher._createHelper(MD5);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacMD5(message, key);
	     */
	    C.HmacMD5 = Hasher._createHmacHelper(MD5);
	}(Math));


	return CryptoJS.MD5;

}));

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);
// ES6 imports


class TextObject extends __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__["a" /* default */] {

  constructor(elemSelectorRef) {
    super();

    // Element selector
    this.elemSelectorRef = elemSelectorRef || "";

    var self = this;

    // Getting Text properties values

    this.getProperty = Object.assign(this.getProperty, {
      "Font size": (objName) => {
        return this.getTextElemFromName(objName).css("font-size");
      },
      Alpha: (objName) => {
        return this.getTextElemFromName(objName).css("opacity") * 100;
      },
      "Text Alignment": (objName) => {
        return this.getTextElemFromName(objName).css("text-align");
      },
      "Vertical Alignment": (objName) => {
        return this.getTextElemFromName(objName).css("vertical-align");
      },
      "Font style": (objName) => {
        return this.getTextElemFromName(objName).attr("fontStyle");
      },
      "Font family": (objName) => {
        return this.getTextElemFromName(objName).css("font-family");
      },
      "Background color": (objName) => {
        return this.getTextElemFromName(objName).css("background-color");
      },
      "Text color": (objName) => {
        return this.getTextElemFromName(objName).css("color");
      },
      Text: (objName) => {
        return this.getTextElemFromName(objName).html();
      }
    });

    this.setProperty = Object.assign(this.setProperty, {
      Text: (objName, value) => {
        this.getTextElemFromName(objName).html(value);
      },
      "Font size": (objName, value) => {
        if (String(value).includes("px")) {
          this.getTextElemFromName(objName).css("font-size", value);
        } else {
          this.getTextElemFromName(objName).css("font-size", value + "px");
        }
      },
      Alpha: (objName, value) => {
        this.getTextElemFromName(objName).css("opacity",value/100);
      },
      "Text Alignment": (objName, value) => {
        this.getTextElemFromName(objName).css("text-align",value.toLowerCase());
      },
      "Vertical Alignment": (objName, value) => {
        this.getTextElemFromName(objName).css("vertical-align",value.toLowerCase());
      },
      "Font style": (objName, value) => {
        let property = "font-style";
        if (value.toLowerCase() == "bold") {
          property = "font-weight";
        }
        this.getTextElemFromName(objName).css(property,value.toLowerCase());
        this.getTextElemFromName(objName).attr("fontStyle",value.toLowerCase());
      },
      "Font family": (objName, value) => {
        this.getTextElemFromName(objName).css("font-family",value.toLowerCase());
      },
      "Background color": (objName, value) => {
        this.getTextElemFromName(objName).css("background-color",value);
      },
      "Text color": (objName, value) => {
        this.getTextElemFromName(objName).css("color",value);
      }
    });
  }

  /**
     * Retrieves the text element with a given object-name attribute
     * @param objName
     * @returns {*|jQuery|HTMLElement}
     */
  getTextElemFromName (objName) {
    return $("[obj-name= \"" + objName + "\"]" + this.elemSelectorRef);
  }

  init ( elemSelectorRefValue) {
    this.elemSelectorRef = elemSelectorRefValue;
  }

}

/* harmony default export */ __webpack_exports__["a"] = (TextObject);





/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function (undefined) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var X32WordArray = C_lib.WordArray;

	    /**
	     * x64 namespace.
	     */
	    var C_x64 = C.x64 = {};

	    /**
	     * A 64-bit word.
	     */
	    var X64Word = C_x64.Word = Base.extend({
	        /**
	         * Initializes a newly created 64-bit word.
	         *
	         * @param {number} high The high 32 bits.
	         * @param {number} low The low 32 bits.
	         *
	         * @example
	         *
	         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
	         */
	        init: function (high, low) {
	            this.high = high;
	            this.low = low;
	        }

	        /**
	         * Bitwise NOTs this word.
	         *
	         * @return {X64Word} A new x64-Word object after negating.
	         *
	         * @example
	         *
	         *     var negated = x64Word.not();
	         */
	        // not: function () {
	            // var high = ~this.high;
	            // var low = ~this.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Bitwise ANDs this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to AND with this word.
	         *
	         * @return {X64Word} A new x64-Word object after ANDing.
	         *
	         * @example
	         *
	         *     var anded = x64Word.and(anotherX64Word);
	         */
	        // and: function (word) {
	            // var high = this.high & word.high;
	            // var low = this.low & word.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Bitwise ORs this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to OR with this word.
	         *
	         * @return {X64Word} A new x64-Word object after ORing.
	         *
	         * @example
	         *
	         *     var ored = x64Word.or(anotherX64Word);
	         */
	        // or: function (word) {
	            // var high = this.high | word.high;
	            // var low = this.low | word.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Bitwise XORs this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to XOR with this word.
	         *
	         * @return {X64Word} A new x64-Word object after XORing.
	         *
	         * @example
	         *
	         *     var xored = x64Word.xor(anotherX64Word);
	         */
	        // xor: function (word) {
	            // var high = this.high ^ word.high;
	            // var low = this.low ^ word.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Shifts this word n bits to the left.
	         *
	         * @param {number} n The number of bits to shift.
	         *
	         * @return {X64Word} A new x64-Word object after shifting.
	         *
	         * @example
	         *
	         *     var shifted = x64Word.shiftL(25);
	         */
	        // shiftL: function (n) {
	            // if (n < 32) {
	                // var high = (this.high << n) | (this.low >>> (32 - n));
	                // var low = this.low << n;
	            // } else {
	                // var high = this.low << (n - 32);
	                // var low = 0;
	            // }

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Shifts this word n bits to the right.
	         *
	         * @param {number} n The number of bits to shift.
	         *
	         * @return {X64Word} A new x64-Word object after shifting.
	         *
	         * @example
	         *
	         *     var shifted = x64Word.shiftR(7);
	         */
	        // shiftR: function (n) {
	            // if (n < 32) {
	                // var low = (this.low >>> n) | (this.high << (32 - n));
	                // var high = this.high >>> n;
	            // } else {
	                // var low = this.high >>> (n - 32);
	                // var high = 0;
	            // }

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Rotates this word n bits to the left.
	         *
	         * @param {number} n The number of bits to rotate.
	         *
	         * @return {X64Word} A new x64-Word object after rotating.
	         *
	         * @example
	         *
	         *     var rotated = x64Word.rotL(25);
	         */
	        // rotL: function (n) {
	            // return this.shiftL(n).or(this.shiftR(64 - n));
	        // },

	        /**
	         * Rotates this word n bits to the right.
	         *
	         * @param {number} n The number of bits to rotate.
	         *
	         * @return {X64Word} A new x64-Word object after rotating.
	         *
	         * @example
	         *
	         *     var rotated = x64Word.rotR(7);
	         */
	        // rotR: function (n) {
	            // return this.shiftR(n).or(this.shiftL(64 - n));
	        // },

	        /**
	         * Adds this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to add with this word.
	         *
	         * @return {X64Word} A new x64-Word object after adding.
	         *
	         * @example
	         *
	         *     var added = x64Word.add(anotherX64Word);
	         */
	        // add: function (word) {
	            // var low = (this.low + word.low) | 0;
	            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
	            // var high = (this.high + word.high + carry) | 0;

	            // return X64Word.create(high, low);
	        // }
	    });

	    /**
	     * An array of 64-bit words.
	     *
	     * @property {Array} words The array of CryptoJS.x64.Word objects.
	     * @property {number} sigBytes The number of significant bytes in this word array.
	     */
	    var X64WordArray = C_x64.WordArray = Base.extend({
	        /**
	         * Initializes a newly created word array.
	         *
	         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
	         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.x64.WordArray.create();
	         *
	         *     var wordArray = CryptoJS.x64.WordArray.create([
	         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
	         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
	         *     ]);
	         *
	         *     var wordArray = CryptoJS.x64.WordArray.create([
	         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
	         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
	         *     ], 10);
	         */
	        init: function (words, sigBytes) {
	            words = this.words = words || [];

	            if (sigBytes != undefined) {
	                this.sigBytes = sigBytes;
	            } else {
	                this.sigBytes = words.length * 8;
	            }
	        },

	        /**
	         * Converts this 64-bit word array to a 32-bit word array.
	         *
	         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
	         *
	         * @example
	         *
	         *     var x32WordArray = x64WordArray.toX32();
	         */
	        toX32: function () {
	            // Shortcuts
	            var x64Words = this.words;
	            var x64WordsLength = x64Words.length;

	            // Convert
	            var x32Words = [];
	            for (var i = 0; i < x64WordsLength; i++) {
	                var x64Word = x64Words[i];
	                x32Words.push(x64Word.high);
	                x32Words.push(x64Word.low);
	            }

	            return X32WordArray.create(x32Words, this.sigBytes);
	        },

	        /**
	         * Creates a copy of this word array.
	         *
	         * @return {X64WordArray} The clone.
	         *
	         * @example
	         *
	         *     var clone = x64WordArray.clone();
	         */
	        clone: function () {
	            var clone = Base.clone.call(this);

	            // Clone "words" array
	            var words = clone.words = this.words.slice(0);

	            // Clone each X64Word object
	            var wordsLength = words.length;
	            for (var i = 0; i < wordsLength; i++) {
	                words[i] = words[i].clone();
	            }

	            return clone;
	        }
	    });
	}());


	return CryptoJS;

}));

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);
/**
 * 
 */
/*global $ */

// ES6 imports


class ListGridObject extends __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__["a" /* default */] {
  constructor() {

    super();
    this.objectNameMap = {};
    this.templateCell = {};
    this.configCallbacks = {};
    this.configHeightCallbacks = {};
    this.configWidthCallbacks = {};
    this.clickCallbacks = {};

    this.getProperty = Object.assign(this.getProperty, {
      "Show scrollbar": (obj) => {
        return obj.css("overflow-y");
      },
      "Horizontal separator thick": (obj) => {
        return obj.css("border-bottom-width");
      },
      "separator color": (obj) => {
        return obj.css("border-bottom-color");
      },
      "Highlight cell color": (obj) => {
        return obj.attr("cell-highlight-color");
      },
      "Highlight cell": (obj) => {
        // let ele = "[obj-name= \"" + objName + "\"]";
        return obj.attr("cell-highlight");
      },
      width: (obj) => {
        return obj.width();
      },
      height: (obj) => {
        return obj.height();
      },
      x: (obj) => {
        return obj.position().left;
      },
      y: (obj) => {
        return obj.position().top;
      },
      Alpha: (obj) => {
        return obj.css("opacity");
      },
      "Background color": (obj) => {
        return obj.css("background-color");
      },
      "Horizontal scroll": (obj) => {
        return obj.css("overflow-x");
      },
      "Vertical scroll": (obj) => {
        return obj.css("overflow-y");
      },
    });

    this.setProperty = Object.assign(this.setProperty, {
      "Show scrollbar": (obj, value) => {
        let overflow = "auto";
        if (value.toLowerCase() == "never") {
          document.styleSheets[0].addRule(".hide-scrolllbar::-webkit-scrollbar", "width: 0;");
          obj.addClass("hide-scrolllbar");
        } else {
          obj.removeClass("hide-scrolllbar");
          obj.css("overflow-y",overflow);
        }
      },
      "separator color": (obj, value) => {
        obj.find(".border-sep").css("background-color",value);
      },
      "Highlight cell color": (obj, value) => {
        obj.attr("cell-highlight-color",value);
        if (obj.attr("cell-highlight") == "YES") {
          obj.mouseenter(function() {
            $(this).css("background-color",value);
          }).mouseleave(function() {
            obj.css("background-color",obj.attr("cell-bg-color"));
          });
        } else {
          obj.unbind("mouseenter");
        }
      },
      "Highlight cell": (obj, value) => {
        if (value) {
          obj.attr("cell-highlight","YES");
          obj.mouseenter(function() {
            $(this).css("background-color",obj.attr("cell-highlight-color"));
          }).mouseleave(function() {
            $(this).css("background-color",obj.attr("cell-bg-color"));
          });
        } else {
          obj.attr("cell-highlight","NO");
          obj.unbind("mouseenter");
        }
      },
      width: (obj, value) => {
        var elem = $('[obj-name= "' + obj + '"]');
        $(elem).css("width", value + "px");
      },
      x: (obj, value) => {
        var elem = $('[obj-name= "' + obj + '"]');
        //var yPos = Math.round(parseFloat(($(elem)[0].style.transform.split('(')[1].split(')')[0].split(','))[1], 10)); // elem.css('transform').split(',')[5])
        var yPos = elem.position().top;
        // remove constraints
        this.removeConstraints(elem, "x");
        elem.css("transform", "translate(" + value + "px," + yPos + "px)");
      },
      y: (obj, value) => {
        var elem = $('[obj-name= "' + obj + '"]');
        //var xPos = Math.round(parseFloat(($(elem)[0].style.transform.split('(')[1].split(')')[0].split(','))[0], 10)); // elem.css('transform').split(',')[4])
        var xPos = elem.position().left;
        // remove constraints if applied
        this.removeConstraints(elem, "y");
        elem.css("transform", "translate(" + xPos + "px," + value + "px)");
      },

      "Horizontal scroll": (obj, value) => {
        obj.css("overflow-x", "hidden");
        if (value) obj.css("overflow-x", "scroll");
      },
      "Vertical scroll": (obj, value) => {
        obj.css("overflow-y", "hidden");
        if (value) obj.css("overflow-y", "scroll");
      }
    });
  }

  configureCells (objName, cellLength) {
    var parent = this;
    var index = 0;
    var ele = "[obj-name=\"" + objName + "\"]";
    
    this.saveTemplateCell(objName);
        
    for (let i=0;i<cellLength;i++) {
      let cellView = this.templateCell[objName].clone();
      //The elements are absolutely positioned. Change their 'top' attr
      //$(cellView).css("top",firstElement.height()*(i+1));
      //Change ID for these elements
      let firstCellId = parseInt(this.templateCell[objName].attr("id").replace("j_",""));
      $(cellView).attr("id","j_"+parseInt(firstCellId+i));
            
      //Now rename the children
      $(cellView).children().each(function () {
        index++;
        let currName = $(this).attr("obj-name");
        if( currName != undefined ) {
          let newId = currName + "_lceid_" + index;
          let newName = currName + "_lcename_" + index;
          $(this).attr("id", newId);
          $(this).attr("obj-name", newName);
          parent.objectNameMap[newId] = newName;
        }
      });

      $(cellView).attr("listindex", i);
      $(cellView).click( function() {
        // console.log("clicked ", $(this).attr("listindex"));
        parent.setContext($(this));
        //callback here
        let callback = parent.clickCallbacks[$(this).attr("obj-name")];
        if( callback != null ) {
          callback($(this), $(this).attr("listindex"));
        }
        parent.resetContext($(this));
      });

      $(ele).append(cellView);
    }
    
    $(ele).find(".ListViewCell").each(function () {
      let elem = $(this);
      if ($(elem).attr("cell-highlight") == "YES") {
        $(elem).mouseenter(function() {
          $(elem).attr("cell-bg-color",$(elem).css("background-color"));
          $(elem).css("background-color",$(elem).attr("cell-highlight-color"));
        }).mouseleave(function() {
          $(elem).css("background-color",$(elem).attr("cell-bg-color"));
        });
      }
    });

    $(ele).find(".GridViewCell").each(function () {
      let elem = $(this);
      if ($(elem).attr("cell-highlight") == "YES") {
        $(elem).mouseenter(function() {
          $(elem).attr("cell-bg-color",$(elem).css("background-color"));
          $(elem).css("background-color",$(elem).attr("cell-highlight-color"));
        }).mouseleave(function() {
          $(elem).css("background-color",$(elem).attr("cell-bg-color"));
        });
      }
    });

    //check scroll
    $(ele).removeClass("hide-scrolllbar");
    switch ($(ele).attr("show-scroll")) {
    case "always":
      $(ele).css("overflow-y","scroll");
      break;
    case "when scroll":
      $(ele).css("overflow-y","auto");
      break;
    case "never":
      document.styleSheets[0].addRule(".hide-scrolllbar::-webkit-scrollbar", "width: 0;");
      $(ele).addClass("hide-scrolllbar");

      break;
    }
        
  }

  //hs: returns true if saved, false if exists
  saveTemplateCell(objName) {
    var ele = "[obj-name=\"" + objName + "\"]";
    var firstElement = $(ele).children().eq(1);

    if( this.templateCell[objName] == null ) {
      this.templateCell[objName] = firstElement.clone();
      return true;
    }
    return false;
  }

  removeCell(cell) {
    cell.remove();
  }

  setContext(objName) {
    // console.log(objName);
    objName.children().each(function () {
      let currName = $(this).attr("obj-name");
      if( currName != undefined ) {
        let charIndex = currName.indexOf("_lcename_");
        if( charIndex != -1 ) {
          var newName = currName.substr(0, charIndex);
          $(this).attr("obj-name", newName);
        }
                
      }
    });
  }

  setClickCallback(objName, callback) {
    this.clickCallbacks[objName] = callback;
  }

  setConfigCallback(objName, callback) {
    this.configCallbacks[objName] = callback;
  }

  setConfigHeightCallback(objName, callback) {
    this.configHeightCallbacks[objName] = callback;
  }

  setConfigWidthCallback(objName, callback) {
    this.configWidthCallbacks[objName] = callback;
  }

  executeConfigCallback(objName, cell, position) {
    var ele = "[obj-name=\"" + objName + "\"]";
    var cellName = cell.attr("obj-name");
    //console.log("Cellname = " + cellName);
    let callback = this.configCallbacks[cellName];
    // console.log("callback = " + callback);
    if( callback!=undefined ) {
      callback(cell, position);
    }
  }

  executeConfigHeightCallback(objName, cell, position) {
    var ele = "[obj-name=\"" + objName + "\"]";
    var cellName = cell.attr("obj-name");
    let callback = this.configHeightCallbacks[cellName];
  
    if( callback!=undefined ) {
      //height value is coming from the configure height script
      let height = callback(cell, position);
      cell.css("height",height+'px');
    }
  }

  executeConfigWidthCallback(objName, cell, position) {
    var ele = "[obj-name=\"" + objName + "\"]";
    var cellName = cell.attr("obj-name");
    let callback = this.configWidthCallbacks[cellName];
  
    if( callback!=undefined ) {
      //width value is coming from the configure width script
      let width = callback(cell, position);
      cell.css("width",width+'px');
    }
  }

  resetContext(objName) {
    var parent = this;
    objName.children().each(function () {
      let currName = $(this).attr("obj-name");
      let currId = $(this).attr("id");

      if( currName != undefined ) {
        $(this).attr("obj-name", parent.objectNameMap[currId]);
      }
    });
  }

  removeAllCells(objName) {
    var parent = this;
    let ele = "[obj-name=\"" + objName + "\"]";
    $(ele).children().each(function (i) {
      $(this).remove();
    });
    parent.objectNameMap = {};
  }

  scrollTo (objName,cellNum,animated,selector) {
    let ele = "[obj-name=\"" + objName + "\"]";
    let scrollSpeed = 500;
    if (!animated) {
      scrollSpeed = 0;
    }
    $(ele).animate({
      scrollTop: $(ele).find("."+selector+":eq("+cellNum+")" ).offset().top}
      ,scrollSpeed);
  }

  isCellVisible (objName,cellNum,selector) {
    let ele = "[obj-name=\"" + objName + "\"]";
    let cell = $(ele).find("."+selector+":eq("+cellNum+")" );
    let contHeight = $(ele).height();
    //let contTop = $(ele).scrollTop();
    //let contBottom = contTop + contHeight;
    try {
      let elemTop = cell.offset().top - $(ele).offset().top;
      let elemBottom = elemTop + cell.height();
      return elemTop >= 0 && elemBottom <=contHeight;
    } catch (e) {
      console.error("Cell with index - "+cellNum + " does not exist");
      return false;
    }
    
  }
}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (ListGridObject);

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var C_enc = C.enc;
	    var Utf8 = C_enc.Utf8;
	    var C_algo = C.algo;

	    /**
	     * HMAC algorithm.
	     */
	    var HMAC = C_algo.HMAC = Base.extend({
	        /**
	         * Initializes a newly created HMAC.
	         *
	         * @param {Hasher} hasher The hash algorithm to use.
	         * @param {WordArray|string} key The secret key.
	         *
	         * @example
	         *
	         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
	         */
	        init: function (hasher, key) {
	            // Init hasher
	            hasher = this._hasher = new hasher.init();

	            // Convert string to WordArray, else assume WordArray already
	            if (typeof key == 'string') {
	                key = Utf8.parse(key);
	            }

	            // Shortcuts
	            var hasherBlockSize = hasher.blockSize;
	            var hasherBlockSizeBytes = hasherBlockSize * 4;

	            // Allow arbitrary length keys
	            if (key.sigBytes > hasherBlockSizeBytes) {
	                key = hasher.finalize(key);
	            }

	            // Clamp excess bits
	            key.clamp();

	            // Clone key for inner and outer pads
	            var oKey = this._oKey = key.clone();
	            var iKey = this._iKey = key.clone();

	            // Shortcuts
	            var oKeyWords = oKey.words;
	            var iKeyWords = iKey.words;

	            // XOR keys with pad constants
	            for (var i = 0; i < hasherBlockSize; i++) {
	                oKeyWords[i] ^= 0x5c5c5c5c;
	                iKeyWords[i] ^= 0x36363636;
	            }
	            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;

	            // Set initial values
	            this.reset();
	        },

	        /**
	         * Resets this HMAC to its initial state.
	         *
	         * @example
	         *
	         *     hmacHasher.reset();
	         */
	        reset: function () {
	            // Shortcut
	            var hasher = this._hasher;

	            // Reset
	            hasher.reset();
	            hasher.update(this._iKey);
	        },

	        /**
	         * Updates this HMAC with a message.
	         *
	         * @param {WordArray|string} messageUpdate The message to append.
	         *
	         * @return {HMAC} This HMAC instance.
	         *
	         * @example
	         *
	         *     hmacHasher.update('message');
	         *     hmacHasher.update(wordArray);
	         */
	        update: function (messageUpdate) {
	            this._hasher.update(messageUpdate);

	            // Chainable
	            return this;
	        },

	        /**
	         * Finalizes the HMAC computation.
	         * Note that the finalize operation is effectively a destructive, read-once operation.
	         *
	         * @param {WordArray|string} messageUpdate (Optional) A final message update.
	         *
	         * @return {WordArray} The HMAC.
	         *
	         * @example
	         *
	         *     var hmac = hmacHasher.finalize();
	         *     var hmac = hmacHasher.finalize('message');
	         *     var hmac = hmacHasher.finalize(wordArray);
	         */
	        finalize: function (messageUpdate) {
	            // Shortcut
	            var hasher = this._hasher;

	            // Compute HMAC
	            var innerHash = hasher.finalize(messageUpdate);
	            hasher.reset();
	            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));

	            return hmac;
	        }
	    });
	}());


}));

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Reusable object
	    var W = [];

	    /**
	     * SHA-1 hash algorithm.
	     */
	    var SHA1 = C_algo.SHA1 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init([
	                0x67452301, 0xefcdab89,
	                0x98badcfe, 0x10325476,
	                0xc3d2e1f0
	            ]);
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcut
	            var H = this._hash.words;

	            // Working variables
	            var a = H[0];
	            var b = H[1];
	            var c = H[2];
	            var d = H[3];
	            var e = H[4];

	            // Computation
	            for (var i = 0; i < 80; i++) {
	                if (i < 16) {
	                    W[i] = M[offset + i] | 0;
	                } else {
	                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
	                    W[i] = (n << 1) | (n >>> 31);
	                }

	                var t = ((a << 5) | (a >>> 27)) + e + W[i];
	                if (i < 20) {
	                    t += ((b & c) | (~b & d)) + 0x5a827999;
	                } else if (i < 40) {
	                    t += (b ^ c ^ d) + 0x6ed9eba1;
	                } else if (i < 60) {
	                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;
	                } else /* if (i < 80) */ {
	                    t += (b ^ c ^ d) - 0x359d3e2a;
	                }

	                e = d;
	                d = c;
	                c = (b << 30) | (b >>> 2);
	                b = a;
	                a = t;
	            }

	            // Intermediate hash value
	            H[0] = (H[0] + a) | 0;
	            H[1] = (H[1] + b) | 0;
	            H[2] = (H[2] + c) | 0;
	            H[3] = (H[3] + d) | 0;
	            H[4] = (H[4] + e) | 0;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Return final computed hash
	            return this._hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA1('message');
	     *     var hash = CryptoJS.SHA1(wordArray);
	     */
	    C.SHA1 = Hasher._createHelper(SHA1);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA1(message, key);
	     */
	    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);
	}());


	return CryptoJS.SHA1;

}));

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Initialization and round constants tables
	    var H = [];
	    var K = [];

	    // Compute constants
	    (function () {
	        function isPrime(n) {
	            var sqrtN = Math.sqrt(n);
	            for (var factor = 2; factor <= sqrtN; factor++) {
	                if (!(n % factor)) {
	                    return false;
	                }
	            }

	            return true;
	        }

	        function getFractionalBits(n) {
	            return ((n - (n | 0)) * 0x100000000) | 0;
	        }

	        var n = 2;
	        var nPrime = 0;
	        while (nPrime < 64) {
	            if (isPrime(n)) {
	                if (nPrime < 8) {
	                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));
	                }
	                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));

	                nPrime++;
	            }

	            n++;
	        }
	    }());

	    // Reusable object
	    var W = [];

	    /**
	     * SHA-256 hash algorithm.
	     */
	    var SHA256 = C_algo.SHA256 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init(H.slice(0));
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcut
	            var H = this._hash.words;

	            // Working variables
	            var a = H[0];
	            var b = H[1];
	            var c = H[2];
	            var d = H[3];
	            var e = H[4];
	            var f = H[5];
	            var g = H[6];
	            var h = H[7];

	            // Computation
	            for (var i = 0; i < 64; i++) {
	                if (i < 16) {
	                    W[i] = M[offset + i] | 0;
	                } else {
	                    var gamma0x = W[i - 15];
	                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^
	                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^
	                                   (gamma0x >>> 3);

	                    var gamma1x = W[i - 2];
	                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^
	                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^
	                                   (gamma1x >>> 10);

	                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
	                }

	                var ch  = (e & f) ^ (~e & g);
	                var maj = (a & b) ^ (a & c) ^ (b & c);

	                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));
	                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));

	                var t1 = h + sigma1 + ch + K[i] + W[i];
	                var t2 = sigma0 + maj;

	                h = g;
	                g = f;
	                f = e;
	                e = (d + t1) | 0;
	                d = c;
	                c = b;
	                b = a;
	                a = (t1 + t2) | 0;
	            }

	            // Intermediate hash value
	            H[0] = (H[0] + a) | 0;
	            H[1] = (H[1] + b) | 0;
	            H[2] = (H[2] + c) | 0;
	            H[3] = (H[3] + d) | 0;
	            H[4] = (H[4] + e) | 0;
	            H[5] = (H[5] + f) | 0;
	            H[6] = (H[6] + g) | 0;
	            H[7] = (H[7] + h) | 0;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Return final computed hash
	            return this._hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA256('message');
	     *     var hash = CryptoJS.SHA256(wordArray);
	     */
	    C.SHA256 = Hasher._createHelper(SHA256);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA256(message, key);
	     */
	    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);
	}(Math));


	return CryptoJS.SHA256;

}));

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(8));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./x64-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Hasher = C_lib.Hasher;
	    var C_x64 = C.x64;
	    var X64Word = C_x64.Word;
	    var X64WordArray = C_x64.WordArray;
	    var C_algo = C.algo;

	    function X64Word_create() {
	        return X64Word.create.apply(X64Word, arguments);
	    }

	    // Constants
	    var K = [
	        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),
	        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),
	        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),
	        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),
	        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),
	        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),
	        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),
	        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),
	        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),
	        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),
	        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),
	        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),
	        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),
	        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),
	        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),
	        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),
	        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),
	        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),
	        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),
	        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),
	        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),
	        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),
	        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),
	        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),
	        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),
	        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),
	        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),
	        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),
	        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),
	        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),
	        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),
	        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),
	        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),
	        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),
	        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),
	        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),
	        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),
	        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),
	        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),
	        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)
	    ];

	    // Reusable objects
	    var W = [];
	    (function () {
	        for (var i = 0; i < 80; i++) {
	            W[i] = X64Word_create();
	        }
	    }());

	    /**
	     * SHA-512 hash algorithm.
	     */
	    var SHA512 = C_algo.SHA512 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new X64WordArray.init([
	                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),
	                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),
	                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),
	                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)
	            ]);
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcuts
	            var H = this._hash.words;

	            var H0 = H[0];
	            var H1 = H[1];
	            var H2 = H[2];
	            var H3 = H[3];
	            var H4 = H[4];
	            var H5 = H[5];
	            var H6 = H[6];
	            var H7 = H[7];

	            var H0h = H0.high;
	            var H0l = H0.low;
	            var H1h = H1.high;
	            var H1l = H1.low;
	            var H2h = H2.high;
	            var H2l = H2.low;
	            var H3h = H3.high;
	            var H3l = H3.low;
	            var H4h = H4.high;
	            var H4l = H4.low;
	            var H5h = H5.high;
	            var H5l = H5.low;
	            var H6h = H6.high;
	            var H6l = H6.low;
	            var H7h = H7.high;
	            var H7l = H7.low;

	            // Working variables
	            var ah = H0h;
	            var al = H0l;
	            var bh = H1h;
	            var bl = H1l;
	            var ch = H2h;
	            var cl = H2l;
	            var dh = H3h;
	            var dl = H3l;
	            var eh = H4h;
	            var el = H4l;
	            var fh = H5h;
	            var fl = H5l;
	            var gh = H6h;
	            var gl = H6l;
	            var hh = H7h;
	            var hl = H7l;

	            // Rounds
	            for (var i = 0; i < 80; i++) {
	                // Shortcut
	                var Wi = W[i];

	                // Extend message
	                if (i < 16) {
	                    var Wih = Wi.high = M[offset + i * 2]     | 0;
	                    var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;
	                } else {
	                    // Gamma0
	                    var gamma0x  = W[i - 15];
	                    var gamma0xh = gamma0x.high;
	                    var gamma0xl = gamma0x.low;
	                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);
	                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));

	                    // Gamma1
	                    var gamma1x  = W[i - 2];
	                    var gamma1xh = gamma1x.high;
	                    var gamma1xl = gamma1x.low;
	                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);
	                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));

	                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
	                    var Wi7  = W[i - 7];
	                    var Wi7h = Wi7.high;
	                    var Wi7l = Wi7.low;

	                    var Wi16  = W[i - 16];
	                    var Wi16h = Wi16.high;
	                    var Wi16l = Wi16.low;

	                    var Wil = gamma0l + Wi7l;
	                    var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);
	                    var Wil = Wil + gamma1l;
	                    var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);
	                    var Wil = Wil + Wi16l;
	                    var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);

	                    Wi.high = Wih;
	                    Wi.low  = Wil;
	                }

	                var chh  = (eh & fh) ^ (~eh & gh);
	                var chl  = (el & fl) ^ (~el & gl);
	                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);
	                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);

	                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));
	                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));
	                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));
	                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));

	                // t1 = h + sigma1 + ch + K[i] + W[i]
	                var Ki  = K[i];
	                var Kih = Ki.high;
	                var Kil = Ki.low;

	                var t1l = hl + sigma1l;
	                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);
	                var t1l = t1l + chl;
	                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);
	                var t1l = t1l + Kil;
	                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);
	                var t1l = t1l + Wil;
	                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);

	                // t2 = sigma0 + maj
	                var t2l = sigma0l + majl;
	                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);

	                // Update working variables
	                hh = gh;
	                hl = gl;
	                gh = fh;
	                gl = fl;
	                fh = eh;
	                fl = el;
	                el = (dl + t1l) | 0;
	                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;
	                dh = ch;
	                dl = cl;
	                ch = bh;
	                cl = bl;
	                bh = ah;
	                bl = al;
	                al = (t1l + t2l) | 0;
	                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;
	            }

	            // Intermediate hash value
	            H0l = H0.low  = (H0l + al);
	            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));
	            H1l = H1.low  = (H1l + bl);
	            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));
	            H2l = H2.low  = (H2l + cl);
	            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));
	            H3l = H3.low  = (H3l + dl);
	            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));
	            H4l = H4.low  = (H4l + el);
	            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));
	            H5l = H5.low  = (H5l + fl);
	            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));
	            H6l = H6.low  = (H6l + gl);
	            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));
	            H7l = H7.low  = (H7l + hl);
	            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);
	            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Convert hash to 32-bit word array before returning
	            var hash = this._hash.toX32();

	            // Return final computed hash
	            return hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        },

	        blockSize: 1024/32
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA512('message');
	     *     var hash = CryptoJS.SHA512(wordArray);
	     */
	    C.SHA512 = Hasher._createHelper(SHA512);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA512(message, key);
	     */
	    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);
	}());


	return CryptoJS.SHA512;

}));

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var af = moment.defineLocale('af', {
        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
        meridiemParse: /vm|nm/i,
        isPM : function (input) {
            return /^nm$/i.test(input);
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'vm' : 'VM';
            } else {
                return isLower ? 'nm' : 'NM';
            }
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Vandag om] LT',
            nextDay : '[Môre om] LT',
            nextWeek : 'dddd [om] LT',
            lastDay : '[Gister om] LT',
            lastWeek : '[Laas] dddd [om] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'oor %s',
            past : '%s gelede',
            s : '\'n paar sekondes',
            ss : '%d sekondes',
            m : '\'n minuut',
            mm : '%d minute',
            h : '\'n uur',
            hh : '%d ure',
            d : '\'n dag',
            dd : '%d dae',
            M : '\'n maand',
            MM : '%d maande',
            y : '\'n jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
        },
        week : {
            dow : 1, // Maandag is die eerste dag van die week.
            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
        }
    });

    return af;

})));


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arDz = moment.defineLocale('ar-dz', {
        months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return arDz;

})));


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arKw = moment.defineLocale('ar-kw', {
        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return arKw;

})));


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '1',
        '2': '2',
        '3': '3',
        '4': '4',
        '5': '5',
        '6': '6',
        '7': '7',
        '8': '8',
        '9': '9',
        '0': '0'
    }, pluralForm = function (n) {
        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
    }, plurals = {
        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
    }, pluralize = function (u) {
        return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];
            if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
        };
    }, months = [
        'يناير',
        'فبراير',
        'مارس',
        'أبريل',
        'مايو',
        'يونيو',
        'يوليو',
        'أغسطس',
        'سبتمبر',
        'أكتوبر',
        'نوفمبر',
        'ديسمبر'
    ];

    var arLy = moment.defineLocale('ar-ly', {
        months : months,
        monthsShort : months,
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/\u200FM/\u200FYYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'بعد %s',
            past : 'منذ %s',
            s : pluralize('s'),
            ss : pluralize('s'),
            m : pluralize('m'),
            mm : pluralize('m'),
            h : pluralize('h'),
            hh : pluralize('h'),
            d : pluralize('d'),
            dd : pluralize('d'),
            M : pluralize('M'),
            MM : pluralize('M'),
            y : pluralize('y'),
            yy : pluralize('y')
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return arLy;

})));


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arMa = moment.defineLocale('ar-ma', {
        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return arMa;

})));


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    };

    var arSa = moment.defineLocale('ar-sa', {
        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return arSa;

})));


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arTn = moment.defineLocale('ar-tn', {
        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss : '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return arTn;

})));


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    }, pluralForm = function (n) {
        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
    }, plurals = {
        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
    }, pluralize = function (u) {
        return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];
            if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
        };
    }, months = [
        'يناير',
        'فبراير',
        'مارس',
        'أبريل',
        'مايو',
        'يونيو',
        'يوليو',
        'أغسطس',
        'سبتمبر',
        'أكتوبر',
        'نوفمبر',
        'ديسمبر'
    ];

    var ar = moment.defineLocale('ar', {
        months : months,
        monthsShort : months,
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/\u200FM/\u200FYYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'بعد %s',
            past : 'منذ %s',
            s : pluralize('s'),
            ss : pluralize('s'),
            m : pluralize('m'),
            mm : pluralize('m'),
            h : pluralize('h'),
            hh : pluralize('h'),
            d : pluralize('d'),
            dd : pluralize('d'),
            M : pluralize('M'),
            MM : pluralize('M'),
            y : pluralize('y'),
            yy : pluralize('y')
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return ar;

})));


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        1: '-inci',
        5: '-inci',
        8: '-inci',
        70: '-inci',
        80: '-inci',
        2: '-nci',
        7: '-nci',
        20: '-nci',
        50: '-nci',
        3: '-üncü',
        4: '-üncü',
        100: '-üncü',
        6: '-ncı',
        9: '-uncu',
        10: '-uncu',
        30: '-uncu',
        60: '-ıncı',
        90: '-ıncı'
    };

    var az = moment.defineLocale('az', {
        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[bugün saat] LT',
            nextDay : '[sabah saat] LT',
            nextWeek : '[gələn həftə] dddd [saat] LT',
            lastDay : '[dünən] LT',
            lastWeek : '[keçən həftə] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s sonra',
            past : '%s əvvəl',
            s : 'birneçə saniyə',
            ss : '%d saniyə',
            m : 'bir dəqiqə',
            mm : '%d dəqiqə',
            h : 'bir saat',
            hh : '%d saat',
            d : 'bir gün',
            dd : '%d gün',
            M : 'bir ay',
            MM : '%d ay',
            y : 'bir il',
            yy : '%d il'
        },
        meridiemParse: /gecə|səhər|gündüz|axşam/,
        isPM : function (input) {
            return /^(gündüz|axşam)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'gecə';
            } else if (hour < 12) {
                return 'səhər';
            } else if (hour < 17) {
                return 'gündüz';
            } else {
                return 'axşam';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
        ordinal : function (number) {
            if (number === 0) {  // special case for zero
                return number + '-ıncı';
            }
            var a = number % 10,
                b = number % 100 - a,
                c = number >= 100 ? 100 : null;
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return az;

})));


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
            'dd': 'дзень_дні_дзён',
            'MM': 'месяц_месяцы_месяцаў',
            'yy': 'год_гады_гадоў'
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвіліна' : 'хвіліну';
        }
        else if (key === 'h') {
            return withoutSuffix ? 'гадзіна' : 'гадзіну';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }

    var be = moment.defineLocale('be', {
        months : {
            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
        },
        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
        weekdays : {
            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
            isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/
        },
        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY г.',
            LLL : 'D MMMM YYYY г., HH:mm',
            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
        },
        calendar : {
            sameDay: '[Сёння ў] LT',
            nextDay: '[Заўтра ў] LT',
            lastDay: '[Учора ў] LT',
            nextWeek: function () {
                return '[У] dddd [ў] LT';
            },
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return '[У мінулую] dddd [ў] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[У мінулы] dddd [ў] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'праз %s',
            past : '%s таму',
            s : 'некалькі секунд',
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : relativeTimeWithPlural,
            hh : relativeTimeWithPlural,
            d : 'дзень',
            dd : relativeTimeWithPlural,
            M : 'месяц',
            MM : relativeTimeWithPlural,
            y : 'год',
            yy : relativeTimeWithPlural
        },
        meridiemParse: /ночы|раніцы|дня|вечара/,
        isPM : function (input) {
            return /^(дня|вечара)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночы';
            } else if (hour < 12) {
                return 'раніцы';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечара';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
                case 'D':
                    return number + '-га';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return be;

})));


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var bg = moment.defineLocale('bg', {
        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'D.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay : '[Днес в] LT',
            nextDay : '[Утре в] LT',
            nextWeek : 'dddd [в] LT',
            lastDay : '[Вчера в] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[В изминалата] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[В изминалия] dddd [в] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'след %s',
            past : 'преди %s',
            s : 'няколко секунди',
            ss : '%d секунди',
            m : 'минута',
            mm : '%d минути',
            h : 'час',
            hh : '%d часа',
            d : 'ден',
            dd : '%d дни',
            M : 'месец',
            MM : '%d месеца',
            y : 'година',
            yy : '%d години'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal : function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return bg;

})));


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var bm = moment.defineLocale('bm', {
        months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),
        monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
        weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
        weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
        weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'MMMM [tile] D [san] YYYY',
            LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
            LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'
        },
        calendar : {
            sameDay : '[Bi lɛrɛ] LT',
            nextDay : '[Sini lɛrɛ] LT',
            nextWeek : 'dddd [don lɛrɛ] LT',
            lastDay : '[Kunu lɛrɛ] LT',
            lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s kɔnɔ',
            past : 'a bɛ %s bɔ',
            s : 'sanga dama dama',
            ss : 'sekondi %d',
            m : 'miniti kelen',
            mm : 'miniti %d',
            h : 'lɛrɛ kelen',
            hh : 'lɛrɛ %d',
            d : 'tile kelen',
            dd : 'tile %d',
            M : 'kalo kelen',
            MM : 'kalo %d',
            y : 'san kelen',
            yy : 'san %d'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return bm;

})));


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '১',
        '2': '২',
        '3': '৩',
        '4': '৪',
        '5': '৫',
        '6': '৬',
        '7': '৭',
        '8': '৮',
        '9': '৯',
        '0': '০'
    },
    numberMap = {
        '১': '1',
        '২': '2',
        '৩': '3',
        '৪': '4',
        '৫': '5',
        '৬': '6',
        '৭': '7',
        '৮': '8',
        '৯': '9',
        '০': '0'
    };

    var bn = moment.defineLocale('bn', {
        months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
        monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
        weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
        longDateFormat : {
            LT : 'A h:mm সময়',
            LTS : 'A h:mm:ss সময়',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm সময়',
            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
        },
        calendar : {
            sameDay : '[আজ] LT',
            nextDay : '[আগামীকাল] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[গতকাল] LT',
            lastWeek : '[গত] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s পরে',
            past : '%s আগে',
            s : 'কয়েক সেকেন্ড',
            ss : '%d সেকেন্ড',
            m : 'এক মিনিট',
            mm : '%d মিনিট',
            h : 'এক ঘন্টা',
            hh : '%d ঘন্টা',
            d : 'এক দিন',
            dd : '%d দিন',
            M : 'এক মাস',
            MM : '%d মাস',
            y : 'এক বছর',
            yy : '%d বছর'
        },
        preparse: function (string) {
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'রাত' && hour >= 4) ||
                    (meridiem === 'দুপুর' && hour < 5) ||
                    meridiem === 'বিকাল') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'রাত';
            } else if (hour < 10) {
                return 'সকাল';
            } else if (hour < 17) {
                return 'দুপুর';
            } else if (hour < 20) {
                return 'বিকাল';
            } else {
                return 'রাত';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return bn;

})));


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '༡',
        '2': '༢',
        '3': '༣',
        '4': '༤',
        '5': '༥',
        '6': '༦',
        '7': '༧',
        '8': '༨',
        '9': '༩',
        '0': '༠'
    },
    numberMap = {
        '༡': '1',
        '༢': '2',
        '༣': '3',
        '༤': '4',
        '༥': '5',
        '༦': '6',
        '༧': '7',
        '༨': '8',
        '༩': '9',
        '༠': '0'
    };

    var bo = moment.defineLocale('bo', {
        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[དི་རིང] LT',
            nextDay : '[སང་ཉིན] LT',
            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
            lastDay : '[ཁ་སང] LT',
            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ལ་',
            past : '%s སྔན་ལ',
            s : 'ལམ་སང',
            ss : '%d སྐར་ཆ།',
            m : 'སྐར་མ་གཅིག',
            mm : '%d སྐར་མ',
            h : 'ཆུ་ཚོད་གཅིག',
            hh : '%d ཆུ་ཚོད',
            d : 'ཉིན་གཅིག',
            dd : '%d ཉིན་',
            M : 'ཟླ་བ་གཅིག',
            MM : '%d ཟླ་བ',
            y : 'ལོ་གཅིག',
            yy : '%d ལོ'
        },
        preparse: function (string) {
            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
                    (meridiem === 'ཉིན་གུང' && hour < 5) ||
                    meridiem === 'དགོང་དག') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'མཚན་མོ';
            } else if (hour < 10) {
                return 'ཞོགས་ཀས';
            } else if (hour < 17) {
                return 'ཉིན་གུང';
            } else if (hour < 20) {
                return 'དགོང་དག';
            } else {
                return 'མཚན་མོ';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return bo;

})));


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function relativeTimeWithMutation(number, withoutSuffix, key) {
        var format = {
            'mm': 'munutenn',
            'MM': 'miz',
            'dd': 'devezh'
        };
        return number + ' ' + mutation(format[key], number);
    }
    function specialMutationForYears(number) {
        switch (lastNumber(number)) {
            case 1:
            case 3:
            case 4:
            case 5:
            case 9:
                return number + ' bloaz';
            default:
                return number + ' vloaz';
        }
    }
    function lastNumber(number) {
        if (number > 9) {
            return lastNumber(number % 10);
        }
        return number;
    }
    function mutation(text, number) {
        if (number === 2) {
            return softMutation(text);
        }
        return text;
    }
    function softMutation(text) {
        var mutationTable = {
            'm': 'v',
            'b': 'v',
            'd': 'z'
        };
        if (mutationTable[text.charAt(0)] === undefined) {
            return text;
        }
        return mutationTable[text.charAt(0)] + text.substring(1);
    }

    var br = moment.defineLocale('br', {
        months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
        monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
        weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h[e]mm A',
            LTS : 'h[e]mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D [a viz] MMMM YYYY',
            LLL : 'D [a viz] MMMM YYYY h[e]mm A',
            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
        },
        calendar : {
            sameDay : '[Hiziv da] LT',
            nextDay : '[Warc\'hoazh da] LT',
            nextWeek : 'dddd [da] LT',
            lastDay : '[Dec\'h da] LT',
            lastWeek : 'dddd [paset da] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'a-benn %s',
            past : '%s \'zo',
            s : 'un nebeud segondennoù',
            ss : '%d eilenn',
            m : 'ur vunutenn',
            mm : relativeTimeWithMutation,
            h : 'un eur',
            hh : '%d eur',
            d : 'un devezh',
            dd : relativeTimeWithMutation,
            M : 'ur miz',
            MM : relativeTimeWithMutation,
            y : 'ur bloaz',
            yy : specialMutationForYears
        },
        dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
        ordinal : function (number) {
            var output = (number === 1) ? 'añ' : 'vet';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return br;

})));


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var bs = moment.defineLocale('bs', {
        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danas u] LT',
            nextDay  : '[sutra u] LT',
            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[jučer u] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'par sekundi',
            ss     : translate,
            m      : translate,
            mm     : translate,
            h      : translate,
            hh     : translate,
            d      : 'dan',
            dd     : translate,
            M      : 'mjesec',
            MM     : translate,
            y      : 'godinu',
            yy     : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return bs;

})));


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ca = moment.defineLocale('ca', {
        months : {
            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
            format: 'de gener_de febrer_de març_d\'abril_de maig_de juny_de juliol_d\'agost_de setembre_d\'octubre_de novembre_de desembre'.split('_'),
            isFormat: /D[oD]?(\s)+MMMM/
        },
        monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
        monthsParseExact : true,
        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
        weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM [de] YYYY',
            ll : 'D MMM YYYY',
            LLL : 'D MMMM [de] YYYY [a les] H:mm',
            lll : 'D MMM YYYY, H:mm',
            LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',
            llll : 'ddd D MMM YYYY, H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            nextDay : function () {
                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            lastDay : function () {
                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'd\'aquí %s',
            past : 'fa %s',
            s : 'uns segons',
            ss : '%d segons',
            m : 'un minut',
            mm : '%d minuts',
            h : 'una hora',
            hh : '%d hores',
            d : 'un dia',
            dd : '%d dies',
            M : 'un mes',
            MM : '%d mesos',
            y : 'un any',
            yy : '%d anys'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
        ordinal : function (number, period) {
            var output = (number === 1) ? 'r' :
                (number === 2) ? 'n' :
                (number === 3) ? 'r' :
                (number === 4) ? 't' : 'è';
            if (period === 'w' || period === 'W') {
                output = 'a';
            }
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ca;

})));


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');

    var monthsParse = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i];
    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
    // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
    var monthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;

    function plural(n) {
        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':  // a few seconds / in a few seconds / a few seconds ago
                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekund');
                } else {
                    return result + 'sekundami';
                }
                break;
            case 'm':  // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minuty' : 'minut');
                } else {
                    return result + 'minutami';
                }
                break;
            case 'h':  // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodin');
                } else {
                    return result + 'hodinami';
                }
                break;
            case 'd':  // a day / in a day / a day ago
                return (withoutSuffix || isFuture) ? 'den' : 'dnem';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dny' : 'dní');
                } else {
                    return result + 'dny';
                }
                break;
            case 'M':  // a month / in a month / a month ago
                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'měsíce' : 'měsíců');
                } else {
                    return result + 'měsíci';
                }
                break;
            case 'y':  // a year / in a year / a year ago
                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'let');
                } else {
                    return result + 'lety';
                }
                break;
        }
    }

    var cs = moment.defineLocale('cs', {
        months : months,
        monthsShort : monthsShort,
        monthsRegex : monthsRegex,
        monthsShortRegex : monthsRegex,
        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
        monthsStrictRegex : /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
        monthsShortStrictRegex : /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,
        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
        longDateFormat : {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd D. MMMM YYYY H:mm',
            l : 'D. M. YYYY'
        },
        calendar : {
            sameDay: '[dnes v] LT',
            nextDay: '[zítra v] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v neděli v] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [v] LT';
                    case 3:
                        return '[ve středu v] LT';
                    case 4:
                        return '[ve čtvrtek v] LT';
                    case 5:
                        return '[v pátek v] LT';
                    case 6:
                        return '[v sobotu v] LT';
                }
            },
            lastDay: '[včera v] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulou neděli v] LT';
                    case 1:
                    case 2:
                        return '[minulé] dddd [v] LT';
                    case 3:
                        return '[minulou středu v] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [v] LT';
                    case 6:
                        return '[minulou sobotu v] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : 'před %s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse : /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return cs;

})));


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var cv = moment.defineLocale('cv', {
        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
        },
        calendar : {
            sameDay: '[Паян] LT [сехетре]',
            nextDay: '[Ыран] LT [сехетре]',
            lastDay: '[Ӗнер] LT [сехетре]',
            nextWeek: '[Ҫитес] dddd LT [сехетре]',
            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
            sameElse: 'L'
        },
        relativeTime : {
            future : function (output) {
                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
                return output + affix;
            },
            past : '%s каялла',
            s : 'пӗр-ик ҫеккунт',
            ss : '%d ҫеккунт',
            m : 'пӗр минут',
            mm : '%d минут',
            h : 'пӗр сехет',
            hh : '%d сехет',
            d : 'пӗр кун',
            dd : '%d кун',
            M : 'пӗр уйӑх',
            MM : '%d уйӑх',
            y : 'пӗр ҫул',
            yy : '%d ҫул'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
        ordinal : '%d-мӗш',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return cv;

})));


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var cy = moment.defineLocale('cy', {
        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
        weekdaysParseExact : true,
        // time formats are the same as en-gb
        longDateFormat: {
            LT: 'HH:mm',
            LTS : 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Heddiw am] LT',
            nextDay: '[Yfory am] LT',
            nextWeek: 'dddd [am] LT',
            lastDay: '[Ddoe am] LT',
            lastWeek: 'dddd [diwethaf am] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'mewn %s',
            past: '%s yn ôl',
            s: 'ychydig eiliadau',
            ss: '%d eiliad',
            m: 'munud',
            mm: '%d munud',
            h: 'awr',
            hh: '%d awr',
            d: 'diwrnod',
            dd: '%d diwrnod',
            M: 'mis',
            MM: '%d mis',
            y: 'blwyddyn',
            yy: '%d flynedd'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
        ordinal: function (number) {
            var b = number,
                output = '',
                lookup = [
                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
                ];
            if (b > 20) {
                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                    output = 'fed'; // not 30ain, 70ain or 90ain
                } else {
                    output = 'ain';
                }
            } else if (b > 0) {
                output = lookup[b];
            }
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return cy;

})));


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var da = moment.defineLocale('da', {
        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay : '[i dag kl.] LT',
            nextDay : '[i morgen kl.] LT',
            nextWeek : 'på dddd [kl.] LT',
            lastDay : '[i går kl.] LT',
            lastWeek : '[i] dddd[s kl.] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s siden',
            s : 'få sekunder',
            ss : '%d sekunder',
            m : 'et minut',
            mm : '%d minutter',
            h : 'en time',
            hh : '%d timer',
            d : 'en dag',
            dd : '%d dage',
            M : 'en måned',
            MM : '%d måneder',
            y : 'et år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return da;

})));


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deAt = moment.defineLocale('de-at', {
        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return deAt;

})));


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deCh = moment.defineLocale('de-ch', {
        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return deCh;

})));


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var de = moment.defineLocale('de', {
        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return de;

})));


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'ޖެނުއަރީ',
        'ފެބްރުއަރީ',
        'މާރިޗު',
        'އޭޕްރީލު',
        'މޭ',
        'ޖޫން',
        'ޖުލައި',
        'އޯގަސްޓު',
        'ސެޕްޓެމްބަރު',
        'އޮކްޓޯބަރު',
        'ނޮވެމްބަރު',
        'ޑިސެމްބަރު'
    ], weekdays = [
        'އާދިއްތަ',
        'ހޯމަ',
        'އަންގާރަ',
        'ބުދަ',
        'ބުރާސްފަތި',
        'ހުކުރު',
        'ހޮނިހިރު'
    ];

    var dv = moment.defineLocale('dv', {
        months : months,
        monthsShort : months,
        weekdays : weekdays,
        weekdaysShort : weekdays,
        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
        longDateFormat : {

            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/M/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /މކ|މފ/,
        isPM : function (input) {
            return 'މފ' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'މކ';
            } else {
                return 'މފ';
            }
        },
        calendar : {
            sameDay : '[މިއަދު] LT',
            nextDay : '[މާދަމާ] LT',
            nextWeek : 'dddd LT',
            lastDay : '[އިއްޔެ] LT',
            lastWeek : '[ފާއިތުވި] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ތެރޭގައި %s',
            past : 'ކުރިން %s',
            s : 'ސިކުންތުކޮޅެއް',
            ss : 'd% ސިކުންތު',
            m : 'މިނިޓެއް',
            mm : 'މިނިޓު %d',
            h : 'ގަޑިއިރެއް',
            hh : 'ގަޑިއިރު %d',
            d : 'ދުވަހެއް',
            dd : 'ދުވަސް %d',
            M : 'މަހެއް',
            MM : 'މަސް %d',
            y : 'އަހަރެއް',
            yy : 'އަހަރު %d'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 7,  // Sunday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return dv;

})));


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }


    var el = moment.defineLocale('el', {
        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
        months : function (momentToFormat, format) {
            if (!momentToFormat) {
                return this._monthsNominativeEl;
            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
                return this._monthsGenitiveEl[momentToFormat.month()];
            } else {
                return this._monthsNominativeEl[momentToFormat.month()];
            }
        },
        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'μμ' : 'ΜΜ';
            } else {
                return isLower ? 'πμ' : 'ΠΜ';
            }
        },
        isPM : function (input) {
            return ((input + '').toLowerCase()[0] === 'μ');
        },
        meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendarEl : {
            sameDay : '[Σήμερα {}] LT',
            nextDay : '[Αύριο {}] LT',
            nextWeek : 'dddd [{}] LT',
            lastDay : '[Χθες {}] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 6:
                        return '[το προηγούμενο] dddd [{}] LT';
                    default:
                        return '[την προηγούμενη] dddd [{}] LT';
                }
            },
            sameElse : 'L'
        },
        calendar : function (key, mom) {
            var output = this._calendarEl[key],
                hours = mom && mom.hours();
            if (isFunction(output)) {
                output = output.apply(mom);
            }
            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
        },
        relativeTime : {
            future : 'σε %s',
            past : '%s πριν',
            s : 'λίγα δευτερόλεπτα',
            ss : '%d δευτερόλεπτα',
            m : 'ένα λεπτό',
            mm : '%d λεπτά',
            h : 'μία ώρα',
            hh : '%d ώρες',
            d : 'μία μέρα',
            dd : '%d μέρες',
            M : 'ένας μήνας',
            MM : '%d μήνες',
            y : 'ένας χρόνος',
            yy : '%d χρόνια'
        },
        dayOfMonthOrdinalParse: /\d{1,2}η/,
        ordinal: '%dη',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4st is the first week of the year.
        }
    });

    return el;

})));


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enSG = moment.defineLocale('en-SG', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enSG;

})));


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enAu = moment.defineLocale('en-au', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enAu;

})));


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enCa = moment.defineLocale('en-ca', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'YYYY-MM-DD',
            LL : 'MMMM D, YYYY',
            LLL : 'MMMM D, YYYY h:mm A',
            LLLL : 'dddd, MMMM D, YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    return enCa;

})));


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enGb = moment.defineLocale('en-gb', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enGb;

})));


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enIe = moment.defineLocale('en-ie', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enIe;

})));


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enIl = moment.defineLocale('en-il', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    return enIl;

})));


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enNz = moment.defineLocale('en-nz', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enNz;

})));


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var eo = moment.defineLocale('eo', {
        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
        weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
        weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
        weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D[-a de] MMMM, YYYY',
            LLL : 'D[-a de] MMMM, YYYY HH:mm',
            LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'
        },
        meridiemParse: /[ap]\.t\.m/i,
        isPM: function (input) {
            return input.charAt(0).toLowerCase() === 'p';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'p.t.m.' : 'P.T.M.';
            } else {
                return isLower ? 'a.t.m.' : 'A.T.M.';
            }
        },
        calendar : {
            sameDay : '[Hodiaŭ je] LT',
            nextDay : '[Morgaŭ je] LT',
            nextWeek : 'dddd [je] LT',
            lastDay : '[Hieraŭ je] LT',
            lastWeek : '[pasinta] dddd [je] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'post %s',
            past : 'antaŭ %s',
            s : 'sekundoj',
            ss : '%d sekundoj',
            m : 'minuto',
            mm : '%d minutoj',
            h : 'horo',
            hh : '%d horoj',
            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
            dd : '%d tagoj',
            M : 'monato',
            MM : '%d monatoj',
            y : 'jaro',
            yy : '%d jaroj'
        },
        dayOfMonthOrdinalParse: /\d{1,2}a/,
        ordinal : '%da',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return eo;

})));


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esDo = moment.defineLocale('es-do', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY h:mm A',
            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return esDo;

})));


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esUs = moment.defineLocale('es-us', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'MM/DD/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY h:mm A',
            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return esUs;

})));


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var es = moment.defineLocale('es', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex : monthsRegex,
        monthsShortRegex : monthsRegex,
        monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex : /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY H:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return es;

})));


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
            'ss': [number + 'sekundi', number + 'sekundit'],
            'm' : ['ühe minuti', 'üks minut'],
            'mm': [number + ' minuti', number + ' minutit'],
            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
            'hh': [number + ' tunni', number + ' tundi'],
            'd' : ['ühe päeva', 'üks päev'],
            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
            'MM': [number + ' kuu', number + ' kuud'],
            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
            'yy': [number + ' aasta', number + ' aastat']
        };
        if (withoutSuffix) {
            return format[key][2] ? format[key][2] : format[key][1];
        }
        return isFuture ? format[key][0] : format[key][1];
    }

    var et = moment.defineLocale('et', {
        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
        longDateFormat : {
            LT   : 'H:mm',
            LTS : 'H:mm:ss',
            L    : 'DD.MM.YYYY',
            LL   : 'D. MMMM YYYY',
            LLL  : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[Täna,] LT',
            nextDay  : '[Homme,] LT',
            nextWeek : '[Järgmine] dddd LT',
            lastDay  : '[Eile,] LT',
            lastWeek : '[Eelmine] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s pärast',
            past   : '%s tagasi',
            s      : processRelativeTime,
            ss     : processRelativeTime,
            m      : processRelativeTime,
            mm     : processRelativeTime,
            h      : processRelativeTime,
            hh     : processRelativeTime,
            d      : processRelativeTime,
            dd     : '%d päeva',
            M      : processRelativeTime,
            MM     : processRelativeTime,
            y      : processRelativeTime,
            yy     : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return et;

})));


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var eu = moment.defineLocale('eu', {
        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
        monthsParseExact : true,
        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY[ko] MMMM[ren] D[a]',
            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
            l : 'YYYY-M-D',
            ll : 'YYYY[ko] MMM D[a]',
            lll : 'YYYY[ko] MMM D[a] HH:mm',
            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
        },
        calendar : {
            sameDay : '[gaur] LT[etan]',
            nextDay : '[bihar] LT[etan]',
            nextWeek : 'dddd LT[etan]',
            lastDay : '[atzo] LT[etan]',
            lastWeek : '[aurreko] dddd LT[etan]',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s barru',
            past : 'duela %s',
            s : 'segundo batzuk',
            ss : '%d segundo',
            m : 'minutu bat',
            mm : '%d minutu',
            h : 'ordu bat',
            hh : '%d ordu',
            d : 'egun bat',
            dd : '%d egun',
            M : 'hilabete bat',
            MM : '%d hilabete',
            y : 'urte bat',
            yy : '%d urte'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return eu;

})));


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '۱',
        '2': '۲',
        '3': '۳',
        '4': '۴',
        '5': '۵',
        '6': '۶',
        '7': '۷',
        '8': '۸',
        '9': '۹',
        '0': '۰'
    }, numberMap = {
        '۱': '1',
        '۲': '2',
        '۳': '3',
        '۴': '4',
        '۵': '5',
        '۶': '6',
        '۷': '7',
        '۸': '8',
        '۹': '9',
        '۰': '0'
    };

    var fa = moment.defineLocale('fa', {
        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /قبل از ظهر|بعد از ظهر/,
        isPM: function (input) {
            return /بعد از ظهر/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'قبل از ظهر';
            } else {
                return 'بعد از ظهر';
            }
        },
        calendar : {
            sameDay : '[امروز ساعت] LT',
            nextDay : '[فردا ساعت] LT',
            nextWeek : 'dddd [ساعت] LT',
            lastDay : '[دیروز ساعت] LT',
            lastWeek : 'dddd [پیش] [ساعت] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'در %s',
            past : '%s پیش',
            s : 'چند ثانیه',
            ss : 'ثانیه d%',
            m : 'یک دقیقه',
            mm : '%d دقیقه',
            h : 'یک ساعت',
            hh : '%d ساعت',
            d : 'یک روز',
            dd : '%d روز',
            M : 'یک ماه',
            MM : '%d ماه',
            y : 'یک سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/[۰-۹]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        dayOfMonthOrdinalParse: /\d{1,2}م/,
        ordinal : '%dم',
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12 // The week that contains Jan 12th is the first week of the year.
        }
    });

    return fa;

})));


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
        numbersFuture = [
            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
            numbersPast[7], numbersPast[8], numbersPast[9]
        ];
    function translate(number, withoutSuffix, key, isFuture) {
        var result = '';
        switch (key) {
            case 's':
                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
            case 'ss':
                return isFuture ? 'sekunnin' : 'sekuntia';
            case 'm':
                return isFuture ? 'minuutin' : 'minuutti';
            case 'mm':
                result = isFuture ? 'minuutin' : 'minuuttia';
                break;
            case 'h':
                return isFuture ? 'tunnin' : 'tunti';
            case 'hh':
                result = isFuture ? 'tunnin' : 'tuntia';
                break;
            case 'd':
                return isFuture ? 'päivän' : 'päivä';
            case 'dd':
                result = isFuture ? 'päivän' : 'päivää';
                break;
            case 'M':
                return isFuture ? 'kuukauden' : 'kuukausi';
            case 'MM':
                result = isFuture ? 'kuukauden' : 'kuukautta';
                break;
            case 'y':
                return isFuture ? 'vuoden' : 'vuosi';
            case 'yy':
                result = isFuture ? 'vuoden' : 'vuotta';
                break;
        }
        result = verbalNumber(number, isFuture) + ' ' + result;
        return result;
    }
    function verbalNumber(number, isFuture) {
        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
    }

    var fi = moment.defineLocale('fi', {
        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD.MM.YYYY',
            LL : 'Do MMMM[ta] YYYY',
            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
            l : 'D.M.YYYY',
            ll : 'Do MMM YYYY',
            lll : 'Do MMM YYYY, [klo] HH.mm',
            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
        },
        calendar : {
            sameDay : '[tänään] [klo] LT',
            nextDay : '[huomenna] [klo] LT',
            nextWeek : 'dddd [klo] LT',
            lastDay : '[eilen] [klo] LT',
            lastWeek : '[viime] dddd[na] [klo] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s päästä',
            past : '%s sitten',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fi;

})));


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var fo = moment.defineLocale('fo', {
        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D. MMMM, YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Í dag kl.] LT',
            nextDay : '[Í morgin kl.] LT',
            nextWeek : 'dddd [kl.] LT',
            lastDay : '[Í gjár kl.] LT',
            lastWeek : '[síðstu] dddd [kl] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'um %s',
            past : '%s síðani',
            s : 'fá sekund',
            ss : '%d sekundir',
            m : 'ein minuttur',
            mm : '%d minuttir',
            h : 'ein tími',
            hh : '%d tímar',
            d : 'ein dagur',
            dd : '%d dagar',
            M : 'ein mánaður',
            MM : '%d mánaðir',
            y : 'eitt ár',
            yy : '%d ár'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fo;

})));


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var frCa = moment.defineLocale('fr-ca', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal : function (number, period) {
            switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        }
    });

    return frCa;

})));


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var frCh = moment.defineLocale('fr-ch', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal : function (number, period) {
            switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return frCh;

})));


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var fr = moment.defineLocale('fr', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
        ordinal : function (number, period) {
            switch (period) {
                // TODO: Return 'e' when day of month > 1. Move this case inside
                // block for masculine words below.
                // See https://github.com/moment/moment/issues/3375
                case 'D':
                    return number + (number === 1 ? 'er' : '');

                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fr;

})));


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

    var fy = moment.defineLocale('fy', {
        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },
        monthsParseExact : true,
        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[hjoed om] LT',
            nextDay: '[moarn om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[juster om] LT',
            lastWeek: '[ôfrûne] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'oer %s',
            past : '%s lyn',
            s : 'in pear sekonden',
            ss : '%d sekonden',
            m : 'ien minút',
            mm : '%d minuten',
            h : 'ien oere',
            hh : '%d oeren',
            d : 'ien dei',
            dd : '%d dagen',
            M : 'ien moanne',
            MM : '%d moannen',
            y : 'ien jier',
            yy : '%d jierren'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fy;

})));


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';



    var months = [
        'Eanáir', 'Feabhra', 'Márta', 'Aibreán', 'Bealtaine', 'Méitheamh', 'Iúil', 'Lúnasa', 'Meán Fómhair', 'Deaireadh Fómhair', 'Samhain', 'Nollaig'
    ];

    var monthsShort = ['Eaná', 'Feab', 'Márt', 'Aibr', 'Beal', 'Méit', 'Iúil', 'Lúna', 'Meán', 'Deai', 'Samh', 'Noll'];

    var weekdays = ['Dé Domhnaigh', 'Dé Luain', 'Dé Máirt', 'Dé Céadaoin', 'Déardaoin', 'Dé hAoine', 'Dé Satharn'];

    var weekdaysShort = ['Dom', 'Lua', 'Mái', 'Céa', 'Déa', 'hAo', 'Sat'];

    var weekdaysMin = ['Do', 'Lu', 'Má', 'Ce', 'Dé', 'hA', 'Sa'];

    var ga = moment.defineLocale('ga', {
        months: months,
        monthsShort: monthsShort,
        monthsParseExact: true,
        weekdays: weekdays,
        weekdaysShort: weekdaysShort,
        weekdaysMin: weekdaysMin,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Inniu ag] LT',
            nextDay: '[Amárach ag] LT',
            nextWeek: 'dddd [ag] LT',
            lastDay: '[Inné aig] LT',
            lastWeek: 'dddd [seo caite] [ag] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'i %s',
            past: '%s ó shin',
            s: 'cúpla soicind',
            ss: '%d soicind',
            m: 'nóiméad',
            mm: '%d nóiméad',
            h: 'uair an chloig',
            hh: '%d uair an chloig',
            d: 'lá',
            dd: '%d lá',
            M: 'mí',
            MM: '%d mí',
            y: 'bliain',
            yy: '%d bliain'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
        ordinal: function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ga;

})));


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
    ];

    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

    var gd = moment.defineLocale('gd', {
        months : months,
        monthsShort : monthsShort,
        monthsParseExact : true,
        weekdays : weekdays,
        weekdaysShort : weekdaysShort,
        weekdaysMin : weekdaysMin,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[An-diugh aig] LT',
            nextDay : '[A-màireach aig] LT',
            nextWeek : 'dddd [aig] LT',
            lastDay : '[An-dè aig] LT',
            lastWeek : 'dddd [seo chaidh] [aig] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ann an %s',
            past : 'bho chionn %s',
            s : 'beagan diogan',
            ss : '%d diogan',
            m : 'mionaid',
            mm : '%d mionaidean',
            h : 'uair',
            hh : '%d uairean',
            d : 'latha',
            dd : '%d latha',
            M : 'mìos',
            MM : '%d mìosan',
            y : 'bliadhna',
            yy : '%d bliadhna'
        },
        dayOfMonthOrdinalParse : /\d{1,2}(d|na|mh)/,
        ordinal : function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return gd;

})));


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var gl = moment.defineLocale('gl', {
        months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
        monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY H:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
            },
            nextDay : function () {
                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
            },
            lastDay : function () {
                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
            },
            lastWeek : function () {
                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : function (str) {
                if (str.indexOf('un') === 0) {
                    return 'n' + str;
                }
                return 'en ' + str;
            },
            past : 'hai %s',
            s : 'uns segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'unha hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return gl;

})));


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's': ['thodde secondanim', 'thodde second'],
            'ss': [number + ' secondanim', number + ' second'],
            'm': ['eka mintan', 'ek minute'],
            'mm': [number + ' mintanim', number + ' mintam'],
            'h': ['eka voran', 'ek vor'],
            'hh': [number + ' voranim', number + ' voram'],
            'd': ['eka disan', 'ek dis'],
            'dd': [number + ' disanim', number + ' dis'],
            'M': ['eka mhoinean', 'ek mhoino'],
            'MM': [number + ' mhoineanim', number + ' mhoine'],
            'y': ['eka vorsan', 'ek voros'],
            'yy': [number + ' vorsanim', number + ' vorsam']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var gomLatn = moment.defineLocale('gom-latn', {
        months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
        monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\'var'.split('_'),
        weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
        weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'A h:mm [vazta]',
            LTS : 'A h:mm:ss [vazta]',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY A h:mm [vazta]',
            LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
            llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
        },
        calendar : {
            sameDay: '[Aiz] LT',
            nextDay: '[Faleam] LT',
            nextWeek: '[Ieta to] dddd[,] LT',
            lastDay: '[Kal] LT',
            lastWeek: '[Fatlo] dddd[,] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s',
            past : '%s adim',
            s : processRelativeTime,
            ss : processRelativeTime,
            m : processRelativeTime,
            mm : processRelativeTime,
            h : processRelativeTime,
            hh : processRelativeTime,
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse : /\d{1,2}(er)/,
        ordinal : function (number, period) {
            switch (period) {
                // the ordinal 'er' only applies to day of the month
                case 'D':
                    return number + 'er';
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                case 'w':
                case 'W':
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        },
        meridiemParse: /rati|sokalli|donparam|sanje/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'rati') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'sokalli') {
                return hour;
            } else if (meridiem === 'donparam') {
                return hour > 12 ? hour : hour + 12;
            } else if (meridiem === 'sanje') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'rati';
            } else if (hour < 12) {
                return 'sokalli';
            } else if (hour < 16) {
                return 'donparam';
            } else if (hour < 20) {
                return 'sanje';
            } else {
                return 'rati';
            }
        }
    });

    return gomLatn;

})));


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
            '1': '૧',
            '2': '૨',
            '3': '૩',
            '4': '૪',
            '5': '૫',
            '6': '૬',
            '7': '૭',
            '8': '૮',
            '9': '૯',
            '0': '૦'
        },
        numberMap = {
            '૧': '1',
            '૨': '2',
            '૩': '3',
            '૪': '4',
            '૫': '5',
            '૬': '6',
            '૭': '7',
            '૮': '8',
            '૯': '9',
            '૦': '0'
        };

    var gu = moment.defineLocale('gu', {
        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),
        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),
        monthsParseExact: true,
        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),
        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm વાગ્યે',
            LTS: 'A h:mm:ss વાગ્યે',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'
        },
        calendar: {
            sameDay: '[આજ] LT',
            nextDay: '[કાલે] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ગઇકાલે] LT',
            lastWeek: '[પાછલા] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s મા',
            past: '%s પેહલા',
            s: 'અમુક પળો',
            ss: '%d સેકંડ',
            m: 'એક મિનિટ',
            mm: '%d મિનિટ',
            h: 'એક કલાક',
            hh: '%d કલાક',
            d: 'એક દિવસ',
            dd: '%d દિવસ',
            M: 'એક મહિનો',
            MM: '%d મહિનો',
            y: 'એક વર્ષ',
            yy: '%d વર્ષ'
        },
        preparse: function (string) {
            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'રાત') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'સવાર') {
                return hour;
            } else if (meridiem === 'બપોર') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'સાંજ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'રાત';
            } else if (hour < 10) {
                return 'સવાર';
            } else if (hour < 17) {
                return 'બપોર';
            } else if (hour < 20) {
                return 'સાંજ';
            } else {
                return 'રાત';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.
        }
    });

    return gu;

})));


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var he = moment.defineLocale('he', {
        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [ב]MMMM YYYY',
            LLL : 'D [ב]MMMM YYYY HH:mm',
            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
            l : 'D/M/YYYY',
            ll : 'D MMM YYYY',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd, D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[היום ב־]LT',
            nextDay : '[מחר ב־]LT',
            nextWeek : 'dddd [בשעה] LT',
            lastDay : '[אתמול ב־]LT',
            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'בעוד %s',
            past : 'לפני %s',
            s : 'מספר שניות',
            ss : '%d שניות',
            m : 'דקה',
            mm : '%d דקות',
            h : 'שעה',
            hh : function (number) {
                if (number === 2) {
                    return 'שעתיים';
                }
                return number + ' שעות';
            },
            d : 'יום',
            dd : function (number) {
                if (number === 2) {
                    return 'יומיים';
                }
                return number + ' ימים';
            },
            M : 'חודש',
            MM : function (number) {
                if (number === 2) {
                    return 'חודשיים';
                }
                return number + ' חודשים';
            },
            y : 'שנה',
            yy : function (number) {
                if (number === 2) {
                    return 'שנתיים';
                } else if (number % 10 === 0 && number !== 10) {
                    return number + ' שנה';
                }
                return number + ' שנים';
            }
        },
        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
        isPM : function (input) {
            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 5) {
                return 'לפנות בוקר';
            } else if (hour < 10) {
                return 'בבוקר';
            } else if (hour < 12) {
                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
            } else if (hour < 18) {
                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
            } else {
                return 'בערב';
            }
        }
    });

    return he;

})));


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    var hi = moment.defineLocale('hi', {
        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
        monthsParseExact: true,
        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat : {
            LT : 'A h:mm बजे',
            LTS : 'A h:mm:ss बजे',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm बजे',
            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[कल] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[कल] LT',
            lastWeek : '[पिछले] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s में',
            past : '%s पहले',
            s : 'कुछ ही क्षण',
            ss : '%d सेकंड',
            m : 'एक मिनट',
            mm : '%d मिनट',
            h : 'एक घंटा',
            hh : '%d घंटे',
            d : 'एक दिन',
            dd : '%d दिन',
            M : 'एक महीने',
            MM : '%d महीने',
            y : 'एक वर्ष',
            yy : '%d वर्ष'
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
        meridiemParse: /रात|सुबह|दोपहर|शाम/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सुबह') {
                return hour;
            } else if (meridiem === 'दोपहर') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'शाम') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'रात';
            } else if (hour < 10) {
                return 'सुबह';
            } else if (hour < 17) {
                return 'दोपहर';
            } else if (hour < 20) {
                return 'शाम';
            } else {
                return 'रात';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return hi;

})));


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var hr = moment.defineLocale('hr', {
        months : {
            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
        },
        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danas u] LT',
            nextDay  : '[sutra u] LT',
            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[jučer u] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'par sekundi',
            ss     : translate,
            m      : translate,
            mm     : translate,
            h      : translate,
            hh     : translate,
            d      : 'dan',
            dd     : translate,
            M      : 'mjesec',
            MM     : translate,
            y      : 'godinu',
            yy     : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return hr;

})));


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
    function translate(number, withoutSuffix, key, isFuture) {
        var num = number;
        switch (key) {
            case 's':
                return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
            case 'ss':
                return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';
            case 'm':
                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'mm':
                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'h':
                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'hh':
                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'd':
                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'dd':
                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'M':
                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'MM':
                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'y':
                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
            case 'yy':
                return num + (isFuture || withoutSuffix ? ' év' : ' éve');
        }
        return '';
    }
    function week(isFuture) {
        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
    }

    var hu = moment.defineLocale('hu', {
        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'YYYY.MM.DD.',
            LL : 'YYYY. MMMM D.',
            LLL : 'YYYY. MMMM D. H:mm',
            LLLL : 'YYYY. MMMM D., dddd H:mm'
        },
        meridiemParse: /de|du/i,
        isPM: function (input) {
            return input.charAt(1).toLowerCase() === 'u';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower === true ? 'de' : 'DE';
            } else {
                return isLower === true ? 'du' : 'DU';
            }
        },
        calendar : {
            sameDay : '[ma] LT[-kor]',
            nextDay : '[holnap] LT[-kor]',
            nextWeek : function () {
                return week.call(this, true);
            },
            lastDay : '[tegnap] LT[-kor]',
            lastWeek : function () {
                return week.call(this, false);
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s múlva',
            past : '%s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return hu;

})));


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var hyAm = moment.defineLocale('hy-am', {
        months : {
            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
        },
        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY թ.',
            LLL : 'D MMMM YYYY թ., HH:mm',
            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
        },
        calendar : {
            sameDay: '[այսօր] LT',
            nextDay: '[վաղը] LT',
            lastDay: '[երեկ] LT',
            nextWeek: function () {
                return 'dddd [օրը ժամը] LT';
            },
            lastWeek: function () {
                return '[անցած] dddd [օրը ժամը] LT';
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s հետո',
            past : '%s առաջ',
            s : 'մի քանի վայրկյան',
            ss : '%d վայրկյան',
            m : 'րոպե',
            mm : '%d րոպե',
            h : 'ժամ',
            hh : '%d ժամ',
            d : 'օր',
            dd : '%d օր',
            M : 'ամիս',
            MM : '%d ամիս',
            y : 'տարի',
            yy : '%d տարի'
        },
        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
        isPM: function (input) {
            return /^(ցերեկվա|երեկոյան)$/.test(input);
        },
        meridiem : function (hour) {
            if (hour < 4) {
                return 'գիշերվա';
            } else if (hour < 12) {
                return 'առավոտվա';
            } else if (hour < 17) {
                return 'ցերեկվա';
            } else {
                return 'երեկոյան';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'DDD':
                case 'w':
                case 'W':
                case 'DDDo':
                    if (number === 1) {
                        return number + '-ին';
                    }
                    return number + '-րդ';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return hyAm;

})));


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var id = moment.defineLocale('id', {
        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|siang|sore|malam/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'siang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sore' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'siang';
            } else if (hours < 19) {
                return 'sore';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Besok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kemarin pukul] LT',
            lastWeek : 'dddd [lalu pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lalu',
            s : 'beberapa detik',
            ss : '%d detik',
            m : 'semenit',
            mm : '%d menit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return id;

})));


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(n) {
        if (n % 100 === 11) {
            return true;
        } else if (n % 10 === 1) {
            return false;
        }
        return true;
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
            case 'ss':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');
                }
                return result + 'sekúnda';
            case 'm':
                return withoutSuffix ? 'mínúta' : 'mínútu';
            case 'mm':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
                } else if (withoutSuffix) {
                    return result + 'mínúta';
                }
                return result + 'mínútu';
            case 'hh':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
                }
                return result + 'klukkustund';
            case 'd':
                if (withoutSuffix) {
                    return 'dagur';
                }
                return isFuture ? 'dag' : 'degi';
            case 'dd':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'dagar';
                    }
                    return result + (isFuture ? 'daga' : 'dögum');
                } else if (withoutSuffix) {
                    return result + 'dagur';
                }
                return result + (isFuture ? 'dag' : 'degi');
            case 'M':
                if (withoutSuffix) {
                    return 'mánuður';
                }
                return isFuture ? 'mánuð' : 'mánuði';
            case 'MM':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'mánuðir';
                    }
                    return result + (isFuture ? 'mánuði' : 'mánuðum');
                } else if (withoutSuffix) {
                    return result + 'mánuður';
                }
                return result + (isFuture ? 'mánuð' : 'mánuði');
            case 'y':
                return withoutSuffix || isFuture ? 'ár' : 'ári';
            case 'yy':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
                }
                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
        }
    }

    var is = moment.defineLocale('is', {
        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] H:mm',
            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
        },
        calendar : {
            sameDay : '[í dag kl.] LT',
            nextDay : '[á morgun kl.] LT',
            nextWeek : 'dddd [kl.] LT',
            lastDay : '[í gær kl.] LT',
            lastWeek : '[síðasta] dddd [kl.] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'eftir %s',
            past : 'fyrir %s síðan',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : 'klukkustund',
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return is;

})));


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var itCh = moment.defineLocale('it-ch', {
        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[la scorsa] dddd [alle] LT';
                    default:
                        return '[lo scorso] dddd [alle] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : function (s) {
                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past : '%s fa',
            s : 'alcuni secondi',
            ss : '%d secondi',
            m : 'un minuto',
            mm : '%d minuti',
            h : 'un\'ora',
            hh : '%d ore',
            d : 'un giorno',
            dd : '%d giorni',
            M : 'un mese',
            MM : '%d mesi',
            y : 'un anno',
            yy : '%d anni'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return itCh;

})));


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var it = moment.defineLocale('it', {
        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[la scorsa] dddd [alle] LT';
                    default:
                        return '[lo scorso] dddd [alle] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : function (s) {
                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past : '%s fa',
            s : 'alcuni secondi',
            ss : '%d secondi',
            m : 'un minuto',
            mm : '%d minuti',
            h : 'un\'ora',
            hh : '%d ore',
            d : 'un giorno',
            dd : '%d giorni',
            M : 'un mese',
            MM : '%d mesi',
            y : 'un anno',
            yy : '%d anni'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return it;

})));


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ja = moment.defineLocale('ja', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日 dddd HH:mm',
            l : 'YYYY/MM/DD',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日(ddd) HH:mm'
        },
        meridiemParse: /午前|午後/i,
        isPM : function (input) {
            return input === '午後';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return '午前';
            } else {
                return '午後';
            }
        },
        calendar : {
            sameDay : '[今日] LT',
            nextDay : '[明日] LT',
            nextWeek : function (now) {
                if (now.week() < this.week()) {
                    return '[来週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            lastDay : '[昨日] LT',
            lastWeek : function (now) {
                if (this.week() < now.week()) {
                    return '[先週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse : /\d{1,2}日/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                default:
                    return number;
            }
        },
        relativeTime : {
            future : '%s後',
            past : '%s前',
            s : '数秒',
            ss : '%d秒',
            m : '1分',
            mm : '%d分',
            h : '1時間',
            hh : '%d時間',
            d : '1日',
            dd : '%d日',
            M : '1ヶ月',
            MM : '%dヶ月',
            y : '1年',
            yy : '%d年'
        }
    });

    return ja;

})));


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var jv = moment.defineLocale('jv', {
        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /enjing|siyang|sonten|ndalu/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'enjing') {
                return hour;
            } else if (meridiem === 'siyang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'enjing';
            } else if (hours < 15) {
                return 'siyang';
            } else if (hours < 19) {
                return 'sonten';
            } else {
                return 'ndalu';
            }
        },
        calendar : {
            sameDay : '[Dinten puniko pukul] LT',
            nextDay : '[Mbenjang pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kala wingi pukul] LT',
            lastWeek : 'dddd [kepengker pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'wonten ing %s',
            past : '%s ingkang kepengker',
            s : 'sawetawis detik',
            ss : '%d detik',
            m : 'setunggal menit',
            mm : '%d menit',
            h : 'setunggal jam',
            hh : '%d jam',
            d : 'sedinten',
            dd : '%d dinten',
            M : 'sewulan',
            MM : '%d wulan',
            y : 'setaun',
            yy : '%d taun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return jv;

})));


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ka = moment.defineLocale('ka', {
        months : {
            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
        },
        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
        weekdays : {
            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
            isFormat: /(წინა|შემდეგ)/
        },
        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[დღეს] LT[-ზე]',
            nextDay : '[ხვალ] LT[-ზე]',
            lastDay : '[გუშინ] LT[-ზე]',
            nextWeek : '[შემდეგ] dddd LT[-ზე]',
            lastWeek : '[წინა] dddd LT-ზე',
            sameElse : 'L'
        },
        relativeTime : {
            future : function (s) {
                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
                    s.replace(/ი$/, 'ში') :
                    s + 'ში';
            },
            past : function (s) {
                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
                    return s.replace(/(ი|ე)$/, 'ის წინ');
                }
                if ((/წელი/).test(s)) {
                    return s.replace(/წელი$/, 'წლის წინ');
                }
            },
            s : 'რამდენიმე წამი',
            ss : '%d წამი',
            m : 'წუთი',
            mm : '%d წუთი',
            h : 'საათი',
            hh : '%d საათი',
            d : 'დღე',
            dd : '%d დღე',
            M : 'თვე',
            MM : '%d თვე',
            y : 'წელი',
            yy : '%d წელი'
        },
        dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
        ordinal : function (number) {
            if (number === 0) {
                return number;
            }
            if (number === 1) {
                return number + '-ლი';
            }
            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
                return 'მე-' + number;
            }
            return number + '-ე';
        },
        week : {
            dow : 1,
            doy : 7
        }
    });

    return ka;

})));


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-ші',
        1: '-ші',
        2: '-ші',
        3: '-ші',
        4: '-ші',
        5: '-ші',
        6: '-шы',
        7: '-ші',
        8: '-ші',
        9: '-шы',
        10: '-шы',
        20: '-шы',
        30: '-шы',
        40: '-шы',
        50: '-ші',
        60: '-шы',
        70: '-ші',
        80: '-ші',
        90: '-шы',
        100: '-ші'
    };

    var kk = moment.defineLocale('kk', {
        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Бүгін сағат] LT',
            nextDay : '[Ертең сағат] LT',
            nextWeek : 'dddd [сағат] LT',
            lastDay : '[Кеше сағат] LT',
            lastWeek : '[Өткен аптаның] dddd [сағат] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ішінде',
            past : '%s бұрын',
            s : 'бірнеше секунд',
            ss : '%d секунд',
            m : 'бір минут',
            mm : '%d минут',
            h : 'бір сағат',
            hh : '%d сағат',
            d : 'бір күн',
            dd : '%d күн',
            M : 'бір ай',
            MM : '%d ай',
            y : 'бір жыл',
            yy : '%d жыл'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
        ordinal : function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return kk;

})));


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '១',
        '2': '២',
        '3': '៣',
        '4': '៤',
        '5': '៥',
        '6': '៦',
        '7': '៧',
        '8': '៨',
        '9': '៩',
        '0': '០'
    }, numberMap = {
        '១': '1',
        '២': '2',
        '៣': '3',
        '៤': '4',
        '៥': '5',
        '៦': '6',
        '៧': '7',
        '៨': '8',
        '៩': '9',
        '០': '0'
    };

    var km = moment.defineLocale('km', {
        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
        ),
        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
        ),
        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /ព្រឹក|ល្ងាច/,
        isPM: function (input) {
            return input === 'ល្ងាច';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ព្រឹក';
            } else {
                return 'ល្ងាច';
            }
        },
        calendar: {
            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
            nextDay: '[ស្អែក ម៉ោង] LT',
            nextWeek: 'dddd [ម៉ោង] LT',
            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%sទៀត',
            past: '%sមុន',
            s: 'ប៉ុន្មានវិនាទី',
            ss: '%d វិនាទី',
            m: 'មួយនាទី',
            mm: '%d នាទី',
            h: 'មួយម៉ោង',
            hh: '%d ម៉ោង',
            d: 'មួយថ្ងៃ',
            dd: '%d ថ្ងៃ',
            M: 'មួយខែ',
            MM: '%d ខែ',
            y: 'មួយឆ្នាំ',
            yy: '%d ឆ្នាំ'
        },
        dayOfMonthOrdinalParse : /ទី\d{1,2}/,
        ordinal : 'ទី%d',
        preparse: function (string) {
            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return km;

})));


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '೧',
        '2': '೨',
        '3': '೩',
        '4': '೪',
        '5': '೫',
        '6': '೬',
        '7': '೭',
        '8': '೮',
        '9': '೯',
        '0': '೦'
    },
    numberMap = {
        '೧': '1',
        '೨': '2',
        '೩': '3',
        '೪': '4',
        '೫': '5',
        '೬': '6',
        '೭': '7',
        '೮': '8',
        '೯': '9',
        '೦': '0'
    };

    var kn = moment.defineLocale('kn', {
        months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
        monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),
        monthsParseExact: true,
        weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
        weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
        weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[ಇಂದು] LT',
            nextDay : '[ನಾಳೆ] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[ನಿನ್ನೆ] LT',
            lastWeek : '[ಕೊನೆಯ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ನಂತರ',
            past : '%s ಹಿಂದೆ',
            s : 'ಕೆಲವು ಕ್ಷಣಗಳು',
            ss : '%d ಸೆಕೆಂಡುಗಳು',
            m : 'ಒಂದು ನಿಮಿಷ',
            mm : '%d ನಿಮಿಷ',
            h : 'ಒಂದು ಗಂಟೆ',
            hh : '%d ಗಂಟೆ',
            d : 'ಒಂದು ದಿನ',
            dd : '%d ದಿನ',
            M : 'ಒಂದು ತಿಂಗಳು',
            MM : '%d ತಿಂಗಳು',
            y : 'ಒಂದು ವರ್ಷ',
            yy : '%d ವರ್ಷ'
        },
        preparse: function (string) {
            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ರಾತ್ರಿ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
                return hour;
            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ಸಂಜೆ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ರಾತ್ರಿ';
            } else if (hour < 10) {
                return 'ಬೆಳಿಗ್ಗೆ';
            } else if (hour < 17) {
                return 'ಮಧ್ಯಾಹ್ನ';
            } else if (hour < 20) {
                return 'ಸಂಜೆ';
            } else {
                return 'ರಾತ್ರಿ';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
        ordinal : function (number) {
            return number + 'ನೇ';
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return kn;

})));


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ko = moment.defineLocale('ko', {
        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'YYYY.MM.DD.',
            LL : 'YYYY년 MMMM D일',
            LLL : 'YYYY년 MMMM D일 A h:mm',
            LLLL : 'YYYY년 MMMM D일 dddd A h:mm',
            l : 'YYYY.MM.DD.',
            ll : 'YYYY년 MMMM D일',
            lll : 'YYYY년 MMMM D일 A h:mm',
            llll : 'YYYY년 MMMM D일 dddd A h:mm'
        },
        calendar : {
            sameDay : '오늘 LT',
            nextDay : '내일 LT',
            nextWeek : 'dddd LT',
            lastDay : '어제 LT',
            lastWeek : '지난주 dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s 후',
            past : '%s 전',
            s : '몇 초',
            ss : '%d초',
            m : '1분',
            mm : '%d분',
            h : '한 시간',
            hh : '%d시간',
            d : '하루',
            dd : '%d일',
            M : '한 달',
            MM : '%d달',
            y : '일 년',
            yy : '%d년'
        },
        dayOfMonthOrdinalParse : /\d{1,2}(일|월|주)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '일';
                case 'M':
                    return number + '월';
                case 'w':
                case 'W':
                    return number + '주';
                default:
                    return number;
            }
        },
        meridiemParse : /오전|오후/,
        isPM : function (token) {
            return token === '오후';
        },
        meridiem : function (hour, minute, isUpper) {
            return hour < 12 ? '오전' : '오후';
        }
    });

    return ko;

})));


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    },
    months = [
        'کانونی دووەم',
        'شوبات',
        'ئازار',
        'نیسان',
        'ئایار',
        'حوزەیران',
        'تەمموز',
        'ئاب',
        'ئەیلوول',
        'تشرینی یەكەم',
        'تشرینی دووەم',
        'كانونی یەکەم'
    ];


    var ku = moment.defineLocale('ku', {
        months : months,
        monthsShort : months,
        weekdays : 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split('_'),
        weekdaysShort : 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split('_'),
        weekdaysMin : 'ی_د_س_چ_پ_ه_ش'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /ئێواره‌|به‌یانی/,
        isPM: function (input) {
            return /ئێواره‌/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'به‌یانی';
            } else {
                return 'ئێواره‌';
            }
        },
        calendar : {
            sameDay : '[ئه‌مرۆ كاتژمێر] LT',
            nextDay : '[به‌یانی كاتژمێر] LT',
            nextWeek : 'dddd [كاتژمێر] LT',
            lastDay : '[دوێنێ كاتژمێر] LT',
            lastWeek : 'dddd [كاتژمێر] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'له‌ %s',
            past : '%s',
            s : 'چه‌ند چركه‌یه‌ك',
            ss : 'چركه‌ %d',
            m : 'یه‌ك خوله‌ك',
            mm : '%d خوله‌ك',
            h : 'یه‌ك كاتژمێر',
            hh : '%d كاتژمێر',
            d : 'یه‌ك ڕۆژ',
            dd : '%d ڕۆژ',
            M : 'یه‌ك مانگ',
            MM : '%d مانگ',
            y : 'یه‌ك ساڵ',
            yy : '%d ساڵ'
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12 // The week that contains Jan 12th is the first week of the year.
        }
    });

    return ku;

})));


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-чү',
        1: '-чи',
        2: '-чи',
        3: '-чү',
        4: '-чү',
        5: '-чи',
        6: '-чы',
        7: '-чи',
        8: '-чи',
        9: '-чу',
        10: '-чу',
        20: '-чы',
        30: '-чу',
        40: '-чы',
        50: '-чү',
        60: '-чы',
        70: '-чи',
        80: '-чи',
        90: '-чу',
        100: '-чү'
    };

    var ky = moment.defineLocale('ky', {
        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Бүгүн саат] LT',
            nextDay : '[Эртең саат] LT',
            nextWeek : 'dddd [саат] LT',
            lastDay : '[Кечээ саат] LT',
            lastWeek : '[Өткөн аптанын] dddd [күнү] [саат] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ичинде',
            past : '%s мурун',
            s : 'бирнече секунд',
            ss : '%d секунд',
            m : 'бир мүнөт',
            mm : '%d мүнөт',
            h : 'бир саат',
            hh : '%d саат',
            d : 'бир күн',
            dd : '%d күн',
            M : 'бир ай',
            MM : '%d ай',
            y : 'бир жыл',
            yy : '%d жыл'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
        ordinal : function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return ky;

})));


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eng Minutt', 'enger Minutt'],
            'h': ['eng Stonn', 'enger Stonn'],
            'd': ['een Dag', 'engem Dag'],
            'M': ['ee Mount', 'engem Mount'],
            'y': ['ee Joer', 'engem Joer']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }
    function processFutureTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'a ' + string;
        }
        return 'an ' + string;
    }
    function processPastTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'viru ' + string;
        }
        return 'virun ' + string;
    }
    /**
     * Returns true if the word before the given number loses the '-n' ending.
     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
     *
     * @param number {integer}
     * @returns {boolean}
     */
    function eifelerRegelAppliesToNumber(number) {
        number = parseInt(number, 10);
        if (isNaN(number)) {
            return false;
        }
        if (number < 0) {
            // Negative Number --> always true
            return true;
        } else if (number < 10) {
            // Only 1 digit
            if (4 <= number && number <= 7) {
                return true;
            }
            return false;
        } else if (number < 100) {
            // 2 digits
            var lastDigit = number % 10, firstDigit = number / 10;
            if (lastDigit === 0) {
                return eifelerRegelAppliesToNumber(firstDigit);
            }
            return eifelerRegelAppliesToNumber(lastDigit);
        } else if (number < 10000) {
            // 3 or 4 digits --> recursively check first digit
            while (number >= 10) {
                number = number / 10;
            }
            return eifelerRegelAppliesToNumber(number);
        } else {
            // Anything larger than 4 digits: recursively check first n-3 digits
            number = number / 1000;
            return eifelerRegelAppliesToNumber(number);
        }
    }

    var lb = moment.defineLocale('lb', {
        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm [Auer]',
            LTS: 'H:mm:ss [Auer]',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm [Auer]',
            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
        },
        calendar: {
            sameDay: '[Haut um] LT',
            sameElse: 'L',
            nextDay: '[Muer um] LT',
            nextWeek: 'dddd [um] LT',
            lastDay: '[Gëschter um] LT',
            lastWeek: function () {
                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
                switch (this.day()) {
                    case 2:
                    case 4:
                        return '[Leschten] dddd [um] LT';
                    default:
                        return '[Leschte] dddd [um] LT';
                }
            }
        },
        relativeTime : {
            future : processFutureTime,
            past : processPastTime,
            s : 'e puer Sekonnen',
            ss : '%d Sekonnen',
            m : processRelativeTime,
            mm : '%d Minutten',
            h : processRelativeTime,
            hh : '%d Stonnen',
            d : processRelativeTime,
            dd : '%d Deeg',
            M : processRelativeTime,
            MM : '%d Méint',
            y : processRelativeTime,
            yy : '%d Joer'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lb;

})));


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var lo = moment.defineLocale('lo', {
        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
        isPM: function (input) {
            return input === 'ຕອນແລງ';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ຕອນເຊົ້າ';
            } else {
                return 'ຕອນແລງ';
            }
        },
        calendar : {
            sameDay : '[ມື້ນີ້ເວລາ] LT',
            nextDay : '[ມື້ອື່ນເວລາ] LT',
            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
            lastDay : '[ມື້ວານນີ້ເວລາ] LT',
            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ອີກ %s',
            past : '%sຜ່ານມາ',
            s : 'ບໍ່ເທົ່າໃດວິນາທີ',
            ss : '%d ວິນາທີ' ,
            m : '1 ນາທີ',
            mm : '%d ນາທີ',
            h : '1 ຊົ່ວໂມງ',
            hh : '%d ຊົ່ວໂມງ',
            d : '1 ມື້',
            dd : '%d ມື້',
            M : '1 ເດືອນ',
            MM : '%d ເດືອນ',
            y : '1 ປີ',
            yy : '%d ປີ'
        },
        dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
        ordinal : function (number) {
            return 'ທີ່' + number;
        }
    });

    return lo;

})));


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var units = {
        'ss' : 'sekundė_sekundžių_sekundes',
        'm' : 'minutė_minutės_minutę',
        'mm': 'minutės_minučių_minutes',
        'h' : 'valanda_valandos_valandą',
        'hh': 'valandos_valandų_valandas',
        'd' : 'diena_dienos_dieną',
        'dd': 'dienos_dienų_dienas',
        'M' : 'mėnuo_mėnesio_mėnesį',
        'MM': 'mėnesiai_mėnesių_mėnesius',
        'y' : 'metai_metų_metus',
        'yy': 'metai_metų_metus'
    };
    function translateSeconds(number, withoutSuffix, key, isFuture) {
        if (withoutSuffix) {
            return 'kelios sekundės';
        } else {
            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
        }
    }
    function translateSingular(number, withoutSuffix, key, isFuture) {
        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
    }
    function special(number) {
        return number % 10 === 0 || (number > 10 && number < 20);
    }
    function forms(key) {
        return units[key].split('_');
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        if (number === 1) {
            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
        } else if (withoutSuffix) {
            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
        } else {
            if (isFuture) {
                return result + forms(key)[1];
            } else {
                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
            }
        }
    }
    var lt = moment.defineLocale('lt', {
        months : {
            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
        },
        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
        weekdays : {
            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
            isFormat: /dddd HH:mm/
        },
        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY [m.] MMMM D [d.]',
            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
            l : 'YYYY-MM-DD',
            ll : 'YYYY [m.] MMMM D [d.]',
            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
        },
        calendar : {
            sameDay : '[Šiandien] LT',
            nextDay : '[Rytoj] LT',
            nextWeek : 'dddd LT',
            lastDay : '[Vakar] LT',
            lastWeek : '[Praėjusį] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'po %s',
            past : 'prieš %s',
            s : translateSeconds,
            ss : translate,
            m : translateSingular,
            mm : translate,
            h : translateSingular,
            hh : translate,
            d : translateSingular,
            dd : translate,
            M : translateSingular,
            MM : translate,
            y : translateSingular,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}-oji/,
        ordinal : function (number) {
            return number + '-oji';
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lt;

})));


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var units = {
        'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        'h': 'stundas_stundām_stunda_stundas'.split('_'),
        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
        'd': 'dienas_dienām_diena_dienas'.split('_'),
        'dd': 'dienas_dienām_diena_dienas'.split('_'),
        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        'y': 'gada_gadiem_gads_gadi'.split('_'),
        'yy': 'gada_gadiem_gads_gadi'.split('_')
    };
    /**
     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
     */
    function format(forms, number, withoutSuffix) {
        if (withoutSuffix) {
            // E.g. "21 minūte", "3 minūtes".
            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
        } else {
            // E.g. "21 minūtes" as in "pēc 21 minūtes".
            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
        }
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        return number + ' ' + format(units[key], number, withoutSuffix);
    }
    function relativeTimeWithSingular(number, withoutSuffix, key) {
        return format(units[key], number, withoutSuffix);
    }
    function relativeSeconds(number, withoutSuffix) {
        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
    }

    var lv = moment.defineLocale('lv', {
        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY.',
            LL : 'YYYY. [gada] D. MMMM',
            LLL : 'YYYY. [gada] D. MMMM, HH:mm',
            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
        },
        calendar : {
            sameDay : '[Šodien pulksten] LT',
            nextDay : '[Rīt pulksten] LT',
            nextWeek : 'dddd [pulksten] LT',
            lastDay : '[Vakar pulksten] LT',
            lastWeek : '[Pagājušā] dddd [pulksten] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'pēc %s',
            past : 'pirms %s',
            s : relativeSeconds,
            ss : relativeTimeWithPlural,
            m : relativeTimeWithSingular,
            mm : relativeTimeWithPlural,
            h : relativeTimeWithSingular,
            hh : relativeTimeWithPlural,
            d : relativeTimeWithSingular,
            dd : relativeTimeWithPlural,
            M : relativeTimeWithSingular,
            MM : relativeTimeWithPlural,
            y : relativeTimeWithSingular,
            yy : relativeTimeWithPlural
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lv;

})));


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['sekund', 'sekunda', 'sekundi'],
            m: ['jedan minut', 'jednog minuta'],
            mm: ['minut', 'minuta', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mjesec', 'mjeseca', 'mjeseci'],
            yy: ['godina', 'godine', 'godina']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var me = moment.defineLocale('me', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact : true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sjutra u] LT',

            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[juče u] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[prošle] [nedjelje] [u] LT',
                    '[prošlog] [ponedjeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srijede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'nekoliko sekundi',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'dan',
            dd     : translator.translate,
            M      : 'mjesec',
            MM     : translator.translate,
            y      : 'godinu',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return me;

})));


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mi = moment.defineLocale('mi', {
        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [i] HH:mm',
            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
        },
        calendar: {
            sameDay: '[i teie mahana, i] LT',
            nextDay: '[apopo i] LT',
            nextWeek: 'dddd [i] LT',
            lastDay: '[inanahi i] LT',
            lastWeek: 'dddd [whakamutunga i] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'i roto i %s',
            past: '%s i mua',
            s: 'te hēkona ruarua',
            ss: '%d hēkona',
            m: 'he meneti',
            mm: '%d meneti',
            h: 'te haora',
            hh: '%d haora',
            d: 'he ra',
            dd: '%d ra',
            M: 'he marama',
            MM: '%d marama',
            y: 'he tau',
            yy: '%d tau'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return mi;

})));


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mk = moment.defineLocale('mk', {
        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'D.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay : '[Денес во] LT',
            nextDay : '[Утре во] LT',
            nextWeek : '[Во] dddd [во] LT',
            lastDay : '[Вчера во] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[Изминатата] dddd [во] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[Изминатиот] dddd [во] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'после %s',
            past : 'пред %s',
            s : 'неколку секунди',
            ss : '%d секунди',
            m : 'минута',
            mm : '%d минути',
            h : 'час',
            hh : '%d часа',
            d : 'ден',
            dd : '%d дена',
            M : 'месец',
            MM : '%d месеци',
            y : 'година',
            yy : '%d години'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal : function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return mk;

})));


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ml = moment.defineLocale('ml', {
        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
        monthsParseExact : true,
        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm -നു',
            LTS : 'A h:mm:ss -നു',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm -നു',
            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
        },
        calendar : {
            sameDay : '[ഇന്ന്] LT',
            nextDay : '[നാളെ] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[ഇന്നലെ] LT',
            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s കഴിഞ്ഞ്',
            past : '%s മുൻപ്',
            s : 'അൽപ നിമിഷങ്ങൾ',
            ss : '%d സെക്കൻഡ്',
            m : 'ഒരു മിനിറ്റ്',
            mm : '%d മിനിറ്റ്',
            h : 'ഒരു മണിക്കൂർ',
            hh : '%d മണിക്കൂർ',
            d : 'ഒരു ദിവസം',
            dd : '%d ദിവസം',
            M : 'ഒരു മാസം',
            MM : '%d മാസം',
            y : 'ഒരു വർഷം',
            yy : '%d വർഷം'
        },
        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'രാത്രി' && hour >= 4) ||
                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
                    meridiem === 'വൈകുന്നേരം') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'രാത്രി';
            } else if (hour < 12) {
                return 'രാവിലെ';
            } else if (hour < 17) {
                return 'ഉച്ച കഴിഞ്ഞ്';
            } else if (hour < 20) {
                return 'വൈകുന്നേരം';
            } else {
                return 'രാത്രി';
            }
        }
    });

    return ml;

})));


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key, isFuture) {
        switch (key) {
            case 's':
                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';
            case 'ss':
                return number + (withoutSuffix ? ' секунд' : ' секундын');
            case 'm':
            case 'mm':
                return number + (withoutSuffix ? ' минут' : ' минутын');
            case 'h':
            case 'hh':
                return number + (withoutSuffix ? ' цаг' : ' цагийн');
            case 'd':
            case 'dd':
                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');
            case 'M':
            case 'MM':
                return number + (withoutSuffix ? ' сар' : ' сарын');
            case 'y':
            case 'yy':
                return number + (withoutSuffix ? ' жил' : ' жилийн');
            default:
                return number;
        }
    }

    var mn = moment.defineLocale('mn', {
        months : 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),
        monthsShort : '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),
        monthsParseExact : true,
        weekdays : 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
        weekdaysShort : 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
        weekdaysMin : 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY оны MMMMын D',
            LLL : 'YYYY оны MMMMын D HH:mm',
            LLLL : 'dddd, YYYY оны MMMMын D HH:mm'
        },
        meridiemParse: /ҮӨ|ҮХ/i,
        isPM : function (input) {
            return input === 'ҮХ';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ҮӨ';
            } else {
                return 'ҮХ';
            }
        },
        calendar : {
            sameDay : '[Өнөөдөр] LT',
            nextDay : '[Маргааш] LT',
            nextWeek : '[Ирэх] dddd LT',
            lastDay : '[Өчигдөр] LT',
            lastWeek : '[Өнгөрсөн] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s дараа',
            past : '%s өмнө',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + ' өдөр';
                default:
                    return number;
            }
        }
    });

    return mn;

})));


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    function relativeTimeMr(number, withoutSuffix, string, isFuture)
    {
        var output = '';
        if (withoutSuffix) {
            switch (string) {
                case 's': output = 'काही सेकंद'; break;
                case 'ss': output = '%d सेकंद'; break;
                case 'm': output = 'एक मिनिट'; break;
                case 'mm': output = '%d मिनिटे'; break;
                case 'h': output = 'एक तास'; break;
                case 'hh': output = '%d तास'; break;
                case 'd': output = 'एक दिवस'; break;
                case 'dd': output = '%d दिवस'; break;
                case 'M': output = 'एक महिना'; break;
                case 'MM': output = '%d महिने'; break;
                case 'y': output = 'एक वर्ष'; break;
                case 'yy': output = '%d वर्षे'; break;
            }
        }
        else {
            switch (string) {
                case 's': output = 'काही सेकंदां'; break;
                case 'ss': output = '%d सेकंदां'; break;
                case 'm': output = 'एका मिनिटा'; break;
                case 'mm': output = '%d मिनिटां'; break;
                case 'h': output = 'एका तासा'; break;
                case 'hh': output = '%d तासां'; break;
                case 'd': output = 'एका दिवसा'; break;
                case 'dd': output = '%d दिवसां'; break;
                case 'M': output = 'एका महिन्या'; break;
                case 'MM': output = '%d महिन्यां'; break;
                case 'y': output = 'एका वर्षा'; break;
                case 'yy': output = '%d वर्षां'; break;
            }
        }
        return output.replace(/%d/i, number);
    }

    var mr = moment.defineLocale('mr', {
        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
        monthsParseExact : true,
        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat : {
            LT : 'A h:mm वाजता',
            LTS : 'A h:mm:ss वाजता',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm वाजता',
            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[उद्या] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[काल] LT',
            lastWeek: '[मागील] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future: '%sमध्ये',
            past: '%sपूर्वी',
            s: relativeTimeMr,
            ss: relativeTimeMr,
            m: relativeTimeMr,
            mm: relativeTimeMr,
            h: relativeTimeMr,
            hh: relativeTimeMr,
            d: relativeTimeMr,
            dd: relativeTimeMr,
            M: relativeTimeMr,
            MM: relativeTimeMr,
            y: relativeTimeMr,
            yy: relativeTimeMr
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात्री') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सकाळी') {
                return hour;
            } else if (meridiem === 'दुपारी') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'सायंकाळी') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'रात्री';
            } else if (hour < 10) {
                return 'सकाळी';
            } else if (hour < 17) {
                return 'दुपारी';
            } else if (hour < 20) {
                return 'सायंकाळी';
            } else {
                return 'रात्री';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return mr;

})));


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var msMy = moment.defineLocale('ms-my', {
        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Esok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kelmarin pukul] LT',
            lastWeek : 'dddd [lepas pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lepas',
            s : 'beberapa saat',
            ss : '%d saat',
            m : 'seminit',
            mm : '%d minit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return msMy;

})));


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ms = moment.defineLocale('ms', {
        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Esok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kelmarin pukul] LT',
            lastWeek : 'dddd [lepas pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lepas',
            s : 'beberapa saat',
            ss : '%d saat',
            m : 'seminit',
            mm : '%d minit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return ms;

})));


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mt = moment.defineLocale('mt', {
        months : 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),
        monthsShort : 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
        weekdays : 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),
        weekdaysShort : 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
        weekdaysMin : 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Illum fil-]LT',
            nextDay : '[Għada fil-]LT',
            nextWeek : 'dddd [fil-]LT',
            lastDay : '[Il-bieraħ fil-]LT',
            lastWeek : 'dddd [li għadda] [fil-]LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'f’ %s',
            past : '%s ilu',
            s : 'ftit sekondi',
            ss : '%d sekondi',
            m : 'minuta',
            mm : '%d minuti',
            h : 'siegħa',
            hh : '%d siegħat',
            d : 'ġurnata',
            dd : '%d ġranet',
            M : 'xahar',
            MM : '%d xhur',
            y : 'sena',
            yy : '%d sni'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return mt;

})));


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '၁',
        '2': '၂',
        '3': '၃',
        '4': '၄',
        '5': '၅',
        '6': '၆',
        '7': '၇',
        '8': '၈',
        '9': '၉',
        '0': '၀'
    }, numberMap = {
        '၁': '1',
        '၂': '2',
        '၃': '3',
        '၄': '4',
        '၅': '5',
        '၆': '6',
        '၇': '7',
        '၈': '8',
        '၉': '9',
        '၀': '0'
    };

    var my = moment.defineLocale('my', {
        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[ယနေ.] LT [မှာ]',
            nextDay: '[မနက်ဖြန်] LT [မှာ]',
            nextWeek: 'dddd LT [မှာ]',
            lastDay: '[မနေ.က] LT [မှာ]',
            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'လာမည့် %s မှာ',
            past: 'လွန်ခဲ့သော %s က',
            s: 'စက္ကန်.အနည်းငယ်',
            ss : '%d စက္ကန့်',
            m: 'တစ်မိနစ်',
            mm: '%d မိနစ်',
            h: 'တစ်နာရီ',
            hh: '%d နာရီ',
            d: 'တစ်ရက်',
            dd: '%d ရက်',
            M: 'တစ်လ',
            MM: '%d လ',
            y: 'တစ်နှစ်',
            yy: '%d နှစ်'
        },
        preparse: function (string) {
            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return my;

})));


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var nb = moment.defineLocale('nb', {
        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
        monthsParseExact : true,
        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] HH:mm',
            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[forrige] dddd [kl.] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s siden',
            s : 'noen sekunder',
            ss : '%d sekunder',
            m : 'ett minutt',
            mm : '%d minutter',
            h : 'en time',
            hh : '%d timer',
            d : 'en dag',
            dd : '%d dager',
            M : 'en måned',
            MM : '%d måneder',
            y : 'ett år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nb;

})));


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    var ne = moment.defineLocale('ne', {
        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
        monthsParseExact : true,
        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'Aको h:mm बजे',
            LTS : 'Aको h:mm:ss बजे',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, Aको h:mm बजे',
            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'राति') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'बिहान') {
                return hour;
            } else if (meridiem === 'दिउँसो') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'साँझ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 3) {
                return 'राति';
            } else if (hour < 12) {
                return 'बिहान';
            } else if (hour < 16) {
                return 'दिउँसो';
            } else if (hour < 20) {
                return 'साँझ';
            } else {
                return 'राति';
            }
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[भोलि] LT',
            nextWeek : '[आउँदो] dddd[,] LT',
            lastDay : '[हिजो] LT',
            lastWeek : '[गएको] dddd[,] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%sमा',
            past : '%s अगाडि',
            s : 'केही क्षण',
            ss : '%d सेकेण्ड',
            m : 'एक मिनेट',
            mm : '%d मिनेट',
            h : 'एक घण्टा',
            hh : '%d घण्टा',
            d : 'एक दिन',
            dd : '%d दिन',
            M : 'एक महिना',
            MM : '%d महिना',
            y : 'एक बर्ष',
            yy : '%d बर्ष'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return ne;

})));


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
    var monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nlBe = moment.defineLocale('nl-be', {
        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'over %s',
            past : '%s geleden',
            s : 'een paar seconden',
            ss : '%d seconden',
            m : 'één minuut',
            mm : '%d minuten',
            h : 'één uur',
            hh : '%d uur',
            d : 'één dag',
            dd : '%d dagen',
            M : 'één maand',
            MM : '%d maanden',
            y : 'één jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nlBe;

})));


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
    var monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nl = moment.defineLocale('nl', {
        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'over %s',
            past : '%s geleden',
            s : 'een paar seconden',
            ss : '%d seconden',
            m : 'één minuut',
            mm : '%d minuten',
            h : 'één uur',
            hh : '%d uur',
            d : 'één dag',
            dd : '%d dagen',
            M : 'één maand',
            MM : '%d maanden',
            y : 'één jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nl;

})));


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var nn = moment.defineLocale('nn', {
        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] H:mm',
            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay: '[I dag klokka] LT',
            nextDay: '[I morgon klokka] LT',
            nextWeek: 'dddd [klokka] LT',
            lastDay: '[I går klokka] LT',
            lastWeek: '[Føregåande] dddd [klokka] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s sidan',
            s : 'nokre sekund',
            ss : '%d sekund',
            m : 'eit minutt',
            mm : '%d minutt',
            h : 'ein time',
            hh : '%d timar',
            d : 'ein dag',
            dd : '%d dagar',
            M : 'ein månad',
            MM : '%d månader',
            y : 'eit år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nn;

})));


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '੧',
        '2': '੨',
        '3': '੩',
        '4': '੪',
        '5': '੫',
        '6': '੬',
        '7': '੭',
        '8': '੮',
        '9': '੯',
        '0': '੦'
    },
    numberMap = {
        '੧': '1',
        '੨': '2',
        '੩': '3',
        '੪': '4',
        '੫': '5',
        '੬': '6',
        '੭': '7',
        '੮': '8',
        '੯': '9',
        '੦': '0'
    };

    var paIn = moment.defineLocale('pa-in', {
        // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.
        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm ਵਜੇ',
            LTS : 'A h:mm:ss ਵਜੇ',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
        },
        calendar : {
            sameDay : '[ਅਜ] LT',
            nextDay : '[ਕਲ] LT',
            nextWeek : '[ਅਗਲਾ] dddd, LT',
            lastDay : '[ਕਲ] LT',
            lastWeek : '[ਪਿਛਲੇ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ਵਿੱਚ',
            past : '%s ਪਿਛਲੇ',
            s : 'ਕੁਝ ਸਕਿੰਟ',
            ss : '%d ਸਕਿੰਟ',
            m : 'ਇਕ ਮਿੰਟ',
            mm : '%d ਮਿੰਟ',
            h : 'ਇੱਕ ਘੰਟਾ',
            hh : '%d ਘੰਟੇ',
            d : 'ਇੱਕ ਦਿਨ',
            dd : '%d ਦਿਨ',
            M : 'ਇੱਕ ਮਹੀਨਾ',
            MM : '%d ਮਹੀਨੇ',
            y : 'ਇੱਕ ਸਾਲ',
            yy : '%d ਸਾਲ'
        },
        preparse: function (string) {
            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ਰਾਤ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ਸਵੇਰ') {
                return hour;
            } else if (meridiem === 'ਦੁਪਹਿਰ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ਸ਼ਾਮ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ਰਾਤ';
            } else if (hour < 10) {
                return 'ਸਵੇਰ';
            } else if (hour < 17) {
                return 'ਦੁਪਹਿਰ';
            } else if (hour < 20) {
                return 'ਸ਼ਾਮ';
            } else {
                return 'ਰਾਤ';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return paIn;

})));


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
    function plural(n) {
        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
    }
    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                return result + (plural(number) ? 'sekundy' : 'sekund');
            case 'm':
                return withoutSuffix ? 'minuta' : 'minutę';
            case 'mm':
                return result + (plural(number) ? 'minuty' : 'minut');
            case 'h':
                return withoutSuffix  ? 'godzina'  : 'godzinę';
            case 'hh':
                return result + (plural(number) ? 'godziny' : 'godzin');
            case 'MM':
                return result + (plural(number) ? 'miesiące' : 'miesięcy');
            case 'yy':
                return result + (plural(number) ? 'lata' : 'lat');
        }
    }

    var pl = moment.defineLocale('pl', {
        months : function (momentToFormat, format) {
            if (!momentToFormat) {
                return monthsNominative;
            } else if (format === '') {
                // Hack: if format empty we know this is used to generate
                // RegExp by moment. Give then back both valid forms of months
                // in RegExp ready format.
                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
            } else if (/D MMMM/.test(format)) {
                return monthsSubjective[momentToFormat.month()];
            } else {
                return monthsNominative[momentToFormat.month()];
            }
        },
        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
        weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Dziś o] LT',
            nextDay: '[Jutro o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W niedzielę o] LT';

                    case 2:
                        return '[We wtorek o] LT';

                    case 3:
                        return '[W środę o] LT';

                    case 6:
                        return '[W sobotę o] LT';

                    default:
                        return '[W] dddd [o] LT';
                }
            },
            lastDay: '[Wczoraj o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W zeszłą niedzielę o] LT';
                    case 3:
                        return '[W zeszłą środę o] LT';
                    case 6:
                        return '[W zeszłą sobotę o] LT';
                    default:
                        return '[W zeszły] dddd [o] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : '%s temu',
            s : 'kilka sekund',
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : '1 dzień',
            dd : '%d dni',
            M : 'miesiąc',
            MM : translate,
            y : 'rok',
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return pl;

})));


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ptBr = moment.defineLocale('pt-br', {
        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
        },
        calendar : {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return (this.day() === 0 || this.day() === 6) ?
                    '[Último] dddd [às] LT' : // Saturday + Sunday
                    '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'em %s',
            past : 'há %s',
            s : 'poucos segundos',
            ss : '%d segundos',
            m : 'um minuto',
            mm : '%d minutos',
            h : 'uma hora',
            hh : '%d horas',
            d : 'um dia',
            dd : '%d dias',
            M : 'um mês',
            MM : '%d meses',
            y : 'um ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal : '%dº'
    });

    return ptBr;

})));


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var pt = moment.defineLocale('pt', {
        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY HH:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return (this.day() === 0 || this.day() === 6) ?
                    '[Último] dddd [às] LT' : // Saturday + Sunday
                    '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'em %s',
            past : 'há %s',
            s : 'segundos',
            ss : '%d segundos',
            m : 'um minuto',
            mm : '%d minutos',
            h : 'uma hora',
            hh : '%d horas',
            d : 'um dia',
            dd : '%d dias',
            M : 'um mês',
            MM : '%d meses',
            y : 'um ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return pt;

})));


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
                'ss': 'secunde',
                'mm': 'minute',
                'hh': 'ore',
                'dd': 'zile',
                'MM': 'luni',
                'yy': 'ani'
            },
            separator = ' ';
        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
            separator = ' de ';
        }
        return number + separator + format[key];
    }

    var ro = moment.defineLocale('ro', {
        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay: '[azi la] LT',
            nextDay: '[mâine la] LT',
            nextWeek: 'dddd [la] LT',
            lastDay: '[ieri la] LT',
            lastWeek: '[fosta] dddd [la] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'peste %s',
            past : '%s în urmă',
            s : 'câteva secunde',
            ss : relativeTimeWithPlural,
            m : 'un minut',
            mm : relativeTimeWithPlural,
            h : 'o oră',
            hh : relativeTimeWithPlural,
            d : 'o zi',
            dd : relativeTimeWithPlural,
            M : 'o lună',
            MM : relativeTimeWithPlural,
            y : 'un an',
            yy : relativeTimeWithPlural
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return ro;

})));


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
            'hh': 'час_часа_часов',
            'dd': 'день_дня_дней',
            'MM': 'месяц_месяца_месяцев',
            'yy': 'год_года_лет'
        };
        if (key === 'm') {
            return withoutSuffix ? 'минута' : 'минуту';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

    // http://new.gramota.ru/spravka/rules/139-prop : § 103
    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
    var ru = moment.defineLocale('ru', {
        months : {
            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
        },
        monthsShort : {
            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
        },
        weekdays : {
            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
        },
        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
        monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // копия предыдущего
        monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // полные названия с падежами
        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

        // Выражение, которое соотвествует только сокращённым формам
        monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY г.',
            LLL : 'D MMMM YYYY г., H:mm',
            LLLL : 'dddd, D MMMM YYYY г., H:mm'
        },
        calendar : {
            sameDay: '[Сегодня, в] LT',
            nextDay: '[Завтра, в] LT',
            lastDay: '[Вчера, в] LT',
            nextWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В следующее] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В следующий] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В следующую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            lastWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В прошлое] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В прошлый] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В прошлую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'через %s',
            past : '%s назад',
            s : 'несколько секунд',
            ss : relativeTimeWithPlural,
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : 'час',
            hh : relativeTimeWithPlural,
            d : 'день',
            dd : relativeTimeWithPlural,
            M : 'месяц',
            MM : relativeTimeWithPlural,
            y : 'год',
            yy : relativeTimeWithPlural
        },
        meridiemParse: /ночи|утра|дня|вечера/i,
        isPM : function (input) {
            return /^(дня|вечера)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночи';
            } else if (hour < 12) {
                return 'утра';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечера';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                case 'w':
                case 'W':
                    return number + '-я';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ru;

})));


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'جنوري',
        'فيبروري',
        'مارچ',
        'اپريل',
        'مئي',
        'جون',
        'جولاءِ',
        'آگسٽ',
        'سيپٽمبر',
        'آڪٽوبر',
        'نومبر',
        'ڊسمبر'
    ];
    var days = [
        'آچر',
        'سومر',
        'اڱارو',
        'اربع',
        'خميس',
        'جمع',
        'ڇنڇر'
    ];

    var sd = moment.defineLocale('sd', {
        months : months,
        monthsShort : months,
        weekdays : days,
        weekdaysShort : days,
        weekdaysMin : days,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd، D MMMM YYYY HH:mm'
        },
        meridiemParse: /صبح|شام/,
        isPM : function (input) {
            return 'شام' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar : {
            sameDay : '[اڄ] LT',
            nextDay : '[سڀاڻي] LT',
            nextWeek : 'dddd [اڳين هفتي تي] LT',
            lastDay : '[ڪالهه] LT',
            lastWeek : '[گزريل هفتي] dddd [تي] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s پوء',
            past : '%s اڳ',
            s : 'چند سيڪنڊ',
            ss : '%d سيڪنڊ',
            m : 'هڪ منٽ',
            mm : '%d منٽ',
            h : 'هڪ ڪلاڪ',
            hh : '%d ڪلاڪ',
            d : 'هڪ ڏينهن',
            dd : '%d ڏينهن',
            M : 'هڪ مهينو',
            MM : '%d مهينا',
            y : 'هڪ سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sd;

})));


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var se = moment.defineLocale('se', {
        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'MMMM D. [b.] YYYY',
            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
        },
        calendar : {
            sameDay: '[otne ti] LT',
            nextDay: '[ihttin ti] LT',
            nextWeek: 'dddd [ti] LT',
            lastDay: '[ikte ti] LT',
            lastWeek: '[ovddit] dddd [ti] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s geažes',
            past : 'maŋit %s',
            s : 'moadde sekunddat',
            ss: '%d sekunddat',
            m : 'okta minuhta',
            mm : '%d minuhtat',
            h : 'okta diimmu',
            hh : '%d diimmut',
            d : 'okta beaivi',
            dd : '%d beaivvit',
            M : 'okta mánnu',
            MM : '%d mánut',
            y : 'okta jahki',
            yy : '%d jagit'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return se;

})));


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    /*jshint -W100*/
    var si = moment.defineLocale('si', {
        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'a h:mm',
            LTS : 'a h:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY MMMM D',
            LLL : 'YYYY MMMM D, a h:mm',
            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
        },
        calendar : {
            sameDay : '[අද] LT[ට]',
            nextDay : '[හෙට] LT[ට]',
            nextWeek : 'dddd LT[ට]',
            lastDay : '[ඊයේ] LT[ට]',
            lastWeek : '[පසුගිය] dddd LT[ට]',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%sකින්',
            past : '%sකට පෙර',
            s : 'තත්පර කිහිපය',
            ss : 'තත්පර %d',
            m : 'මිනිත්තුව',
            mm : 'මිනිත්තු %d',
            h : 'පැය',
            hh : 'පැය %d',
            d : 'දිනය',
            dd : 'දින %d',
            M : 'මාසය',
            MM : 'මාස %d',
            y : 'වසර',
            yy : 'වසර %d'
        },
        dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
        ordinal : function (number) {
            return number + ' වැනි';
        },
        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
        isPM : function (input) {
            return input === 'ප.ව.' || input === 'පස් වරු';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'ප.ව.' : 'පස් වරු';
            } else {
                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
            }
        }
    });

    return si;

})));


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
    function plural(n) {
        return (n > 1) && (n < 5);
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':  // a few seconds / in a few seconds / a few seconds ago
                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekúnd');
                } else {
                    return result + 'sekundami';
                }
                break;
            case 'm':  // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minúty' : 'minút');
                } else {
                    return result + 'minútami';
                }
                break;
            case 'h':  // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodín');
                } else {
                    return result + 'hodinami';
                }
                break;
            case 'd':  // a day / in a day / a day ago
                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dni' : 'dní');
                } else {
                    return result + 'dňami';
                }
                break;
            case 'M':  // a month / in a month / a month ago
                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'mesiace' : 'mesiacov');
                } else {
                    return result + 'mesiacmi';
                }
                break;
            case 'y':  // a year / in a year / a year ago
                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'rokov');
                } else {
                    return result + 'rokmi';
                }
                break;
        }
    }

    var sk = moment.defineLocale('sk', {
        months : months,
        monthsShort : monthsShort,
        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
        longDateFormat : {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay: '[dnes o] LT',
            nextDay: '[zajtra o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [o] LT';
                    case 3:
                        return '[v stredu o] LT';
                    case 4:
                        return '[vo štvrtok o] LT';
                    case 5:
                        return '[v piatok o] LT';
                    case 6:
                        return '[v sobotu o] LT';
                }
            },
            lastDay: '[včera o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulú nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[minulý] dddd [o] LT';
                    case 3:
                        return '[minulú stredu o] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [o] LT';
                    case 6:
                        return '[minulú sobotu o] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : 'pred %s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sk;

})));


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
            case 'ss':
                if (number === 1) {
                    result += withoutSuffix ? 'sekundo' : 'sekundi';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
                } else {
                    result += 'sekund';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'ena minuta' : 'eno minuto';
            case 'mm':
                if (number === 1) {
                    result += withoutSuffix ? 'minuta' : 'minuto';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';
                } else {
                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'ena ura' : 'eno uro';
            case 'hh':
                if (number === 1) {
                    result += withoutSuffix ? 'ura' : 'uro';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'uri' : 'urama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'ure' : 'urami';
                } else {
                    result += withoutSuffix || isFuture ? 'ur' : 'urami';
                }
                return result;
            case 'd':
                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
            case 'dd':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
                } else {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
                }
                return result;
            case 'M':
                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
            case 'MM':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
                } else {
                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
                }
                return result;
            case 'y':
                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
            case 'yy':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'leto' : 'letom';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'leta' : 'leti';
                } else {
                    result += withoutSuffix || isFuture ? 'let' : 'leti';
                }
                return result;
        }
    }

    var sl = moment.defineLocale('sl', {
        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danes ob] LT',
            nextDay  : '[jutri ob] LT',

            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[v] [nedeljo] [ob] LT';
                    case 3:
                        return '[v] [sredo] [ob] LT';
                    case 6:
                        return '[v] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[v] dddd [ob] LT';
                }
            },
            lastDay  : '[včeraj ob] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[prejšnjo] [nedeljo] [ob] LT';
                    case 3:
                        return '[prejšnjo] [sredo] [ob] LT';
                    case 6:
                        return '[prejšnjo] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prejšnji] dddd [ob] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'čez %s',
            past   : 'pred %s',
            s      : processRelativeTime,
            ss     : processRelativeTime,
            m      : processRelativeTime,
            mm     : processRelativeTime,
            h      : processRelativeTime,
            hh     : processRelativeTime,
            d      : processRelativeTime,
            dd     : processRelativeTime,
            M      : processRelativeTime,
            MM     : processRelativeTime,
            y      : processRelativeTime,
            yy     : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return sl;

})));


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sq = moment.defineLocale('sq', {
        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
        weekdaysParseExact : true,
        meridiemParse: /PD|MD/,
        isPM: function (input) {
            return input.charAt(0) === 'M';
        },
        meridiem : function (hours, minutes, isLower) {
            return hours < 12 ? 'PD' : 'MD';
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Sot në] LT',
            nextDay : '[Nesër në] LT',
            nextWeek : 'dddd [në] LT',
            lastDay : '[Dje në] LT',
            lastWeek : 'dddd [e kaluar në] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'në %s',
            past : '%s më parë',
            s : 'disa sekonda',
            ss : '%d sekonda',
            m : 'një minutë',
            mm : '%d minuta',
            h : 'një orë',
            hh : '%d orë',
            d : 'një ditë',
            dd : '%d ditë',
            M : 'një muaj',
            MM : '%d muaj',
            y : 'një vit',
            yy : '%d vite'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sq;

})));


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['секунда', 'секунде', 'секунди'],
            m: ['један минут', 'једне минуте'],
            mm: ['минут', 'минуте', 'минута'],
            h: ['један сат', 'једног сата'],
            hh: ['сат', 'сата', 'сати'],
            dd: ['дан', 'дана', 'дана'],
            MM: ['месец', 'месеца', 'месеци'],
            yy: ['година', 'године', 'година']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var srCyrl = moment.defineLocale('sr-cyrl', {
        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
        monthsParseExact: true,
        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[данас у] LT',
            nextDay: '[сутра у] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[у] [недељу] [у] LT';
                    case 3:
                        return '[у] [среду] [у] LT';
                    case 6:
                        return '[у] [суботу] [у] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[у] dddd [у] LT';
                }
            },
            lastDay  : '[јуче у] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[прошле] [недеље] [у] LT',
                    '[прошлог] [понедељка] [у] LT',
                    '[прошлог] [уторка] [у] LT',
                    '[прошле] [среде] [у] LT',
                    '[прошлог] [четвртка] [у] LT',
                    '[прошлог] [петка] [у] LT',
                    '[прошле] [суботе] [у] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'за %s',
            past   : 'пре %s',
            s      : 'неколико секунди',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'дан',
            dd     : translator.translate,
            M      : 'месец',
            MM     : translator.translate,
            y      : 'годину',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return srCyrl;

})));


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['sekunda', 'sekunde', 'sekundi'],
            m: ['jedan minut', 'jedne minute'],
            mm: ['minut', 'minute', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mesec', 'meseca', 'meseci'],
            yy: ['godina', 'godine', 'godina']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var sr = moment.defineLocale('sr', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedelju] [u] LT';
                    case 3:
                        return '[u] [sredu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[juče u] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[prošle] [nedelje] [u] LT',
                    '[prošlog] [ponedeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'pre %s',
            s      : 'nekoliko sekundi',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'dan',
            dd     : translator.translate,
            M      : 'mesec',
            MM     : translator.translate,
            y      : 'godinu',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return sr;

})));


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ss = moment.defineLocale('ss', {
        months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Namuhla nga] LT',
            nextDay : '[Kusasa nga] LT',
            nextWeek : 'dddd [nga] LT',
            lastDay : '[Itolo nga] LT',
            lastWeek : 'dddd [leliphelile] [nga] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'nga %s',
            past : 'wenteka nga %s',
            s : 'emizuzwana lomcane',
            ss : '%d mzuzwana',
            m : 'umzuzu',
            mm : '%d emizuzu',
            h : 'lihora',
            hh : '%d emahora',
            d : 'lilanga',
            dd : '%d emalanga',
            M : 'inyanga',
            MM : '%d tinyanga',
            y : 'umnyaka',
            yy : '%d iminyaka'
        },
        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'ekuseni';
            } else if (hours < 15) {
                return 'emini';
            } else if (hours < 19) {
                return 'entsambama';
            } else {
                return 'ebusuku';
            }
        },
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ekuseni') {
                return hour;
            } else if (meridiem === 'emini') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
                if (hour === 0) {
                    return 0;
                }
                return hour + 12;
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : '%d',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ss;

})));


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sv = moment.defineLocale('sv', {
        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [kl.] HH:mm',
            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Idag] LT',
            nextDay: '[Imorgon] LT',
            lastDay: '[Igår] LT',
            nextWeek: '[På] dddd LT',
            lastWeek: '[I] dddd[s] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : 'för %s sedan',
            s : 'några sekunder',
            ss : '%d sekunder',
            m : 'en minut',
            mm : '%d minuter',
            h : 'en timme',
            hh : '%d timmar',
            d : 'en dag',
            dd : '%d dagar',
            M : 'en månad',
            MM : '%d månader',
            y : 'ett år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'e' :
                (b === 1) ? 'a' :
                (b === 2) ? 'a' :
                (b === 3) ? 'e' : 'e';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sv;

})));


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sw = moment.defineLocale('sw', {
        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[leo saa] LT',
            nextDay : '[kesho saa] LT',
            nextWeek : '[wiki ijayo] dddd [saat] LT',
            lastDay : '[jana] LT',
            lastWeek : '[wiki iliyopita] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s baadaye',
            past : 'tokea %s',
            s : 'hivi punde',
            ss : 'sekunde %d',
            m : 'dakika moja',
            mm : 'dakika %d',
            h : 'saa limoja',
            hh : 'masaa %d',
            d : 'siku moja',
            dd : 'masiku %d',
            M : 'mwezi mmoja',
            MM : 'miezi %d',
            y : 'mwaka mmoja',
            yy : 'miaka %d'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return sw;

})));


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '௧',
        '2': '௨',
        '3': '௩',
        '4': '௪',
        '5': '௫',
        '6': '௬',
        '7': '௭',
        '8': '௮',
        '9': '௯',
        '0': '௦'
    }, numberMap = {
        '௧': '1',
        '௨': '2',
        '௩': '3',
        '௪': '4',
        '௫': '5',
        '௬': '6',
        '௭': '7',
        '௮': '8',
        '௯': '9',
        '௦': '0'
    };

    var ta = moment.defineLocale('ta', {
        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, HH:mm',
            LLLL : 'dddd, D MMMM YYYY, HH:mm'
        },
        calendar : {
            sameDay : '[இன்று] LT',
            nextDay : '[நாளை] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[நேற்று] LT',
            lastWeek : '[கடந்த வாரம்] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s இல்',
            past : '%s முன்',
            s : 'ஒரு சில விநாடிகள்',
            ss : '%d விநாடிகள்',
            m : 'ஒரு நிமிடம்',
            mm : '%d நிமிடங்கள்',
            h : 'ஒரு மணி நேரம்',
            hh : '%d மணி நேரம்',
            d : 'ஒரு நாள்',
            dd : '%d நாட்கள்',
            M : 'ஒரு மாதம்',
            MM : '%d மாதங்கள்',
            y : 'ஒரு வருடம்',
            yy : '%d ஆண்டுகள்'
        },
        dayOfMonthOrdinalParse: /\d{1,2}வது/,
        ordinal : function (number) {
            return number + 'வது';
        },
        preparse: function (string) {
            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // refer http://ta.wikipedia.org/s/1er1
        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
        meridiem : function (hour, minute, isLower) {
            if (hour < 2) {
                return ' யாமம்';
            } else if (hour < 6) {
                return ' வைகறை';  // வைகறை
            } else if (hour < 10) {
                return ' காலை'; // காலை
            } else if (hour < 14) {
                return ' நண்பகல்'; // நண்பகல்
            } else if (hour < 18) {
                return ' எற்பாடு'; // எற்பாடு
            } else if (hour < 22) {
                return ' மாலை'; // மாலை
            } else {
                return ' யாமம்';
            }
        },
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'யாமம்') {
                return hour < 2 ? hour : hour + 12;
            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
                return hour;
            } else if (meridiem === 'நண்பகல்') {
                return hour >= 10 ? hour : hour + 12;
            } else {
                return hour + 12;
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return ta;

})));


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var te = moment.defineLocale('te', {
        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
        monthsParseExact : true,
        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[నేడు] LT',
            nextDay : '[రేపు] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[నిన్న] LT',
            lastWeek : '[గత] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s లో',
            past : '%s క్రితం',
            s : 'కొన్ని క్షణాలు',
            ss : '%d సెకన్లు',
            m : 'ఒక నిమిషం',
            mm : '%d నిమిషాలు',
            h : 'ఒక గంట',
            hh : '%d గంటలు',
            d : 'ఒక రోజు',
            dd : '%d రోజులు',
            M : 'ఒక నెల',
            MM : '%d నెలలు',
            y : 'ఒక సంవత్సరం',
            yy : '%d సంవత్సరాలు'
        },
        dayOfMonthOrdinalParse : /\d{1,2}వ/,
        ordinal : '%dవ',
        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'రాత్రి') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ఉదయం') {
                return hour;
            } else if (meridiem === 'మధ్యాహ్నం') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'సాయంత్రం') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'రాత్రి';
            } else if (hour < 10) {
                return 'ఉదయం';
            } else if (hour < 17) {
                return 'మధ్యాహ్నం';
            } else if (hour < 20) {
                return 'సాయంత్రం';
            } else {
                return 'రాత్రి';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return te;

})));


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tet = moment.defineLocale('tet', {
        months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),
        weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
        weekdaysMin : 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Ohin iha] LT',
            nextDay: '[Aban iha] LT',
            nextWeek: 'dddd [iha] LT',
            lastDay: '[Horiseik iha] LT',
            lastWeek: 'dddd [semana kotuk] [iha] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'iha %s',
            past : '%s liuba',
            s : 'minutu balun',
            ss : 'minutu %d',
            m : 'minutu ida',
            mm : 'minutu %d',
            h : 'oras ida',
            hh : 'oras %d',
            d : 'loron ida',
            dd : 'loron %d',
            M : 'fulan ida',
            MM : 'fulan %d',
            y : 'tinan ida',
            yy : 'tinan %d'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tet;

})));


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-ум',
        1: '-ум',
        2: '-юм',
        3: '-юм',
        4: '-ум',
        5: '-ум',
        6: '-ум',
        7: '-ум',
        8: '-ум',
        9: '-ум',
        10: '-ум',
        12: '-ум',
        13: '-ум',
        20: '-ум',
        30: '-юм',
        40: '-ум',
        50: '-ум',
        60: '-ум',
        70: '-ум',
        80: '-ум',
        90: '-ум',
        100: '-ум'
    };

    var tg = moment.defineLocale('tg', {
        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),
        weekdaysShort : 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
        weekdaysMin : 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Имрӯз соати] LT',
            nextDay : '[Пагоҳ соати] LT',
            lastDay : '[Дирӯз соати] LT',
            nextWeek : 'dddd[и] [ҳафтаи оянда соати] LT',
            lastWeek : 'dddd[и] [ҳафтаи гузашта соати] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'баъди %s',
            past : '%s пеш',
            s : 'якчанд сония',
            m : 'як дақиқа',
            mm : '%d дақиқа',
            h : 'як соат',
            hh : '%d соат',
            d : 'як рӯз',
            dd : '%d рӯз',
            M : 'як моҳ',
            MM : '%d моҳ',
            y : 'як сол',
            yy : '%d сол'
        },
        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'шаб') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'субҳ') {
                return hour;
            } else if (meridiem === 'рӯз') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'бегоҳ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'шаб';
            } else if (hour < 11) {
                return 'субҳ';
            } else if (hour < 16) {
                return 'рӯз';
            } else if (hour < 19) {
                return 'бегоҳ';
            } else {
                return 'шаб';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
        ordinal: function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1th is the first week of the year.
        }
    });

    return tg;

})));


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var th = moment.defineLocale('th', {
        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
        monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
        monthsParseExact: true,
        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY เวลา H:mm',
            LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
        },
        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
        isPM: function (input) {
            return input === 'หลังเที่ยง';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ก่อนเที่ยง';
            } else {
                return 'หลังเที่ยง';
            }
        },
        calendar : {
            sameDay : '[วันนี้ เวลา] LT',
            nextDay : '[พรุ่งนี้ เวลา] LT',
            nextWeek : 'dddd[หน้า เวลา] LT',
            lastDay : '[เมื่อวานนี้ เวลา] LT',
            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'อีก %s',
            past : '%sที่แล้ว',
            s : 'ไม่กี่วินาที',
            ss : '%d วินาที',
            m : '1 นาที',
            mm : '%d นาที',
            h : '1 ชั่วโมง',
            hh : '%d ชั่วโมง',
            d : '1 วัน',
            dd : '%d วัน',
            M : '1 เดือน',
            MM : '%d เดือน',
            y : '1 ปี',
            yy : '%d ปี'
        }
    });

    return th;

})));


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tlPh = moment.defineLocale('tl-ph', {
        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'MM/D/YYYY',
            LL : 'MMMM D, YYYY',
            LLL : 'MMMM D, YYYY HH:mm',
            LLLL : 'dddd, MMMM DD, YYYY HH:mm'
        },
        calendar : {
            sameDay: 'LT [ngayong araw]',
            nextDay: '[Bukas ng] LT',
            nextWeek: 'LT [sa susunod na] dddd',
            lastDay: 'LT [kahapon]',
            lastWeek: 'LT [noong nakaraang] dddd',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'sa loob ng %s',
            past : '%s ang nakalipas',
            s : 'ilang segundo',
            ss : '%d segundo',
            m : 'isang minuto',
            mm : '%d minuto',
            h : 'isang oras',
            hh : '%d oras',
            d : 'isang araw',
            dd : '%d araw',
            M : 'isang buwan',
            MM : '%d buwan',
            y : 'isang taon',
            yy : '%d taon'
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : function (number) {
            return number;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tlPh;

})));


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

    function translateFuture(output) {
        var time = output;
        time = (output.indexOf('jaj') !== -1) ?
        time.slice(0, -3) + 'leS' :
        (output.indexOf('jar') !== -1) ?
        time.slice(0, -3) + 'waQ' :
        (output.indexOf('DIS') !== -1) ?
        time.slice(0, -3) + 'nem' :
        time + ' pIq';
        return time;
    }

    function translatePast(output) {
        var time = output;
        time = (output.indexOf('jaj') !== -1) ?
        time.slice(0, -3) + 'Hu’' :
        (output.indexOf('jar') !== -1) ?
        time.slice(0, -3) + 'wen' :
        (output.indexOf('DIS') !== -1) ?
        time.slice(0, -3) + 'ben' :
        time + ' ret';
        return time;
    }

    function translate(number, withoutSuffix, string, isFuture) {
        var numberNoun = numberAsNoun(number);
        switch (string) {
            case 'ss':
                return numberNoun + ' lup';
            case 'mm':
                return numberNoun + ' tup';
            case 'hh':
                return numberNoun + ' rep';
            case 'dd':
                return numberNoun + ' jaj';
            case 'MM':
                return numberNoun + ' jar';
            case 'yy':
                return numberNoun + ' DIS';
        }
    }

    function numberAsNoun(number) {
        var hundred = Math.floor((number % 1000) / 100),
        ten = Math.floor((number % 100) / 10),
        one = number % 10,
        word = '';
        if (hundred > 0) {
            word += numbersNouns[hundred] + 'vatlh';
        }
        if (ten > 0) {
            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
        }
        if (one > 0) {
            word += ((word !== '') ? ' ' : '') + numbersNouns[one];
        }
        return (word === '') ? 'pagh' : word;
    }

    var tlh = moment.defineLocale('tlh', {
        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
        monthsParseExact : true,
        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[DaHjaj] LT',
            nextDay: '[wa’leS] LT',
            nextWeek: 'LLL',
            lastDay: '[wa’Hu’] LT',
            lastWeek: 'LLL',
            sameElse: 'L'
        },
        relativeTime : {
            future : translateFuture,
            past : translatePast,
            s : 'puS lup',
            ss : translate,
            m : 'wa’ tup',
            mm : translate,
            h : 'wa’ rep',
            hh : translate,
            d : 'wa’ jaj',
            dd : translate,
            M : 'wa’ jar',
            MM : translate,
            y : 'wa’ DIS',
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tlh;

})));


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {


;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    var suffixes = {
        1: '\'inci',
        5: '\'inci',
        8: '\'inci',
        70: '\'inci',
        80: '\'inci',
        2: '\'nci',
        7: '\'nci',
        20: '\'nci',
        50: '\'nci',
        3: '\'üncü',
        4: '\'üncü',
        100: '\'üncü',
        6: '\'ncı',
        9: '\'uncu',
        10: '\'uncu',
        30: '\'uncu',
        60: '\'ıncı',
        90: '\'ıncı'
    };

    var tr = moment.defineLocale('tr', {
        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[bugün saat] LT',
            nextDay : '[yarın saat] LT',
            nextWeek : '[gelecek] dddd [saat] LT',
            lastDay : '[dün] LT',
            lastWeek : '[geçen] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s sonra',
            past : '%s önce',
            s : 'birkaç saniye',
            ss : '%d saniye',
            m : 'bir dakika',
            mm : '%d dakika',
            h : 'bir saat',
            hh : '%d saat',
            d : 'bir gün',
            dd : '%d gün',
            M : 'bir ay',
            MM : '%d ay',
            y : 'bir yıl',
            yy : '%d yıl'
        },
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'Do':
                case 'DD':
                    return number;
                default:
                    if (number === 0) {  // special case for zero
                        return number + '\'ıncı';
                    }
                    var a = number % 10,
                        b = number % 100 - a,
                        c = number >= 100 ? 100 : null;
                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return tr;

})));


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
    // This is currently too difficult (maybe even impossible) to add.
    var tzl = moment.defineLocale('tzl', {
        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM [dallas] YYYY',
            LLL : 'D. MMMM [dallas] YYYY HH.mm',
            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
        },
        meridiemParse: /d\'o|d\'a/i,
        isPM : function (input) {
            return 'd\'o' === input.toLowerCase();
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'd\'o' : 'D\'O';
            } else {
                return isLower ? 'd\'a' : 'D\'A';
            }
        },
        calendar : {
            sameDay : '[oxhi à] LT',
            nextDay : '[demà à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[ieiri à] LT',
            lastWeek : '[sür el] dddd [lasteu à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'osprei %s',
            past : 'ja%s',
            s : processRelativeTime,
            ss : processRelativeTime,
            m : processRelativeTime,
            mm : processRelativeTime,
            h : processRelativeTime,
            hh : processRelativeTime,
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's': ['viensas secunds', '\'iensas secunds'],
            'ss': [number + ' secunds', '' + number + ' secunds'],
            'm': ['\'n míut', '\'iens míut'],
            'mm': [number + ' míuts', '' + number + ' míuts'],
            'h': ['\'n þora', '\'iensa þora'],
            'hh': [number + ' þoras', '' + number + ' þoras'],
            'd': ['\'n ziua', '\'iensa ziua'],
            'dd': [number + ' ziuas', '' + number + ' ziuas'],
            'M': ['\'n mes', '\'iens mes'],
            'MM': [number + ' mesen', '' + number + ' mesen'],
            'y': ['\'n ar', '\'iens ar'],
            'yy': [number + ' ars', '' + number + ' ars']
        };
        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
    }

    return tzl;

})));


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tzmLatn = moment.defineLocale('tzm-latn', {
        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[asdkh g] LT',
            nextDay: '[aska g] LT',
            nextWeek: 'dddd [g] LT',
            lastDay: '[assant g] LT',
            lastWeek: 'dddd [g] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'dadkh s yan %s',
            past : 'yan %s',
            s : 'imik',
            ss : '%d imik',
            m : 'minuḍ',
            mm : '%d minuḍ',
            h : 'saɛa',
            hh : '%d tassaɛin',
            d : 'ass',
            dd : '%d ossan',
            M : 'ayowr',
            MM : '%d iyyirn',
            y : 'asgas',
            yy : '%d isgasn'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return tzmLatn;

})));


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tzm = moment.defineLocale('tzm', {
        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
            nextWeek: 'dddd [ⴴ] LT',
            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
            lastWeek: 'dddd [ⴴ] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
            past : 'ⵢⴰⵏ %s',
            s : 'ⵉⵎⵉⴽ',
            ss : '%d ⵉⵎⵉⴽ',
            m : 'ⵎⵉⵏⵓⴺ',
            mm : '%d ⵎⵉⵏⵓⴺ',
            h : 'ⵙⴰⵄⴰ',
            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
            d : 'ⴰⵙⵙ',
            dd : '%d oⵙⵙⴰⵏ',
            M : 'ⴰⵢoⵓⵔ',
            MM : '%d ⵉⵢⵢⵉⵔⵏ',
            y : 'ⴰⵙⴳⴰⵙ',
            yy : '%d ⵉⵙⴳⴰⵙⵏ'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return tzm;

})));


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js language configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ugCn = moment.defineLocale('ug-cn', {
        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
            '_'
        ),
        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
            '_'
        ),
        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(
            '_'
        ),
        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'
        },
        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (
                meridiem === 'يېرىم كېچە' ||
                meridiem === 'سەھەر' ||
                meridiem === 'چۈشتىن بۇرۇن'
            ) {
                return hour;
            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {
                return hour + 12;
            } else {
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return 'يېرىم كېچە';
            } else if (hm < 900) {
                return 'سەھەر';
            } else if (hm < 1130) {
                return 'چۈشتىن بۇرۇن';
            } else if (hm < 1230) {
                return 'چۈش';
            } else if (hm < 1800) {
                return 'چۈشتىن كېيىن';
            } else {
                return 'كەچ';
            }
        },
        calendar: {
            sameDay: '[بۈگۈن سائەت] LT',
            nextDay: '[ئەتە سائەت] LT',
            nextWeek: '[كېلەركى] dddd [سائەت] LT',
            lastDay: '[تۆنۈگۈن] LT',
            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s كېيىن',
            past: '%s بۇرۇن',
            s: 'نەچچە سېكونت',
            ss: '%d سېكونت',
            m: 'بىر مىنۇت',
            mm: '%d مىنۇت',
            h: 'بىر سائەت',
            hh: '%d سائەت',
            d: 'بىر كۈن',
            dd: '%d كۈن',
            M: 'بىر ئاي',
            MM: '%d ئاي',
            y: 'بىر يىل',
            yy: '%d يىل'
        },

        dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '-كۈنى';
                case 'w':
                case 'W':
                    return number + '-ھەپتە';
                default:
                    return number;
            }
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
        }
    });

    return ugCn;

})));


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
            'dd': 'день_дні_днів',
            'MM': 'місяць_місяці_місяців',
            'yy': 'рік_роки_років'
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвилина' : 'хвилину';
        }
        else if (key === 'h') {
            return withoutSuffix ? 'година' : 'годину';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    function weekdaysCaseReplace(m, format) {
        var weekdays = {
            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
        };

        if (m === true) {
            return weekdays['nominative'].slice(1, 7).concat(weekdays['nominative'].slice(0, 1));
        }
        if (!m) {
            return weekdays['nominative'];
        }

        var nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
            'accusative' :
            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
                'genitive' :
                'nominative');
        return weekdays[nounCase][m.day()];
    }
    function processHoursFunction(str) {
        return function () {
            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
        };
    }

    var uk = moment.defineLocale('uk', {
        months : {
            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
        },
        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
        weekdays : weekdaysCaseReplace,
        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY р.',
            LLL : 'D MMMM YYYY р., HH:mm',
            LLLL : 'dddd, D MMMM YYYY р., HH:mm'
        },
        calendar : {
            sameDay: processHoursFunction('[Сьогодні '),
            nextDay: processHoursFunction('[Завтра '),
            lastDay: processHoursFunction('[Вчора '),
            nextWeek: processHoursFunction('[У] dddd ['),
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return processHoursFunction('[Минулої] dddd [').call(this);
                    case 1:
                    case 2:
                    case 4:
                        return processHoursFunction('[Минулого] dddd [').call(this);
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'за %s',
            past : '%s тому',
            s : 'декілька секунд',
            ss : relativeTimeWithPlural,
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : 'годину',
            hh : relativeTimeWithPlural,
            d : 'день',
            dd : relativeTimeWithPlural,
            M : 'місяць',
            MM : relativeTimeWithPlural,
            y : 'рік',
            yy : relativeTimeWithPlural
        },
        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
        meridiemParse: /ночі|ранку|дня|вечора/,
        isPM: function (input) {
            return /^(дня|вечора)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночі';
            } else if (hour < 12) {
                return 'ранку';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечора';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return uk;

})));


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'جنوری',
        'فروری',
        'مارچ',
        'اپریل',
        'مئی',
        'جون',
        'جولائی',
        'اگست',
        'ستمبر',
        'اکتوبر',
        'نومبر',
        'دسمبر'
    ];
    var days = [
        'اتوار',
        'پیر',
        'منگل',
        'بدھ',
        'جمعرات',
        'جمعہ',
        'ہفتہ'
    ];

    var ur = moment.defineLocale('ur', {
        months : months,
        monthsShort : months,
        weekdays : days,
        weekdaysShort : days,
        weekdaysMin : days,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd، D MMMM YYYY HH:mm'
        },
        meridiemParse: /صبح|شام/,
        isPM : function (input) {
            return 'شام' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar : {
            sameDay : '[آج بوقت] LT',
            nextDay : '[کل بوقت] LT',
            nextWeek : 'dddd [بوقت] LT',
            lastDay : '[گذشتہ روز بوقت] LT',
            lastWeek : '[گذشتہ] dddd [بوقت] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s بعد',
            past : '%s قبل',
            s : 'چند سیکنڈ',
            ss : '%d سیکنڈ',
            m : 'ایک منٹ',
            mm : '%d منٹ',
            h : 'ایک گھنٹہ',
            hh : '%d گھنٹے',
            d : 'ایک دن',
            dd : '%d دن',
            M : 'ایک ماہ',
            MM : '%d ماہ',
            y : 'ایک سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ur;

})));


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var uzLatn = moment.defineLocale('uz-latn', {
        months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
        monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
        weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
        weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
        weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'D MMMM YYYY, dddd HH:mm'
        },
        calendar : {
            sameDay : '[Bugun soat] LT [da]',
            nextDay : '[Ertaga] LT [da]',
            nextWeek : 'dddd [kuni soat] LT [da]',
            lastDay : '[Kecha soat] LT [da]',
            lastWeek : '[O\'tgan] dddd [kuni soat] LT [da]',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'Yaqin %s ichida',
            past : 'Bir necha %s oldin',
            s : 'soniya',
            ss : '%d soniya',
            m : 'bir daqiqa',
            mm : '%d daqiqa',
            h : 'bir soat',
            hh : '%d soat',
            d : 'bir kun',
            dd : '%d kun',
            M : 'bir oy',
            MM : '%d oy',
            y : 'bir yil',
            yy : '%d yil'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return uzLatn;

})));


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var uz = moment.defineLocale('uz', {
        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'D MMMM YYYY, dddd HH:mm'
        },
        calendar : {
            sameDay : '[Бугун соат] LT [да]',
            nextDay : '[Эртага] LT [да]',
            nextWeek : 'dddd [куни соат] LT [да]',
            lastDay : '[Кеча соат] LT [да]',
            lastWeek : '[Утган] dddd [куни соат] LT [да]',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'Якин %s ичида',
            past : 'Бир неча %s олдин',
            s : 'фурсат',
            ss : '%d фурсат',
            m : 'бир дакика',
            mm : '%d дакика',
            h : 'бир соат',
            hh : '%d соат',
            d : 'бир кун',
            dd : '%d кун',
            M : 'бир ой',
            MM : '%d ой',
            y : 'бир йил',
            yy : '%d йил'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return uz;

})));


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var vi = moment.defineLocale('vi', {
        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
        monthsParseExact : true,
        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysParseExact : true,
        meridiemParse: /sa|ch/i,
        isPM : function (input) {
            return /^ch$/i.test(input);
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'sa' : 'SA';
            } else {
                return isLower ? 'ch' : 'CH';
            }
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM [năm] YYYY',
            LLL : 'D MMMM [năm] YYYY HH:mm',
            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
            l : 'DD/M/YYYY',
            ll : 'D MMM YYYY',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd, D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Hôm nay lúc] LT',
            nextDay: '[Ngày mai lúc] LT',
            nextWeek: 'dddd [tuần tới lúc] LT',
            lastDay: '[Hôm qua lúc] LT',
            lastWeek: 'dddd [tuần rồi lúc] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s tới',
            past : '%s trước',
            s : 'vài giây',
            ss : '%d giây' ,
            m : 'một phút',
            mm : '%d phút',
            h : 'một giờ',
            hh : '%d giờ',
            d : 'một ngày',
            dd : '%d ngày',
            M : 'một tháng',
            MM : '%d tháng',
            y : 'một năm',
            yy : '%d năm'
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : function (number) {
            return number;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return vi;

})));


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var xPseudo = moment.defineLocale('x-pseudo', {
        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
        monthsParseExact : true,
        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[T~ódá~ý át] LT',
            nextDay : '[T~ómó~rró~w át] LT',
            nextWeek : 'dddd [át] LT',
            lastDay : '[Ý~ést~érdá~ý át] LT',
            lastWeek : '[L~ást] dddd [át] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'í~ñ %s',
            past : '%s á~gó',
            s : 'á ~féw ~sécó~ñds',
            ss : '%d s~écóñ~ds',
            m : 'á ~míñ~úté',
            mm : '%d m~íñú~tés',
            h : 'á~ñ hó~úr',
            hh : '%d h~óúrs',
            d : 'á ~dáý',
            dd : '%d d~áýs',
            M : 'á ~móñ~th',
            MM : '%d m~óñt~hs',
            y : 'á ~ýéár',
            yy : '%d ý~éárs'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return xPseudo;

})));


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var yo = moment.defineLocale('yo', {
        months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
        monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
        weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
        weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
        weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Ònì ni] LT',
            nextDay : '[Ọ̀la ni] LT',
            nextWeek : 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
            lastDay : '[Àna ni] LT',
            lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ní %s',
            past : '%s kọjá',
            s : 'ìsẹjú aayá die',
            ss :'aayá %d',
            m : 'ìsẹjú kan',
            mm : 'ìsẹjú %d',
            h : 'wákati kan',
            hh : 'wákati %d',
            d : 'ọjọ́ kan',
            dd : 'ọjọ́ %d',
            M : 'osù kan',
            MM : 'osù %d',
            y : 'ọdún kan',
            yy : 'ọdún %d'
        },
        dayOfMonthOrdinalParse : /ọjọ́\s\d{1,2}/,
        ordinal : 'ọjọ́ %d',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return yo;

})));


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhCn = moment.defineLocale('zh-cn', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日Ah点mm分',
            LLLL : 'YYYY年M月D日ddddAh点mm分',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' ||
                    meridiem === '上午') {
                return hour;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            } else {
                // '中午'
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天]LT',
            nextDay : '[明天]LT',
            nextWeek : '[下]ddddLT',
            lastDay : '[昨天]LT',
            lastWeek : '[上]ddddLT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '周';
                default:
                    return number;
            }
        },
        relativeTime : {
            future : '%s内',
            past : '%s前',
            s : '几秒',
            ss : '%d 秒',
            m : '1 分钟',
            mm : '%d 分钟',
            h : '1 小时',
            hh : '%d 小时',
            d : '1 天',
            dd : '%d 天',
            M : '1 个月',
            MM : '%d 个月',
            y : '1 年',
            yy : '%d 年'
        },
        week : {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return zhCn;

})));


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhHk = moment.defineLocale('zh-hk', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日dddd HH:mm',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天]LT',
            nextDay : '[明天]LT',
            nextWeek : '[下]ddddLT',
            lastDay : '[昨天]LT',
            lastWeek : '[上]ddddLT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd' :
                case 'D' :
                case 'DDD' :
                    return number + '日';
                case 'M' :
                    return number + '月';
                case 'w' :
                case 'W' :
                    return number + '週';
                default :
                    return number;
            }
        },
        relativeTime : {
            future : '%s內',
            past : '%s前',
            s : '幾秒',
            ss : '%d 秒',
            m : '1 分鐘',
            mm : '%d 分鐘',
            h : '1 小時',
            hh : '%d 小時',
            d : '1 天',
            dd : '%d 天',
            M : '1 個月',
            MM : '%d 個月',
            y : '1 年',
            yy : '%d 年'
        }
    });

    return zhHk;

})));


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhTw = moment.defineLocale('zh-tw', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日dddd HH:mm',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天] LT',
            nextDay : '[明天] LT',
            nextWeek : '[下]dddd LT',
            lastDay : '[昨天] LT',
            lastWeek : '[上]dddd LT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd' :
                case 'D' :
                case 'DDD' :
                    return number + '日';
                case 'M' :
                    return number + '月';
                case 'w' :
                case 'W' :
                    return number + '週';
                default :
                    return number;
            }
        },
        relativeTime : {
            future : '%s內',
            past : '%s前',
            s : '幾秒',
            ss : '%d 秒',
            m : '1 分鐘',
            mm : '%d 分鐘',
            h : '1 小時',
            hh : '%d 小時',
            d : '1 天',
            dd : '%d 天',
            M : '1 個月',
            MM : '%d 個月',
            y : '1 年',
            yy : '%d 年'
        }
    });

    return zhTw;

})));


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(8), __webpack_require__(202), __webpack_require__(200), __webpack_require__(5), __webpack_require__(6), __webpack_require__(11), __webpack_require__(12), __webpack_require__(218), __webpack_require__(13), __webpack_require__(220), __webpack_require__(219), __webpack_require__(217), __webpack_require__(10), __webpack_require__(213), __webpack_require__(4), __webpack_require__(2), __webpack_require__(203), __webpack_require__(205), __webpack_require__(204), __webpack_require__(207), __webpack_require__(206), __webpack_require__(208), __webpack_require__(209), __webpack_require__(210), __webpack_require__(212), __webpack_require__(211), __webpack_require__(201), __webpack_require__(199), __webpack_require__(221), __webpack_require__(216), __webpack_require__(215), __webpack_require__(214));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./x64-core", "./lib-typedarrays", "./enc-utf16", "./enc-base64", "./md5", "./sha1", "./sha256", "./sha224", "./sha512", "./sha384", "./sha3", "./ripemd160", "./hmac", "./pbkdf2", "./evpkdf", "./cipher-core", "./mode-cfb", "./mode-ctr", "./mode-ctr-gladman", "./mode-ofb", "./mode-ecb", "./pad-ansix923", "./pad-iso10126", "./pad-iso97971", "./pad-zeropadding", "./pad-nopadding", "./format-hex", "./aes", "./tripledes", "./rc4", "./rabbit", "./rabbit-legacy"], factory);
	}
	else {
		// Global (browser)
		root.CryptoJS = factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	return CryptoJS;

}));

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

var moment = module.exports = __webpack_require__(223);
moment.tz.load(__webpack_require__(222));


/***/ }),
/* 143 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
class Core {

  constructor() {}

  /**
     * With the new ES6 Dist Lib this file is referenced as external script
     * here the default 'production style' exception handling is defined
     */
  handleExceptionNative (e) {
    console.warn("Exception: ", e);

    if (window.parent) {
      window.parent.com.fc.JavaScriptGenerator.handleExceptionNative(e);
    }
  }

  reset () {
    let thisObject = this;
    Object.keys(thisObject).forEach( function(key) {
      if ((typeof thisObject[key].reset) === "function") thisObject[key].reset();
      //console.log('type of:',typeof obj.reset);
    });
  }
}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (Core);

/***/ }),
/* 144 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

class AnimationObject {

  constructor() {}

  animationMove(id, dX, dY, duration) {
    var anim = {};
    anim.id = id;
    anim.type = "move";
    anim.dX = dX;
    anim.dY = dY;
    anim.duration = duration;
    return anim;
  }

  animationRotate(id, angle, duration) {
    var anim = {};
    anim.id = id;
    anim.type = "rotate";
    anim.angle = angle;
    anim.duration = duration;
    return anim;
  }

  animationScale(id, dX, dY, duration) {
    var anim = {};
    anim.id = id;
    anim.type = "scale";
    anim.dX = dX;
    anim.dY = dY;
    anim.duration = duration;
    return anim;
  }

  animationFade(id, alpha, duration) {
    var anim = {};
    anim.id = id;
    anim.type = "fade";
    anim.alpha = alpha;
    anim.duration = duration;
    return anim;
  }
}

/* harmony default export */ __webpack_exports__["a"] = (AnimationObject);



/***/ }),
/* 145 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
class ApplicationObject {

  constructor() {
    this.permissionResponseCallback = null;
  }

  configure(permissionResponseCallback) {
    this.permissionResponseCallback = permissionResponseCallback;
  }

  bringToForeground() {
    /*hs: not implementing this for now
    window.blur();
    setTimeout(window.focus, 0);
    */
  }

  sendToBackground() {
    /* hs: not implementing this for now.
    window.blur();
    */
  }

  getAppName() {
    return window.document.title;
  }

  quitApp() {
    window.close();
  }

  registerEvent(event, callback) {
  	switch(event) {
  		case 'start':
         console.log("Registering Started Event");
         $(window).ready(function() {
          if( callback != undefined ) {
            console.log("Application Started Event");
            callback();
          }
        });
  			break;
  		case 'in_background':
  			console.log("Registering background event");
        $(window).blur(function() {
           console.log("Application is in background");
           if( callback != undefined ) {
              callback();
           }
        });
        break;
  		case 'in_foreground':
        console.log("Registering foreground event");
        $(window).focus(function() {
           console.log("Application is in foreground");
           if( callback != undefined ) {
              callback();
           }
        });
  			break;
  		case 'back_button_press':
  			console.log("Registering back button press event");
        if (window.history && window.history.pushState) {
            window.history.pushState('forward', null, './#forward');
            $(window).on('popstate', function() {
              window.history.back();
              console.log("Back button event triggered");
              callback();
            });

        }
  			break;
  	}
  }

  requestPermissions() {
    //hs: in simulation we always return true for now.
    if(this.permissionResponseCallback!=null) {
      this.permissionResponseCallback(true);
    }
  }

  hasPermissionsBeenGranted() {
    return true;
  }
}

/* harmony default export */ __webpack_exports__["a"] = (ApplicationObject);

/***/ }),
/* 146 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Audio Library Module
*/

class AudioLibraryObject {

    constructor() {
        this.currAudio = null;
    }

    createAudioFromResource (url) {
        console.log (url);
        let audio = document.createElement("AUDIO");
        let source = document.createElement("source");
        audio.appendChild(source);
        audio.crossOrigin = 'anonymous';
        source.src = url;
        return audio;
    }

    createAudioFromUrl (url, successCallBack, failureCallBack) {

        let audio = document.createElement("AUDIO");
        let source = document.createElement("source");
        audio.appendChild(source);
        audio.crossOrigin = 'anonymous';
        source.src = url;
        audio.onloadstart = (e) => {
            successCallBack (audio);
        };

        audio.onerror = (e) => {
          console.log('createAudioFromUrl, load error', e);
          failureCallBack(e);
        }
    }

    getDuration (audio) {
        return audio.duration;
    }

    playAudio (audio, successCallBack) {
        audio.play();
        this.currAudio = audio;
        audio.onended = function(e) {
            successCallBack(e);
        };
    }

    playAudioFrom (audio,position,successCallBack) {
        audio.currentTime = position;
        audio.play();
        this.currAudio = audio;
        audio.onended = function(e) {
            successCallBack(e);
        };
    }

    play (audio) {
        try {
            this.currAudio.play();
        } catch (e) {
            console.log (e);
        } 
    }

    pause (audio) {
        try {
            this.currAudio.pause();
        } catch (e) {
            console.log (e);
        } 
    }

    stop (audio) {
         try {
            this.currAudio.pause();
            this.currAudio.currentTime = 0;
        } catch (e) {
            console.log (e);
        } 
        
    }


}

/* harmony default export */ __webpack_exports__["a"] = (AudioLibraryObject);

/***/ }),
/* 147 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ES6 imports

class BluetoothObject {

  constructor() {
    this.devices = {};
  }

  configure(scansuccesscallback, scanfailcallback, 
    devicedisconnectcallback, characteristicchangecallback) {

    this.scansuccesscallback = scansuccesscallback;
    this.scanfailcallback = scanfailcallback;
    this.devicedisconnectcallback = devicedisconnectcallback;
    this.characteristicchangecallback = characteristicchangecallback;
  }

  scanStart(timeout) {
    let parent = this;
    return navigator.bluetooth.requestDevice({filters:[{services:[ "heart_rate" ]}]})
      .then(device => {
        parent.devices[device.id] = {};
        parent.devices[device.id].type = "heart_rate";
        parent.devices[device.id].bledevice = device;
        parent.devices[device.id].services = new Map();
        parent.devices[device.id].characteristics = new Map();
        parent.devices[device.id].formatMap = new Map();
        parent.scansuccesscallback && parent.scansuccesscallback(device.id);
      });
  }

  scanStop() {
  
  }

  getDeviceNameForAddress(deviceAddress) {
    if( this.devices[deviceAddress] != undefined ) {
      return this.devices[deviceAddress].bledevice.name;
    }
    else {
      return "";
    }
  }

  connectToDevice(deviceAddress, successcallback) {
    let device = this.devices[deviceAddress].bledevice;
    let parent = this;
    if( !device ) {
      failurecallback("Device not found!");
      return;
    }
    
    device.addEventListener("gattserverdisconnected", event => {
      parent.devicedisconnectcallback(deviceAddress);
    });

    device.gatt.connect()
      .then(server => {
        parent.devices[deviceAddress].server = server;
        successcallback();
      });
  }

  disconnectFromDevice(deviceAddress) {
    let device = this.devices[deviceAddress].bledevice;
    if (!device) {
      return;
    }
    console.log("Disconnecting from BLE Device..." + deviceAddress);
    if (device.gatt.connected) {
      device.gatt.disconnect();
    } else {
      console.log("BLE Device " + deviceAddress + " already disconnected");
    }
  }

  async getServicesForDevice(deviceAddress, successcallback) {
    let parent = this;
    let device = this.devices[deviceAddress];
    let server = device.server;
    let servicesUUID = [];
    
    server.getPrimaryServices()
      .then(async services => {
        for(var i=0; i<services.length; i++ ) {
          var service = services[i];
          servicesUUID.push(service.uuid);
          device.services.set(service.uuid, service);
          let characteristics = await service.getCharacteristics();
          device.characteristics.set(service.uuid, characteristics);
        }
        console.log(servicesUUID);
        successcallback(servicesUUID);
      });
  }

  getCharacteristicsForService(deviceAddress, serviceUUID) {
    let parent = this;
    let device = this.devices[deviceAddress];
    let service = device.services.get(serviceUUID);
    let charUUID = [];

    let characteristics = device.characteristics.get(serviceUUID);
    for(var i=0; i<characteristics.length; i++ ) {
      var characteristic = characteristics[i];
      charUUID.push(characteristic.uuid);
    }
    console.log(charUUID);
    console.log(characteristics);
    return charUUID;
  }

  _getCharacteristic(deviceAddress, serviceUUID, characteristicUUID) {
    let device = this.devices[deviceAddress];
    let characteristics = device.characteristics.get(serviceUUID);
    for(let i=0; i<characteristics.length; i++ ) {
      let characteristic = characteristics[i];
      if( characteristic.uuid == characteristicUUID ) {
        return characteristic;
      }
    }
    return undefined;
  }

  _getFinalValue(format, value) {
    let finalValue = value;
    switch(format) {
    case "UINT8":
      finalValue = value.getUint8(0);
      break;
    case "INT8":
      finalValue = value.getInt8(0);
      break;
    case "UINT16":
      finalValue = value.getUint16(0);
      break;
    case "INT16":
      finalValue = value.getInt16(0);
      break;
    case "UINT32":
      finalValue = value.getUint32(0);
      break;
    case "INT32":
      finalValue = value.getInt32(0);
      break;
    case "FLOAT":
      finalValue = value.getFloat32(0);
      break;
    }
    return finalValue;
  }

  readCharacteristic(deviceAddress, serviceUUID, characteristicUUID, format, successcallback) {
    let device = this.devices[deviceAddress];
    device.formatMap.set(characteristicUUID, format);

    let characteristic = this._getCharacteristic(deviceAddress, serviceUUID, characteristicUUID);
    if( characteristic!= undefined ) {
      characteristic.readValue()
        .then(value => {
          let finalValue = _getFinalValue(format, value);
          successcallback(finalValue);
        });
    }
  }

  writeCharacteristic(deviceAddress, serviceUUID, characteristicUUID, format, value, 
    successcallback, failurecallback) {
    let characteristic = this._getCharacteristic(deviceAddress, serviceUUID, characteristicUUID);
    if( characteristic != undefined ) {

      switch(format) {
      case "UINT8":
        finalValue = Uint8Array.of(value);
        break;
      case "INT8":
        finalValue = Int8Array.of(value);
        break;
      case "UINT16":
        finalValue = Uint16Array.of(value);
        break;
      case "INT16":
        finalValue = Int16Array.of(value);
        break;
      case "UINT32":
        finalValue = Uint32Array.of(value);
        break;
      case "INT32":
        finalValue = Iint32Array.of(value);
        break;
      case "FLOAT":
        finalValue = Float32Array.of(value);
        break;
      }
      characteristic.writeValue(finalValue)
        .then(_ => {
          successcallback();
        })
        .catch(error => {
          failurecallback();
        });
    }

  }

  notifyCharacteristicChange(deviceAddress, serviceUUID, characteristicUUID, state) {
    let parent = this;
    let device = this.devices[deviceAddress];
    let characteristic = this._getCharacteristic(deviceAddress, serviceUUID, characteristicUUID);
    let format = device.formatMap.get(characteristicUUID);

    if( characteristic != undefined ) {
      if( state == true ) {
        characteristic.startNotifications()
          .then(characteristic => {
            characteristic.addEventListener("characteristicvaluechanged", event => {
              console.log("Data = " + event.target.value);
              if( parent.characteristicchangecallback != undefined) {
                let finalValue = parent._getFinalValue(format, event.target.value);
                parent.characteristicchangecallback(deviceAddress, serviceUUID, 
                  characteristicUUID, finalValue);
              }
            });
          });  
      }
      else {
        characteristic.stopNotifications();
      }  
    }
    
  } 

}

/* harmony default export */ __webpack_exports__["a"] = (BluetoothObject);


/***/ }),
/* 148 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__text_object_text_object_module_js__ = __webpack_require__(7);
// ES6 imports


class ButtonObject extends __WEBPACK_IMPORTED_MODULE_0__text_object_text_object_module_js__["a" /* default */] {

  constructor() {
    super(" .btn");

    const self = this;

    // Set default behaviours
    $(document).ready(function() {
      let buttonEls = $(".element.fc.Button");
      // console.log('ButtonObject, buttonEls: ', buttonEls);
      buttonEls.each((i, obj) => {
        // console.log('.element.fc.Button: ', obj);
        let elements = obj.getElementsByClassName("foreground");
        let image = (elements.length > 0) ? elements[0] : null;

        elements = obj.getElementsByClassName("highlight");
        let imageHighlight = (elements.length > 0) ? elements[0] : null;
        // if (imageHighlight) console.log('ButtonObject, imageHighlight element', imageHighlight);

        if (imageHighlight) {
          obj.onmousedown = () => {
            // console.log("onmousedown, button", obj.getAttribute("obj-name"));
            imageHighlight.style.display = "";
            image.style.display = "none";
          };
          obj.onmouseup = () => {
            // console.log("onmouseup, button", obj.getAttribute("obj-name"));
            image.style.display = "";
            imageHighlight.style.display = "none";
          };
        }
        else {
          var button = obj.getElementsByClassName("btn")[0];
          var origTextColor = self.getProperty["Text color"](obj.getAttribute("obj-name"));
          var rgbTextColor = getRGB(origTextColor);
          var origBgColor = button.style.backgroundColor;
          var rgbBackground = getRGB(button.style.backgroundColor);
          var r = rgbBackground["red"];
          var g = rgbBackground["green"];
          var b = rgbBackground["blue"];
          var btnAlpha = rgbBackground["alpha"];
          var txtAlpha = rgbTextColor["alpha"];
          var darkerColor;
          if (isLight(r, g, b) && btnAlpha != 0) {
            r = r/2;
            g = g/2;
            b = b/2;
            darkerColor = "rgb(" + r + "," + g + "," + b + ")";
          } else if (btnAlpha != 0) {
            var diffR = (255 - r)*.25;
            var diffG = (255 - g)*.25;
            var diffB = (255 - b)*.25;
            r = Number(r) + Number(diffR);
            g = Number(g) + Number(diffG);
            b = Number(b) + Number(diffB);
            darkerColor = "rgb(" + r + "," + g + "," + b + ")";
          }
          obj.onmousedown = () => {
            //console.log("onmousedown, button", obj.getAttribute("obj-name"));
            button.style.backgroundColor = darkerColor;
            if (btnAlpha == 0 && rgbTextColor["red"] == 255 && rgbTextColor["blue"] == 255 &&
              rgbTextColor["green"] == 255) {
              self.setProperty["Text color"](obj.getAttribute("obj-name"), "rgba(0,0,0, " + txtAlpha + ")");
            } else {
              self.setProperty["Text color"](obj.getAttribute("obj-name"), "rgba(255,255,255, " + txtAlpha + ")");
            }
          };
          obj.onmouseup = () => {
            //   console.log("onmouseup or out, button", obj.getAttribute("obj-name"));
            button.style.backgroundColor = origBgColor;
            self.setProperty["Text color"](obj.getAttribute("obj-name"), origTextColor);
          };
        }
      });
    });

    function getRGB(color){
      var values = { red:null, green:null, blue:null, alpha:null };
      if( color.indexOf('rgb(') === 0 ){
        var pars = color.indexOf(',');
        values = {
          red:   parseInt(color.substr(4,pars)),
          green: parseInt(color.substr(pars+1,color.indexOf(',',pars))),
          blue:  parseInt(color.substr(color.indexOf(',',pars+1)+1,color.indexOf(')'))),
          alpha: 1
        }
      }else if( color.indexOf('rgba(') === 0 ){
        var pars = color.indexOf(','), repars = color.indexOf(',',pars+1);
        values = {
          red:   parseInt(color.substr(5,pars)),
          green: parseInt(color.substr(pars+1,repars)),
          blue:  parseInt(color.substr(color.indexOf(',',pars+1)+1,color.indexOf(',',repars))),
          alpha: parseFloat(color.substr(color.indexOf(',',repars+1)+1,color.indexOf(')')))
        }
      }
      return values;

    }

    function isLight(r, g, b) {
      var hsp;
      // HSP equation from http://alienryderflex.com/hsp.html
      hsp = Math.sqrt(
        0.299 * (r * r) +
              0.587 * (g * g) +
              0.114 * (b * b)
      );
      // Using the HSP value, determine whether the color is light or dark
      if (hsp>127.5) {
        return true;
      }
      return false;
    }

    this.getProperty.Text = (objName) => {
      let buttonTextEl = this.getTextElemFromName(objName).find(".text");
      return buttonTextEl.html();
    };

    this.setProperty.Text = (objName, value) => {
      let buttonTextEl = this.getTextElemFromName(objName).find(".text");
      if (value !== "") {
        buttonTextEl.html(value);
        buttonTextEl.css({"display": ""});
      }
      else
        buttonTextEl.css({"display": "none"});
    };

    this.setProperty["Text Alignment"] = (objName, value) => {
      let buttonEl = this.getTextElemFromName(objName);
      buttonEl.css("text-align", value.toLowerCase());
      buttonEl.css("justify-content", this.toFlex(value.toLowerCase()));
    };

    this.getProperty["Image"] = function(objName) {
      let elemSelector = self.getElemFromName(objName);
      let el = $(elemSelector).find("img");
      return el.get()[0];
    };

    this.setProperty["Image"] = function(objName, image) {

      let elemSelector = "[obj-name=\"" + objName + "\"]";
      // let elem = $('[obj-name="' + objName + '"]').find('img')
      // elem.attr('src', image.src);

      // getting the native element
      let $oldElem = $(elemSelector).find("img");
      let oldElem = $oldElem.get()[0]; // getting the native element

      // make a copy of the input image
      // this copy will replace the current immage
      let newElem = image.cloneNode();

      // copy all existing img attributes to the new element except src
      for (let i = 0; i < oldElem.attributes.length; i++)
      {
        let attribute = oldElem.attributes[i];
        if (! newElem.getAttribute(attribute.name))
          newElem.setAttribute(attribute.name, attribute.value);
      }
      $oldElem.replaceWith(newElem);

      if( image.src )
        $(elemSelector).find(".img-container").css({"display": ""});
      else
        $(elemSelector).find(".img-container").css({"display": "none"});
    };

    //Shadow Properties Setters
    this.setProperty["Horizontal Offset"] = (objName, value) => {
      let elemSelector = self.getElemFromName(objName);
      let hOffset = value + "px";
      $(elemSelector).attr("shadow-h-offset",value+"px");
      let vOffset = $(elemSelector).attr("shadow-v-offset");
      let blur = $(elemSelector).attr("shadow-blur");
      let spread = $(elemSelector).attr("shadow-spread");
      let color = $(elemSelector).attr("shadow-color");
      $(elemSelector).css("box-shadow" , `${hOffset} ${vOffset} ${blur} ${spread} ${color}`);
    };

    this.setProperty["Vertical Offset"] = (objName, value) => {
      let elemSelector = self.getElemFromName(objName);
      let hOffset = $(elemSelector).attr("shadow-h-offset");
      let vOffset = value + "px";
      $(elemSelector).attr("shadow-v-offset",value+"px");
      let blur = $(elemSelector).attr("shadow-blur");
      let spread = $(elemSelector).attr("shadow-spread");
      let color = $(elemSelector).attr("shadow-color");
      $(elemSelector).css("box-shadow" , `${hOffset} ${vOffset} ${blur} ${spread} ${color}`);
    };

    this.setProperty["Shadow Blur"] = (objName, value) => {
      let elemSelector = self.getElemFromName(objName);
      let hOffset = $(elemSelector).attr("shadow-h-offset");
      let vOffset = $(elemSelector).attr("shadow-v-offset");
      let blur = value + "px";
      $(elemSelector).attr("shadow-blur",value+"px");
      let spread = $(elemSelector).attr("shadow-spread");
      let color = $(elemSelector).attr("shadow-color");
      $(elemSelector).css("box-shadow" , `${hOffset} ${vOffset} ${blur} ${spread} ${color}`);
    };

    this.setProperty["Shadow Spread"] = (objName, value) => {
      let elemSelector = self.getElemFromName(objName);
      let hOffset = $(elemSelector).attr("shadow-h-offset");
      let vOffset = $(elemSelector).attr("shadow-v-offset");
      let blur = $(elemSelector).attr("shadow-blur");
      let spread = value + "px";
      $(elemSelector).attr("shadow-spread",value+"px");
      let color = $(elemSelector).attr("shadow-color");
      $(elemSelector).css("box-shadow" , `${hOffset} ${vOffset} ${blur} ${spread} ${color}`);
    };

    this.setProperty["Shadow Color"] = (objName, value) => {
      let elemSelector = self.getElemFromName(objName);
      let hOffset = $(elemSelector).attr("shadow-h-offset");
      let vOffset = $(elemSelector).attr("shadow-v-offset");
      let blur = $(elemSelector).attr("shadow-blur");
      let spread = $(elemSelector).attr("shadow-spread");
      let color = value;
      $(elemSelector).attr("shadow-color",value);
      $(elemSelector).css("box-shadow" , `${hOffset} ${vOffset} ${blur} ${spread} ${color}`);
    };

    this.setProperty["Text Decoration"] = (objName, value) => {
      let elemSelector = self.getElemFromName(objName);
      $(elemSelector).find(".btn").css("text-decoration",value);
    };

    this.setProperty["Text Decoration Color"] = (objName, value) => {
      let elemSelector = self.getElemFromName(objName);
      $(elemSelector).find(".btn").css("text-decoration-color",value);
    };

    //Gradient Type
    this.setProperty["Gradient Type"] = (objName, value) => {
      let elemSelector = self.getElemFromName(objName);
      let btnEle = elemSelector.find(".btn");
      let gradientType = value;
      $(elemSelector).attr("gradient-type",value);
      let gradientDirection = $(elemSelector).attr("gradient-direction");
      //let gradientShape = $(elemSelector).attr("gradient-shape");
      let gradientStartColor = $(elemSelector).attr("gradient-start-color");
      let gradientEndColor = $(elemSelector).attr("gradient-end-color");
      var firstParam = gradientDirection + "deg"; 
      if (gradientType == "radial") {
        firstParam = "circle";
      }
      $(btnEle).css("background-image",`${gradientType}-gradient(${firstParam},${gradientStartColor},${gradientEndColor})`);
    };

    this.setProperty["Gradient Direction"] = (objName, value) => {
      let elemSelector = self.getElemFromName(objName);
      let btnEle = elemSelector.find(".btn");
      let gradientType = $(elemSelector).attr("gradient-type");
      let gradientDirection = value+"deg";
      $(elemSelector).attr("gradient-direction",value);
      //let gradientShape = $(elemSelector).attr("gradient-shape");
      let gradientStartColor = $(elemSelector).attr("gradient-start-color");
      let gradientEndColor = $(elemSelector).attr("gradient-end-color");
      $(btnEle).css("background-image",`${gradientType}-gradient(${gradientDirection},${gradientStartColor},${gradientEndColor})`);
    };

    // this.setProperty["Gradient Shape"] = (objName, value) => {
    //   let elemSelector = self.getElemFromName(objName);
    //   let btnEle = elemSelector.find(".btn");
    //   let gradientType = $(elemSelector).attr("gradient-type");
    //   let gradientDirection = $(elemSelector).attr("gradient-direction");
    //   let gradientShape = value;
    //   $(elemSelector).attr("gradient-shape",value);
    //   let gradientStartColor = $(elemSelector).attr("gradient-start-color");
    //   let gradientEndColor = $(elemSelector).attr("gradient-end-color");
    //   $(btnEle).css("background-image",`${gradientType}-gradient(${gradientShape},${gradientStartColor},${gradientEndColor})`);
    // };

    this.setProperty["Start Color"] = (objName, value) => {
      let elemSelector = self.getElemFromName(objName);
      let btnEle = elemSelector.find(".btn");
      let gradientType = $(elemSelector).attr("gradient-type");
      let gradientDirection = $(elemSelector).attr("gradient-direction");
      //let gradientShape = $(elemSelector).attr("gradient-shape");
      var firstParam = gradientDirection + "deg"; 
      if (gradientType == "radial") {
        firstParam = "circle";
      }
      let gradientStartColor = value;
      $(elemSelector).attr("gradient-start-color",value);
      let gradientEndColor = $(elemSelector).attr("gradient-end-color");
      $(btnEle).css("background-image",`${gradientType}-gradient(${firstParam},${gradientStartColor},${gradientEndColor})`);
    };

    this.setProperty["End Color"] = (objName, value) => {
      let elemSelector = self.getElemFromName(objName);
      let btnEle = elemSelector.find(".btn");
      let gradientType = $(elemSelector).attr("gradient-type");
      let gradientDirection = $(elemSelector).attr("gradient-direction");
      //let gradientShape = $(elemSelector).attr("gradient-shape");
      var firstParam = gradientDirection + "deg"; 
      if (gradientType == "radial") {
        firstParam = "circle";
      }
      let gradientStartColor = $(elemSelector).attr("gradient-start-color");
      let gradientEndColor = value;
      $(elemSelector).attr("gradient-end-color",value);
      $(btnEle).css("background-image",`${gradientType}-gradient(${firstParam},${gradientStartColor},${gradientEndColor})`);
    };

    //Shadow Properties getters
    this.getProperty["Horizontal Offset"] = function(objName) {
      let elemSelector = self.getElemFromName(objName);
      return $(elemSelector).attr("shadow-h-offset");
    };

    this.getProperty["Vertical Offset"] = function(objName) {
      let elemSelector = self.getElemFromName(objName);
      return $(elemSelector).attr("shadow-v-offset");
    };

    this.getProperty["Shadow Blur"] = function(objName) {
      let elemSelector = self.getElemFromName(objName);
      return $(elemSelector).attr("shadow-blur");
    };

    this.getProperty["Shadow Spread"] = function(objName) {
      let elemSelector = self.getElemFromName(objName);
      return $(elemSelector).attr("shadow-spread");
    };

    this.getProperty["Shadow Color"] = function(objName) {
      let elemSelector = self.getElemFromName(objName);
      return $(elemSelector).attr("shadow-color");
    };

    this.getProperty["Text Decoration"] = function(objName) {
      let elemSelector = self.getElemFromName(objName);
      return $(elemSelector).find(".btn").css("text-decoration");
    };

    this.getProperty["Text Decoration Color"] = function(objName) {
      let elemSelector = self.getElemFromName(objName);
      return $(elemSelector).find(".btn").css("text-decoration-color");
    };

    //Gradient
    this.getProperty["Gradient Type"] = function(objName) {
      let elemSelector = self.getElemFromName(objName);
      return $(elemSelector).attr("gradient-type");
    };

    this.getProperty["Gradient Direction"] = function(objName) {
      let elemSelector = self.getElemFromName(objName);
      return $(elemSelector).attr("gradient-direction");
    };

    // this.getProperty["Gradient Shape"] = function(objName) {
    //   let elemSelector = self.getElemFromName(objName);
    //   return $(elemSelector).attr("gradient-shape");
    // };

    this.getProperty["Start Color"] = function(objName) {
      let elemSelector = self.getElemFromName(objName);
      return $(elemSelector).attr("gradient-start-color");
    };

    this.getProperty["End Color"] = function(objName) {
      let elemSelector = self.getElemFromName(objName);
      return $(elemSelector).attr("gradient-end-color");
    };

  }

  toFlex(align) {
    if (align === "left")
      return "flex-start";
    else if (align === "right")
      return "flex-end";
    else
      return "center";
  }

  invertColor(color) {
    // console.log('invertColor input:', color);
    let rgbin = color.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i);
    if (!rgbin)
      rgbin = color.match(/^rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i);
    if (!rgbin) {
      console.error("invertColor: unable to detect color");
      return rgbin;
    }
    if (rgbin.length === 4)
      rgbin.splice(0, 1);
    else
      return color;
    let rgbout = [];
    for (let col of rgbin) {
      let val = parseInt(col);
      rgbout.push(parseInt(val*.7));
    }

    let result = `rgb(${rgbout[0]}, ${rgbout[1]}, ${rgbout[2]})`;
    if (rgbout[3]) {
      result = `rgba(${rgbout[0]}, ${rgbout[1]}, ${rgbout[2]}, ${rgbout[3]})`;
    }
    return result;
  }

  touchmove_x_y(elemSelector, callback){
    $(elemSelector).on("mousedown touchstart", function(event) {
      $(document.body).on("mousemove touchmove", function(touchmove){
        var ose = $(document.body).offset();
        var mousemove = touchmove.type === "mousedown"||touchmove.type === "touchstart",
          pageX = mousemove ? touchmove.targetTouches[0].clientX : touchmove.clientX - ose.left,
          pageY = mousemove ? touchmove.targetTouches[0].clientY : touchmove.clientY - ose.top;
        if(pageX<0 ||pageY<0){
          pageX = 0;
          callback(pageX,pageY);
        }else{
          callback(pageX,pageY);
        }

      });
      $(document.body).on("mouseup touchend", function(release){
        $(document.body).off("mousemove touchmove"),
        $(document.body).off("mousedown touchstart");
      });
    });
  }

  longclick_ev(elemSelector,callback){
    var timeout_id = 0,
      hold_time = 500;
    $(elemSelector).on("mousedown touchstart",function(e) {
      e.stopPropagation();
      timeout_id = setTimeout(function(){
        callback();
      },hold_time);
    }).bind("mouseup mouseleave touchend", function(ev) {
      clearTimeout(timeout_id);
    });
  }

  getElemFromName (objName) {
    return $("[obj-name= \"" + objName + "\"]");
  }
}
// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (ButtonObject);


/***/ }),
/* 149 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Camera Library Module
*/

class CameraLibraryObject {

    constructor() {
        
    }

    showCameraInPictureMode (callback) {
      console.warn("Camera ( Picture Mode )not supported in HTML5 mode.");
      callback();
    }

    showCameraInVideoMode (callback) {
      console.warn("Camera ( Video Mode ) not supported in HTML5 mode.");
      callback();    
    } 

    takePicture (callback) {
      console.warn("Camera ( Take Picture ) not supported in HTML5 mode.");
      callback();    
    } 

}

/* harmony default export */ __webpack_exports__["a"] = (CameraLibraryObject);

/***/ }),
/* 150 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* Camera View Module */

class CameraViewObject {

    constructor() {
        
    }

    link (obj,camType) {
      //Ignore camType as HTML5 as only one
      let ele = '[obj-name= "' + obj + '"]';
      $(ele).children().remove(); //remove all children
      let video = document.createElement('video');
      video.width = $(ele).width();
      video.height = $(ele).height();
      $(ele).append(video);
      // Get access to the camera!
      if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
        navigator.mediaDevices.getUserMedia({ video: true }).then(function(stream) {
          window.localStream = stream;
          video.srcObject = stream;
          video.play();
        });
      }

    } 

    unlink (obj) {
      let ele = '[obj-name= "' + obj + '"]';
      try {
        localStream.getTracks().forEach((track) => {
          track.stop();
        });
      } catch (e) {
        let error = new Error("No video playing to stop.");
        error.name = "CameraViewException";
        throw error;
      }
      
    }

}

/* harmony default export */ __webpack_exports__["a"] = (CameraViewObject);

/***/ }),
/* 151 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* Created on 23/11/2017 */

class ClockObject {

  constructor() {
    this.chronoCounter = 0;
    this.chronoCallback = null;
    this.alarmId = null;
    this.namedAlarmCallback = {};
    this.datePicker = null;
    this.dateRangePicker = null;
    this.selectedDate = "";
    this.dateSelectedCallback = null;

    this.timePicker = null;
    this.selectedTime = "";
    this.timeSelectedCallback = null;
  }



  createTimer (interval,repeats) {
    let timerVar = setInterval(function(){ 
    },interval);

    return [timerVar,interval,repeats];

  }

  startTimer (timer,callback) {

    let count = 0; // Counter
    let timerVar = timer[0];
    let interval = timer[1] * 1000; //Convert to ms
    let repeats = timer[2];

    //Clear the above created one
    clearInterval(timerVar);

    timerVar = setInterval(function(){ 
      callback(timerVar);

      if (++count === repeats) {
        clearInterval(timerVar);
        $(`#timer-${timer[0]}`).attr("timer-status",false);
      }

    },interval);
    $("body").append(`<input id = "timer-${timer[0]}" value = "${timerVar}" type = "hidden" />`); // keeping the reference of the new ID
    $(`#timer-${timer[0]}`).attr("timer-status",true);
  }

  stopTimer (timer) {
    let timerId = $(`#timer-${timer[0]}`).val();
    clearInterval(timerId);
    $(`#timer-${timer[0]}`).attr("timer-status",false);
  }

  isTimerComplete (timer) {
    let result = $(`#timer-${timer[0]}`).attr("timer-status");
    
    if (result == "true") {
      return false;
    }
    return true;
    
  }

  /* Chrono */
  createChrono () {
    this.timeBegan = null;
    this.timeStopped = null;
    this.stoppedDuration = 0;
    this.chronoId = null;

    return this.chronoId;
  }

  startChrono (callback) {
    var self = this;
    this.chronoCallback = callback;

    if (this.timeBegan === null) {
      this.timeBegan = new Date();
    }

    if (this.timeStopped !== null) {
      this.stoppedDuration += (new Date() - this.timeStopped);
    }

    this.chronoId = setInterval(function() {
      var currentTime = new Date()
        , timeElapsed = new Date(currentTime - self.timeBegan - self.stoppedDuration)
        , hour = timeElapsed.getUTCHours()
        , min = timeElapsed.getUTCMinutes()
        , sec = timeElapsed.getUTCSeconds()
        , ms = timeElapsed.getUTCMilliseconds();
      self.chronoCounter = (min < 1 ? sec : min*60+sec) + "."+ 
      (ms > 99 ? ms : ms > 9 ? "0" + ms : "00" + ms);
      callback(this.chronoId);
    },1);
    
  }

  chronoTimeElapsed () {
    return this.chronoCounter;
  }

  stopChrono () {
    clearInterval(this.chronoId);
    this.stoppedDuration = 0;
    this.timeBegan = null;
    this.timeStopped = null;
  }

  pauseChrono () {
    this.timeStopped = new Date();
    clearInterval(this.chronoId);
  }

  resumeChrono () {
    this.startChrono(this.chronoCallback);
  }

  /* Alarms */
  createAlarm (time,repeat) {
    return [(time instanceof Date) ? time : time.toDate(), repeat];
  }

  register(identifier, callback) {
    this.namedAlarmCallback[identifier] = callback;
  }

  scheduleAlarm (alarm, callback) {
    let self = this;
    let scheduledTime = alarm[0];
    this.alarmId = setInterval(function(){
      let currTime = new Date();
      if (currTime.toString() == scheduledTime.toString()) {
        clearInterval(self.alarmId);
        callback(self.alarmId);
      }
    },1000);
  }

  removeAlarm (alarm) {
    clearInterval(this.alarmId);
  }

  createAlarmWithName(identifier, name, time) {
    let self = this;
    let alarmId = setInterval(function() {
      let currTime = new Date();
      if (currTime.toString() == ((time instanceof Date) ? time.toString() : time.toDate().toString())) {
        clearInterval(alarmId);
        self.namedAlarmCallback[identifier] && self.namedAlarmCallback[identifier](name);
      }
    },1000);
  }

  /* Date and Time Picker */
  pickDate () {
    let parent = this;
    if (!parent.datePicker) {
      parent.datePicker =
      $(`<div id="modal" class="modal fade pickerModal">
        <div class="modal-dialog-sm" style = "position:relative;background:#fff;width:300px; margin:0 auto;padding:25px;padding-left:30px;">
        <div id="datepicker" style = "margin-bottom:20px;"></div>
        <div class="modal-footer">
            <button type="button" class="btn btn-primary" data-dismiss="modal">Select</button>
            <span id = "action-btn-container">
            </span>
        </div>
        </div>`);
      $(parent.datePicker).find("#datepicker").datepicker({
        changeMonth: true,
        changeYear: true,
        yearRange: "-100:+100",
        onSelect: function (dateText) {
          parent.selectedDate = $(parent.datePicker).find("#datepicker").datepicker("getDate");
        }
      });
    }
    return new Promise((resolve) => {
      $(parent.datePicker).find(".btn").click(function (e) {
        parent.selectedDate = $(parent.datePicker).find("#datepicker").datepicker("getDate");
        if (parent.selectedDate != undefined) {
          // $(parent.datePicker).find("#datepicker").datepicker("destroy");
          $(parent.datePicker).modal("hide");
          resolve(parent.selectedDate);
        }
      });

      $(parent.datePicker).on("hidden.bs.modal", function () {
        // $(parent.datePicker).find("#datepicker").datepicker("destroy");
        $(parent.datePicker).modal("hide");
      });

      $(parent.datePicker).modal("show");
      $(parent.datePicker).find("#datePicker").datepicker("setDate", new Date());
    });
    
  }

  pickTime () {
    let parent = this;
    return new Promise((resolve) => {
      parent.timePicker =
        $(`<div id="modal" class="modal fade pickerModal">
        <div class="modal-dialog-sm" style = "position:relative;background:#fff;width:300px; margin:0 auto;padding:25px;padding-left:30px;">
          <div id="timepicker" style = "margin-bottom:20px;"></div>
          <div class="modal-footer">
            <button type="button" class="btn btn-primary" data-dismiss="modal">Select</button>
            <span id = "action-btn-container">
            </span>
          </div>
        </div>`);
      $(parent.timePicker).find("#timepicker").timepicker({
        controlType: "select",
        showButtonPanel: false,
        hour: new Date().getHours(),
        minute: new Date().getMinutes(),
        stepMinute: 15,
        oneLine: true,
        timeFormat: "hh:mm tt",
        onSelect: function (time) {
          parent.selectedTime = $(parent.timePicker).find("#timepicker").datetimepicker("getDate");
        }
      });
      $(parent.timePicker).find(".btn").click(function (e) {
        parent.selectedTime = $(parent.timePicker).find("#timepicker").datetimepicker("getDate");
        // if (callback) callback(parent.selectedTime);
        $(parent.timePicker).modal("hide");
        resolve(parent.selectedTime);
      });
      $(parent.timePicker).find("#timepicker").datetimepicker("setDate", new Date());
      $(parent.timePicker).modal("show");
    });
  }

  pickDateRange (_start, _end) {
    let parent = this;
    const start = (_start instanceof Date) ? _start : _start.toDate();
    const end = (_end instanceof Date) ? _end : _end.toDate();
    if (!parent.dateRangePicker) {
      parent.dateRangePicker =
      $(`<div id="modal" class="modal fade pickerModal">
      <div class="modal-dialog-sm" style = "position:relative;background:#fff;width:300px; margin:0 auto;padding:25px;padding-left:30px;">
          <div id="datepickerrange" style = "margin-bottom:20px;"></div>
          <div class="modal-footer">
              <button type="button" class="btn btn-primary" data-dismiss="modal">Select</button>
              <span id = "action-btn-container">
              </span>
          </div>
      </div>`);
    }
    $(parent.dateRangePicker).find("#datepickerrange").datepicker({
      changeMonth: true,
      changeYear: true,
      minDate: start,
      maxDate: end,
      yearRange: start.getFullYear() + ":" + end.getFullYear(),
      onSelect: function (dateText) {
        parent.selectedDate = $(parent.dateRangePicker).find("#datepickerrange").datepicker("getDate");
      }
    });
    return new Promise((resolve) => {

      $(parent.dateRangePicker).find(".btn").click(function (e) {
        parent.selectedDate = $(parent.dateRangePicker).find("#datepickerrange").datepicker("getDate");
        if (parent.selectedDate != undefined) {
          $(parent.datePicker).find("#datepicker").datepicker("destroy");
          $(parent.dateRangePicker).modal("hide");
          resolve(parent.selectedDate);
        }
      });

      $(parent.dateRangePicker).on("hidden.bs.modal", function () {
        $(parent.dateRangePicker).find("#datepickerrange").datepicker("destroy");
        $(parent.dateRangePicker).modal("hide");
      });

      $(parent.dateRangePicker).modal("show");
      $(parent.dateRangePicker).find("#datepickerrange").datepicker("setDate", new Date());

    });
  }

}

/* harmony default export */ __webpack_exports__["a"] = (ClockObject);



/***/ }),
/* 152 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* Created by Ravish on 1/05/2017 */

// ES6 imports

class ColourLibraryObject {

  constructor() {}

  getColourFromText (str) {
    return str;
  }

  getRgbFromColour (colour) {
    let result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(colour);
    let arr = [];
    arr.push(parseInt(result[1], 16));
    arr.push(parseInt(result[2], 16));
    arr.push(parseInt(result[3], 16));
    return arr;
  }

  getColourFromHsv (h,s,v) {
    let rgb = this.hsvToRgb(h,s,v);
    let hex = this.rgbToHex (rgb[0],rgb[1],rgb[2]);
    return hex;
  }

  getHsvFromColour (colour) {
    let rgb = this.getRgbFromColour(colour);
    let hsv = this.rgb2hsv (rgb[0],rgb[1],rgb[2]);
    return hsv;
  }

  isColourDark (colour) {
    let luma = this.getLuma (colour);
    if (luma < this.getLumaTreshold()) {
      return true;
    }
  }

  isColourLight (colour) {
   let luma = this.getLuma (colour);
   if (luma > this.getLumaTreshold()) {
      return true;
    }
  }

  getLuma (colour) {
    let c = colour.substring(1);  // strip #
    let rgb = parseInt(c, 16);   // convert rrggbb to decimal
    let r = (rgb >> 16) & 0xff;  // extract red
    let g = (rgb >>  8) & 0xff;  // extract green
    let b = (rgb >>  0) & 0xff;  // extract blue

    return 0.2126 * r + 0.7152 * g + 0.0722 * b; // per ITU-R BT.709
  }

  getLumaTreshold () {
    return 150;
  }

  getReadabilityTreshold () {
    return 120;
  }

  getLuminosity (colour) {
    return this.getLuma(colour);
  }

  rgb2hsv () {
    let rr, gg, bb,
      r = arguments[0] / 255,
      g = arguments[1] / 255,
      b = arguments[2] / 255,
      h, s,
      v = Math.max(r, g, b),
      diff = v - Math.min(r, g, b),
      diffc = function(c) {
        return (v - c) / 6 / diff + 1 / 2;
      };

    if (diff == 0) {
      h = s = 0;
    } else {
      s = diff / v;
      rr = diffc(r);
      gg = diffc(g);
      bb = diffc(b);

      if (r === v) {
        h = bb - gg;
      }else if (g === v) {
        h = (1 / 3) + rr - bb;
      }else if (b === v) {
        h = (2 / 3) + gg - rr;
      }
      if (h < 0) {
        h += 1;
      }else if (h > 1) {
        h -= 1;
      }
    }
    return [
      Math.round(h * 360),
      Math.round(s * 100),
      Math.round(v * 100)
    ];
  }

  hsvToRgb (h, s, v) {
    let r, g, b;
    let i;
    let f, p, q, t;
     
    // Make sure our arguments stay in-range
    h = Math.max(0, Math.min(360, h));
    s = Math.max(0, Math.min(100, s));
    v = Math.max(0, Math.min(100, v));
     
    // We accept saturation and value arguments from 0 to 100 because that's
    // how Photoshop represents those values. Internally, however, the
    // saturation and value are calculated from a range of 0 to 1. We make
    // That conversion here.
    s /= 100;
    v /= 100;
     
    if(s == 0) {
      // Achromatic (grey)
      r = g = b = v;
      return [
        Math.round(r * 255), 
        Math.round(g * 255), 
        Math.round(b * 255)
      ];
    }
     
    h /= 60; // sector 0 to 5
    i = Math.floor(h);
    f = h - i; // factorial part of h
    p = v * (1 - s);
    q = v * (1 - s * f);
    t = v * (1 - s * (1 - f));
     
    switch(i) {
      case 0:
        r = v;
        g = t;
        b = p;
      break;
     
      case 1:
        r = q;
        g = v;
        b = p;
      break;
     
      case 2:
        r = p;
        g = v;
        b = t;
      break;
     
      case 3:
        r = p;
        g = q;
        b = v;
      break;
     
      case 4:
        r = t;
        g = p;
        b = v;
      break;
     
      default: // case 5:
        r = v;
        g = p;
        b = q;
    }
     
    return [
      Math.round(r * 255), 
      Math.round(g * 255), 
      Math.round(b * 255)
    ];
  }

  componentToHex(c) {
    let hex = Math.round(c).toString(16);
    return hex.length == 1 ? "0" + hex : hex;
  }

  rgbToHex(r, g, b) {
    return "#" + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);
  }

  isColour (colour) {
    let result  = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(colour);
    return result;
  }

  mixColour (c1,c2,ratio) {
    return this.blendColours(c1,c2,ratio);
  }

  isReadableOn (c1,c2) {
    let luma1 = this.getLuma (c1);
    let luma2 = this.getLuma (c2);
    let diff = Math.abs(luma2 - luma1);
    console.log (luma1,luma2,diff);
    if (diff > this.getReadabilityTreshold()) {
      return true;
    }
  }

  blendColours(c1, c2, percentage) {
    // check input
    c1 = c1 || '#000000';
    c2 = c2 || '#ffffff';
    percentage = percentage || 0.5;

    // 1: validate input, make sure we have provided a valid hex
    if (c1.length != 4 && c1.length != 7)
      throw new error('colours must be provided as hexes');

    if (c2.length != 4 && c2.length != 7)
      throw new error('colours must be provided as hexes');    

    if (percentage > 1 || percentage < 0)
      throw new error('percentage must be between 0 and 1');


    // 2: check to see if we need to convert 3 char hex to 6 char hex, else slice off hash
    //      the three character hex is just a representation of the 6 hex where each character is repeated
    //      ie: #060 => #006600 (green)
    if (c1.length == 4)
      c1 = c1[1] + c1[1] + c1[2] + c1[2] + c1[3] + c1[3];
    else
      c1 = c1.substring(1);
    if (c2.length == 4)
      c2 = c2[1] + c2[1] + c2[2] + c2[2] + c2[3] + c2[3];
    else
      c2 = c2.substring(1);

    console.log('valid: c1 => ' + c1 + ', c2 => ' + c2);

    // 3: we have valid input, convert colors to rgb
    c1 = [parseInt(c1[0] + c1[1], 16), parseInt(c1[2] + c1[3], 16), parseInt(c1[4] + c1[5], 16)];
    c2 = [parseInt(c2[0] + c2[1], 16), parseInt(c2[2] + c2[3], 16), parseInt(c2[4] + c2[5], 16)];

    console.log('hex -> rgba: c1 => [' + c1.join(', ') + '], c2 => [' + c2.join(', ') + ']');

    // 4: blend
    let c3 = [ 
      (1 - percentage) * c1[0] + percentage * c2[0], 
      (1 - percentage) * c1[1] + percentage * c2[1], 
      (1 - percentage) * c1[2] + percentage * c2[2]
    ];

    console.log('c3 => [' + c3.join(', ') + ']');

    // 5: convert to hex
    c3 = '#' + this.componentToHex(c3[0]) + this.componentToHex(c3[1]) + this.componentToHex(c3[2]);

    console.log(c3);

    // return hex
    return c3;
  }

}

/* harmony default export */ __webpack_exports__["a"] = (ColourLibraryObject);

/***/ }),
/* 153 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* Stub for connio object
** Created by Harish Shanthi Kumar on 16/12/2016
*/

class ConnioObject extends com.fc.JavaScriptDistLib.ConnioCore {

  constructor() {
    super();
    this.MQTTClient = null,
    this.MQTTMessageRecvCallback =  null
  }

  configureMQTT() {
    let parent = this;
    if ( !this.MQTTClient ) {
      try {
        if( this.config.BaseURL === '' || this.config.KEY === '' || this.config.Secret === '' ) {
          console.log("Please go to File -> Connio Properties and set credentials.");
        }

        if( this.config.MQTTHost !== '' && this.config.MQTTPort !== '' && this.config.MQTTCientID !== '' &&
          this.config.MQTTUsername !== '' && this.config.MQTTPassword !== '' && this.config.App !== '' ) {
          this.MQTTClient = new Paho.MQTT.Client(this.config.MQTTHost, this.config.MQTTPort, this.config.MQTTCientID);
          // set callback handlers
          this.MQTTClient.onConnectionLost = function(responseObject) {
            parent.handleMQTTConnectionLost(responseObject);
          };
          this.MQTTClient.onMessageArrived = function(message) {
            parent.handleMQTTMessage(message);
          };
        }
        else {
          console.log("Please go to File -> Connio Properties and set credentials.");
        }
      }
      catch(e) {
        console.log("Some of the properties are missing. Go to File->Connio Properties");
      }
    }

  }
  //HS: Deploy Alert!! All runtime objects needs to be reset here!
  reset() {
    this.MQTTClient = null;
    this.MQTTMessageRecvCallback = null;
  }

  connioStartTrackingPropertyChanges(callback) {
    this.configure();
    this.configureMQTT();
    this.MQTTMessageRecvCallback = callback;
    this.connio_mqtt_connect();
  }

  connioStopTrackingPropertyChanges() {
    this.connio_mqtt_disconnect();
  }


  connioReadData(device, successcallback, failurecallback) {
    let parent = this;
    this.configure();
    let url = this.config.BaseURL + "/data/devices/" + device;
    $.ajax(
      {
        url: url,
        type: 'GET',
        headers: {
          "Authorization": "Basic " + btoa(this.config.KEY + ":" + this.config.Secret)
        },
        success: (response) => {
          successcallback(response);
        },
        error: (xhr, code, msg) => {
          failurecallback(msg);
          console.log("Could not read data.");
        }
      });
  }

  connionGetValue(data, valueType, propertyName) {
    this.configure();
    let properties = data.properties;
    if( (properties !== undefined) && (properties.length>0) ) {
      for(let i=0; i<properties.length; i++) {
        let property = properties[i];
        let qname = property.descriptors.qname;

        if( qname.indexOf(propertyName) !== -1)  {
          let value = property.value[valueType];
          if( value!==undefined ) {
            return value;
          }
        }
      }
    }
    return "";
  }

  connioGetDeviceName(data, id) {
    this.configure();
    let devices = data.results;
    try {
      for(let i=0; i<devices.length; i++) {
        let device = devices[i];
        if( device.id === id ) {
          return device.name;
        }
      }
    }
    catch(e) {

    }

    return "";
  }

  connioGetDeviceLocation(data, id) {
    this.configure();
    let devices = data.results;
    try {
      for(let i=0; i<devices.length; i++) {
        let device = devices[i];
        if( (device.id === id) || (device.name === id) ) {
          let locationObj = {lat: device.location.geo.lat, lng: device.location.geo.lon};
          return locationObj;
        }
      }
    }
    catch(e) {
    }

    return "";
  }

  connioWriteData(device, value, property, successcallback, failurecallback) {
    let parent = this;
    this.configure();
    let url = this.config.BaseURL + "/data/devices/" + device + "/properties/" + property;
    let data = {};
    data.dps = [];
    let val = {};
    val.t = new Date().toISOString();
    val.v = value;
    data.dps.push(val);

    $.ajax(
      {
        url: url,
        type: 'POST',
        headers: {
          "Authorization": "Basic " + btoa(this.config.KEY + ":" + this.config.Secret),
          "Content-Type": "application/json",
          "Accept": "application/json"
        },
        dataType: "json",
        data: JSON.stringify(data),
        success: function (response) {
          successcallback(response);
        },
        error: function(xhr, code, msg) {
          failurecallback(msg);
          console.log("Could not write data.");
        }
      });
  }

  connioExecuteMethod(device, method, data, successcallback, failurecallback) {
    this.configure();
  }

  connioReadHistorical(device, property, timeStart, timeEnd, descending, limit, successcallback, failurecallback) {
    let parent = this;
    this.configure();
    let url = this.config.BaseURL + "/data/devices/" + device + "/properties/" + property + "?";

    if( descending ) {
      let sorting = (descending ? "-" : "") + "source.time";
      url += "sort=" + sorting;
    }
    else {
      url += "sort=-source.time";
    }

    if( limit ) {
      url += "&limit=" + limit;
    }

    if (timeStart && timeEnd) {
      url += "&q=source.time:(" + timeStart.toISOString() + "+TO+" + timeEnd.toISOString() + ")";
    }

    $.ajax(
      {
        url: url,
        type: 'GET',
        headers: {
          "Authorization": "Basic " + btoa(this.config.KEY + ":" + this.config.Secret)
        },
        success: (response) => {
          let timeList = jsonPath(response, "$.results[:].t");
          let valueList = jsonPath(response, "$.results[:].v");
          let formattedTimeList = [];
          for (let i=0;i<timeList.length;i++) {
            formattedTimeList.push(com.fc.JavaScriptDistLib.TimeLibrary.dateFormat(new Date (timeList[i]),'MMM-d HH:mm a'));
          }
          timeList.reverse();
          formattedTimeList.reverse();
          successcallback(formattedTimeList, valueList);
        },
        error: (xhr, code, msg) => {
          failurecallback(msg);
          console.log("Could not read historical.");
        }
      });
  }

  connio_mqtt_connect() {
    console.log("Connecting to Connio MQTT...");
    let parent = this;
    try {
      this.MQTTClient.connect( {
        onSuccess: function() {
          console.log("Connected to Connio MQTT...");
          parent.subscribeToTopic();
        },
        userName : this.config.MQTTUsername,
        password : this.config.MQTTPassword,
        keepAliveInterval: 25,
        timeout: 60,
        useSSL: true
      });
    }
    catch(e) {
      console.log("Connio MQTT connection failed.")
    }
  }

  connio_mqtt_disconnect() {
    console.log("Disconnecting Connio MQTT...");
    this.MQTTClient.disconnect();
  }

  subscribeToTopic() {
    console.log("Subscribing to topic...");
    let parent = this;
    let subscribeOptions = {
      qos: 0,  // QoS
      invocationContext: {foo: true},
      onSuccess: (context) => {
        parent.handleMQTTSubscribeSuccess(context);
      },
      onFailure: (context) => {
        parent.handleMQTTSubscribeFailed(context);
        console.log("Could not subscribe to topic");
      },
      timeout: 10
    };

    this.MQTTClient.subscribe(this.config.MQTTTopic, subscribeOptions);
  }

  handleMQTTConnectionLost(responseObject) {
    console.log("Connection Lost: " + responseObject.errorMessage);
  }

  handleMQTTSubscribeSuccess(context) {
    console.log("Subscribe success");
  }

  handleMQTTSubscribeFailed(context) {
    console.log("Subscribe failed");
  }

  handleMQTTMessage(message) {
    //console.log("Connio MQTT Message Arrived: " + message.destinationName + " " + message.payloadString);
    if( this.MQTTMessageRecvCallback ) {
      let messageArray = message.destinationName.split("/");
      this.MQTTMessageRecvCallback(messageArray[4], messageArray[6], message.payloadString);
    }
  }

  ConnioConfigException(snappMessage, msg) {
    this.name = "ConnioConfigException";
    this.snappMessage = snappMessage;
    //custom message from smapp.
    this.message = msg || snappMessage;
    this.stack = (new Error()).stack;
  }

  ConnioNetworkException(snappMessage, msg) {
    this.name = "ConnioNetworkException";
    this.snappMessage = snappMessage;
    //custom message from smapp.
    this.message = msg || snappMessage;
    this.stack = (new Error()).stack;
  }


  ConnioMQTTException(snappMessage, msg) {
    this.name = "ConnioMQTTException";
    this.snappMessage = snappMessage;
    //custom message from smapp.
    this.message = msg || snappMessage;
    this.stack = (new Error()).stack;
  }

}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (ConnioObject);

/***/ }),
/* 154 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);
/**
 * Created by lorenzo on 05/04/17.
 */



class ContainerObject extends __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__["a" /* default */] {

  constructor() {

    super(" .container");
  }
}

// ES6 exports

/* harmony default export */ __webpack_exports__["a"] = (ContainerObject);


/***/ }),
/* 155 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
class DebugObject {

  constructor() {
    this.consoleVisible = false;
    this.traces = [];
  }

  displayConsole(visible) {
    if ((visible && this.consoleVisible) ||
      (!visible && !this.consoleVisible)) return;
    if (!visible && this.consoleVisible) return this.hideConsole();
    if (visible && !this.consoleVisible) {
      this.consoleVisible = true;


      $(".HTML5-deploy-wrapper").append("<div id=\"app_console\"></div>");
      $("#app_console").css({
        "position": "absolute",
        "top": "0",
        "z-index": "99",
        "background-color": "rgba(0,0,0,.5)",
        "color": "white",
        "overflow-y": "scroll",
        "pointer-events": "none",
        "padding": "2%",
        "word-break": "break-all"
      });
      this.fitToScreen();
      this.printLog();
    }
  }

  hideConsole() {
    $("#app_console").remove();
    this.consoleVisible = false;
  }

  fitToScreen() {
    $("#app_console").css({
      "width": $(".HTML5-deploy-wrapper").first().width(),
      "height": $(".HTML5-deploy-wrapper").first().height()
    });
  }

  printLog(data) {
    console.log(data);
    if (data) this.traces.push(data);
    if (!this.consoleVisible) return;
    $("#app_console").empty();
    if (this.traces.length < 1) $("#app_console").html("DEBUG MODE");
    for (const trace of this.traces) {
      $("#app_console").html($("#app_console").html() +
        "trace result: " + trace + "</br>");
    }
    $("#app_console").animate({
      scrollTop: 3031
    }, "fast");
  }

}

/* harmony default export */ __webpack_exports__["a"] = (DebugObject);

/***/ }),
/* 156 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ES6 imports

class DeviceObject {

  constructor() {
    var self = this;
    try {
      navigator.getBattery().then(function(battery) {
        self.batteryInfo = battery;
      });
    } catch (e) {
      this.batteryInfo = {};
    }
  }

  getBatteryPercentage () {
    return this.batteryInfo.level * 100;
  }

  getBatteryStatus () {
    return this.batteryInfo.charging;
  }

  monitorBatterylevel (battery,callback) {
    navigator.getBattery().then(function(b) {
      b.addEventListener('levelchange', function() {
        if ((b.level * 100) < battery) {
          callback(b.level*100);
        }
      });
    });
  }

}

/* harmony default export */ __webpack_exports__["a"] = (DeviceObject);

/***/ }),
/* 157 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Created by Ravish S on 21/11/17.
*/

class DialogObject {
    
    constructor() {
        this.closeText = "Close";
        this.actionText = "Button";
        this.dialog = null;
    }

    create (title,message) {
        this.dialog = 
            $(`<div id="modal" class="modal fade">
                <div class="modal-dialog-sm" style = "position:relative;background:#fff;margin:50px;">
                     
                    <div class="modal-header">
                        <!--<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>-->
                        <h4 class="modal-title">${title}</h4>
                    </div>
                    <div class="modal-body">
                        <p>${message}</p>                
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default cancel-btn" data-dismiss="modal">${this.closeText}</button>
                        <span id = "action-btn-container">
                        </span>
                    </div>
                </div>    
            `);
        return this.dialog;
    }

    addCancelBtn (title,dialog) {
       this.closeText = title.replace(/'/g,"");
    } 

    addBtn (title,dialog) {
        title = title.replace(/'/g,"");
        let button = '<button type="button" class="btn btn-primary action-btn">'+title+'</button>';
        $(this.dialog).find("#action-btn-container").append(button);
    }

    show (dialog,success) {
        $(dialog).modal({
            backdrop: "static"
        }).modal("show");
        $(dialog).find(".cancel-btn").html(this.closeText).click(function(e) {
            success($(this).html());
        });
        $(dialog).find(".action-btn").click(function(e) {
            $(dialog).modal("hide");
            success($(this).html());
        });
    }

}

/* harmony default export */ __webpack_exports__["a"] = (DialogObject);

/***/ }),
/* 158 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ES6 imports

class DictionaryObject {

  constructor() {}

  createEmptyDictionary () {
    var dict = {};
    return dict;
  }

  createDictionary(key, value) {
    var dict = {};
    for (var i=0; i < key.length; i++){
      if (key[i] != null ) {
        dict[key[i]] = value[i];
      }
    }
    return dict;
  }

  removeAllKeys (dictionary) {
    for( var key in dictionary ) {
      delete dictionary[key];
    }
    return dictionary;
  }

  getKeys (dictionary) {
    var keys = [];
    for( var key in dictionary ) {
      keys.push(key);
    }
    return keys;
  }

  getDictValue (dictionary,key) {
    if( dictionary != undefined && key != null) {
      var value = dictionary[key];
      return  (value==undefined) ? null : value;
    }
    return null;
  }

  setDictValue (dictionary,key,value) {
    if( dictionary != undefined && key != null ) {
      dictionary[key] = value;  
    }
  }

  removeDictKey (dictionary,key) {
    if( dictionary != undefined ) {
      delete dictionary[key];  
    }
  }

  conatinedInDict (dictionary,key) {
    if( dictionary != undefined ) {
      return (dictionary[key] != undefined ) ? true : false;  
    }
    else {
      return false;
    }
  }

  isEmpty (dictionary) {
    // console.log (dictionary);
    return Object.entries(dictionary).length === 0 && dictionary.constructor === Object
  }

  cloneDictionary(dictionary) {
    // console.log("Clone dict: "+dictionary);
    return JSON.parse(JSON.stringify(dictionary)) || {};
  }


}

/* harmony default export */ __webpack_exports__["a"] = (DictionaryObject);

/***/ }),
/* 159 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
class DocuSignObject {

  constructor() {
    this.config = {
      baseUrl: "",
      apiUrl: "",
      userId: "",
      password: "",
      integratorKey: "",
      demo: ""
    };
  }

  configure(config) {
    let properties;
    if (config) {
      properties = JSON.parse(config);
      if (properties) {
        let demo = properties.api.demo;

        if( demo == "true" ) {
          this.config.baseUrl = "https://demo.docusign.net/restapi/v2";
        } 
        else {
          this.config.baseUrl =  "https://www.docusign.net/restapi/v2";
        }
        this.config.userId = properties.api.userId;
        this.config.password = properties.api.password;
        this.config.integratorKey = properties.api.integratorKey;
      }
    }
  }

  createRecipent(role, name, email, clientId) {
    var recipent = {};
    recipent.role = role;
    recipent.name = name;
    recipent.email = email;
    recipent.clientId = clientId;
    return recipent;
  }

  addFieldToRecipient(recipent, key, value) {
    recipent[key] = value;
  }

  async createSigningLinkFromTemplate(templateId, recipent, redirectUrl, successcallback, failurecallback) {
    try {
      // #1 get the base url
      if (!window._wifiAvailable) {
        failurecallback && failurecallback("503: service unavailable");
        return;
      }
      let setupResponse = await this.setup();
      if(setupResponse!=undefined) {
        this.config.apiUrl = this._getDefaultLoginAccount(setupResponse.loginAccounts).baseUrl;
        console.log(this.config.apiUrl);
        // #2 create envelope
        let createEnvelopeResponse = await this.createEnvelopeFromTemplate(templateId, recipent);
        if( createEnvelopeResponse!=undefined ) {
          let envelopeId = createEnvelopeResponse.envelopeId;
          console.log(envelopeId);
          // #3 create signing link
          let signingResponse = await this.createSigningLinkFromEnvelope(envelopeId, recipent, redirectUrl);
          if( signingResponse!=undefined ) {
            let signingUrl = signingResponse.url;
            console.log(signingUrl);
            successcallback(signingUrl);
          }
        }
      }
    }
    catch (error) {
      console.log(error.responseText);
      failurecallback(error.responseText);
    } 
  }

  async setup() {
    return await $.ajax({
      url: this.config.baseUrl + "/login_information?api_password=true",
      type: "GET",
      headers: {
        "X-DocuSign-Authentication": JSON.stringify({"Username":this.config.userId,"Password":this.config.password,"IntegratorKey": this.config.integratorKey}),
        "Content-Type": "application/json"
      }
    });
  }

  async createEnvelopeFromTemplate(templateId, recipent) {
    if (!window._wifiAvailable) return;
    var data = 
      {
        "status": "sent",
        "templateId": templateId,
        "templateRoles": [
          {
            "clientUserId": recipent.clientId,
            "email": recipent.email,
            "name": recipent.name,
            "roleName": recipent.role,
            "tabs": {
              "textTabs":[]
            }
          }
        ]
      };
      
    for (var key in recipent) {
      if (recipent.hasOwnProperty(key)) {
        var val = recipent[key];
        var textEntry = {
          "tabLabel" : key,
          "value": val
        };
        data.templateRoles[0].tabs.textTabs.push(textEntry);
      }
    }
      
    return await $.ajax({
      url: this.config.apiUrl + "/envelopes",
      type: "POST",
      headers: {
        "X-DocuSign-Authentication": JSON.stringify({"Username":this.config.userId,"Password":this.config.password,"IntegratorKey": this.config.integratorKey}),
        "Content-Type": "application/json"
      },
      dataType: "json",
      data: JSON.stringify(data)
    });
  }

  async createSigningLinkFromEnvelope(envelopeId, recipent, redirectUrl) {
    if (!window._wifiAvailable) return;
    let data = 
      {
        "returnUrl": redirectUrl,
        "authenticationMethod": "None",
        "email": recipent.email,
        "userName": recipent.name,
        "clientUserId": recipent.clientId
      };
    return await $.ajax({
      url: this.config.apiUrl + "/envelopes/" + envelopeId + "/views/recipient",
      type: "POST",
      headers: {
        "X-DocuSign-Authentication": JSON.stringify({"Username":this.config.userId,"Password":this.config.password,"IntegratorKey": this.config.integratorKey}),
        "Content-Type": "application/json"
      },
      dataType: "json",
      data: JSON.stringify(data)
    });
  }

  getSigningEventFromUrl(url) {
    let parseString = "?event=";
    let index = url.indexOf(parseString);
    if( index > 0 ) {
      return url.substring(index+parseString.length);
    }
    return "";
  }

  _getDefaultLoginAccount(accounts) {
    for( var i=0; i<accounts.length; i++) {
      if(accounts[i].isDefault == "true") {
        return accounts[i];
      }
    }
  }
}

// export class to a global variable for use of the JavaScriptDistLib (only)
var com = com || {};
com.fc = com.fc || {};
com.fc.JavaScriptDistLib = com.fc.JavaScriptDistLib || {};
com.fc.JavaScriptDistLib.DocuSign = DocuSignObject;
// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (DocuSignObject);

/***/ }),
/* 160 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);
/**
 * DrawView Module
 */

// ES6 imports


class DrawViewObject extends __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__["a" /* default */] {

  constructor() {
    super();
    const self = this;
    this.drawView = [];
        
    $(document).ready(function() {
      $(".element.fc.DrawViewContainer").each(function (obj) {
        let objName = $(this)[0].getAttribute("obj-name");                
        self.initDrawView(objName);
      });
    });

    this.getProperty = Object.assign(this.getProperty, {
      "Alpha": (objName) => {
        return $(this.getEleByObjName(objName)).css("opacity") * 100;
      },

      "Background color": (objName) => {
        return $(this.getEleByObjName(objName)).css("background-color");
      },

      "Pen Color": (objName) => {
        return this.drawView[objName].penColor;
      },

      "Pen Width": (objName) => {
        return this.drawView[objName].maxWidth;
      }
    });

    this.setProperty = Object.assign(this.setProperty, {
      "Alpha": (objName, value) => {
        $(this.getEleByObjName(objName)).css({"opacity": value / 100});
      },

      "Background color": (objName, value) => {
        $(this.getEleByObjName(objName)).css({"background": value});
        this.drawView[objName].backgroundColor = value;
      },

      "Pen Color": (objName, value) => {
        this.drawView[objName].penColor = value;
      },

      "Pen Width": (objName, value) => {
        this.drawView[objName].maxWidth = value;
      }
    });
  }

   
  initDrawView (objName) {
    const self = this;

    let ele = this.getEleByObjName(objName);
    
    let width = $(ele).attr("width");
    let height = $(ele).attr("height");
    //let ratio = width / height;
    $(ele).attr("width",width);
    $(ele).attr("height",height);
    ele.getContext("2d").scale(1, 1);

    this.drawView[objName] = new SignaturePad(ele, {
      maxWidth: $(ele).attr("max-width"),
      penColor: $(ele).attr("pen-color"),
      backgroundColor:$(ele).attr("bg-color")
    });

    if ($(ele).attr("bg-image")) {
      const img = this.getBackgroundImage($(ele).attr("bg-image"));
      this.setBackgroundImage(this.drawView[objName], img, width, height);
    }
  }

  onStrokeStart (obj,callback) {
    this.drawView[obj].onBegin = function() {
      callback();
    };
  }

  onStrokeEnd (obj,callback) {
    this.drawView[obj].onEnd = function() {
      callback();
    };
  }

  getSvg(obj) {
    let dataURI =  this.drawView[obj].toDataURL("image/svg+xml");
    let svg = atob(dataURI.replace(/data:image\/svg\+xml;base64,/, ""));
    return svg;
  }

  getImage(obj) {
    let canvas = this.getEleByObjName(obj);
    var imageUrl= canvas.toDataURL();
    let img = new Image();
    img.crossOrigin = "anonymous";
    img.src = imageUrl;
    return img;
  }

  getBackgroundImage(url) {
    // returns the background of draw view
    const img = new Image();
    img.crossOrigin = "anonymous";
    img.src = url;
    return img;
  }

  setBackgroundImage(view, img, w, h) {
    view._canvas.getContext("2d").drawImage(img, 0, 0, w, h);
  }

  clear(obj) {
    this.drawView[obj].clear();
    try {
      const canvas = $("[obj-name=" + obj + "]").find("canvas");
      if (canvas.attr("bg-image")) {
        const img = this.getBackgroundImage(canvas.attr("bg-image"));
        this.setBackgroundImage(
          this.drawView[obj], img, canvas.attr("width"), canvas.attr("height"));
      }
    } catch (err) {
      console.error("Could not restore background image");
    }
  }

  getEleByObjName (obj) {
    let parentEle = "[obj-name=\"" + obj + "\"]";
    let canvas = $(parentEle).find("canvas")[0];
    return canvas;
  }

}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (DrawViewObject);

/***/ }),
/* 161 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
class EventListenersLibrary {

  constructor() {
    this.listenersMap = {};
  }

  register(fctName, target, method) {
    if (!this.listenersMap[fctName]) {
      this.listenersMap[fctName] = {};
    }
    this.listenersMap[fctName][target] = method;
  }

  invoke(fctName, instance, args) {
    if (this.listenersMap[fctName] && this.listenersMap[fctName][instance]) {
      return this.listenersMap[fctName][instance].apply(this, args);
    }
  }

}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (EventListenersLibrary);

/***/ }),
/* 162 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
class FireBaseObject {

  constructor() {
    this.initialized = false;
    this.regToken = null;
    this.tokenRefreshCallback = null;
    this.messageReceivedCallback = null;
  }

  configure(properties) {
    if (this.initialized) return;
    if ( !("serviceWorker" in window.parent.navigator) ) {
      console.log("Firebase push messaging is not supported by this browser.");
      return;
    }
    console.log("firebase init script");

    const self = this;
    const prop = JSON.parse(properties);

    const config = {
      apiKey: prop["api-key"].text,
      projectId: prop["project-id"].text,
      messagingSenderId: prop["project-number"].text
    };
    const usePublicVapidKey = prop["public-vapid-key"].text;

    const firebase = this.getFirebase();
    let initialized = true;
    try {
      firebase.app();
    }
    catch (e) {
      initialized = false;
    }
    if (!initialized) {
      console.log("Initializing firebase app.");
      firebase.initializeApp(config);
      const messaging = firebase.messaging();

      console.log("Registering service worker ...");
      window.parent.navigator.serviceWorker
        .register("firebase-messaging-sw.js?messagingSenderId=" + config.messagingSenderId, {scope: "firebase-cloud-messaging-push-scope"})
        .then(
          registration => {
            messaging.useServiceWorker(registration);
            console.log("Service worker registered");
            self.onServiceWorkerRegistered();
          },
          err => console.log("firebase-messaging registration failed: ", err)
        );
      messaging.usePublicVapidKey(usePublicVapidKey);
    }
    else {
      // firebase initialized, registering the callbacks
      self.onServiceWorkerRegistered();
    }

    // messaging.requestPermission()
    //     .then(() => messaging.getToken())
    //     .then(token => {
    //         console.log('registration token: ', token);
    //         self.regToken = token;
    //     });
    this.initialized = true;
  }

  getFirebase() {
    let fb;
    if (typeof firebase === "undefined")
      fb = window.parent.firebase;
    else
      fb = firebase;
    return fb;
  }

  onServiceWorkerRegistered() {
    console.log("Firebase, registering snap callbacks.");
    const self = this;
    const firebase = this.getFirebase();
    const messaging = firebase.messaging();

    messaging.requestPermission()
      .then(() => messaging.getToken())
      .then(token => {
        console.log("registration token: ", token);
        self.regToken = token;
      });

    messaging.onTokenRefresh( () => {
      console.log("TokenRefresh received. ", payload);
      messaging.getToken()
        .then( refreshedToken => {
          console.log("Refreshed registration token: ", refreshedToken);
          self.regToken = refreshedToken;
          self.tokenRefreshCallback(refreshedToken);
        })
        .catch(
          err => console.log("Unable to retrieve refreshed token ", err)
        );
    });

    messaging.onMessage( payload => {
      if (!window._wifiAvailable) {
        console.error("Network for preview is locked! Cannot show the firebase notification");
        return;
      }
      console.log("Message received. ", payload);
      self.messageReceivedCallback(payload.from, payload);
    });

    window.parent.navigator.serviceWorker.addEventListener("message", event => {
      if (!window._wifiAvailable) {
        console.error("Network for preview is locked! Cannot show the firebase notification");
        return;
      }
      const payload = event.data;
      console.log("Received a message from service worker: ", payload);
      if (payload.type && payload.type === "web-push-message") {
        self.messageReceivedCallback("", payload);
      }
    });
  }

  onRegTokenRefresh(callback) {
    this.tokenRefreshCallback = callback;
  }

  onMessageReceived(callback) {
    this.messageReceivedCallback = callback;
  }


  onRegTokenRefreshLegacy(callback) {
    const messaging = firebase.messaging();
    const self = this;

    messaging.onTokenRefresh(() => {
      messaging.getToken()
        .then(refreshedToken => {
          self.regToken = refreshedToken;
          callback(refreshedToken);
        },
        err => console.log("Unable to retrieve refreshed token ", err)
        );
    });
  }

  onMessageReceivedLegacy(callback) {
    const messaging = fb.messaging();

    messaging.onMessage( payload => {
      console.log("Message received. ", payload);
      callback(payload.from, payload);
    });
  }

  getRefreshedToken() {
    return this.regToken;
  }

  getUniqueDeviceId () {
    //hs: cardcoding for now.
    var deviceId = localStorage.getItem("firebase_unique_device_id");
    if( deviceId == undefined ) {
      deviceId = this.uuidv4();
      localStorage.setItem("firebase_unique_device_id", deviceId);
    }
    return deviceId;
  }

  uuidv4() {
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c) {
      var r = Math.random() * 16 | 0, v = c == "x" ? r : (r & 0x3 | 0x8);
      return v.toString(16);
    });
  }

}

/* harmony default export */ __webpack_exports__["a"] = (FireBaseObject);



/***/ }),
/* 163 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);
/**
 * Created by Luca Latini on 24/04/17.
 */

// ES6 imports


class GaugeObject extends __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__["a" /* default */] {


    constructor() {
        super();

        const self = this;
        this.gauge = [];

        $(document).ready(function() {
            //setTimeout( function() {
            $('.element.fc.Gauge').each(function (obj) {
                let objName = $(this)[0].getAttribute('obj-name');
                self.gauge[objName] = self.init(objName);
                //    self.graph[objName].unload();    this is used to hide the Graph when the preview has been loaded
            });
            //   }, 1000);
        });

        this.getProperty = Object.assign(this.getProperty, {
            'Alpha': (objName) => {
                return $(this.getGaugeElemFromName(objName)).css('opacity') * 100;
            },

            'Background color': (objName) => {
                return $(this.getGaugeElemFromName(objName)[0]).css("background-color");
            },

            'Current Value': (objName) => {
               return this.gauge[objName].data()[0].values[0].value;
            },

            'Maximum Value': (objName) => {
                return this.gauge[objName].internal.config.gauge_max;
            },

            'Minimum Value': (objName) => {
                return this.gauge[objName].internal.config.gauge_min;
            },

            'track color': (objName) => {
                var elemSelector = '[obj-name="' + objName + '"]';
                return d3.selectAll(elemSelector + ' path.c3-chart-arcs-background').style('fill');

            },

            'pointer color': (objName) => {
                return d3.selectAll(this.getGaugeElemFromName(objName)).select('path.c3-arc-data').style('fill');

            },

            'track width': (objName) => {
                return this.gauge[objName].internal.config.gauge_width;

            }

        });

        this.setProperty = Object.assign(this.setProperty, {
            'Alpha': (objName, value) => {
                d3.selectAll(this.getGaugeElemFromName(objName)).style('opacity', value/100)


            },

            'Background color': (objName, value) => {
                var elemSelector = '[obj-name="' + objName + '"]';
                $(elemSelector + ' svg').css("background-color",value);


            },

            'Current Value': (objName, value) => {
                this.gauge[objName].load({columns: [['data', value]]});
                var el = this.gauge[objName];
               // this.gauge[objName] = this.gaugeRender(objName)


            },

            'Maximum Value': (objName, value) => {
                this.gauge[objName].internal.config.gauge_max = value;
                var gaugeData = this.gauge[objName].data();
                var gaugeCurrVal = gaugeData[0].values[0].value;
                this.gauge[objName].load({columns: [['data', gaugeCurrVal]]});

            },

            'Minimum Value': (objName, value) => {

                this.gauge[objName].internal.config.gauge_min = value;
                var gaugeData = this.gauge[objName].data();
                var gaugeCurrVal = gaugeData[0].values[0].value;
                this.gauge[objName].load({columns: [['data', gaugeCurrVal]]});
            },

            'track color': (objName, value) => {
                var elemSelector = '[obj-name="' + objName + '"]';
                d3.selectAll(elemSelector + ' path.c3-chart-arcs-background').style('fill', value)


            },

            'pointer color': (objName, value) => {
                d3.selectAll(this.getGaugeElemFromName(objName)).select('path.c3-arc-data').style('fill', value);


            },

            'track width': (objName, value) => {
                this.gauge[objName].internal.config.gauge_width = value;
                var gaugeData = this.gauge[objName].data();
                var gaugeCurrVal = gaugeData[0].values[0].value;
                this.gauge[objName].load({columns: [['data', gaugeCurrVal]]});

            }
        });

    }

    getGaugeElemFromName (objName) {
        return this.getElemFromName(objName).find('#fcGauge');
    }

    init(objName) {

        var $is = this.getGaugeElemFromName(objName)[0];
        var ele = $is;

        //    this.$el.css({
        //      "opacity": this.getGaugeElemFromName(objName)[0].getAttribute('opacity')
        //});


        var bg = this.getProperty["Background color"](objName);
        var gaugeMin = this.getGaugeElemFromName(objName)[0].getAttribute('gaugeMin');
        var gaugeMax = this.getGaugeElemFromName(objName)[0].getAttribute('gaugeMax');
        var gaugeVal = this.getGaugeElemFromName(objName)[0].getAttribute('gaugeVal');
        var gaugeTrackWidth = this.getGaugeElemFromName(objName)[0].getAttribute('gaugeTrackWidth');
        var gaugeTrackColor = this.getProperty["track color"](objName);
        var gaugePointerColor = this.getProperty["pointer color"](objName);

        const self = this;

        // let gaugeRender2 = function(objName) {
        //
        //     if (self.gauge[objName]) {
        //         bg = self.getProperty["Background color"](objName);
        //         gaugeMin = self.getProperty["Minimum Value"](objName);
        //         gaugeMax = self.getProperty["Maximum Value"](objName);
        //         gaugeVal = self.getProperty["Current Value"](objName);
        //         gaugeTrackColor = self.getProperty["track color"](objName);
        //         gaugePointerColor = self.getProperty["pointer color"](objName );
        //         self.setProperty["pointer color"](objName, gaugePointerColor);
        //         self.setProperty["track color"](objName, gaugeTrackColor);
        //     }
        // };

        this.getGaugeElemFromName(objName).css({
            "background-color": bg
        });


        var gauge = c3.generate({
            bindto:$is,
            data: {
                columns: [
                    ['data', gaugeVal]
                ],
                type: 'gauge',
                color: function (color, d) {
                        return self.getProperty["pointer color"](objName) == 'none' ? color : self.getProperty["pointer color"](objName);
            }
            },
            oninit: function() {
                d3.select(ele).selectAll('path.c3-chart-arcs-background').style("fill", self.getProperty["track color"](objName));
            },
            gauge: {
                min: gaugeMin,
                max: gaugeMax,
                width: gaugeTrackWidth, // for adjusting arc thickness,
                expand: true,
                startingAngle:0,
                label: {
                    format: function(value, ratio) {
                        return "";
                    },
                    show: false
                },

            },
            color: {
                pattern: [gaugePointerColor]
            },
            size: {
                height: self.getProperty["height"](objName) / 2,
                width: self.getProperty["width"](objName)
            },
            tooltip: {
                show: false
            }
        });

        return gauge;


    }

    // animationStart(objName, animation, onCompleteCallback) {
    //     if (animation.type === 'scale') {
    //         let duration = animation.duration*1000;
    //         let options = {duration: duration, complete: onCompleteCallback, queue: animation.id};
    //         let elemDiv = this.getElemFromName(objName);
    //         let elemSvg = $('[obj-name="'+objName+'"] svg');
    //         let newWidth = elemDiv.width() * animation.dX;
    //         let newHeight = elemDiv.height() * animation.dY;
    //         let leftDelta = (newWidth - elemDiv.width()) / 2;
    //         let topDelta = (newHeight - elemDiv.height()) / 2;
    //         var zoom = elemDiv[0].style.transform +' scaleX('+animation.dX+') scaleY('+animation.dY+')';
    //         elemDiv.animate({'transform': zoom}, options);
    //         //
    //         //  newWidth = elemSvg.width() * animation.dX;
    //         //  newHeight = elemSvg.height() * animation.dY;
    //         //  leftDelta = (newWidth - elemSvg.width()) / 2;
    //         //  topDelta = (newHeight - elemSvg.height()) / 2;
    //         // elemSvg.animate({width:newWidth+'px', height:newHeight+'px', left: '-='+leftDelta+'px', top: '-='+topDelta+'px'}, options);
    //         // elemDiv.dequeue(animation.id);
    //         elemDiv.dequeue(animation.id);
    //     }
    //     else  super.animationStart(objName, animation, onCompleteCallback)
    // };
}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (GaugeObject);

/***/ }),
/* 164 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* Google Fit implementation
** Created by Harish Shanthi Kumar on 06/08/2018
*/

class GoogleFitObject {
  //Supported devices are heart_rate, blood_pressure, glucometer, spo2
  constructor() {
    this.authToken = null;
    this.dataSourceIdMap = {};
    this.scopeMap = {};
    this.dataSourceIdMap["com.google.step_count.delta"] = "derived:com.google.step_count.delta:com.google.android.gms:estimated_steps";
    this.dataSourceIdMap["com.google.calories.expended"] = "derived:com.google.calories.expended:com.google.android.gms:merge_calories_expended";
    this.dataSourceIdMap["com.google.distance.delta"] = "derived:com.google.distance.delta:com.google.android.gms:merge_distance_delta";
    this.dataSourceIdMap["com.google.heart_rate.bpm"] = "derived:com.google.heart_rate.bpm:com.google.android.gms:merge_heart_rate_bpm";
    this.dataSourceIdMap["com.google.weight"] = "derived:com.google.weight:com.google.android.gms:merge_weight";
    this.dataSourceIdMap["com.google.blood_pressure"] = "derived:com.google.blood_pressure:com.google.android.gms:merged";

    this.scopeMap["com.google.heart_rate.bpm"] = "https://www.googleapis.com/auth/fitness.body.read https://www.googleapis.com/auth/fitness.body.write";
    this.scopeMap["com.google.weight"] = "https://www.googleapis.com/auth/fitness.body.read https://www.googleapis.com/auth/fitness.body.write";
    this.scopeMap["com.google.blood_pressure"] = "https://www.googleapis.com/auth/fitness.blood_pressure.read https://www.googleapis.com/auth/fitness.blood_pressure.write";

  }

  configure(config) {
  }

  configureAuth(authLostCallback) {
    this.authLostCallback = authLostCallback;
  }

  authorize(dataTypes, clientId, clientSecret, redirectURL, successcallback, failurecallback) {
    let self = this;
    
    let url = "https://accounts.google.com/o/oauth2/v2/auth?client_id="+clientId+"&redirect_uri="+redirectURL+"&scope=https://www.googleapis.com/auth/fitness.activity.read https://www.googleapis.com/auth/fitness.body.read https://www.googleapis.com/auth/fitness.body.write https://www.googleapis.com/auth/fitness.blood_pressure.read https://www.googleapis.com/auth/fitness.blood_pressure.write&response_type=code";
    let authWindow = window.open(url, "authWindow", "height=600,width=450");
    
    if (window.focus) {
      authWindow.focus();
    }
    try {
      let timer = setInterval(function(){
        let urlParams = new URLSearchParams(authWindow.location.search);
        let payload = {
          "grant_type":"authorization_code",
          "client_id":clientId,
          "client_secret":clientSecret,
          "code":urlParams.get("code"),
          "redirect_uri":redirectURL
        };
        if(urlParams.get("code")) {

          var settings = {
            "crossDomain": true,
            "url": "https://www.googleapis.com/oauth2/v4/token",
            "headers": {
              "content-type": "application/x-www-form-urlencoded"
            },
            "data": payload
          };

          $.post(settings).done(function (response) {
            self.authToken = response.access_token;
            self._setToken(self.authToken);
            successcallback();
            authWindow.close();
            clearInterval(timer);
          },function(e) {
            clearInterval(timer);
          });
        }
      },500);
    } catch (e) {
      clearInterval(timer);
      failurecallback();
    }
  }

  deAuthorize() {
    this._resetToken();
  }

  isAuthorized() {
    return (this._getToken() != undefined) ? true : false;
  }

  isAvailable() {
    return true;
  }

  async readHistoricalData(_startDate, _endDate, dataTypes, successcallback, failurecallback) {

    let parent = this;
    let reqDataTypes = [];

    let startDate = (!_startDate || _startDate instanceof Date) ? _startDate : _startDate.toDate();
    let endDate = (!_endDate || _endDate instanceof Date) ? _endDate : _endDate.toDate();
    
    if( dataTypes.length <= 0 )
      return;
    
    if( startDate == null ) {
      startDate = new Date();
    }
    startDate.setHours(0,0,0,0);

    if( endDate == null ) {
      endDate = new Date();
    }
    endDate.setHours(24, 0, 0, 0);

    let reqHeaders = {"Authorization": "Bearer "+this._getToken(), "Content-Type" : "application/json"};
    var reqBody = {
      "aggregateBy": reqDataTypes,
      "bucketByTime": { "durationMillis": 86400000 },
      "startTimeMillis": startDate.getTime(),
      "endTimeMillis": endDate.getTime()
    };
    
    var historicalDataMap = {};
    var historicalData = [];

    for( let i=0; i<dataTypes.length; i++) {
      reqDataTypes = [];
      reqDataTypes.push({
        "dataSourceId":parent.dataSourceIdMap[dataTypes[i]]
      });
      reqBody["aggregateBy"] = reqDataTypes;
      try {
        let resp = await parent._readHistorical(reqHeaders, reqBody);
        let data = parent._parseHistoricalData(resp);
        
        for (let day=0; day<data.length; day++) {
          let dailyCapsule = data[day];
          let startdate = dailyCapsule["startdate"];
          if( !historicalDataMap.hasOwnProperty(startdate) ) {
            historicalDataMap[startdate] = dailyCapsule;
          }
          else {
            for (var key in dailyCapsule) {
              if (dailyCapsule.hasOwnProperty(key)) {
                if( key != "startDate") {
                  historicalDataMap[startdate][key] = dailyCapsule[key];
                }
              }
            }
          }
        }
      }
      catch(e) {
        console.log(e.responseJSON);
        let errorCode = e.responseJSON.error.code;
        if (errorCode != 403) {
          failurecallback(e.responseJSON);
          return;
        }
      }
      
    }

    for( let startdate in historicalDataMap) {
      historicalData.push( historicalDataMap[startdate]);
    }
    successcallback(historicalData);
    //console.log(historicalData);
  }

  async _readHistorical(reqHeaders, reqBody) {
    return $.ajax(
      {
        url: "https://www.googleapis.com/fitness/v1/users/me/dataset:aggregate",
        type: "POST",
        headers: reqHeaders,
        data: JSON.stringify(reqBody)
      }); 
  }

  readTodayData(dataType, successcallback, failurecallback) {

    let parent = this;
    let startDate = new Date();
    startDate.setHours(0,0,0,0);
    let endDate = new Date();
    endDate.setHours(24,0,0,0);

    let reqBody = {
      "aggregateBy": [{
        "dataSourceId":parent.dataSourceIdMap[dataType]
      }],
      "bucketByTime": { "durationMillis": 86400000 },
      "startTimeMillis": startDate.getTime(),
      "endTimeMillis": endDate.getTime()
    };

    let reqHeaders = {"Authorization": "Bearer "+this._getToken(), "Content-Type" : "application/json"};

    $.ajax(
      {
        url: "https://www.googleapis.com/fitness/v1/users/me/dataset:aggregate",
        type: "POST",
        headers: reqHeaders,
        data: JSON.stringify(reqBody),
        success: function (response) {
          try {
            let bucket = response.bucket[0]; 
            let point = bucket.dataset[0].point[0];
            let todayData = {};
            todayData["startdate"] = bucket.startTimeMillis;
            todayData["enddate"] = bucket.endTimeMillis;
            parent._populateFields(todayData, point);
            successcallback(todayData);
          }
          catch(e) {
            failurecallback(e);
          }
        },
        error: function(xhr, code, msg) {
          failurecallback(code + ": "+ msg);
        }
      }); 
  }

  async recordSample(dataType, data, successcallback, failurecallback) {
    let self = this;
    let scope = this.scopeMap[dataType];
    
    //writing is currently only supported for hr, weight and bp
    if( scope == undefined ) {
      failurecallback("Unsupported recording type. Currently only HR, Weight and BP supported");
      return;
    }

    try {
      var dataSource = await this._getDataSource(dataType);
      if( dataSource == undefined) {
        dataSource = await this._createDataSource(dataType);
      }
      console.log(dataSource);
      if( dataSource != undefined ) {
        let response = await this._recordSample(dataSource, data);
        successcallback();
      }
      else {
        failurecallback("Could not record sample");
      }
      
    }
    catch(e) {
      console.log(e);
      failurecallback(e);
    }
  }
  
  async _getDataSource(dataType) {
    let reqHeaders = {"Authorization": "Bearer "+this._getToken(), "Content-Type" : "application/json"};    
    
    try {
      let dataSource = await $.ajax({
        url: "https://www.googleapis.com/fitness/v1/users/me/dataSources/raw:"+dataType+":SnapClinical",
        type: "GET",
        headers: reqHeaders
      });
      return dataSource;
    }
    catch(e) {
      return undefined;
    }
    
  }

  async _createDataSource(dataType) {
    let fields = this._getFields(dataType);

    let reqHeaders = {"Authorization": "Bearer "+this._getToken(), "Content-Type" : "application/json"};

    let reqBody = {
      "dataStreamName": "SnapClinical",
      "type": "raw",
      "application": {
        "detailsUrl": "http://snapclinical.com",
        "name": "SnapClinical",
        "version": "1"
      },
      "dataType": {
        "name": dataType,
        "field": fields
      }
    };
    try {
      let dataSource = await $.ajax({
        url: "https://www.googleapis.com/fitness/v1/users/me/dataSources",
        type: "POST",
        headers: reqHeaders,
        data: JSON.stringify(reqBody)
      });
      return dataSource;
    }
    catch(e) {
      return undefined;
    }
  }

  async _recordSample(dataSource, sample) {
    var currDate = new Date();
    var timeStampMillis = currDate.getTime();
    var timeStampNanosStart = timeStampMillis * 1000000;
    var timeStampNanosEnd = timeStampNanosStart+1;

    let reqHeaders = {"Authorization": "Bearer "+this._getToken(), "Content-Type" : "application/json"};
    let values = this._getSampleValues(dataSource.dataType.name, sample);
    let reqBody = {
      
      "minStartTimeNs": timeStampNanosStart,
      "maxEndTimeNs": timeStampNanosEnd,
      "dataSourceId": dataSource.dataStreamId,
      "point": [
        {
          "startTimeNanos": timeStampNanosStart,
          "endTimeNanos": timeStampNanosEnd,
          "dataTypeName": dataSource.dataType.name,
          "value": values
        }
      ]
    };
    let dataType = dataSource.dataType.name;
  
    let response = await $.ajax({
      url: "https://www.googleapis.com/fitness/v1/users/me/dataSources/raw:"+dataType+":SnapClinical/datasets/" +timeStampNanosStart + "-" + timeStampNanosEnd,
      type: "PATCH",
      headers: reqHeaders,
      data: JSON.stringify(reqBody)
    });
    return response;
  }

  _getFields(dataType) {
    let fields = [];

    if( dataType == "com.google.heart_rate.bpm") {
      let fieldHr = {
        "name": "bpm",
        "format": "floatPoint",
        "optional": false
      };
      fields.push(fieldHr);
    }
    else if( dataType == "com.google.weight") {
      let fieldWeight = {
        "name": "weight",
        "format": "floatPoint",
        "optional": false
      };
      fields.push(fieldWeight);
    }
    else if( dataType == "com.google.blood_pressure") {
      let fieldSystolic = {
        "name": "systolic",
        "format": "floatPoint",
        "optional": false
      };
      let fieldDiastolic = {
        "name": "diastolic",
        "format": "floatPoint",
        "optional": false
      };
      fields.push(fieldSystolic);
      fields.push(fieldDiastolic);
    }
    return fields;
  }

  _getSampleValues(dataType, sample) {
    let values = [];

    if( dataType == "com.google.heart_rate.bpm") {
      let hr = sample["hr"];

      let value = {
        "fpVal": hr
      };
      values.push(value);
    }
    else if( dataType == "com.google.weight") {
      let weight = sample["weight"];

      let value = {
        "fpVal": weight
      };
      values.push(value);
    }
    else if( dataType == "com.google.blood_pressure") {
      let systolic = sample["systolic"];
      let diastolic = sample["diastolic"];

      let value1 = {
        "fpVal": systolic
      };
      let value2 = {
        "fpVal": diastolic
      };

      values.push(value1);
      values.push(value2);
    }
    return values;
  }
  
  _populateFields(data, point) {
   
    if( point != undefined ) {
      //fields["startdate"] = point.startTimeNanos / 1000;
      //fields["enddate"] = point.endTimeNanos / 1000;
      if( point.dataTypeName == "com.google.step_count.delta") {
        let value = point.value[0].intVal;
        data["steps"] = value;
      }
      else if( point.dataTypeName == "com.google.calories.expended") {
        let value = point.value[0].fpVal;
        data["calories"] = Math.round(value);
      }
      else if( point.dataTypeName == "com.google.distance.delta") {
        let value = point.value[0].fpVal / 1000; //meters to kms
        data["distance"] = value.toFixed(2);
      }
      else if( point.dataTypeName == "com.google.heart_rate.summary") {
        this._setStatsData(data, "hr", point, 0, true);
      }
      else if( point.dataTypeName == "com.google.weight.summary") {
        this._setStatsData(data, "weight", point, 0, false);
      }
      else if( point.dataTypeName == "com.google.blood_pressure.summary") {
        this._setStatsData(data, "bp_systolic", point, 0, true);
        this._setStatsData(data, "bp_diastolic", point, 3, true);
      }
    } 
  }

  _parseHistoricalData(data) {
    let historicalCapsule = [];
    try {
      for(let i=0; i<data.bucket.length; i++) {
        let bucket = data.bucket[i];
        let dailyCapsule = {};
        dailyCapsule["startdate"] = bucket.startTimeMillis;
        dailyCapsule["enddate"] = bucket.endTimeMillis;
        for(let j=0; j<bucket.dataset.length; j++) {
          let dataset = bucket.dataset[j];
          let point = dataset.point[0];
          this._populateFields(dailyCapsule, point);
        }
        historicalCapsule.push(dailyCapsule);
      }
    }
    catch(e) {
    }
    return historicalCapsule;
  }

  _setStatsData(data, field, point, offset, roundOff) {
    let average = point.value[offset].fpVal;
    let max = point.value[offset+1].fpVal;
    let min = point.value[offset+2].fpVal;

    data[field + "_average"] = (roundOff == true) ? Math.round(average) : average.toFixed(2);
    data[field + "_max"] = (roundOff == true) ? Math.round(max) : max.toFixed(2);
    data[field + "_min"] = (roundOff == true) ? Math.round(min) : min.toFixed(2);
  }

  _setToken(token) {
    sessionStorage.setItem("token", token);
  }

  _getToken() {
    return sessionStorage.getItem("token");
  }

  _resetToken() {
    sessionStorage.removeItem("token");
  }
}
// export class to a global variable for use of the JavaScriptDistLib (only)
var com = com || {};
com.fc = com.fc || {};
com.fc.JavaScriptDistLib = com.fc.JavaScriptDistLib || {};
com.fc.JavaScriptDistLib.GoogleFit = GoogleFitObject;
// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (GoogleFitObject);


/***/ }),
/* 165 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);
/**
 * Created by Luca Latini on 19/04/17.
 */

// ES6 imports


class GraphContainerObject extends __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__["a" /* default */] {


    constructor() {
        super();
        // this.this.getGraphElemFromName(objName)Ref = this.getGraphElemFromName(objName)Ref || '';
        const self = this;
        this.graph = [];
        this.graphData = {};
        this.graphDataCallback = null;
        this.labelTransformCallbackMap = {};

        $(document).ready(function() {
            //setTimeout( function() {
                $('.element.fc.GraphContainer').each(function (obj) {
                    let objName = $(this)[0].getAttribute('obj-name');
                    let chartData = {};
                    chartData.columns = [['x', 10, 20, 30, 40, 50],['fcData', 10, 20, 30, 40, 50]]
                    chartData.unload = true;
                    self.graph[objName] = self.init(chartData, objName);
                //    self.graph[objName].unload();    this is used to hide the Graph when the preview has been loaded
                });
         //   }, 1000);
        });

        this.getProperty = Object.assign(this.getProperty, {
            'BG Color': (objName) => {
                return this.getGraphElemFromName(objName).css('background-color');
            },

            'Type': (objName) => {
                return this.getGraphElemFromName(objName)[0].getAttribute('graphType');
            },
            'Legends': (objName) => {
               // let val = d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-legend-item').style("visibility") == 'visible'? true : false ;
               // return val;
                return this.getGraphElemFromName(objName)[0].getAttribute('legendShow') === 'true'
            },

            'Grid': (objName) => {
               // let val = d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-grid').style('visibility') == 'visible'? true : false ;
              //  return val;
                return this.getGraphElemFromName(objName)[0].getAttribute('gridShow') === 'true'
            },

            'X Axis Text': (objName) => {
                return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-x').selectAll('text').html();
            },

            'Y Axis Text': (objName) => {
                return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-y').selectAll('text').html();
            },

            'X Axis Color': (objName) => {
                return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-x').selectAll('path').style("stroke");
            },

            'Y Axis Color': (objName) => {
                return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-y').selectAll('path').style("stroke");
            },

            'X Axis Text Color': (objName) => {
                return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-x').selectAll('text').selectAll('tspan').style("fill");
            },

            'Y Axis Text Color': (objName) => {
                return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-y').selectAll('text').selectAll('tspan').style("fill");
            },

            'X Axis Line Width': (objName) => {
                return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-x').selectAll('path').style("stroke-width");
            },

            'Y Axis Line Width': (objName) => {
                return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-y').selectAll('path').style("stroke-width");
            },

            'Legend Text': (objName) => {
                return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('text.c3-axis-x-label').style("stroke");
            },

            'Fill Alpha': (objName) => {
                let type = this.getProperty["Type"](objName);
                if (type == 'line')
                    return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('.c3-area ').style('opacity') * 100;
                else return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-chart-bars ').selectAll('path').style('opacity') * 100;
            },

            'Fill Color': (objName) => {
                return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('.c3-area ').style('fill');
            },

            'Bar Color': (objName) => {
                return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-chart-bar').selectAll('path').style('fill');
            },

            'Line Width': (objName) => {
                return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-chart-lines').selectAll('path').style("stroke-width");
            },

            'Line Circle Color': (objName) => {
                    return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('circle').style("fill");
            },

            'Line Filled': (objName) => {
                return this.getGraphElemFromName(objName)[0].getAttribute('linePlotDrawfilled') === 'true';
            },

            'Smooth Line': (objName) => {
                return this.getGraphElemFromName(objName)[0].getAttribute('linePlotSmoothline') === 'true';
            },

            'Circle Radius': (objName) => {
                return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('circle').attr('r');
            },

            'Draw Line Values': (objName) => {
                return this.getGraphElemFromName(objName)[0].getAttribute('drawLineValues') === 'true';
            },

            'Draw Values': (objName) => {
                return this.getGraphElemFromName(objName)[0].getAttribute('drawBarValues') === 'true';
            },

            'Axis Font Size': (objName) => {
                return d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-x').selectAll('text').selectAll('tspan').style('font-size');
            },

            'X Axis Culling': (objName) => {
                return this.getGraphElemFromName(objName)[0].getAttribute('xAxisCulling') === 'true';
            },
            'Y Axis Custom Range' : (objName) => {
                return this.getGraphElemFromName(objName)[0].getAttribute('yAxisCustomRange') === 'true';
            },
            'Y Axis Min' : (objName) => {
                return this.getGraphElemFromName(objName)[0].getAttribute('yAxisMin');  
            },
            'Y Axis Max' : (objName) => {
                return this.getGraphElemFromName(objName)[0].getAttribute('yAxisMax');  
            }
        });

        this.setProperty = Object.assign(this.setProperty, {

            'BG Color': (objName, value) => {
                this.getGraphElemFromName(objName).css('background-color',value);
            },

            'Type': (objName, value) => {
                this.getGraphElemFromName(objName).attr('graphType', value);
                this.graph[objName].transform(value);
            },

            'Legends': (objName, value) => {
                let show = 'visible';
                if (!value)
                    show = 'hidden';
                this.getGraphElemFromName(objName).attr('legendShow', value)
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-legend-item').style("visibility", show);
            },

            'Grid': (objName, value) => {
                let show = 'visible';
                if (!value)
                    show = 'hidden';
                this.getGraphElemFromName(objName).attr('gridShow', value)
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-grid').style('visibility',show);
            },

            'X Axis Text': (objName, value) => {
                this.graph[objName].axis.labels({x: value});
            },

            'Y Axis Text': (objName, value) => {
                this.graph[objName].axis.labels({y: value});
            },

            'X Axis Color': (objName, value) => {
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-x').selectAll('path').style("stroke", value);
            },

            'Y Axis Color': (objName, value) => {
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-y').selectAll('path').style("stroke", value);
            },

            'X Axis Text Color': (objName, value) => {
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-x').selectAll('text').selectAll('tspan').style("fill", value);
            },

            'Y Axis Text Color': (objName, value) => {
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-y').selectAll('text').selectAll('tspan').style("fill", value);
            },

            'X Axis Line Width': (objName, value) => {
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-x').selectAll('path').style("stroke-width", value);
            },

            'Y Axis Line Width': (objName, value) => {
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-y').selectAll('path').style("stroke-width", value);
            },

            'Legend Text': (objName, value) => {
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('text.c3-axis-x-label').style("stroke", value);
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('text.c3-axis-y-label').style("stroke", value);
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-legend-item').selectAll('text').style("stroke", value);
            },

            'Fill Alpha': (objName, value) => {
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('.c3-area ').style('opacity',value/100);
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-chart-bars ').selectAll('path').style('opacity',value/100);
            },

            'Fill Color': (objName, value) => {
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('.c3-area ').style('fill',value);
            },

            'Bar Color': (objName, value) => {
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-chart-bar').selectAll('path').style('fill',value)
            },

            'Line Width': (objName, value) => {
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-chart-lines').selectAll('path').style("stroke-width", value);
            },

            'Line Circle Color': (objName, value) => {
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('circle').style("stroke", value);
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('circle').style("fill", value);
            },

            'Circle Radius': (objName, value) => {
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('circle').attr('r',value);
            },

            'Draw Line Values': (objName, value) => {
                let show = 'visible';
                if (!value)
                    show = 'hidden';
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-chart-text').selectAll('text').style("visibility", show);
            },

            'Draw Values': (objName, value) => {
                this.setProperty["Draw Line Values"](objName, value);
            },

            'Axis Font Size': (objName, value) => {
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-x').selectAll('text').selectAll('tspan').style('font-size',value);
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('g.c3-axis-y').selectAll('text').selectAll('tspan').style('font-size',value);
                d3.select(this.getGraphElemFromName(objName)[0]).selectAll('text.c3-text').style('font-size',value);
            },

            'Line Filled': (objName, value) => {
                if (value)
                    this.graph[objName].transform('area');
                else
                    this.graph[objName].transform('line');
                this.getGraphElemFromName(objName).attr('linePlotDrawfilled', value)
            },

            'Smooth Line': (objName, value) => {
                if (value)
                    this.graph[objName].transform('area-spline');
                else
                    this.graph[objName].transform('area');
                this.getGraphElemFromName(objName).attr('linePlotSmoothline', value)
            },
            'X Axis Culling': (objName, value) => {
                this.getGraphElemFromName(objName).attr('xAxisCulling', value)
            },
            'Y Axis Custom Range': (objName, value) => {
                if (!value) {
                    this.graph[objName].axis.min(undefined);
                    this.graph[objName].axis.max(undefined);
                }
                this.getGraphElemFromName(objName).attr('yAxisCustomRange', value);
            },
            'Y Axis Min': (objName, value) => {
                let yAxisCustomRange = this.getProperty["Y Axis Custom Range"](objName);
                if (yAxisCustomRange) {
                    this.graph[objName].axis.min(value);
                    //this.graph[objName].redraw();
                    this.getGraphElemFromName(objName).attr('yaxismin', value);
                }
            },
            'Y Axis Max': (objName, value) => {
                let yAxisCustomRange = this.getProperty["Y Axis Custom Range"](objName);
                if (yAxisCustomRange) {
                    this.graph[objName].axis.max(value);
                    //this.graph[objName].redraw();
                    this.getGraphElemFromName(objName).attr('yaxismax', value);
                }
            },
        });
    }

    getGraphElemFromName (objName) {
        return this.getElemFromName(objName).find('#fcLine');
    }
    
    createChartWithList(objName,xArr,yArr,name) {

        let graphData = this.graphData[objName];
        if( graphData == undefined ) {
            graphData = {};
        }

        let graph = this.graph[objName];
        let xAxisData = ['x'];
        let yAxisData = [name];

        if( yArr!=null ) {

            let populateXAxis = false;

            if( xArr!=null ) {
                for(let xIndex=0; xIndex<xArr.length; xIndex++) {
                    xAxisData.push(xArr[xIndex]);
                }
            }
            else {
                populateXAxis = true;
            }


            for(let i=0; i<yArr.length; i++) {
                yAxisData.push(yArr[i]);
                if( populateXAxis )
                    xAxisData.push(i);
            }

            graphData['x'] = xAxisData;
            graphData[name] = yAxisData;
            this.graphData[objName] = graphData;
        
        } else { throw this.graphException(e); }
    }

    addChartTransition(objName,x,y) {

        let graph = this.graph[objName];
        let graphData = this.graphData[objName];

        if( graphData == undefined )
            return;
        
        let chartData = {};
        chartData.columns = [];
        let existingCols = ['fcData'];

        for (var key in graphData) {
           if (graphData.hasOwnProperty(key)) {
             existingCols.push(key);
             chartData.columns.push(graphData[key]);
           }
        }
        
        graph.load({
          columns:chartData.columns,
          unload: true
        });
        
        /*
        let updatedGraph = setTimeout(function () {
            graph.flush();
        }, x);
    
        return updatedGraph;
        */
    }

    addValuesToChart(objName,xVal,yVal,name) {

        let graph = this.graph[objName];

        let xAxisArr = graph.categories();
        xAxisArr.push(xVal);
        let yAxisArr = [];
        
        let chartData = {};
        chartData.columns = [];

        for (let i=0;i<graph.data().length;i++) {
            let data = [graph.data()[i].id];
            for (let j=0;j<graph.data()[i].values.length;j++) {
                data.push(graph.data()[i].values[j].value);
            }
            if (graph.data()[i].id == name) {
                data.push(yVal);
            }
            yAxisArr.push(data);
        }
        for (let i=0;i<graph.data().length;i++) {
            if (graph.data()[i].id != name) {
                let newArr = [name];
                newArr.push(yVal);
                yAxisArr.push(newArr);    
            }
        }
        
        chartData.columns = yAxisArr;
        chartData.categories = xAxisArr;
        chartData.unload = true;
    
        return graph.load(chartData);
    }

    onDataSelected (objName,callback) {
        this.graphDataCallback = callback;
    }

    setLabelTransformFunc(objName, callback) {
        this.labelTransformCallbackMap[objName] = callback;
    }

    graphException(snappMessage, msg) {
        this.name = "GraphException";
        this.snappMessage = snappMessage;
        //custom message from snapp.
        this.message = msg || snappMessage;
        this.stack = (new Error()).stack;
    }

    init(chartData, objName) {
        let ele = this.getGraphElemFromName(objName)[0];
        let graphType  = ele.getAttribute('graphType');
        let circleColor = '';
        if (graphType !== 'bar') {
            circleColor = this.getProperty["Line Circle Color"](objName);
        }
        let fillAlpha;
        let fillColor = graphType == 'bar' ? this.getProperty["Bar Color"](objName) : this.getProperty["Fill Color"](objName);
        let linePlotWidth = graphType == 'line' ? this.getProperty["Line Width"](objName) : '';
        let axisFontSize = this.getProperty["Axis Font Size"](objName);
        let xAxisLabelText = this.getProperty["X Axis Text"](objName);
        let yAxisLabelText = this.getProperty["Y Axis Text"](objName);
        let xAxisColor = this.getProperty["X Axis Color"](objName);
        let yAxisColor = this.getProperty["Y Axis Color"](objName);
        let xAxisTextColor = this.getProperty["X Axis Text Color"](objName);
        let yAxisTextColor = this.getProperty["Y Axis Text Color"](objName);
        let xAxisLineWidth = this.getProperty["X Axis Line Width"](objName);
        let yAxisLineWidth = this.getProperty["Y Axis Line Width"](objName);
        let legendTextColor = this.getProperty["Legend Text"](objName);
        let drawLineValues = this.getProperty["Draw Line Values"](objName);
        let drawBarValues = this.getProperty["Draw Values"](objName);
        let legendShow = this.getProperty["Legends"](objName);
        let gridShow = this.getProperty["Grid"](objName);
        let circleRadius = graphType == 'line' ? this.getProperty["Circle Radius"](objName) : '';
        let fillBarAlpha;
        let chartType;
        let xAxisCulling = this.getProperty["X Axis Culling"](objName);
        let yAxisCustomRange = this.getProperty["Y Axis Custom Range"](objName);

        let yAxisMin = undefined;
        let yAxisMax = undefined;

        if (yAxisCustomRange) {
            yAxisMin = parseInt(this.getProperty["Y Axis Min"](objName));
            yAxisMax = parseInt(this.getProperty["Y Axis Max"](objName));
        }

        if (graphType == 'line') {
            if (ele.getAttribute('linePlotSmoothline') == 'true') {
                if (ele.getAttribute('linePlotDrawfilled') == 'true')
                    chartType = "area-spline";
                else
                    chartType = "spline";
            } else {
                if (ele.getAttribute('linePlotDrawfilled') == 'true')
                    chartType = "area";
                else
                    chartType = "line";
            }
        } else {
            //BAR
            chartType = "bar";
        }

        const self = this;

        let lineInit = function(objName) {

            if (self.graph[objName]) {
                ele = self.getGraphElemFromName(objName)[0];
                graphType  = self.getProperty["Type"](objName);
                circleColor = '';
                if (graphType !== 'bar') {
                    circleColor = ele.getAttribute('circleColor');
                }
                fillAlpha = ele.getAttribute('fillLineAlpha');
                fillColor = graphType == 'bar' ? self.getProperty["Bar Color"](objName) : self.getProperty["Fill Color"](objName);
                linePlotWidth = graphType == 'line' ? self.getProperty["Line Width"](objName): '';
                axisFontSize = self.getProperty["Axis Font Size"](objName);
                xAxisLabelText = self.getProperty["X Axis Text"](objName);
                yAxisLabelText = self.getProperty["Y Axis Text"](objName);
                xAxisColor = self.getProperty["X Axis Color"](objName);
                yAxisColor = self.getProperty["Y Axis Color"](objName);
                xAxisTextColor = self.getProperty["X Axis Text Color"](objName);
                yAxisTextColor = self.getProperty["Y Axis Text Color"](objName);
                xAxisLineWidth = self.getProperty["X Axis Line Width"](objName);
                yAxisLineWidth = self.getProperty["Y Axis Line Width"](objName);
                legendTextColor = self.getProperty["Legend Text"](objName);
                drawLineValues = self.getProperty["Draw Line Values"](objName);
                drawBarValues = self.getProperty["Draw Values"](objName);
                legendShow = self.getProperty["Legends"](objName);
                gridShow = self.getProperty["Grid"](objName);
                circleRadius = graphType == 'line' ? self.getProperty["Circle Radius"](objName) : '';
                fillBarAlpha = ele.getAttribute('fillBarAlpha');

            }

            d3.select(ele).selectAll('g.c3-axis-x').selectAll('text').selectAll('tspan').style("fill", xAxisTextColor);
            d3.select(ele).selectAll('g.c3-axis-y').selectAll('text').selectAll('tspan').style("fill", yAxisTextColor);
            d3.select(ele).selectAll('text.c3-axis-x-label').style("stroke", legendTextColor);
            d3.select(ele).selectAll('text.c3-axis-y-label').style("stroke", legendTextColor);
            d3.select(ele).selectAll('g.c3-legend-item').selectAll('text').style("stroke", legendTextColor);
            d3.select(ele).selectAll('g.c3-texts').selectAll('text').style("fill", legendTextColor);
            d3.select(ele).selectAll('g.c3-axis-x').selectAll('path').style("stroke", xAxisColor);
            d3.select(ele).selectAll('g.c3-axis-y').selectAll('path').style("stroke", yAxisColor);
            d3.select(ele).selectAll('g.c3-axis-x').selectAll('g.tick').selectAll('line').style("stroke", xAxisColor);
            d3.select(ele).selectAll('g.c3-axis-y').selectAll('g.tick').selectAll('line').style("stroke", yAxisColor);
            d3.select(ele).selectAll('g.c3-axis-x').selectAll('path').style("stroke-width", xAxisLineWidth);
            d3.select(ele).selectAll('g.c3-axis-y').selectAll('path').style("stroke-width", yAxisLineWidth);

            if (legendShow) {
                d3.select(ele).selectAll('text.c3-axis-x-label').style("visibility", 'visible');
                d3.select(ele).selectAll('text.c3-axis-y-label').style("visibility", 'visible');
                d3.select(ele).selectAll('g.c3-legend-item').style("visibility", 'visible');
            } else {
                d3.select(ele).selectAll('g.c3-legend-item').style("visibility", 'hidden');
            }

            
            //Draw Values
            if (graphType != 'bar') {
                if (drawLineValues)
                    d3.select(ele).selectAll('g.c3-chart-text').selectAll('text').style("visibility", 'visible');
                else
                    d3.select(ele).selectAll('g.c3-chart-text').selectAll('text').style("visibility", 'hidden');
            }

            if (graphType == 'bar') {
                if (drawBarValues)
                    d3.select(ele).selectAll('g.c3-chart-text').selectAll('text').style("visibility", 'visible');
                else
                    d3.select(ele).selectAll('g.c3-chart-text').selectAll('text').style("visibility", 'hidden');
            }
            setTimeout( function() {
                d3.select(ele).selectAll('circle').style("stroke", circleColor);
                d3.select(ele).selectAll('circle').style("fill", circleColor);
            },100);
            d3.select(ele).selectAll('g.c3-chart-lines ').selectAll('path').style('opacity', 1);
            d3.select(ele).selectAll('.c3-area ').style('fill', fillColor);
            d3.select(ele).selectAll('.c3-shape ').style('stroke', fillColor);
            d3.select(ele).selectAll('path.c3-line').style('stroke-width', linePlotWidth);
            //Bar
            d3.select(ele).selectAll('g.c3-chart-bars ').selectAll('path').style('opacity', fillBarAlpha);
            d3.select(ele).selectAll('g.c3-chart-bar').selectAll('path').style('fill', fillColor);
            //Font Size
            d3.select(ele).selectAll('g.c3-axis-x').selectAll('text').selectAll('tspan').style('font-size', axisFontSize);
            d3.select(ele).selectAll('g.c3-axis-y').selectAll('text').selectAll('tspan').style('font-size', axisFontSize);
            d3.select(ele).selectAll('text.c3-text').style('font-size', axisFontSize);
        };

        this.getGraphElemFromName(objName).css({
            "background-color": this.getProperty["BG Color"](objName)
        });

        let graph = c3.generate({
            bindto: ele,
            data: {
                columns: chartData.columns,
                labels: {
                    format: function(v, id, i, j) {
                        let labelTransformCallback = self.labelTransformCallbackMap[objName];
                        if( labelTransformCallback!=undefined )
                            return labelTransformCallback(id, v);
                        return v;
                    }
                },
                type: chartType,
                colors: {
                    Data : fillColor
                },
                x: 'x',
                onclick: function(e) { 
                    self.graphDataCallback(e.id,e.x,e.value);
                }
            },
            size: {
                width: parseInt(this.getElemFromName(objName)[0].style['width'], 10),
                height: parseInt(this.getElemFromName(objName)[0].style['height'], 10)
            },
            color: {
                pattern: [fillColor]
            },
            onrendered: function () {
                try {
                    lineInit(objName);
                }  catch (e) {
                    console.log (e);
                }
            },
            point: {r:circleRadius},
            transition: {
                duration: 0
            },
            grid: {
                x : {
                    show:gridShow
                },
                y: {
                    show:gridShow   
                }
            },
            axis: {
                x: {
                    type: 'category',
                    // categories: ['1', '2','3','4','5'],
                    // min:0,
                    tick: {
                        culling:xAxisCulling
                    },
                    label: {
                        text: xAxisLabelText
                    }
                },
                y: {
                    label: {
                        text: yAxisLabelText
                    },
                    tick: {
                        culling:true,
                        format: d3.format('.0f')
                    },
                    min:yAxisMin,
                    max:yAxisMax,
                    padding: {top:0, bottom:0}
                }
            }
        });
        

        return graph;
    }

}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (GraphContainerObject);

/***/ }),
/* 166 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__list_grid_common_list_grid_common_module_js__ = __webpack_require__(9);
/**
 */
/*global $ */

// ES6 imports


class GridViewObject extends __WEBPACK_IMPORTED_MODULE_0__list_grid_common_list_grid_common_module_js__["a" /* default */] {
  constructor() {

    super();
    

    this.setProperty = Object.assign(this.setProperty, {

      "height": (obj, value) => {
        try {
          if (obj.hasClass("GridViewCell")) {
            obj.each(function(i) {
              $(this).css("height",value+"px");
              $(this).css("top",value*(i));
            });  
          }
        } catch (e) {
          //GridView
          var elem = $('[obj-name= "' + obj + '"]');
          $(elem).css("height",value+"px");
        }

      },

      Alpha: (obj, value) => {
        try {
          if (obj.hasClass("GridViewCell")) {
            obj.each(function(i) {
              $(this).css("opacity", value/100 );
            });  
          }
        } catch (e) {
          //Gridview
          var elem = $('[obj-name= "' + obj + '"]');
          $(elem).css("opacity", value/100 );
        }
      },
      "Background color" : (obj, value) => {
        try {
          if (obj.hasClass("GridViewCell")) {
            obj.each(function(i) {
              $(this).attr("cell-bg-color",value);
              $(this).css("background-color", value);
            });  
          }
        } catch (e) {
          //Gridview
          var elem = $('[obj-name= "' + obj + '"]');
          $(elem).css("background-color", value);
        }

      },
    });
  }
}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (GridViewObject);

/***/ }),
/* 167 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* HealthKit implementation*/

class HealthKitObject {
  
  constructor() {
    
  }

  authorize(dataTypes, successcallback, failurecallback) {
    successcallback();
  }

  isAvailable() {
    return false;
  }


  readHistoricalData(_startDate, _endDate, dataTypes, successcallback, failurecallback) {

    let parent = this;
    let reqDataTypes = [];

    let startDate = (!_startDate || _startDate instanceof Date) ? _startDate : _startDate.toDate();
    let endDate = (!_endDate || _endDate instanceof Date) ? _endDate : _endDate.toDate();
    
    if( dataTypes.length <= 0 )
      return;
    
    if( startDate == null ) {
      startDate = new Date();
    }
    startDate.setHours(0,0,0,0);

    if( endDate == null ) {
      endDate = new Date();
    }
    endDate.setHours(24, 0, 0, 0);
    
    let numDays = this.daysDiff(startDate,endDate);
    
    var retVal = [];
    
    try {
      for (var i=0;i<numDays;i++) {
        let newDate = new Date(startDate.getTime() + i*24*60*60*1000);
        retVal[i] = {"startdate" : newDate};
        for (var j=0;j<dataTypes.length;j++) {
          
          if (dataTypes[i] = "apple.step_count.delta") {
            retVal[i].steps = Math.floor(Math.random()*(15000-5000+1)+5000);
          }

          if (dataTypes[i] = "com.apple.distance.delta") {
            retVal[i].distance = Math.floor(Math.random()*(10-2+1)+2);
          }

          if (dataTypes[i] = "com.apple.calories.expended") {
            retVal[i].calories = Math.floor(Math.random()*(2500-1500+1)+1500);
          }

          if (dataTypes[i] = "com.apple.weight") {
            retVal[i].weight = Math.floor(Math.random()*(75-70+1)+70);
          }

          if (dataTypes[i] = "com.apple.heart_rate.bpm") {
            retVal[i].hr = Math.floor(Math.random()*(180-50+1)+50);
          }

          if (dataTypes[i] = "com.apple.blood_pressure") {
            retVal[i].bp_systolic = Math.floor(Math.random()*(140-110+1)+50);
            retVal[i].bp_diastolic = Math.floor(Math.random()*(100-80+1)+50);
          }
          
        }
      }
      successcallback (retVal);
    } catch (e) {
      failurecallback (e);
    }

  }

  daysDiff (date1,date2) {
    let timeDiff = Math.abs(date2.getTime() - date1.getTime());
    let diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));
    return diffDays;
  }

  
  recordSample(dataType, data, successcallback, failurecallback) {
    successcallback();
  }

}
// export class to a global variable for use of the JavaScriptDistLib (only)
var com = com || {};
com.fc = com.fc || {};
com.fc.JavaScriptDistLib = com.fc.JavaScriptDistLib || {};
com.fc.JavaScriptDistLib.HealthKit = HealthKitObject;
// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (HealthKitObject);


/***/ }),
/* 168 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);
// ES6 imports


class ImageObject extends __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__["a" /* default */] {

  constructor() {
    super(" image");

    var self = this;

    // this.getProperty['Image'] = function(objName) {
    //   return this.getElemFromName(objName).attr('src');
    // };

    this.getProperty["Image"] = function(objName) {
      let elemSelector = self.getElemFromName(objName);
      let el = $(elemSelector).find("img");
      return el.get()[0];
    };

    this.getProperty["Scaling"] = function(objName) {
      return self.getElemFromName(objName).attr("scale-type");
    };

    // this.setProperty['Image'] = function(objName, value) {
    //     let elemSelector = '[obj-name="' + objName + '"]';
    //     let elem = $(elemSelector);
    //     elem.find('img').attr('src',value);
    // };

    this.setProperty["Image"] = function(objName, image) {

      // let elemSelector = '[obj-name="' + objName + '"]';
      // let elem = $('[obj-name="' + objName + '"]').find('img')
      // elem.attr('src', image.src);

      // getting the native element
      let $oldElem = $("[obj-name=\"" + objName + "\"]").find("img");
      let oldElem = $oldElem.get()[0]; // getting the native element

      // make a copy of the input image
      // this copy will replace the current immage
      let newElem = image.cloneNode();

      // copy all existing img attributes to the new element except src
      for (let i = 0; i < oldElem.attributes.length; i++)
      {
        let attribute = oldElem.attributes[i];
        if (! newElem.getAttribute(attribute.name))
          newElem.setAttribute(attribute.name, attribute.value);
      }
      $oldElem.replaceWith(newElem);
    };

    this.setProperty["Scaling"] = function(objName, value) {
      let elemSelector = "[obj-name=\"" + objName + "\"]";
      let elem = $(elemSelector);
            
      switch (value) {
      case "stretch":
        $(elemSelector + " img").css("width","inherit");
        $(elemSelector + " img").css("height","inherit");
        $(elemSelector + " img").attr("scale-type","stretch");
        break;
      case "fit":
        $(elemSelector + " img").css("width","inherit");
        $(elemSelector + " img").css("height","initial");
        $(elemSelector + " img").attr("scale-type","fit");
        break;
      case "crop":
        $(elemSelector + " img").css("width","initial");
        $(elemSelector + " img").css("height","initial");
        $(elemSelector + " img").attr("scale-type","crop");
        break;
      }
    };
  }
}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (ImageObject);



/***/ }),
/* 169 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);
// ES6 imports


class ImageLibrary {

    constructor() {}

    // static createImageFromUrl(url, successCallBack) {
    //     successCallBack (url);
    // }

    createImageFromUrl(url, successCallBack, failureCallBack) {
        let img = new Image();
        img.crossOrigin = 'anonymous';
        img.src = url;

        img.onload = (e) => {
            successCallBack (e.srcElement);
            // successCallBack (img);
        };

        img.onerror = (e) => {
          console.log('createImageFromUrl, losd error', e);
          failureCallBack(e);
        }
    }

    createImageFromResource(resourceUrl) {
        let img = new Image();
        img.crossOrigin = "anonymous";
        img.src = resourceUrl;
        return img;
    }

    /* async getWidth (image) {

        let img = new Image();
        // img.onload = this.getWidthAndHeight;

        img.src = image;
        let load = () => {
          return new Promise( (resolve,reject) => {
            img.onload = resolve;
          });
        };
        let event = await load();
        console.log('async getWidth, check:', event);

        let width = event.srcElement.width;
        console.log('async getWidth, width:', width);
        return width;

        // let img = document.createElement('img');
        // img.setAttribute('src', image);
        // let width = img.getAttribute('width');
        // return width;
    } */


    // getWidth (image) {
    //   let img = new Image();
    //   img.src = image;
    //   let width = img.width;
    //   return width;
    // }

    getWidth (image) {
        return image.width;
    }

    // getHeight (image) {
    //   let img = new Image();
    //   img.src = image;
    //   let height = img.height;
    //   return height;
    // }

    getHeight (image) {
        return image.height;
    }

    // isImage (image) {
    //     let img = new Image();
    //     img.src = image;
    //     let width = img.width;
    //     if (width > 0) {
    //         return true;
    //     }
    //     return false;
    // }

    isImage (image) {
        let name = image.constructor.name;
        if ( name === 'HTMLImageElement')
            return true;
        else
            return false;
    }

    // applyFilter (image, effect, obj) {
    //   let elemSelector = '[obj-name="'+obj+'"]';
    //   let elem = $(elemSelector + ' img');
    //   switch (effect) {
    //     case "B&W":
    //       $(elem).css('filter','grayscale(1)');
    //       break;
    //     case "SEPIA":
    //       $(elem).css('filter','sepia(1)');
    //       break;
    //   }
    //   return image;
    // }

    applyFilter (image, effect) {
        let clonedImage = image.cloneNode();
        // let clonedImage = image;
        switch (effect) {
            case "B&W":
                $(clonedImage).css('filter','grayscale(1)');
            break;
            case "SEPIA":
                $(clonedImage).css('filter','sepia(1)');
            break;
        }
        return clonedImage;
    }

    // resize (image,width,height,obj) {
    //     let elemSelector = '[obj-name="'+obj+'"]';
    //     let elem = $(elemSelector + ' img');
    //     $(elem).width(width);
    //     $(elem).height(height);
    //     return image;
    // }

    // resize (image, width, height) {
    //   // let elemSelector = '[obj-name="'+obj+'"]';
    //   // let elem = $(elemSelector + ' img');
    //   let elem = image;
    //   $(elem).width(width);
    //   $(elem).height(height);
    //   return image;
    // }

    resize (image, width, height) {

        let canvas = document.createElement('canvas');
        let ctx = canvas.getContext('2d');
        canvas.width = width;
        canvas.height = height;

        let newImage = new Image();
        newImage.crossOrigin = "anonymous";


        if (image.width > 0) {
          ctx.drawImage(image, 0, 0, width, height);
          let imageData = canvas.toDataURL("image/png");
          newImage.src = imageData;
        }
        else {
          image.onload = () => {
            ctx.drawImage(image, 0, 0, width, height);
            let imageData = canvas.toDataURL("image/png");
            newImage.src = imageData;
          }
        }
        return newImage;
    }

    isImageEqual (image1,image2) {
        // let firstImage = new Image();
        // let secondImage = new Image();
        // firstImage.src = image1;
        // secondImage.src = image2;
        let firstImage = image1;
        let secondImage = image2;
        if (this.getBase64Image(firstImage) === (this.getBase64Image(secondImage))) {
            return true;
        }
    }

    clone (image) {
        let clonedImage = image.cloneNode();
        return clonedImage;
    }


    getBase64Image(img) {
        // img.crossOrigin = "Anonymous";
        let canvas = document.createElement("canvas");
        canvas.width = img.width;
        canvas.height = img.height;
        let ctx = canvas.getContext("2d");
        ctx.drawImage(img, 0, 0);
        let dataURL = canvas.toDataURL("image/png");
        return dataURL.replace(/^data:image\/(png|jpg);base64,/, "");
    }

    getAverageColourFromImage (image, success) {
        // let img = new Image ();
        // img.src = image;
        let img = image;
        let colour = this.getAverageRGB (img, 5);
        success (colour);
    }

    getAverageRGB(imgEl, size) {

        // imgEl.crossOrigin = "Anonymous";

        let blockSize = size, // only visit every <size> pixels
            defaultRGB = {r:0,g:0,b:0}, // for non-supporting envs
            canvas = document.createElement('canvas'),
            context = canvas.getContext && canvas.getContext('2d'),
            data, width, height,
            i = -4,
            length,
            rgb = {r:0,g:0,b:0},
            count = 0;
        
        if (!context) {
            return defaultRGB;
        }
        
        height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;
        width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;
        
        context.drawImage(imgEl, 0, 0);
    
        try {
            data = context.getImageData(0, 0, width, height);
        } catch(e) {
            /* security error, img on diff domain */
            return defaultRGB;
        }
        
        length = data.data.length;
        
        while ( (i += blockSize * 4) < length ) {
            ++count;
            rgb.r += data.data[i];
            rgb.g += data.data[i+1];
            rgb.b += data.data[i+2];
        }
        
        // ~~ used to floor values
        rgb.r = ~~(rgb.r/count);
        rgb.g = ~~(rgb.g/count);
        rgb.b = ~~(rgb.b/count);
        
        return 'rgb('+rgb.r+','+rgb.g+','+rgb.b+')';
    }

    getPrimaryColour (image, success) {
        // let img = new Image ();
        // img.src = image;
        let img = image;
        // img.crossOrigin = "Anonymous";
        let ele = $(img);
        var colorThief = new ColorThief();
        let palette = colorThief.getPalette(img, 2);
        let primaryColour = 'rgb('+palette[0][0]+','+palette[0][1]+','+palette[0][2]+')';
        success (primaryColour);
    }

    getSecondaryColour (image, success) {
        // let img = new Image ();
        // img.src = image;
        let img = image;
        // img.crossOrigin = "Anonymous";
        let ele = $(img);
        var colorThief = new ColorThief();
        let palette = colorThief.getPalette(img, 2);
        let secondaryColour = 'rgb('+palette[1][0]+','+palette[1][1]+','+palette[1][2]+')';
        success (secondaryColour);
    }

    ImageException(msg) {
        let error = new Error(msg);
        error.name = "ImageException";
        throw error;
    }

}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (ImageLibrary);



/***/ }),
/* 170 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
class JsonObject {

    constructor() {
    }

    parseJSONDataForPath(data, path) {
        let jsonObject = {};
        if (typeof(data) == 'string') {
            try {
                jsonObject = JSON.parse(data);
            }
            catch (e) {
            }
        }
        else if (typeof(data) == 'object') {
            jsonObject = data;
        }
        let jsonPathObject = jsonPath(jsonObject, path);
        //=== is very important. Otherwise 0 will be treated as false as well.
        if (jsonPathObject === false) {
            jsonObject = null;
            return jsonObject;
        }
        else {
            return jsonPathObject;
        }
    }

    parseJSONDataWithCallback(data, successcallback, failurecallback) {
        let jsonObject = {};
        if (typeof(data) == 'string') {
            try {
                jsonObject = JSON.parse(data);
                successcallback(jsonObject);
            }
            catch (e) {
                failurecallback(e);
            }
        }
        else if (typeof(data) == 'object') {
            successcallback(data);
        }
        else {
            failurecallback("Not a valid JSON");
        }
    }

    parseJSONData(data) {
        let jsonObject = {};
        if (typeof(data) == 'string') {
            try {
                jsonObject = JSON.parse(data);
            }
            catch (e) {
                //e['snappMessage'] = 'The input data does not seem a JSON object';
                //throw (e);
            }
            return jsonObject;
        }
        else if (typeof(data) == 'object') {
            return data;
        }
        else {
            return jsonObject;
        }
    }

    isValidJSON(data) {
        let jsonObject = {};
        if (typeof(data) == 'string') {
            try {
                jsonObject = JSON.parse(data);
                return true;
            }
            catch (e) {
                return false;
            }
        }
        else if (typeof(data) == 'object') {
            return true;
        }
        else {
            return false;
        }
    }

    covertToJSON(data) {
        // return this.parseJSONData(data);
        return JSON.stringify(data);
    }

    setObject(value, path, object) {

        let paths = jsonPath(object, path, {resultType: 'PATH'});

        if (paths === false) {
            return;
        }
        // now we have an array of the paths in the object matching the given expression,
        // like:
        // [
        //   "$['store']['book'][0]['author']",
        //   "$['store']['book'][1]['author']",
        //   "$['store']['book'][2]['author']",
        //   "$['store']['book'][3]['author']"
        // ]
        for (let path of paths) {

            let obj = object;
            let prop = object;
            let propName;

            // get the property referred by the path
            let re = /\['?(.*?)'?\]/g; // same as: let re = new RegExp('\\[\'?(.*?)\'?\\]', 'g');
            let propArray;
            while (propArray = re.exec(path)) {
                obj = prop;
                propName = propArray[1];
                prop = prop[propName];
            }
            if (propName) {
                obj[propName] = value;
            }
        }
    }
}

/* harmony default export */ __webpack_exports__["a"] = (JsonObject);



/***/ }),
/* 171 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__text_object_text_object_module_js__ = __webpack_require__(7);
  // ES6 imports


class LabelObject extends __WEBPACK_IMPORTED_MODULE_0__text_object_text_object_module_js__["a" /* default */] {

  constructor() {
    super(" .label");
    // this.elemSelectorRef = elemSelectorRef || '';
    var self = this;

    this.getProperty = Object.assign(this.getProperty, {
      Text: (objName) => {
        let textFormat = this.getTextElemFromName(objName)[0].getAttribute("textFormat");
        if (textFormat == "Plain Text") {
          return this.getTextElemFromName(objName)[0].getAttribute("plain_text");
        } else return this.getTextElemFromName(objName).html();
      },
      "Max lines": (objName) => {
        return this.getElemFromName(objName).css("-webkit-line-clamp");
      },
      "vertical scroll": (objName) => {
        if (this.getTextElemFromName(objName).css("overflow") == "auto") {
          return "YES";
        } else {
          return "NO";
        }
      }
    });
    this.setProperty = Object.assign(this.setProperty, {
      Text: (objName, value) => {
        let textFormat = this.getTextElemFromName(objName)[0].getAttribute("textFormat");
        if (textFormat == "Plain Text") {
          this.getTextElemFromName(objName).attr("plain_text", value);
          // var data = $('<div>').text(value.replace(RegExp('\\\\n', 'g'), '\n').replace(RegExp('\\\\t', 'g'), '\t')).html().replace(/\n/g,"<br />").replace(/\t/g,"&nbsp;");
          // this.getTextElemFromName(objName).html(data);
          var data = $("<div>").html(value);
          this.getTextElemFromName(objName).html($(data).text());
        } else  {
          this.getTextElemFromName(objName).html(value.replace(RegExp("\\\\n|\\\\t|\\\\r|\\\\r\\\\n", "g"), ""));
        }
      },
      "Max lines": (objName, value) => {
        var elemSelector2 = "[obj-name= \"" + objName + "\"]";
        if (value > 0) {
          $(elemSelector2 + " div.label").css({
            "overflow": "hidden",
            "text-overflow": "ellipsis",
            "display": "-webkit-box",
            "-webkit-line-clamp": value.toString(),
            "-webkit-box-orient": "vertical",
            "height": "auto",
            "padding": "0"
          });
        } else {
          $(elemSelector2 + " div.label").css({
            "text-overflow": "clip",
            "display": "",
            "-webkit-line-clamp": "0",
            "-webkit-box-orient": "",
            "padding": "inherit"
          });
        }
      },
      "vertical scroll": (objName, value) => {
        var elemSelector2 = "[obj-name= \"" + objName + "\"]";
        if (value == "YES") {
          $(elemSelector2 + " div.label").css({
            "overflow": "auto",
            "display": "block"
          });
        } else {
          $(elemSelector2 + " div.label").css({
            "overflow": "hidden"
          });
        }
      }
    });

  }

  /**
   * Computes the height needed to display the whole source
   * @param source        Text String we want to the needed height of
   * @param width
   * @param fontFamily
   * @param fontSize      Font size can be passed as a string like 14px or a number like 14
   * @returns {number}
   */
  getTextHeight(source, width, fontFamily, fontSize) {
    let font = String(fontSize).replace("px", "") + "px" + " " + fontFamily;
    let span = document.createElement("span");

    span.style.font = font;
    span.style.width = width + "px";
    span.style.display = "block";    // Needed to make the text wrap to different lines
    span.style.lineHeight = 1;
    span.innerHTML = source;
    
    // Have to add to the Dom to compute the Height
    document.body.appendChild(span);
    let height = span.offsetHeight;
    document.body.removeChild(span);
    return height;
  }

  //
  //this.getProperty['Max lines'] = function(objName) {
  //    return this.getElemFromName(objName).css('-webkit-line-clamp');
  //};
  //
  //this.setProperty['Max lines'] = function(objName, value) {
  //    var elemSelector2 = '[obj-name= "' + objName + '"]';
  //    $(elemSelector2 + ' div.label').css({
  //      'overflow': 'hidden',
  //      'text-overflow': 'ellipsis',
  //      'display': '-webkit-box',
  //      '-webkit-line-clamp': value.toString(),
  //      '-webkit-box-orient': 'vertical',
  //      'height': 'auto',
  //      'padding':'0'
  //});
}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (LabelObject);

/***/ }),
/* 172 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* Code generator for list object
** Created by Harish Shanthi Kumar on 09/12/2016
*/

// ES6 imports

class ListsObject {

  constructor() {}

  listAdd (list,item) {
    return list.push(item);
  }

  listContains (list,item) {
    return (list.indexOf(item) > -1) ? true : false;
  }

  listAppend (list1,list2) {
    return list1.concat(list2);
  }

  listCheck (list) {
    return (list instanceof Array) ? true: false;
  }

  listEmpty (list) {
    return list.length = 0;
  }

  listOrder (list,order) {
    list.sort(function(a, b){
      if( order == "ASCENDING" ) {
        return a-b;
      }
      else {
        return b-a;
      }
    });
  }

  //Define custom exceptions pertaining to network module here.
  ListsUnsupportedRequest (msg) {
    let error = new Error(msg);
    error.name = 'ListsUnsupportedRequest';
    //error.snappMessage = "something?";
    throw error;
  }

  //Define custom exceptions pertaining to network module here.
  ListsNetworkException (msg) {
    let error = new Error(msg);
    error.name = 'ListsNetworkException';
    //error.snappMessage = "something?";
    throw error;
  }
}

/* harmony default export */ __webpack_exports__["a"] = (ListsObject);

/***/ }),
/* 173 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__list_grid_common_list_grid_common_module_js__ = __webpack_require__(9);
/**
 * Created by Ravi on 18/07/2017
 */
/*global $ */

// ES6 imports


class ListViewObject extends __WEBPACK_IMPORTED_MODULE_0__list_grid_common_list_grid_common_module_js__["a" /* default */] {
  constructor() {

    super();

    this.setProperty = Object.assign(this.setProperty, {
      "height": (obj, value) => {
        try {
          if (obj.hasClass("ListViewCell")) {
            obj.each(function(i) {
              $(this).css("height",value+"px");
              $(this).css("top",value*(i));
            });  
          }
        } catch (e) {
          //Listview
          var elem = $("[obj-name= \"" + obj + "\"]");
          $(elem).css("height",value+"px");
        }

      },
      "Horizontal separator thick": (obj, value) => {
        obj.find(".border-sep").css("height",value+"px");
      },
      
      Alpha: (obj, value) => {
        
        try {
          if (obj.hasClass("ListViewCell")) {
            obj.each(function(i) {
              $(this).css("opacity", value/100 );
            });  
          }
        } catch (e) {
          //Listview
          var elem = $("[obj-name= \"" + obj + "\"]");
          $(elem).css("opacity", value/100 );
        }
      },
      "Background color" : (obj, value) => {
        
        try {
          if (obj.hasClass("ListViewCell")) {
            obj.each(function(i) {
              $(this).attr("cell-bg-color",value);
              $(this).css("background-color", value);
            });  
          }
        } catch (e) {
          //Listview
          var elem = $("[obj-name= \"" + obj + "\"]");
          $(elem).css("background-color", value);
        }

      }
    });
  }

}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (ListViewObject);

/***/ }),
/* 174 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* Location Module
** Created by Harish Shanthi Kumar on 18/14/2017
*/
class LocationObject {
  
  	constructor() {
  		this.watchID = null;
  		this.lastKnownLocation = {lat: 41.9028, lng: 12.4964};
  	}

  locationCreate (lat,lng) {
	  var locationObj = {lat: lat, lng: lng};
	  return locationObj;
  }

  locationCreateFull(lat, lng, altitude, speed) {
	  var locationObj = {lat: lat, lng: lng, altitude: altitude, speed: speed};
	  return locationObj;
  }

  locationCreateHere() {
    var locationObj = {lat: 0.0, lng: 0.0};
    return locationObj;
  }

  locationGetLatitude(loc) {
    return loc.lat;
  }

  locationGetLongitude(loc) {
    return loc.lng;
  }

  locationGetAltitude(loc) {
    return loc.altitude;
  }

  locationGetSpeed(loc) {
    return loc.speed;
  }

  locationGetDistance(loc1, loc2) {
	  var p = 0.017453292519943295;    // Math.PI / 180
	  var c = Math.cos;
	  var a = 0.5 - c((loc2.lat - loc1.lat) * p)/2 + 
	          c(loc1.lat * p) * c(loc2.lat * p) * 
	          (1 - c((loc2.lng - loc1.lng) * p))/2;
	  return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km
  }

  createLocationFromText(text, successCallback, errorCallback) {
    console.log ("createLocationFromText " + text);
    var locationArr = text.split(",");
    if( locationArr.length == 2 ) {
      console.log (locationArr);
      var latitude = locationArr[0];
      var longitude = locationArr[1];
      var locationObj = {lat: latitude, lng: longitude};
      successCallback (locationObj);
    }
    else {
      errorCallback ("Invalid Location");
    }
  }

  locationStartTrack(precision, successCallback) {
    var self = this;
    var locCallback = function(position) {
      var locationObj = {lat: position.coords.latitude, lng: position.coords.longitude};
      self.lastKnownLocation = locationObj;
      successCallback(locationObj);
    };
    this.watchID = navigator.geolocation.watchPosition(locCallback);
  }

  locationStopTrack() {
    navigator.geolocation.clearWatch(this.watchID);
  }

  locationCheckGPS() {
    return navigator.geolocation;
  }

  createLocationFromHere () {
    return this.lastKnownLocation;
  }
}

/* harmony default export */ __webpack_exports__["a"] = (LocationObject);



/***/ }),
/* 175 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);


class MapViewObject extends __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__["a" /* default */] {
  
  constructor() {
    super(" map view");
    const self = this;
    this.maps = [];
    this.markers = [];
    this.getProperty = Object.assign(this.getProperty, {
      "API key": (objName) => {
        return this.getGraphElemFromName(objName)[0].getAttribute("google-map-api-key");
      },
      "Show User Location": (objName) => {
        return this.getGraphElemFromName(objName)[0].getAttribute("show-user-location");
      }
    });
    this.setProperty = Object.assign(this.setProperty, {
      "API key": (objName, value) => {
        this.getGraphElemFromName(objName).attr("google-map-api-key", value);
      },
      "Show User Location": (objName, value) => {
        this.getGraphElemFromName(objName).attr("show-user-location", value);
      }
    });
  }

  reset() {
   
  }

  onMapReady (obj,callback) {
    let mapContainerChildLen = $("[obj-name= \"" + obj + "\"]").find("#mapContainer").children().length;
    if (mapContainerChildLen > 0) {
      callback();
    }
  }

  mapViewSetZoom(mapName, zoom) {
    return this.maps[mapName].setZoom(zoom);
  }

  toggleMapUserInteraction(mapName, interaction) {
    var options = {
      draggable: false,
      scrollwheel: false,
      panControl: false,
      zoom: this.maps[mapName].getZoom(),
    };
    if (interaction) {
      var options = {
        draggable: true,
        scrollwheel: true,
        panControl: true,
        zoom: this.maps[mapName].getZoom(),
      };
    }
    var newOptions = this.maps[mapName].setOptions(options);
    return newOptions;
  }

  createMarkerWithImage(image, label) {
    var marker = {};
    var ref = new google.maps.Marker({ title: label, icon: image });
    marker.ref = ref;
    this.markers.push(marker);
    return marker;
  }

  setLocationForMarker(marker, location) {
    var latlng = new google.maps.LatLng(location.lat, location.lng);
    marker.ref.setPosition(latlng);
  }

  addMarkerToMap(mapName, marker) {
    marker.mapName = mapName;
    marker.ref.setMap(this.maps[mapName]);
    this.centerMarkers(mapName);
  }

  setMarkerLabel(text, marker) {
    return marker.ref.setTitle(text);
  }

  setMarkerImage(image, marker) {
    return marker.ref.setIcon(image);
  }

  removeMarker(marker) {
    marker.ref.setMap(null);
    var index = this.markers.indexOf(marker);
    if (index >= 0) {
      this.markers.splice( index, 1 );
    }
    this.centerMarkers(marker.mapName);
  }

  mapViewSetLocation(mapName, location, animation) {
    var latlng = new google.maps.LatLng(location.lat, location.lng);
    this.maps[mapName].setCenter(latlng);
  }

  centerMarkers(mapName) {
    var bounds = new google.maps.LatLngBounds();
    for(var i=0; i<this.markers.length; i++) {
      bounds.extend(this.markers[i].ref.getPosition());
    }

    this.maps[mapName].setCenter(bounds.getCenter());
    this.maps[mapName].fitBounds(bounds);
    this.maps[mapName].setZoom(this.maps[mapName].getZoom()-1);
  }

  MapException(snappMessage, msg) {
    this.name = "MapException";
    this.snappMessage = snappMessage;
    //custom message from snapp.
    this.message = msg || snappMessage;
    this.stack = (new Error()).stack;
  }
}

/* harmony default export */ __webpack_exports__["a"] = (MapViewObject);




/***/ }),
/* 176 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* Code generator for the Math Library object
 ** Created by Oscar Rangel on 7/12/2016
 */

 // ES6 imports

class MathLibraryObject {

  constructor() {}

  toNumber (num) {
    if (this.isNumber(num)) {
        return Number(num);
    }
    return null;
  }

  isNumber (o) {
    return ! isNaN(o-0) && o !== null && o !== "" && o !== false && o !== true;
  }

  mathCompare (num1, comp, num2) {
    switch (comp) {
      case "EQ":
        return this.toNumber(num1) == this.toNumber(num2);
      case "NEQ":
        return this.toNumber(num1) != this.toNumber(num2);
      case "LT":
        return this.toNumber(num1) < this.toNumber(num2);
      case "LTE":
        return this.toNumber(num1) <= this.toNumber(num2);
      case "GT":
        return this.toNumber(num1) > this.toNumber(num2);
      case "GTE":
        return this.toNumber(num1) >= this.toNumber(num2);
      default:
        return false;
    }
  }

  mathMinMax (num1, comp, num2) {
    switch (comp) {
      case "MIN":
        return Math.min(this.toNumber(num1), this.toNumber(num2));
      case "MAX":
        return Math.max(this.toNumber(num1), this.toNumber(num2));
      default:
        return 0;
    }
  }

  mathMinMaxList (comp, list) {
     switch (comp) {
        case "MIN":
          return Math.min(...list);
        case "MAX":
          return Math.max(...list);
        default:
          return 0;
     }
  }

   mathMinMaxDict (comp, dict) {
    let arr = Object.values(dict)
    switch (comp) {
        case "MIN":
            return Math.min(...arr);
        case "MAX":
            return Math.max(...arr);
        default:
            return 0;
     }
  }

  mathModulo (num1, comp, num2) {
    switch (comp) {
      case "MODULO":
        return this.toNumber(num1)%this.toNumber(num2);
      case "QUOTIENT":
        return Math.floor(this.toNumber(num1)/this.toNumber(num2));
      default:
        return 0;
    }
  }

  mathConversionRadDeg (comp, num) {
    switch (comp) {
      case "DEGTORAD":
        return this.toNumber(num) * (Math.PI/180);
      case "RADTODEG":
        return this.toNumber(num) * (180/Math.PI);
      default:
        return 0;
    }
  }

  mathRoundPrecision (num,percision) {
    return Math.round(this.toNumber(num) * Math.pow(10, this.toNumber(percision))) / Math.pow(10, this.toNumber(percision))
  }

  //Define custom exceptions
}

/* harmony default export */ __webpack_exports__["a"] = (MathLibraryObject);

/***/ }),
/* 177 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Motion Module
*/

class MotionObject {

    constructor() {
        this.interval = null;
    }

    start (interval,callback) {
        
        this.interval = setInterval(function(){ 
            window.addEventListener('deviceorientation', function(event) {
                console.log ("event fired");
                callback(event);
            });
        }, interval*1000); //MS
        
    }

    stop () {
        try {
            clearInterval(this.interval);
        } catch (e) {
            console.error ("Not capturing Orientation event");
        }
    }

    getX (motion) {
        return motion.beta;
    }

    getY (motion) {
        return motion.gamma;
    }

    getZ (motion) {
        return motion.alpha;
    }

    onPhoneShaken (callback) {
        window.addEventListener('deviceorientation', function(event) {
            console.log ("event fired - shake");
            callback();
        });
    }


}

/* harmony default export */ __webpack_exports__["a"] = (MotionObject);

/***/ }),
/* 178 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ES6 imports

class NetworkObject {

  constructor() {
    this.onlineCallback = null;
    this.offlineCallback = null;
  }

  createHTTPRequest (url, method) {
    let request = {};
    let protocol = url.split(":")[0];
    if( (method === "GET" || method === "POST" || method === "PUT" || method === "DELETE") &&
        (protocol === "http" || protocol === "https") ) {
      request.url = url;
      request.method = method;
      request.headers = {};
      request.data = {};
      return request;
    }
    else {
      this.HTTPUnsupportedRequest("We support basic http/https operations.<br>Request type can be one of GET/POST/PUT or DELETE");
      return request;
    }
  }

  addHTTPHeader (request, key , value) {
    request.headers[key] = value;
  }

  addHTTPParams (request, key, value) {
    request.data[key] = value;
  }

  setHTTPBody (request, body) {
    if( typeof body == "object" ) {
      request.data = JSON.stringify(body);
    }
    else if (typeof body == "string") {
      request.data = body;
    }
    else {
      request.data = "";
      throw new IllegalArgumentException("Body can be currently only of type string or json");
    }
  }

  setDataType (request, type) {
    request.dataType = type;
  }

  setProxyState (request, state) {
    request.proxy = state;
  }

  sendHTTPRequest (request, successcallback, failurecallback) {
    // let url = this.getSanitizedURL(request); // use to use the proxy
    let url = request.url;
    let method = request.method;
    let data = request.data;
    let dataType = request.dataType;
    let headers = request.headers;
    let parent = this;

    if (!window._wifiAvailable) {
      console.error("Network was manually disabled for preview!");
      failurecallback && failurecallback("503: service unavailable");
      return;
    }

    $.ajax(
      {
        url: url,
        type: method,
        headers: headers,
        dataType: dataType,
        data: data,
        success: function (response) {
          successcallback(response);
        },
        error: function(xhr, code, msg) {
          failurecallback(code + ": "+ msg);
        }
      });
  }

  getSanitizedURL (request) {
    let proxyUrl = "https://iot.snapp.click:8443/"; // backup 1337
    let isProxyRequired = true; //default is proxy required
    let url = request.url;

    if( (request.proxy != undefined) && (request.proxy === false) ) {
      isProxyRequired = false;
    }

    let sanitizedUrl = url;
    if (isProxyRequired) {
      // url = url.replace(/^.+:\/\//, ""); //Removes all possible protocols - NOTE: not needed with the latest proxy implementation
      sanitizedUrl = proxyUrl + url;
      return sanitizedUrl;
    } else {
      return url;
    }
  }

  //Define custom exceptions pertaining to network module here.

  HTTPUnsupportedRequest (msg) {
    let error = new Error(msg);
    error.name = "HTTPUnsupportedRequest";
    //error.snappMessage = "something?";
    throw error;
  }

  //Define custom exceptions pertaining to network module here.
  HTTPNetworkException (msg) {
    let error = new Error(msg);
    error.name = "HTTPNetworkException";
    //error.snappMessage = "something?";
    throw error;
  }

  // Network monitoring functions

  startMonitoring(whenOnline, whenOffline) {
    this.onlineCallback = whenOnline;
    this.offlineCallback = whenOffline;
    window.addEventListener("online", function(e) { whenOnline && whenOnline(); });
    window.addEventListener("offline", function(e) { whenOffline && whenOffline(); });
  }

  stopMonitoring() {
    if (this.onlineCallback) window.removeEventListener("online", this.onlineCallback);
    if (this.offlineCallback) window.removeEventListener("offline", this.offlineCallback);
  }

  isNetworkAvailableViaWifi() {
    return window._wifiAvailable;
  }

  isNetworkAvailableViaWWAN() {
    return this.isNetworkAvailableViaWifi();
  }
}

/* harmony default export */ __webpack_exports__["a"] = (NetworkObject);


/***/ }),
/* 179 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Notification Module
*/

class NotificationObject {

  constructor() {
    this.onClickCallback = {};
    this.onDismissCallback = {};
    this.onReceivedCallback = {};
    this.notifications = [];
  }

  // configure(callback, callback2) {
  //   this.onClickCallback = callback;
  //   this.onDismissCallback = callback2;
  // }

  register(identifier, type, callback) {
    if (type === "click") this.onClickCallback[identifier] = callback;
    if (type === "show") this.onReceivedCallback[identifier] = callback;
    else this.onDismissCallback[identifier] = callback;
  }

  create (title, text, data) {
    let notification = {};
    notification["title"] = title;
    notification["bodytext"] = text;
    notification["carrying"] = data;
    this.notifications.push(notification);
    return notification;
  }

  getTitle (notification) {
    return notification["title"];
  }

  getText (notification) {
    return notification["bodytext"];
  }

  getData(notification) {
    return notification["carrying"];
  }

  schedule (identifier, time, notification) {
    let self = this;
    let scheduledTime = (time instanceof Date) ? time : time.toDate() ;
    notification["timerid"] = setInterval(function(){
      let currTime = new Date();
      if (currTime.toString() == scheduledTime.toString()) {
        self.notify(identifier, notification);
        clearInterval(notification["timerid"]);
      }
    },1000);
  }

  cancel (notification) {
    this.cancelNotification(notification);
  }

  cancelAll () {
    let self = this;
    self.notifications.forEach(function (notification) {
      self.cancelNotification(notification);
    });
  }

  cancelNotification(notification) {
    if( notification!= undefined ) {
      clearInterval(notification["timerid"]);
      if( notification["notobject"]!=undefined ) {
        notification["notobject"].close();
        notification["notobject"] = null;
      }
    }
  }

  notify (identifier, notification) {
    let self = this;
        
    if (!("Notification" in window)) {
      console.error("Notification not supported");
    }
    else if (Notification.permission === "granted") {
      self.displayNotification(identifier, notification);
    }
    else if (Notification.permission !== "denied") {
      Notification.requestPermission(function (permission) {
        // If the user accepts, let's create a notification
        if (permission === "granted") {
          self.displayNotification(identifier, notification);
        }
      });
    }
  }

  displayNotification(identifier, notification) {
    let self = this;
    let title = notification["title"].replace(/'/g,"");
    let bodyText = notification["bodytext"].replace(/'/g,"");

    notification["notobject"] = new Notification(title, { body: bodyText, 
      requireInteraction: true});
    notification["notobject"].onclick = function(event) {
      event.preventDefault();
      if( self.onClickCallback[identifier])
        self.onClickCallback[identifier](notification);
    };
    notification["notobject"].onclose = function(event) {
      event.preventDefault();
      if( self.onDismissCallback[identifier] )
        self.onDismissCallback[identifier](notification);
    };
    if (self.onReceivedCallback[identifier])
      self.onReceivedCallback[identifier](notification);
  }
}

var com = com || {};
com.fc = com.fc || {};
com.fc.JavaScriptDistLib = com.fc.JavaScriptDistLib || {};
com.fc.JavaScriptDistLib.Notification = NotificationObject;

/* harmony default export */ __webpack_exports__["a"] = (NotificationObject);

/***/ }),
/* 180 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);
/**
 * PageView Module Module
 /*global $ 
*/



class PageViewObject extends __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__["a" /* default */] {
  constructor() {
    
    super();
    const self = this;
    this.slider = [];
    this.slideChangeCallback = null;
    this.scrollCallback = null;

    $(document).ready(function() {
      $(".snapp-html5.fc.PageView").each(function () {
        let objName = $(this)[0].getAttribute("obj-name");
        let el = $(this);
        $(this).find(".PageView").remove();
        self.slider[objName] = $(this).bxSlider(self.getSliderOptions(el));
        $(this).children().css("opacity",1);
      });
    });

  }

  getSliderOptions (ele) {
    
    let animation = $(ele)[0].getAttribute("page-transition-animation");
    let circular = $(ele)[0].getAttribute("page-circular");
    let indicators = $(ele)[0].getAttribute("show-indicators");

    //Options
    let circularSlides = false;
    if (circular == "YES") {
      circularSlides = true;
    }

    let transitionType = "horizontal";
    let transitionSpeed = 500;

    if (animation == "scroll") {
      transitionType = "horizontal";
      transitionSpeed = 500;
    }

    if (animation == "fade") {
      transitionType = "fade";
      transitionSpeed = 500;
    }

    if (animation == "none") {
      transitionSpeed = 0;
    }

    let showPager = true;
    if (indicators == "NO") {
      showPager = false;
    }

    return {
      "infiniteLoop": circularSlides,
      "mode": transitionType,
      "speed":transitionSpeed,
      "pager": showPager,
      "touchEnabled": false
    };

  }

  scrollToPage (obj,page,animated) {
    this.slider[obj].goToSlide(page,animated);    
  }

  getCurrentPage (obj) {
    return this.slider[obj].getCurrentSlide();
  }

  getPages (obj) {
    let sliderArr = [];
    sliderArr.push(this.slider[obj][0]);
    return sliderArr;
  }

  setPages (obj,pages) {
    // add new item(s) to the slider
    let ele = "[obj-name= '" + obj + "']";
    for (let i=0;i<pages.length;i++) {
      $(ele).append("<div class='PageViewPage'></div>");
    }

    // get the current slide
    let currentSlide = this.slider[obj].getCurrentSlide();
    // reload the instance
    let options = this.getSliderOptions(ele);
    options.startSlide = currentSlide;
    this.slider[obj].reloadSlider(options);
    $(ele).find(".PageViewPage:eq("+currentSlide+")").css("opacity",1);
  }

  onPageChange (obj,callback) {
    this.slideChangeCallback = callback;
    let ele = "[obj-name= '" + obj + "']";
    let options = this.getSliderOptions(ele);
    options.onSlideAfter = function($slideElement, oldIndex, newIndex) {
      callback && callback(newIndex);
    };
    this.slider[obj].reloadSlider(options);
    $(".element.fc.PageView").each(function () {
      $(this).children().css("opacity",1);
    });
  }

  onPageScroll (obj,callback) {
    let ele = "[obj-name= '" + obj + "']";
    let options = this.getSliderOptions(ele);
    options.onSlideAfter = function($slideElement) {
      callback($slideElement[0].offsetLeft);
    };
    this.slider[obj].reloadSlider(options);
    $(".element.fc.PageView").each(function () {
      $(this).children().css("opacity",1);
    });
  }

  refresh (obj) {
    this.slider[obj].redrawSlider();
  }

}

/* harmony default export */ __webpack_exports__["a"] = (PageViewObject);

/***/ }),
/* 181 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Phone Library Module
*/

class PhoneObject {

  constructor() {}

  call (number,successCallback,erorCallback) {
    let link = document.createElement("a");
    link.href = "tel:"+number;
    link.click();
    successCallback(); //Telephony callback?
  }

  composeSms () {
    let link = document.createElement("a");
    link.href = "sms: ";
    link.click();
  }

  sendSms (numbers,body) {
    let link = document.createElement("a");
    link.href = "sms:+"+numbers+"?body="+body;
    link.click(); 
  }

  composeEmail () {
    let link = document.createElement("a");
    link.href = "mailto: ";
    console.log (link);
    link.click();  
  }

  sendEmail (to,cc,bcc,subject,message) {
    let link = document.createElement("a");
    link.href = "mailto:"+to+"?subject="+subject+"&cc="+cc+"&bcc="+bcc+"&body="+message;
    console.log (link);
    link.click();    
  }

}

/* harmony default export */ __webpack_exports__["a"] = (PhoneObject);



/***/ }),
/* 182 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* QR Code Scanner implementation
** Created by Harish Shanthi Kumar on 30/05/2018
*/

class QRCodeScannerObject {
  
  constructor() {
    this.scanSuccessCallback = {};
    this.scanFailedCallback = {};
  }

  // configure(scanSuccessCallback, scanFailedCallback, identifier) {
  //   //hs: common across all devices. These are events
  //   this.scanSuccessCallback[identifier] = scanSuccessCallback;
  //   this.scanFailedCallback[identifier] = scanFailedCallback;
  // }

  register(identifier, type, callback) {
    if (type === "success") {
      this.scanSuccessCallback[identifier] = callback;
    } else {
      this.scanFailedCallback[identifier] = callback;
    }
  }

  
  scan(identifier) {
    let parent = this;
    let dummyData = {invitecode: "123456789"};
    this.scanSuccessCallback[identifier] && this.scanSuccessCallback[identifier](JSON.stringify(dummyData));
  }

}
// export class to a global variable for use of the JavaScriptDistLib (only)
var com = com || {};
com.fc = com.fc || {};
com.fc.JavaScriptDistLib = com.fc.JavaScriptDistLib || {};
com.fc.JavaScriptDistLib.QRCodeScanner = QRCodeScannerObject;
// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (QRCodeScannerObject);

/***/ }),
/* 183 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);
/**
 * Created by Luca Latini on 27/03/17.
 */

// ES6 imports


class ScreenObject extends __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__["a" /* default */] {

  constructor(elemSelectorRef) {
    super();
    const self = this;

    // Element selector
    this.elemSelectorRef = elemSelectorRef || "";

    // Getting Text properties values

    this.getProperty = Object.assign(this.getProperty, {
      "Background image": (objName) => {
        let img = new Image();
        // img.src = this.getScreenElemFromName(objName).css('background-image');
        let imgEl = this.getScreenElemFromName(objName).find("img");
        img.src = imgEl.attr("src");
        return img;
      },
      x: (objName) => { return 0; }, // some properties of the base-object has been overwritten because
      y: (objName) => { return 0; }  // html5 must have the same behaviour of the android and ios platforms
    });

    this.setProperty = Object.assign(this.setProperty, {
      "Background color": (objName, value) => {
        this.getScreenElemFromName(objName).css({
          "background-color": value,
          "background-image": "",
          "background-size": "",
          "background-repeat": ""
        });
      },
      "Background image": (objName, image) => {
        let imgEl = this.getScreenElemFromName(objName).find("img");
        imgEl.attr("src", image.src);
        //  this.getScreenElemFromName(objName).css({
        //     'background-image': "url('" + image.src + "')",
        //     'background-size': 'contain',
        //     'background-color': '',
        //     'background-repeat': 'no-repeat'
        // });
      },
      width: (objName, value) => {},
      height: (objName, value) => {},
      x: (objName, value) => {},
      y: (objName, value) => {},

      "Loader Visible":(objName, value) => {
        var ele = this.getScreenElemFromName(objName);
        if (value) {
          var overlayColor = $(ele).attr("overlay-color");
          var spinnerUrl = $(ele).attr("spinner-url");
          $(ele).append("<div class = 'spinner-overlay' style = 'background:"+overlayColor+";position:absolute;top:0;left:0;width:100%;height:100%;text-align:center;z-index:1;'><img src = '"+spinnerUrl+"' style = 'position: relative;top: 50%;transform: translateY(-50%);'/></div>");
        } else {
          $(ele).find(".spinner-overlay").remove();
        }
      }
    });

    this.screenDict = {};
  }

  /**
     * Retrieves the screen element with a given object-name attribute
     * @param objName
     * @returns {*|jQuery|HTMLElement}
     */
  getScreenElemFromName (objName) {
    return $("[obj-name= \"" + objName + "\"]" + this.elemSelectorRef);
  }

  init ( elemSelectorRefValue) {
    this.elemSelectorRef = elemSelectorRefValue;
  }

  screenPopInit () {
    const self = this.screenDict;
    window.addEventListener("popstate", function (e) {
      let currentScreen = $(".HTML5-deploy-wrapper .Screen:visible");
      let currentScreenName = currentScreen[0].getAttribute("obj-name");
      let callbackScreen =  "back" + currentScreenName;
      if (self[callbackScreen]) {
        history.pushState({"view": currentScreenName}, currentScreenName, "?" + currentScreenName);
        self[callbackScreen]();
      }  else {
        currentScreen.hide();
        $("[obj-name=\"" + e.state.view + "\"]").show();
      }
    });
  }
  screenOrientationInit () {
    const self = this.screenDict;
    window.addEventListener( "orientationchange", function( e ) {
      let currentScreen = $(".HTML5-deploy-wrapper .Screen:visible");
      let currentScreenName = currentScreen[0].getAttribute("obj-name");
      let callbackScreen = "orientation" + currentScreenName;
      if (self[callbackScreen]) {
        let getOrientation = "";
        switch(window.orientation) {
        case -90:
        case 90:
          getOrientation = "landscape";
          break;
        default:
          getOrientation = "portrait";
          break;
        }
        self[callbackScreen](getOrientation);
      }
    });
  }

  displayScreenWithName(screenName) {
    //Close all dialogs
    this.closeDialogs();
    let currentScreen = $(".HTML5-deploy-wrapper .Screen:visible");
    let showScreen = $("[obj-name=\"" + screenName + "\"]");
    if (showScreen.length) {
      currentScreen.hide();
      showScreen.show();
      history.pushState({"view": "${showScreen}"}, "${showScreen}", "?${showScreen}");
      currentScreen.triggerHandler("hide");
      showScreen.triggerHandler("show");
    }      
  }

  getDisplayedScreenName() {
    return $(".HTML5-deploy-wrapper .Screen:visible").attr("obj-name");
  }

  closeDialogs () {
    //Closes all dialogs used.
    $(".modal").modal('hide');
  }

}

/* harmony default export */ __webpack_exports__["a"] = (ScreenObject);



/***/ }),
/* 184 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);
/**
 * Shapes Module
 */

// ES6 imports


class ShapeObject extends __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__["a" /* default */] {

    constructor() {
        super();
        const self = this;
        
        this.getProperty = Object.assign(this.getProperty, {
            'Alpha': (objName) => {
                return $(this.getEleByObjName(objName)).css('opacity') * 100;
            },

            'Background color': (objName) => {
                return $(this.getEleByObjName(objName)).css("background-color");
            },

            'Stroke Color': (objName) => {
               return self.getElemFromName(objName).css("border-color");
            },

            'Stroke Width': (objName) => {
                return self.getElemFromName(objName).css("border-width");
            },

            'Stroke Radius': (objName) => {
                return self.getElemFromName(objName).css("border-radius");
            }
        });

        this.setProperty = Object.assign(this.setProperty, {
            'Alpha': (objName, value) => {
                let parentEle = '[obj-name="' + objName + '"]';
                $(parentEle).css("opacity", value / 100);
            },

            'Background color': (objName, value) => {
                let parentEle = '[obj-name="' + objName + '"]';
                $(parentEle).css("background-color", value);
            },

            'Fill Color': (objName, value) => {
                $(this.getEleByObjName(objName)).css("background-color", value);
            },

            'Stroke Color': (objName, value) => {
                $(this.getEleByObjName(objName)).css("border-color", value);
            },

            'Stroke Width': (objName, value) => {
                $(this.getEleByObjName(objName)).css("border-width", value);
            },

            'Stroke Radius': (objName, value) => {
                $(this.getEleByObjName(objName)).css("border-radius", value);
            },
            'type' : (objName,value) => {
                if (value == "rectangle") {
                    $(this.getEleByObjName(objName)).removeClass('ellipse');
                    $(this.getEleByObjName(objName)).addClass('rectangle');
                    $(this.getEleByObjName(objName)).css('height','inherit'); 
                } else if (value == "ellipse") {
                    $(this.getEleByObjName(objName)).removeClass('rectangle');
                    $(this.getEleByObjName(objName)).addClass('ellipse');
                    $(this.getEleByObjName(objName)).css('height','inherit');

                } else {
                    // $(this.getEleByObjName(objName)).removeClass('ellipse');
                    // $(this.getEleByObjName(objName)).css('height','initial'); // Collapse the rect
                    // $(this.getEleByObjName(objName)).css('border-radius',0); // reset border radius
                }
            }
        });
    }
    

    getEleByObjName (obj) {
        let parentEle = '[obj-name="' + obj + '"]';
        let ele = $(parentEle).find(".wrapper")[0];
        return ele;
    }
}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (ShapeObject);

/***/ }),
/* 185 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__text_object_text_object_module_js__ = __webpack_require__(7);
// ES6 imports


class SliderObject extends __WEBPACK_IMPORTED_MODULE_0__text_object_text_object_module_js__["a" /* default */] {

  constructor() {
    super(".Slider");

    var self = this;

    $(document).ready(function() {
      $(".element.fc.Slider").each(function (obj) {
        var ele = $(this).find("#fcSlider")[0];
        $(this).find(".range-bar").remove();
        new Powerange(ele, {
          "hideRange": true,
          "min":$(ele).attr("min"),
          "max":$(ele).attr("max"),
          "start":$(ele).attr("curpos")
        });
        var sliderpos = ($(ele).attr("curpos")/$(ele).attr("max"))*100;
        $(this).find(".range-bar").find(".range-quantity").css("width",sliderpos+"%");
        let offset = 0;
        sliderpos > 65 ? offset = 20 : offset = 0;
        $(this).find(".range-bar").find(".range-handle").css("left", "calc(" + sliderpos +"% - " + offset + "px)");
        $(this).find("#fcSlider").attr("value",sliderpos);

        //Track
        $(this).find(".range-bar").css("background-color", $(ele).attr("track-color"));
        $(this).find(".range-quantity").css("background-color", $(ele).attr("selection-color"));

        //Left & right icons
        if ($(ele).attr("left-icon")) {
          $(this).find(".range-min").css({
            "background-image": "url(" + $(ele).attr("left-icon") + ")"
          });
        }
        if ($(ele).attr("right-icon")) {
          $(this).find(".range-max").css({
            "background-image": "url(" + $(ele).attr("right-icon") + ")"
          });
        }
        if ($(ele).attr("thumb-icon")) {
          $(this).find(".range-handle").addClass("custom");
          $(this).find(".range-handle").css({
            "background-image": "url(" + $(ele).attr("thumb-icon") + ")"
          });
        }

        //BG and selection images
        if ($(ele).attr("bg-image")) {
          const self = this;
          let imgSize = "4px";
          const img = new Image();
          img.src = $(ele).attr("bg-image");
          img.onload = function() {
            imgSize = this.height > 25 ? "25%" : "4px";
            $(self).find(".range-bar").css("height", imgSize);
            if (this.height > 25) {
              $(self).find(".range-handle").css("top", "4px");
              $(self).find(".range-max").css("padding-top", this.height / 2);
              $(self).find(".range-min").css("padding-top", this.height / 2);
            }
          };
          $(this).find(".range-bar").css({
            "background-image": "url(" + $(ele).attr("bg-image") + ")",
            "background-repeat": "no-repeat",
            "background-size": "100% 100%",
            "background-color": "transparent",
            "border-radius": "0"
          });
          // disable all colors to show picture
          $(this).find(".range-quantity").css("background-color", "transparent");

        }
        if ($(ele).attr("selection-image")) {
          $(this).find(".range-quantity").css({
            "background-image": "url(" + $(ele).attr("selection-image") + ")"
          });   
        }

        // on change update curpos
        $(ele).change(function() {
          $(ele).attr("curpos", $(ele).val());
        });
      });
    });

    this.getProperty = Object.assign(this.getProperty, {
      "Current value": (objName) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        return $(ele).find("#fcSlider").attr("curpos");
      },
      "Minimum value": (objName) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        return $(ele).find("#fcSlider").attr("min");
      },
      "Maximum value": (objName) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        return $(ele).find("#fcSlider").attr("max");
      },
      "Left icon": (objName) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        return $(ele).find(".range-min").css("background-image");
      },
      "Right icon": (objName) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        return $(ele).find(".range-max").css("background-image");
      },
      "Thumb icon": (objName) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        return $(ele).find(".range-handle").css("background-image");
      },
      "Background color": (objName) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        return $(ele).find(".range-bar").css("background-color");
      },
      "Selection color": (objName) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        return $(ele).find(".range-quantity").css("background-color");
      },
      "Background image": (objName) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        return $(ele).find(".range-bar").css("background-image");
      },
      "Selection image": (objName) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        return $(ele).find(".range-quantity").css("background-image");
      },
    });
    this.setProperty = Object.assign(this.setProperty, {
      "Current value": (objName, value) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        var max = $(ele).find("#fcSlider").attr("max");
        var currval = (value/max)*100;
        $(ele).find(".range-bar").find(".range-quantity").css("width",currval+"%");
        let offset = 0;
        currval > 65 ? offset = 20 : offset = 0;
        $(ele).find(".range-bar").find(".range-handle").css("left", "calc(" + currval +"% - " + offset + "px)");
        //$(ele).find("#fcSlider").val(value).trigger('change');
        $(ele).find("#fcSlider").attr("curpos",value);
      },
      "Minimum value": (objName,value) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        $(ele).find("#fcSlider").attr("min",value);
      },
      "Maximum value": (objName,value) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        $(ele).find("#fcSlider").attr("max",value);
      },
      "Left icon": (objName,value) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        $(ele).find(".range-min").css({
          "background-image": "url(" + $(value).attr("src") + ")"
        });
      },
      "Right icon": (objName,value) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        $(ele).find(".range-max").css({
          "background-image": "url(" + $(value).attr("src") + ")"
        });
      },
      "Thumb icon": (objName,value) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        $(ele).find(".range-handle").addClass("custom");
        $(ele).find(".range-handle").css({
          "background-image": "url(" + $(value).attr("src") + ")",
          "background-color":"transparent",
          "border-radius":0,
          "background-size":"contain",
          "background-repeat":"no-repeat",
          "background-position":"center center",
          "box-shadow":"none"
        });
      },
      "Background color": (objName,value) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        $(ele).find(".range-bar").css("background-color", value);
      },
      "Selection color": (objName,value) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        $(ele).find(".range-quantity").css("background-color", value);
      },
      "Background image": (objName,value) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        const self = this;
        let imgSize = "4px";
        const img = new Image();
        img.src = $(value).attr("src");
        img.onload = function() {
          imgSize = this.height > 25 ? "25%" : "4px";
          $(self).find(".range-bar").css("height", imgSize);
          if (this.height > 25) {
            $(self).find(".range-handle").css("top", "4px");
            $(self).find(".range-max").css("padding-top", this.height / 2);
            $(self).find(".range-min").css("padding-top", this.height / 2);
          }
        };
        $(ele).find(".range-bar").css({
          "background-image": "url(" + $(value).attr("src") + ")",
          "background-repeat": "no-repeat",
          "background-size": "100% 100%",
          "background-color": "transparent",
          "border-radius": "0"
        });
      },
      "Selection image": (objName,value) => {
        var ele = "[obj-name= \"" + objName + "\"]";
        $(ele).find(".range-quantity").css({
          "background-image": "url(" + $(value).attr("src") + ")"
        });
      },
      "Text": (objName, value) => {
        // do nothing
      }
    });

  }
}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (SliderObject);

/***/ }),
/* 186 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* Smart Devices implementation
** Created by Harish Shanthi Kumar on 01/13/2017
*/

class SmartDevicesObject {
  //Supported devices are heart_rate, blood_pressure, glucometer, spo2
  constructor() {
    //devices
    this.device_type_hrm = "hrm";
    this.device_type_pulse_oximeter = "spo2";
    this.device_type_glucometer = "bg";
    this.device_type_blood_pressure = "bp";
    this.device_type_pedometer = "pedometer";
    
    //hs: ble characteristics of various supported devices
    this.hrm_service_uuid = "0000180d-0000-1000-8000-00805f9b34fb";
    this.pulse_oximeter_service_uuid = "00001822-0000-1000-8000-00805f9b34fb";
    this.fora_spo2_service_uuid = "00001523-1212-efde-1523-785feabcd123";
    this.fora_spo2_characteristic_uuid = "00001524-1212-efde-1523-785feabcd123";
    this.supported_services = [
      this.hrm_service_uuid,
      this.pulse_oximeter_service_uuid,
      this.fora_spo2_service_uuid
    ];

    //hs: Dummy Pedometer simulation
    this.pedometer_simulation_address = "aa:bb:cc:dd:ee";
    this.pedometer_simulation_name = "Pedometer";
    this.pedometer_simulation_protocol = "protocol_internal_pedometer";
    this.pedometer_simulation_timer = undefined;
    this.pedometer_simulation_daily_step_count = 0;
    this.pedometer_simulation_incremental_step_count = 10;
    this.pedometer_simulation_interval = 10000;
    this.pedometer_simulation_default_recordcount = 7;
    this.pedometer_simulation_running = false;
    
    //hs: active device map
    this.devices = {};

    // callback map
    this.deviceFoundCallback = {};
    this.deviceDataChangedCallback = {};
    this.deviceDisconnectedCallback = {};
  }

  configure(config) {
  }

  // configureDevices(deviceFoundCallback, deviceDisconnectedCallback, deviceDataChangedCallback) {
  //   //hs: common across all devices. These are events
  //   // Set device callbacks only if defined by proper blocks (to not overwite the ones defined by library)
  //   if (deviceFoundCallback) this.deviceFoundCallback ?
  //     this.deviceFoundCallback.push(deviceFoundCallback) : this.deviceFoundCallback = [deviceFoundCallback];
  //   if (deviceDisconnectedCallback) this.deviceDisconnectedCallback ?
  //     this.deviceDisconnectedCallback.push(deviceDisconnectedCallback) : this.deviceDisconnectedCallback = [deviceDisconnectedCallback];
  //   if (deviceDataChangedCallback) this.deviceDataChangedCallback ?
  //     this.deviceDataChangedCallback.push(deviceDataChangedCallback) : this.deviceDataChangedCallback = [deviceDataChangedCallback];
  // }

  register(identifier, type, callback) {
    if (type === "found") {
      this.deviceFoundCallback[identifier] = callback;
    } else if (type === "disconnected") {
      this.deviceDisconnectedCallback[identifier] = callback;
    } else {
      this.deviceDataChangedCallback[identifier] = callback;
    }
  }

  
  startDiscovery(identifier, timeout) {
    let parent = this;

    //hs: pedeometer simulation
    setTimeout( function() {
      parent.devices[parent.pedometer_simulation_address] = {};
      parent.devices[parent.pedometer_simulation_address].type = parent.device_type_pedometer;
      parent.devices[parent.pedometer_simulation_address].name = parent.pedometer_simulation_name;
      parent.devices[parent.pedometer_simulation_address].address = parent.pedometer_simulation_address;
      if(parent.deviceFoundCallback[identifier]) {
        parent.deviceFoundCallback[identifier](parent.pedometer_simulation_address, parent.pedometer_simulation_name);
      }
    }, 100);

    let options = {
      filters: [
        {services: ["heart_rate"]},
        {services: [0x1822]},
        {services: [0x1809]},
        {services: ["636f6d2e-6a69-7561-6e2e-504f56313100"]},
        {services: ["00001523-1212-efde-1523-785feabcd123"]}
      ]
    };
    return navigator.bluetooth.requestDevice(options)
      .then(device => {
        parent.devices[device.id] = {};
        parent.devices[device.id].bledevice = device;
        parent.devices[device.id].name = device.name;
        parent.devices[device.id].characteristics = new Map();
        if (parent.deviceFoundCallback[identifier]) {
         parent.deviceFoundCallback[identifier](device.id, device.name);
        }
      });
  }

  stopDiscovery() {
    //hs: web bluetooth is dialog based discovery. Cancel option is there
    //in the dialog itself. Nothing to do here.
  }

  getDeviceNameForAddress(deviceAddress) {
    if( this.devices[deviceAddress] != undefined ) {
      return this.devices[deviceAddress].name;
    }
    else {
      return "";
    }
  }

  getDeviceTypeForAddress(deviceAddress) {
    if( this.devices[deviceAddress] != undefined ) {
      return this.devices[deviceAddress].type;
    }
    else {
      return "";
    }
  }

  connectToDevice(identifier, deviceAddress, successcallback, failurecallback) {
    let device = this.devices[deviceAddress].bledevice;
    let parent = this;
    if( !device ) {
      //hs: check if device is non ble
      if( this.devices[deviceAddress].type == this.device_type_pedometer ) {
        successcallback();
        this._startPedometerSimulation(identifier);
      }
      else {
        failurecallback("Device not found!");  
      }
      return;
    }
    
    device.addEventListener("gattserverdisconnected", event => {
      if (parent.deviceDisconnectedCallback[identifier]) {
        parent.deviceDisconnectedCallback[identifier](deviceAddress);
      }
    });

    device.gatt.connect()
      .then(server => server.getPrimaryServices())
      .then(services => {
        console.log(services);
        var service = services[0];
        for(var i=0; i<services.length; i++) {
          var service = services[i];
          if (this.supported_services.indexOf(service.uuid)!=-1) {
            service = services[i];
            break;
          }
        }
        var characteristicString = this._getRequiredCharacteristics(service);
        service.getCharacteristic(characteristicString)
          .then(characteristic => { 
            console.log(characteristic);
            parent.devices[deviceAddress].characteristics.set(characteristic.uuid, characteristic);
            parent._startNotifications(identifier, deviceAddress, characteristic.uuid);
            successcallback();
          })
          .catch(error => { 
            console.log(error);
            failurecallback(error);
          });
      });  
  }

  _getRequiredCharacteristics(service) {
    //hs: we could also return multiple characteristics for a primary
    //service in future.
    let id = service.device.id;
    switch(service.uuid) {
    case this.hrm_service_uuid:
      this.devices[id].type = this.device_type_hrm;
      return "heart_rate_measurement";
    case this.pulse_oximeter_service_uuid:
      this.devices[id].type = this.device_type_pulse_oximeter;
      return "plx_continuous_measurement";
    case this.fora_spo2_service_uuid:
      this.devices[id].type = this.device_type_pulse_oximeter;
      return this.fora_spo2_characteristic_uuid;
      return; 
    }
  }

  disconnectFromDevice(identifier, deviceAddress) {
    let device = this.devices[deviceAddress].bledevice;
    if (!device) {
      if( this.devices[deviceAddress].type == this.device_type_pedometer ) {
        if (this.deviceDisconnectedCallback[identifier]) {
          this.deviceDisconnectedCallback[identifier](deviceAddress);
        }
        this._stopPedeometerSimulation();
      }
      return;
    }
    console.log("Disconnecting from BLE Device..." + deviceAddress);
    if (device.gatt.connected) {
      device.gatt.disconnect();
    } else {
      console.log("BLE Device " + deviceAddress + " already disconnected");
    }

  }

  readDataFromDevice(deviceAddress) {
    //hs: every device needs a different trigger to spit out different data.
    //we decide this based on characteristic for now.
    let device = this.devices[deviceAddress];
    var characteristic = device.characteristics.get(this.fora_spo2_characteristic_uuid);
    if( characteristic!= undefined ) {
      this._requestForaPulseOximeterData(deviceAddress);  
    }
  }

  readHistoricalData(deviceAddress, recordCount, successcallback, failurecallback) {
    var historicalData = [];
    if((this.devices[deviceAddress] == undefined) && 
      (deviceAddress == this.pedometer_simulation_address)) {
      this._createPedometerDeviceSimulation();
    }
    if( this.devices[deviceAddress].type == this.device_type_pedometer ) {
      historicalData = this._populateDummyPedometerReadings(recordCount);
      successcallback(historicalData);
    }
    else {
      failurecallback("Not supported yet for this device");
    }
  }

  readHistoricalDataSync(deviceAddress, recordCount) {
    var historicalData = [];
    if((this.devices[deviceAddress] == undefined) && 
      (deviceAddress == this.pedometer_simulation_address)) {
      this._createPedometerDeviceSimulation();
    }
    if( this.devices[deviceAddress].type == this.device_type_pedometer ) {
      historicalData = this._populateDummyPedometerReadings(recordCount);
    }
    return historicalData;
  }

  _populateDummyPedometerReadings(recordCount) {
    var historicalData = [];
    if(recordCount < 0 )
      recordCount = this.pedometer_simulation_default_recordcount;
      
    var currDate = new Date();
    for(var i=0; i<recordCount; i++) {
      var data = {};
      var entryDate = new Date();
      entryDate.setDate(currDate.getDate()-i);
      data.timestamp = entryDate.getTime();
      data.daily_step_count = this._getRandomInt(5000, 10000);
      historicalData.push(data);
    }
    return historicalData;
  }

  _getRandomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
  }

  _createPedometerDeviceSimulation() {
    this.devices[this.pedometer_simulation_address] = {};
    this.devices[this.pedometer_simulation_address].type = this.device_type_pedometer;
    this.devices[this.pedometer_simulation_address].name = this.pedometer_simulation_name;
    this.devices[this.pedometer_simulation_address].address = this.pedometer_simulation_address;
  }

  _parseHeartRate(value) {
    // In Chrome 50+, a DataView is returned instead of an ArrayBuffer.
    value = value.buffer ? value : new DataView(value);
    let flags = value.getUint8(0);
    let rate16Bits = flags & 0x1;
    let result = {};
    let index = 1;
    if (rate16Bits) {
      result.heart_rate = value.getUint16(index, /*littleEndian=*/true);
      index += 2;
    } else {
      result.heart_rate = value.getUint8(index);
      index += 1;
    }
    let contactDetected = flags & 0x2;
    let contactSensorPresent = flags & 0x4;
    if (contactSensorPresent) {
      result.contact_detected = !!contactDetected;
    }
    let energyPresent = flags & 0x8;
    if (energyPresent) {
      result.energy_expanded = value.getUint16(index, /*littleEndian=*/true);
      index += 2;
    }
    let rrIntervalPresent = flags & 0x10;
    if (rrIntervalPresent) {
      let rrIntervals = [];
      for (; index + 1 < value.byteLength; index += 2) {
        rrIntervals.push(value.getUint16(index, /*littleEndian=*/true));
      }
      result.rr_interval = rrIntervals;
    }
    return result;
  }

  _parsePulseOximeterData(value) {
    let index = 0;
    value = value.buffer ? value : new DataView(value);
    let flags = value.getUint8(index);
    index++;
    var result = {};
    result.oxygen = value.getUint16(index, /*littleEndian=*/true);
    index += 2;
    result.heart_rate = value.getUint16(index, /*littleEndian=*/true);
    index+=2;
    return result;
  }

  _requestForaPulseOximeterData(deviceAddress) {
    // encode the command.
    var dataBuffer = new ArrayBuffer(8);
    var writeData = new DataView(dataBuffer);
    writeData.setUint8(0, 0x51); //Start sequence
    writeData.setUint8(1, 0x49); //CMD: Read real time data
    writeData.setUint8(2, 0x00); //Payload:0
    writeData.setUint8(3, 0x00); //Payload:1
    writeData.setUint8(4, 0x00); //Payload:2
    writeData.setUint8(5, 0x00); //Payload:3
    writeData.setUint8(6, 0xA3); //End sequence
    var checkSum = 0x00;
    for(var i=0; i<writeData.byteLength-1; i++) {
      checkSum += writeData.getUint8(i);
    }
    writeData.setUint8(7, checkSum);
    
    this._writeCharacteristicValue(deviceAddress, this.fora_spo2_characteristic_uuid, writeData);
  }

  _parseForaPulseOximeterData(value) {
    value = value.buffer ? value : new DataView(value);
    var command = value.getUint8(1);
    var result = {};
    switch(command) {
    case 0x49://real time data
      result.oxygen = value.getUint16(2, /*littleEndian=*/true);
      result.heart_rate = value.getUint8(5);
      return result;
    case 0x24: //device info
      result.device_model = value.getUint16(2, /*littleEndian=*/true);
      return result;
    }
    return null;
  }

  _getCharacteristic(deviceAddress, characteristicUuid){
    let device = this.devices[deviceAddress];
    if (!device) {
      return null;
    }
    let characteristic = device.characteristics.get(characteristicUuid);
    return characteristic;
  }
  
  _readCharacteristicValue(deviceAddress, characteristicUuid) {
    let characteristic = this._getCharacteristic(deviceAddress, characteristicUuid);
    if( characteristic ) {
      return characteristic.readValue();
    }
  }

  _writeCharacteristicValue(deviceAddress, characteristicUuid, value) {
    let characteristic = this._getCharacteristic(deviceAddress, characteristicUuid);
    if( characteristic!=null ) {
      return characteristic.writeValue(value);  
    }
  }
  
  _startNotifications(identifier, deviceAddress, characteristicUuid) {
    let characteristic = this._getCharacteristic(deviceAddress, characteristicUuid);
    if( characteristic!=null ) {
      let parent = this;
      console.log("Registering for data change events on " + characteristicUuid);
      characteristic.startNotifications()
        .then(characteristic => {
          characteristic.addEventListener("characteristicvaluechanged", event => {
            var deviceType = this.devices[deviceAddress].type;
            var retData;

            switch(deviceType) {
            case this.device_type_hrm:
              retData = parent._parseHeartRate(event.target.value);
              console.log("Heart Rate = " + retData.heart_rate);
              break;
            case this.device_type_pulse_oximeter:
              if( characteristicUuid == this.fora_spo2_characteristic_uuid ) {
                retData = parent._parseForaPulseOximeterData(event.target.value);
              }
              else {
                retData = parent._parsePulseOximeterData(event.target.value);
                console.log("Oxygen = " + retData.oxygen + " Heart Rate = " + retData.heart_rate);  
              }
              break;
            }
            if( retData!=null ) {
              if (parent.deviceDataChangedCallback[identifier]) {
                parent.deviceDataChangedCallback[identifier](deviceAddress, retData);
              }
            }
            
          });
        });   
    }
  }

  _stopNotifications(deviceAddress, characteristicUuid) {
    let characteristic = this._getCharacteristic(deviceAddress, characteristicUuid);
    // Returns characteristic to remove characteristicvaluechanged event
    // handlers in the resolved promise.
    if( characteristic!=null ) {
      return characteristic.stopNotifications()
        .then(() => characteristic);  
    }
  }

  _startPedometerSimulation(identifier) {
    if (this.pedometer_simulation_running) return;
    console.log("Starting pedometer simulation");
    this.pedometer_simulation_running = true;
    let parent = this;
    this.pedometer_simulation_timer = setInterval(function() {
      parent.pedometer_simulation_daily_step_count += parent.pedometer_simulation_incremental_step_count;
      var pedometerData = {};
      pedometerData.daily_step_count = parent.pedometer_simulation_daily_step_count;
      if (parent.deviceDataChangedCallback[identifier]) {
        parent.deviceDataChangedCallback[identifier](parent.pedometer_simulation_address, pedometerData);
      }
    },parent.pedometer_simulation_interval);
  }

  _stopPedeometerSimulation() {
    console.log("Stopping pedometer simulation");
    this.pedometer_simulation_running = false;
    if( this.pedometer_simulation_timer!=undefined ) {
      clearInterval(this.pedometer_simulation_timer);
    }
  }
}
// export class to a global variable for use of the JavaScriptDistLib (only)
var com = com || {};
com.fc = com.fc || {};
com.fc.JavaScriptDistLib = com.fc.JavaScriptDistLib || {};
com.fc.JavaScriptDistLib.SmartDevices = SmartDevicesObject;
// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (SmartDevicesObject);


/***/ }),
/* 187 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_snapclinical__ = __webpack_require__(225);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_snapclinical___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_snapclinical__);


class SnapClinicalObject {
  constructor() {
    this.config = {
      baseUrl: "",
      username: "",
      password: "",
      userid: "",
      frontEndKey: "",
      enableOauth: true,
      contextPath: undefined
    };
    this.explicitEnvironmentSet = false;
  }

  configure(config) {
    let properties;
    if (config) {
      properties = JSON.parse(config);
    }
    else if (!this.config.BaseURL) {
      let snapClinicalSO = Creator.currentProject.serviceModel.getServiceObject("SnapClinical");
      properties = snapClinicalSO.attributes.attrs;
    }
    if (properties) {
      let baseUrl = properties.api.url;
      if(baseUrl){
        this.config.baseUrl = properties.api.url;
      }else{
        this.config.baseUrl =  "https://staging.snapclinical.net:8443";
      }
      this.config.frontEndKey = properties.api.frontEndKey;
      this.config.username = properties.api.username;
      this.config.password = properties.api.password;
      this.config.userid = properties.api.userid;

      // client.encryptionKey = this.getEncryptionKey();
    }
  }

  /**
   * change the configuration if the Based Token Auth property is enabled
   * @param _properties
   */
  configureAuthentication(_properties) {
    let properties = _properties ? JSON.parse(_properties): null;
    if (properties) {
      let auth = properties.api && properties.api.authentication;
      let contextPath = {
        oauth: "snap-oauth",
        snap: "snap-api",
        flowable: "flow-api"
      };
      if (auth === "Basic Auth") {
        this.config.enableOauth = false;
        contextPath.flowable = "flowable-task";
      }
      this.config.contextPath = contextPath;
      __WEBPACK_IMPORTED_MODULE_0_snapclinical__["client"].enableOauth = this.config.enableOauth;
      __WEBPACK_IMPORTED_MODULE_0_snapclinical__["client"].contextPath = this.config.contextPath;
    }
  }

  setEnvironmentVariables(baseUrl, frontEndKey){
    if( baseUrl!=undefined && frontEndKey!=undefined ) {
      this.config.baseUrl = baseUrl;
      __WEBPACK_IMPORTED_MODULE_0_snapclinical__["client"].apiBaseUrl = baseUrl;
      __WEBPACK_IMPORTED_MODULE_0_snapclinical__["client"].frontEndKey = frontEndKey;
      this.explicitEnvironmentSet = true;  
    }
  }

  snapClinicalConfigure(username, password, userid, frontEndKey, baseUrl){
    this.config.username = username;
    this.config.password = password;
    this.config.userid = userid;
    //set only if a call to setEnvironmentVariables has not been called
    
    __WEBPACK_IMPORTED_MODULE_0_snapclinical__["user"].accountName = username;
    __WEBPACK_IMPORTED_MODULE_0_snapclinical__["user"].password = password;
    __WEBPACK_IMPORTED_MODULE_0_snapclinical__["client"].personalId = userid;
    __WEBPACK_IMPORTED_MODULE_0_snapclinical__["client"].encryptionKey = this.getEncryptionKey();
    //if setEnvironmentVariables is explicitly called earlier; we don't set these values from
    //properties. On other hand if we don't explicitly set; the values from properties
    //get picked up
    if(this.explicitEnvironmentSet == false) {  
      this.config.baseUrl = baseUrl;
      __WEBPACK_IMPORTED_MODULE_0_snapclinical__["client"].frontEndKey = frontEndKey;
      __WEBPACK_IMPORTED_MODULE_0_snapclinical__["client"].apiBaseUrl = baseUrl;
    }
  }

  /**
   * @deprecated
   * @param processDefKey
   * @param qualifier
   * @param successcallback
   * @param failurecallback
   * @return {Promise<void>}
   */
  async snapClinicalcreateNewInstanceAndGetFirstTask(processDefKey, qualifier, successcallback, failurecallback) {
    console.warn("snapClinicalcreateNewInstanceAndGetFirstTask is deprecated");

    let taskData;
    try {
      taskData = await __WEBPACK_IMPORTED_MODULE_0_snapclinical__["flowService"].createNewInstanceAndGetFirstTask(processDefKey, qualifier);
    }
    catch(e) {
      console.error("Error in createNewInstanceAndGetFirstTask");
      console.error(e);
      failurecallback(e);
      return;
    }
    let vars, flds, outcms;
    vars = flds = outcms = [];

    if (taskData) {
      vars = taskData.variables;
      flds = taskData.fields;
      outcms = taskData.outcomes;
    }
    successcallback(vars, flds, outcms);
  }

  /**
   * @deprecated
   * @param processDefKey
   * @param successcallback
   * @param failurecallback
   * @return {Promise<void>}
   */
  async snapClinicalGetNextTaskOnProcess(processDefKey, successcallback, failurecallback) {
    console.warn("snapClinicalGetNextTaskOnProcess is deprecated");
    let taskData;
    try {
      taskData = await __WEBPACK_IMPORTED_MODULE_0_snapclinical__["flowService"].getNextTask(processDefKey, []);
    }
    catch(e) {
      console.error("Error in GetNextTaskOnProces");
      console.error(e.message);
      failurecallback(e.message);
      return;
    }
    let vars, flds, outcms;
    vars = flds = outcms = [];

    if (taskData) {
      vars = taskData.variables;
      flds = taskData.fields;
      outcms = taskData.outcomes;
    }
    successcallback(vars, flds, outcms);
  }

  /**
   * @deprecated
   * @param variables
   * @param fields
   * @param outcomes
   * @param successcallback
   * @param failurecallback
   * @return {Promise<void>}
   */
  async snapClinicalSaveTaskVariables(variables, fields, outcomes, successcallback, failurecallback) {
    console.warn("snapClinicalSaveTaskVariables is deprecated");
    try {
      await __WEBPACK_IMPORTED_MODULE_0_snapclinical__["flowService"].saveVariables(variables, fields || [], outcomes);
    }
    catch(e) {
      console.error("Error in SaveTaskVariables");
      console.error(e);
      failurecallback(e);
      return;
    }
    successcallback();
  }

  /**
   * @deprecated
   * @param successcallback
   * @param failurecallback
   * @return {Promise<void>}
   */
  async snapClinicalMoveToNextTask(successcallback, failurecallback) {
    console.warn("snapClinicalMoveToNextTask is deprecated");
    let taskData;
    try {
      taskData = await __WEBPACK_IMPORTED_MODULE_0_snapclinical__["flowService"].moveToNextTask();
      console.error("snapClinicalMoveToNextTask::got response");
      if( taskData != null ) {
        // console.log("snapClinicalMoveToNextTask variables" ,taskData.variables);
        // console.log("snapClinicalMoveToNextTask fields" ,taskData.fields);
        // console.log("snapClinicalMoveToNextTask outcomes", taskData.outcomes);
      }
      else {
        console.warn("snapClinicalMoveToNextTask NULL, this means the flow process ends.");
      }
    }
    catch(e) {
      console.error("Error in MoveToNextTask");
      console.error(e);
      failurecallback(e);
      return;
    }
    let vars, flds, outcms;
    vars = flds = outcms = [];

    if (taskData) {
      vars = taskData.variables;
      flds = taskData.fields;
      outcms = taskData.outcomes;
    }
    successcallback(vars, flds, outcms);
  }

  /**
   * Start a new process or resume my existing tasks
   *
   * @param {Object} processData      - object containing process definition,  lookup and initial values for the process
   *                                    see more info on SDk related method
   *
   * @param successcallback
   * @param failurecallback
   * @return {Promise<Array<Object>>}  returns an array of task objects in the form:
   *                                    {processInstanceId: NNNNN, variables: [], formProperties: [], fields: [], ...}
   */
  async startProcess(processData, successCallback, failureCallback) {

    let taskData = [];
    try {
      taskData = await __WEBPACK_IMPORTED_MODULE_0_snapclinical__["snapClinicalApiService"].startNewOrResumeProcess(processData);
    }
    catch(e) {
      console.warn("Error in snapClinical.startProcess", e);
      failureCallback(e);
      return;
    }

    successCallback(taskData);
  }

  /**
   * Helper function to set a form outcome (by name) into a task variable.
   * This will add (or override) an outcome property to the task, corresponding to one of the available
   * outcomes defined in the task itself.
   *
   * @param {Object} taskData       - Object representing the target task to update
   * @param {String} outcomeName    - Name of the outcome to set. This has to be one of the names listed in the
   *                                  {taskData}.formData.outcomes array.
   */
  setOutcomeByName(taskData, outcomeName) {
    if (taskData && taskData.formData && taskData.formData.outcomes) {
      let selectedOutcome;
      for (var i=0; i < taskData.formData.outcomes.length; i++) {
        if (taskData.formData.outcomes[i].name === outcomeName) {
          selectedOutcome = taskData.formData.outcomes[i];
          break;
        }
      }
      if (selectedOutcome) {
        taskData = Object.assign(taskData, {outcome: selectedOutcome});
      } else {
        console.warn("setOutcomeByName: Outcome name not found in the formData");
      }
    }
  }

  /**
   * Completes the provided task and get new tasks
   *
   * @param {Object} taskData  object representing the task to be completed. The object is in the form:
   *                           {
   *                             "taskId": 196677,
   *                             "formkey": "myFormKey",
   *                             "processVariables": [
   *                               {
   *                                 "name": "initiator   userStatus   switchToProcess",
   *                                 "type": "integer",
   *                                 "value": "some value for the variable",
   *                                 "valueUrl": "https://staging.snapclinical.net:8443/ ... ",
   *                                 "scope": "local"
   *                               }
   *                             ],
   *                              "formProperties": [
   *                               {
   *                                 "id": "templateType  outcomeAndFieldMapping  infoText  title",
   *                                 "name": "some name",
   *                                 "type": "date",
   *                                 "value": "some value for this property",
   *                                 "enumValues": [
   *                                    {
   *                                     "id": "some id - can be null for the outcomes",
   *                                     "name": "some name or outcome value"
   *                                   }
   *                                 ]
   *                               }
   *                             ],
   *                              "formData": {
   *                               "id": "some id",
   *                               "key": "some key for this Form",
   *                               "fields": [
   *                                 {
   *                                   "id": "some id",
   *                                   "name": "some name",
   *                                   "fieldType": "FormField",
   *                                   "type": "multi-line-text",
   *                                   "value": "some value",
   *                                   "expression": "some expression",
   *                                   "optionType": "some option type",
   *                                   "hasEmptyValue": false,
   *                                   "options": [
   *                                     {
   *                                       "id": "some id - can be null for the outcomes",
   *                                       "name": "some name or outcome value"
   *                                     }
   *                                   ]
   *                                 }
   *                               ],
   *                               "outcomes": [
   *                                 {
   *                                   "id": "some id - can be null for the outcomes",
   *                                   "name": "some name or outcome value"
   *                                 }
   *                               ]
   *                             }
   *
   *                                provided info will update the task information before completing the task
   * @param successcallback
   * @param failurecallback
   * @return {Promise<Array<Object>>}   returns an array containing all active user tasks within the same process instance
   *                                    of the task being completed (and related to the same user completing it)
   *                                    returned items in the array are in the form:
   *                                    {processInstanceId: NNNNN, variables: [], formProperties: [], fields: [], ...}
   */

  async completeTaskAndGetNext(taskData, successCallback, failureCallback) {


    let taskToBeUpdated = {};
    let nextTasksData = [];

    /**   task object to be passed to the SDK call:
     *  {
          "taskId": "some Id",
          "formDefinitionId": "form id",
          "processVariables": [
            {
              "name": "initiator   userStatus   switchToProcess",
              "type": "integer",
              "value": "some value for the variable",
              "valueUrl": "https://staging.snapclinical.net:8443/ ... ",
              "scope": "local"
            }
          ],
          "fields": [
            {
              "id": "some id",
              "value": "some value for the field"
            }
          ],
          "outcome": {
            "id": "some id - can be null for the outcomes",
            "name": "some name or outcome value"
          }
        }
     */
    if (taskData.taskId) taskToBeUpdated.taskId = taskData.taskId;
    if (taskData.formData && taskData.formData.id) taskToBeUpdated.formDefinitionId = taskData.formData.id;
    if (taskData.processVariables) taskToBeUpdated.processVariables = taskData.processVariables;
    if (taskData.formData && taskData.formData.fields) taskToBeUpdated.fields = taskData.formData.fields.map( x => ({"id": x.id, "value": x.value}));
    if (taskData.outcome) taskToBeUpdated.outcome = taskData.outcome;

    try {
      nextTasksData = await __WEBPACK_IMPORTED_MODULE_0_snapclinical__["snapClinicalApiService"].completeAndGetNext(taskToBeUpdated);
    }
    catch(e) {
      console.warn("Error in snapClinical.completeTaskAndGetNext", e);
      failureCallback(e);
      return;
    }

    successCallback(nextTasksData);
  }

  /**
   * Get all Active Tasks for the current user with lookup Criteria
   *
   * @param {Object} lookupData           - object defining lookup criteria in the form:
   *          {
   *            "processDefinitionKey": "processKeyValue",
   *            "processDefinitionId": "processKeyValue:NNN:MMM",
   *            "processDefinitionKeyLike": "processKeyLikeValue"
   *            "queryVariables": [
   *               {
   *                  "name": "variableName",
   *                  "value": "variableValue",
   *                  "operation": "equals",
   *                  "type" : "string"
   *               }
   *             ]
   *          }
   *
   * @param successcallback
   * @param failurecallback
   * @return {Promise<Array<Object>>}  returns an array of task objects in the form:
   *                                    {processInstanceId: NNNNN, variables: [], formProperties: [], fields: [], ...}
   */
  async getActiveTasks(lookupData, successCallback, failureCallback) {

    let resultTaskList = [];
    try {
      resultTaskList = await __WEBPACK_IMPORTED_MODULE_0_snapclinical__["snapClinicalApiService"].getActiveTasks(lookupData);
    }
    catch(e) {
      console.warn("Error in snapClinical.getActiveTasks", e);
      failureCallback(e);
      return;
    }

    successCallback(resultTaskList);
  }

  /**
   * Executes an action on a given task.
   *
   * @param {Object} actionData         - object defining the action to be performed.
   *                                    The object can have the following structure: <code>
   *                                    {
   *                                      "taskId": "someId",
   *                                      "action": "complete" | "claim" | "delegate" | "resolve",
   *                                      "variables": [ {
   *                                          "name" : "variableName",
   *                                          "value" : "variableValue",
   *                                          "valueUrl" : "http://...",
   *                                          "type" : "string"
   *                                          }
   *                                      ],
   *                                      "assignee": "userWhoClaimsOrToDelegateTo"
   *                                    }
   *                                    </code>
   *                                    property taskId and action are mandatory.
   * @param successcallback
   * @param failurecallback
   * @return {Promise<Object>}    returns a result object.
   */
  async taskAction(actionData, successCallback, failureCallback) {

    let result;
    try {
      result = await __WEBPACK_IMPORTED_MODULE_0_snapclinical__["snapClinicalApiService"].taskAction(actionData);
    }
    catch(e) {
      console.warn("Error in snapClinical.taskAction", e);
      failureCallback(e);
      return;
    }

    successCallback(result);
  }

  async fetch(url, method, body, successCallback, failureCallback) {

    let result;

    try {
      let response;
      response = await __WEBPACK_IMPORTED_MODULE_0_snapclinical__["client"].fetch(url, method, null, body, null);
      result = await response.json();
      if (response.status === 200) {
        successCallback(result);
        return;
      }
      else {
        failureCallback(result);
        return;
      }
    }
    catch(e) {
      console.warn("Error in snapClinical.fetch", e);
      failureCallback(e);
      return; 
    }
    
  }

  async logout(successCallback, failureCallback) {
    try {
      let response = await __WEBPACK_IMPORTED_MODULE_0_snapclinical__["oauthService"].revokeToken();
      __WEBPACK_IMPORTED_MODULE_0_snapclinical__["client"].tokenObj = null;
      if (response === 200) {
        successCallback(response);
        return;
      }
      else {
        failureCallback(response);
        return;
      }
    }
    catch(e) {
      console.warn("Error in snapClinical.logout", e);
      failureCallback(e);
      return;
    }
  }

  syncToRemote() {
    if (!__WEBPACK_IMPORTED_MODULE_0_snapclinical__["client"].syncToRemote) console.error("syncToRemote missing");
    else __WEBPACK_IMPORTED_MODULE_0_snapclinical__["client"].syncToRemote();
  }

  isSyncStatus(value) {
    return value && __WEBPACK_IMPORTED_MODULE_0_snapclinical__["client"].getCurrentSyncStatus() === value;
  }

  startSyncChangeListener(callback) {
    document.addEventListener("sync_status_change", function(e) {
      callback && callback();
    });
  }

  getEncryptionKey() {
    // using btoa to encrypt key, it will not be stored into cache
    return btoa(this.config.userid + "@" + this.config.password);
  }
}
// export class to a global variable for use of the JavaScriptDistLib (only)
var com = com || {};
com.fc = com.fc || {};
com.fc.JavaScriptDistLib = com.fc.JavaScriptDistLib || {};
com.fc.JavaScriptDistLib.SnapCinical = SnapClinicalObject;
// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (SnapClinicalObject);


/***/ }),
/* 188 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ES6 imports

class StorageObject {

  constructor() {}

  add (key, value, password) {
    if (!password) return localStorage.setItem(key,JSON.stringify(value));
    if (typeof(value) === "string") return localStorage.setItem(key, com.fc.JavaScriptDistLib.Crypto.AES.encrypt(value, password));
    else return localStorage.setItem(key, com.fc.JavaScriptDistLib.Crypto.AES.encrypt(JSON.stringify(value), password));
  }

  remove (key) {
    return localStorage.removeItem(key);
  }

  clear (key) {
    return localStorage.clear();
  }

  getValue (key, password) {
    let value = localStorage.getItem(key);
    try {
      if (password) {
        value = com.fc.JavaScriptDistLib.Crypto.AES.decrypt(value, password)
          .toString(com.fc.JavaScriptDistLib.Crypto.enc.Utf8);
      }
    } catch (err) {
      return value;
    }
    if (value) {
      try {
        return JSON.parse(value);
      } catch(err) {
        return value;
      }
    }
  }

  getAllKeys () {
    return Object.keys(localStorage);
  }

  //Define custom exceptions pertaining to storage module here.
}

/* harmony default export */ __webpack_exports__["a"] = (StorageObject);


/***/ }),
/* 189 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * System Module Module
*/


class SystemObject  {

    constructor() {
    }

    getCountry () {
        // $.getJSON('https://ipinfo.io', function(data){
        //     console.log (data.country);
        //     return data.country;
        // });
    }

    showToast (text,durationType) {
        let duration = 5000;
        if (durationType == "LONG") {
            duration = 10000;
        }
        toastr.options.closeButton = true;
        toastr.info(text, {timeOut: duration});
    }

    launchBrowser (url) {
        window.open(url);
    }

}

/* harmony default export */ __webpack_exports__["a"] = (SystemObject);

/***/ }),
/* 190 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__text_object_text_object_module_js__ = __webpack_require__(7);
// ES6 imports




class TextLibraryObject extends __WEBPACK_IMPORTED_MODULE_0__text_object_text_object_module_js__["a" /* default */]{

  constructor(){
    super(" TextLibraryObject");
  }

  textComparison (text1, comp, text2) {
    // checking text variables to prevent issues
    if (text1 == null) text1 = "";
    if (text2 == null) text2 = "";
    switch (comp) {
    case "LESS":
      return text1.toString() < text2.toString();
    case "EQUAL":
      return text1.toString() == text2.toString();
    case "GREATER":
      return text1.toString() > text2.toString();
    default:
      return false;
    }
  }

  textTrim(text){
    return text.toString().trim().replace(/&nbsp;/g, "").replace(/\<br\s*[\/]?>/gi, "");
  }

  textChangeCase(text, comp) {
    switch (comp) {
    case "UPPERCASE":
      return text.toString().toUpperCase();
    case "LOWERCASE":
      return text.toString().toLowerCase();
    default:
      return "";
    }
  }

  textSubstring(text, from, length){
    return text.toString().substring(Number(from),Number(from) + Number(length));
  }


  textContains(string, substring) {
    return ((string.toString().indexOf(substring)) !== -1);
  }

  textIndexOf(string, substring) {
    return string.toString().indexOf(substring);
  }

  textSplitAt(text, index) {
    return [text.toString().substring(0, Number(index)), text.toString().substring(Number(index))];
  }

  textSplitWith(string, separator) {
    return string.toString().split(separator.toString());
  }

  textReplace(textFrom, textTo, textSource){
    var returnText = textSource.toString();
    while (returnText.indexOf(textFrom.toString()) !== -1){
      returnText = returnText.toString().replace(textFrom.toString(),textTo.toString());
    }
    return returnText;
  }

  isText(text) {
    return (typeof text === "string" || text instanceof String);
  }

  convertToText(data) {
    if( data!=undefined || data!=null ) {
      if( jQuery.isXMLDoc( data ) ) {
        return  (new XMLSerializer()).serializeToString(data);
      }
      else if( jQuery.isArray( data ) || (data instanceof RegExp) )  {
        return data.toString();
      }
      else if( typeof data == "string" ) {
        return data;
      }
      else {
        if (data.humanize) return data.humanize();
        return JSON.stringify(data);
      }  
    }
    return null;
  }

  /**
     * Converts the text input to a new regular expression, adding the modifier if it exists
     * @param text
     * @param modifier
     * @returns {RegExp}
     */
  convertToRegExp(text, modifier) {
    try {
      return  modifier && modifier != ""? new RegExp(text, modifier): new RegExp(text);
    } catch(e) {
      console.log("convertToRegExp failed", e);
      return null;
    }
  }

  /**
     * returns true if the string matches the pattern, false otherwise
     * @param regex
     * @param text
     * @returns {Boolean}
     */
  textMatchWithRegex(regex, text) {
    try {
      // var _regex = modifier && modifier != ""? new RegExp(regex, modifier): regex;
      return regex.test(text);
    } catch(e) {
      console.log("textMatchWithRegex failed", e);
      return false;
    }
  }

  /**
     * returns a new string where the specified values that match the regular expression are replaced
     * @param from
     * @param regex
     * @param source
     * @returns {String}
     */
  textReplaceWithRegex(from, regex, source) {
    try {
      // var _regex = modifier && modifier != ""? new RegExp(regex, modifier): regex;
      return source.replace(regex, from);
    } catch(e) {
      console.log("textReplaceWithRegex failed", e);
      return source;
    }
  }
}
// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (TextLibraryObject);

/***/ }),
/* 191 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__text_object_text_object_module_js__ = __webpack_require__(7);
// ES6 imports


class TextAreaObject extends __WEBPACK_IMPORTED_MODULE_0__text_object_text_object_module_js__["a" /* default */] {

  constructor() {
    super(" textarea.textView");
    var self = this;
    this.getProperty = Object.assign(this.getProperty, {
      Text: (objName) => {
        return this.getElemFromName(objName).find(".textView").val();
      },
      "Max chars": (objName) => {
        return this.getElemFromName(objName).find(".textView").attr("maxlength");
      },
      "Enabled": (objName) => {
        let result = this.getElemFromName(objName).find(".textView").attr("disabled");
        return !result;
      },
      "Input type": (objName) => {
        return this.getElemFromName(objName).find(".textView").attr("type");
      },
      "Border color": (objName) => {
        return this.getElemFromName(objName).find(".textView").css("border-color");
      },
      "Border Type": (objName) => {
        return this.getElemFromName(objName).find(".textView").css("box-shadow");
      },
      "Border width": (objName) => {
        return this.getElemFromName(objName).find(".textView").css("border-width");
      },
      "Border radius": (objName) => {
        return this.getElemFromName(objName).find(".textView").css("border-radius");
      },
      Placeholder: (objName) => {
        return this.getElemFromName(objName).find(".textView").attr("placeholder");
      }
    });
    this.setProperty = Object.assign(this.setProperty, {
      Text: (objName, value) => {
        this.getElemFromName(objName).find(".textView").val(value);
      },
      "Max chars": (objName,value) => {
        this.getElemFromName(objName).find(".textView").attr("maxlength",value);
      },
      "Enabled": (objName,value) => {
        this.getElemFromName(objName).find(".textView").attr("disabled",!value);
      },
      "Border color": (objName,value) => {
        this.getElemFromName(objName).find(".textView").css("border-color",value);
      },
      "Border Type": (objName,value) => {                
        let borderColor = this.getElemFromName(objName).find(".textView").css("border-color");
        if (value == "raised") {
          this.getElemFromName(objName).find(".textView").css({
            "box-shadow":"2px 5px 20px "+borderColor
          });
        } else if (value == "sunken") {
          this.getElemFromName(objName).find(".textView").css({
            "box-shadow":"inset 2px 5px 20px "+borderColor
          });
        } else {
          this.getElemFromName(objName).find(".textView").css({
            "box-shadow":"none"
          });
        }
      },
      "Border width": (objName,value) => {
        this.getElemFromName(objName).find(".textView").css("border-width",value);
      },
      "Border radius": (objName,value) => {
        this.getElemFromName(objName).find(".textView").css("border-radius",value);
      },
      Placeholder: (objName, value) => {
        this.getElemFromName(objName).find(".textView").attr("placeholder",value);
      }
    });

  }
}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (TextAreaObject);

/***/ }),
/* 192 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__text_object_text_object_module_js__ = __webpack_require__(7);
// ES6 imports


class TextboxObject extends __WEBPACK_IMPORTED_MODULE_0__text_object_text_object_module_js__["a" /* default */] {

  constructor() {
    super(" .textView");
    var self = this;
    this.getProperty = Object.assign(this.getProperty, {
      Text: (objName) => {
        return this.getElemFromName(objName).find(".textView").val();
      },
      "Max chars": (objName) => {
        return this.getElemFromName(objName).find(".textView").attr("maxlength");
      },
      "Password chars": (objName) => {
        let type = this.getElemFromName(objName).find(".textView").attr("type");
        if (type == "password") {
          return true;
        }
        return false;
      },
      "Enabled": (objName) => {
        let result = this.getElemFromName(objName).find(".textView").attr("disabled");
        return !result;
      },
      "Input type": (objName) => {
        return this.getElemFromName(objName).find(".textView").attr("type");
      },
      "Border color": (objName) => {
        return this.getElemFromName(objName).find(".textView").css("border-color");
      },
      "Border Type": (objName) => {
        return this.getElemFromName(objName).find(".textView").css("box-shadow");
      },
      "Border width": (objName) => {
        return this.getElemFromName(objName).find(".textView").css("border-width");
      },
      "Border radius": (objName) => {
        return this.getElemFromName(objName).find(".textView").css("border-radius");
      },
      Placeholder: (objName) => {
        return this.getElemFromName(objName).find(".textView").attr("placeholder");
      }
    });
    this.setProperty = Object.assign(this.setProperty, {
      Text: (objName, value) => {
        this.getElemFromName(objName).find(".textView").val(value);
      },
      "Max chars": (objName,value) => {
        this.getElemFromName(objName).find(".textView").attr("maxlength",value);
      },
      "Password chars": (objName,value) => {
        let type = "text";
        if (value) {
          type = "password";
        }
        this.getElemFromName(objName).find(".textView").attr("type",type);
      },
      "Enabled": (objName,value) => {
        this.getElemFromName(objName).find(".textView").attr("disabled",!value);
      },
      "Input type": (objName,value) => {
        var inputType = "text";
        switch (value) {
        case "numeric":
          inputType = "number";
          break;
        case "email":
          inputType = "email";
          break;
        }
        this.getElemFromName(objName).find(".textView").attr("type",inputType);
      },
      "Border color": (objName,value) => {
        this.getElemFromName(objName).find(".textView").css("border-color",value);
      },

      "Border Type": (objName,value) => {                
        let borderColor = this.getElemFromName(objName).find(".textView").css("border-color");
        if (value == "raised") {
          this.getElemFromName(objName).find(".textView").css({
            "box-shadow":"2px 5px 20px "+borderColor
          });
        } else if (value == "sunken") {
          this.getElemFromName(objName).find(".textView").css({
            "box-shadow":"inset 2px 5px 20px "+borderColor
          });
        } else {
          this.getElemFromName(objName).find(".textView").css({
            "box-shadow":"none"
          });
        }
      },
      "Border width": (objName,value) => {
        this.getElemFromName(objName).find(".textView").css("border-width",value);
      },
      "Border radius": (objName,value) => {
        this.getElemFromName(objName).find(".textView").css("border-radius",value);
      },
      Placeholder: (objName, value) => {
        this.getElemFromName(objName).find(".textView").attr("placeholder",value);
      }
    });

  }
}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (TextboxObject);

/***/ }),
/* 193 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common_timezones__ = __webpack_require__(228);
/**
 * Created by Oscar Rangel on 21/12/16.
*/



class TimeLibraryObject {

  constructor() {}

  createTime (time) {

    return new Date (time);
  }

  createTimeNow () {
    return new Date();
  }

  createTimeFromTimestamp (timestamp) {
    return new Date(Number(timestamp));
  }

  createTimestampFromTime (time) {
    return new Date(time).getTime();
  }


  addPadding (number, digits) {
    let value = number > 0 ? number : -number;
    while (value.toString().length < digits) {
      value = "0" + value;
    }
    return value;
  }

  textFromTime (time, op) {
    var dateTime = new Date(time);
    switch(op) {
    case "ISO_1":
      var H = this.addPadding(dateTime.getHours(), 2);
      var M = this.addPadding(dateTime.getMinutes(), 2);
      var s = this.addPadding(dateTime.getSeconds(), 2);
      var ms = this.addPadding(dateTime.getMilliseconds(), 3);
      var m = this.addPadding(dateTime.getMonth()+1, 2);
      var d = this.addPadding(dateTime.getDate(), 2);
      var y = this.addPadding(dateTime.getFullYear(), 4);

      let offsetSign = (dateTime.getTimezoneOffset() > 0) ? "-" : "+";

      let offsetH = this.addPadding(Math.trunc(dateTime.getTimezoneOffset() / 60), 2);
      let offsetM = this.addPadding(dateTime.getTimezoneOffset() % 60, 2);

      return `${y}-${m}-${d}T${H}:${M}:${s}.${ms}${offsetSign}${offsetH}${offsetM}`;

    case "DATE_TIME_12":
      var H = dateTime.getHours();
      var M = this.addPadding(dateTime.getMinutes(),2);
      var m = this.addPadding(dateTime.getMonth()+1,2);
      var d = this.addPadding(dateTime.getDate(),2);
      var y = this.addPadding(dateTime.getFullYear(),4);
      var a = H >= 12 ? "PM" : "AM";
      H = H % 12;
      H = H ? H : 12; // the hour '0' should be '12'
      // if (H.toString().length == 1) {
      //   H = "0" + H;
      // }
      H = this.addPadding(H,2);
      return H + ":" + M + " " + a + " " + d + "/" + m + "/" + y;

    case "DATE_TIME_12_US":
      var H = dateTime.getHours();
      var M = this.addPadding(dateTime.getMinutes(),2);
      var m = this.addPadding(dateTime.getMonth()+1,2);
      var d = this.addPadding(dateTime.getDate(),2);
      var y = this.addPadding(dateTime.getFullYear(),4);
      var a = H >= 12 ? "PM" : "AM";
      H = H % 12;
      H = H ? H : 12; // the hour '0' should be '12'
      H = this.addPadding(H,2);

      return H + ":" + M + " " + a + " " + m + "/" + d + "/" + y;

    case "DATE_TIME_24":
      var H = this.addPadding(dateTime.getHours(),2);
      var M = this.addPadding(dateTime.getMinutes(),2);
      var m = this.addPadding(dateTime.getMonth()+1,2);
      var d = this.addPadding(dateTime.getDate(),2);
      var y = this.addPadding(dateTime.getFullYear(),4);
      
      return H + ":" + M + " " + d + "/" + m + "/" + y;

    case "DATE_TIME_24_US":
      var H = this.addPadding(dateTime.getHours(),2);
      var M = this.addPadding(dateTime.getMinutes(),2);
      var m = this.addPadding(dateTime.getMonth()+1,2);
      var d = this.addPadding(dateTime.getDate(),2);
      var y = this.addPadding(dateTime.getFullYear(),4);
      
      return H + ":" + M + " " + m + "/" + d + "/" + y;

    case "TIME_12":
      var H = dateTime.getHours();
      var M = this.addPadding(dateTime.getMinutes(),2);
      var a = H >= 12 ? "PM" : "AM";
      H = H % 12;
      H = H ? H : 12; // the hour '0' should be '12'
      H = this.addPadding(H,2);

      return H + ":" + M + " " + a;

    case "TIME_24":
      var H = this.addPadding(dateTime.getHours(),2);
      var M = this.addPadding(dateTime.getMinutes(),2);
      return H + ":" + M;

    case "DATE":
      var m = this.addPadding(dateTime.getMonth()+1,2);
      var d = this.addPadding(dateTime.getDate(),2);
      var y = this.addPadding(dateTime.getFullYear(),4);
      return d + "/" + m + "/" + y;

    case "DATE_US":
      var m = this.addPadding(dateTime.getMonth()+1,2);
      var d = this.addPadding(dateTime.getDate(),2);
      var y = this.addPadding(dateTime.getFullYear(),4);
      return m + "/" + d + "/" + y;

    default:
      return "";
    }
  }

  elapsedComponent (timestamp, num) {
    return Math.floor(timestamp/num);
  }

  elapsedComponentsFromTime (time, components) {
    var dateTime = new Date(time.getTime());
    var dateZeroTime = new Date(0);
    var y = dateTime.getUTCFullYear() - dateZeroTime.getUTCFullYear();
    var m = dateTime.getUTCMonth() - dateZeroTime.getUTCMonth();
    var d = dateTime.getUTCDate() - dateZeroTime.getUTCDate();
    var h = dateTime.getUTCHours() - dateZeroTime.getUTCHours();
    var M = dateTime.getUTCMinutes() - dateZeroTime.getUTCMinutes();
    var s = dateTime.getUTCSeconds() - dateZeroTime.getUTCSeconds();

    switch(components) {
    case "S":
      return [s];
    case "SM":
      return [ M, s ];
    case "SMH":
      return [ h, M, s ];
    case "SMHD":
      return [ d, h, M, s ];
    case "SMHDM":
      return [ m, d, h, M, s ];
    case "SMHDMY":
      return [ y, m, d, h, M, s ];
    default:
      return [];
    }
  }

  componentsFromTime (time, components) {
    var dateTime = new Date(time);
    switch(components) {
    case "S":
      return [dateTime.getSeconds()];
    case "SM":
      return [
        dateTime.getSeconds(),
        dateTime.getMinutes()
      ];
    case "SMH":
      return [
        dateTime.getSeconds(),
        dateTime.getMinutes(),
        dateTime.getHours()
      ];
    case "SMHD":
      return [
        dateTime.getSeconds(),
        dateTime.getMinutes(),
        dateTime.getHours(),
        dateTime.getDate()
      ];
    case "SMHDM":
      return [
        dateTime.getSeconds(),
        dateTime.getMinutes(),
        dateTime.getHours(),
        dateTime.getDate(),
        dateTime.getMonth()+1
      ];
    case "SMHDMY":
      return [
        dateTime.getSeconds(),
        dateTime.getMinutes(),
        dateTime.getHours(),
        dateTime.getDate(),
        dateTime.getMonth()+1,
        dateTime.getFullYear()
      ];
    default:
      return [];
    }
  }

  numberDayOfWeekFromDate (time) {
    var dateTime = new Date(time);
    if (dateTime.getDay() == 0) return 7;
    return dateTime.getDay();

  }

  stringDayOfWeekFromDate (time) {
    var dateTime = new Date(time);
    var ar = new Array("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday");
    return ar[dateTime.getDay()];
  }

  createTimeInterval ( sec, min, hou, day, mon, yea) {
    return [
      sec,
      min,
      hou,
      day,
      mon,
      yea
    ];
  }

  addIntervalFromTime (time, timeInt) {
    // console.log (time + timeInt);
    // if (timeInt.constructor !== Array || timeInt.length != 6){
    //     return new Date(time);
    // }
    // var elap = this.componentsFromTime(time, "SMHDMY");
    // console.log (elap);
    // var year = elap[0] + Number(timeInt[5]);
    // var month = (elap[1] - 1) + Number(timeInt[4]);
    // var day = elap[2] + Number(timeInt[3]);
    // var hours = elap[3] + Number(timeInt[2]);
    // var min =elap[4] + Number(timeInt[1]);
    // var sec = elap[5] + Number(timeInt[0]);
    // return new Date(year, month, day, hours, min, sec);
    var retTime = new Date(time);
    retTime.setSeconds(retTime.getSeconds() + Number(timeInt[0]));
    retTime.setMinutes(retTime.getMinutes() + Number(timeInt[1]));
    retTime.setHours(retTime.getHours() + Number(timeInt[2]));
    retTime.setDate(retTime.getDate() + Number(timeInt[3]));
    retTime.setMonth(retTime.getMonth() + Number(timeInt[4]));
    retTime.setFullYear(retTime.getFullYear() + Number(timeInt[5]));
    return retTime;
  }

  subtractIntervalFromTime (time, timeInt) {
    // if (timeInt.constructor !== Array || timeInt.length != 6){
    //     return time;
    // }
    // var elap = this.componentsFromTime(time, "SMHDMY");
    // var year = elap[0] - Number(timeInt[5]);
    // var month = (elap[1] - 1) - Number(timeInt[4]);
    // var day = elap[2] - Number(timeInt[3]);
    // var hours = elap[3] - Number(timeInt[2]);
    // var min =elap[4] - Number(timeInt[1]);
    // var sec = elap[5] - Number(timeInt[0]);
    // return new Date(year, month, day, hours, min, sec);
    var retTime = new Date(time);
    retTime.setSeconds(retTime.getSeconds() - Number(timeInt[0]));
    retTime.setMinutes(retTime.getMinutes() - Number(timeInt[1]));
    retTime.setHours(retTime.getHours() - Number(timeInt[2]));
    retTime.setDate(retTime.getDate() - Number(timeInt[3]));
    retTime.setMonth(retTime.getMonth() - Number(timeInt[4]));
    retTime.setFullYear(retTime.getFullYear() - Number(timeInt[5]));
    return retTime;
  }

  dateFormat (dateObj,format) {
    var keys = {
      "yyyy": "1",
      "yy":"2",
      "y":"3",
      "MMMM":"4",
      "MMM":"5",
      "MM":"6",
      "M":"7",
      "dd":"8",
      "d":"9",
      "EEEE":"10",
      "EEE":"11",
      "HH":"12",
      "H":"13",
      "hh":"14",
      "h":"15",
      "mm":"16",
      "m":"17",
      "ssss":"18",
      "ss":"19",
      "s":"20",
      "a":"21"
    };

    var result = format;
    var fullyear = dateObj.getFullYear();
    var year2dgt = String(fullyear % 100);
    var month = String(dateObj.getMonth() + 1);
    var monthLit = [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July",
      "August",
      "September",
      "October",
      "November",
      "December"
    ][dateObj.getMonth()];
    var day = String(dateObj.getDate());
    var weekday = String(dateObj.getDay());
    var weekdayLit = [
      "Sunday",
      "Monday",
      "Tuesday",
      "Wednesday",
      "Thursday",
      "Friday",
      "Saturday"
    ][dateObj.getDay()];
    var min = String(dateObj.getMinutes());
    var hour24 = String(dateObj.getHours());
    var hour12 = (Number(dateObj.getHours()) % 12).toString();
    var sc= String(dateObj.getSeconds());
    var msec = String(dateObj.getMilliseconds());
    var am_pm = (Number(dateObj.getHours()) >= 12)?"PM":"AM";

    // generate escape code
    var escChar = "%";
    while (format.search(escChar)>=0) escChar += "%";

    if (year2dgt.length==1) year2dgt = "0" + year2dgt;
    if (month.length==1) month = "0" + month;
    if (day.length==1) day = "0" + day;
    if (min.length==1) min = "0" + min;
    if (hour24.length==1) hour24 = "0" + hour24;
    if (hour12.length==1) hour12 = "0" + hour12;
    if (sc.length==1) sc = "0" + sc;
    if (msec.length==1) msec = "00" + msec;
    if (msec.length==2) msec = "0" + msec;

    if (Number(hour12) == 0) hour12 = "12";

    var escapeKey = function(string,key) {
      return string.replace(key, escapedKey(key));
    };
    var escapedKey = function(key) {
      return escChar + keys[key] + escChar;
    };
    var isolateKeys = function(format) {
      var isolated = format;

      isolated = escapeKey(isolated,"yyyy");
      isolated = escapeKey(isolated,"yy");
      isolated = escapeKey(isolated,"y");
      isolated = escapeKey(isolated,"MMMM");
      isolated = escapeKey(isolated,"MMM");
      isolated = escapeKey(isolated,"MM");
      isolated = escapeKey(isolated,"M");
      isolated = escapeKey(isolated,"dd");
      isolated = escapeKey(isolated,"d");
      isolated = escapeKey(isolated,"EEEE");
      isolated = escapeKey(isolated,"EEE");
      isolated = escapeKey(isolated,"HH");
      isolated = escapeKey(isolated,"H");
      isolated = escapeKey(isolated,"hh");
      isolated = escapeKey(isolated,"h");
      isolated = escapeKey(isolated,"mm");
      isolated = escapeKey(isolated,"m");
      isolated = escapeKey(isolated,"ssss");
      isolated = escapeKey(isolated,"ss");
      isolated = escapeKey(isolated,"s");
      isolated = escapeKey(isolated,"a");
      return isolated;
    };

    result = isolateKeys(result);

    result = result.replace(escapedKey("yyyy"),fullyear);
    result = result.replace(escapedKey("yy"),year2dgt);
    result = result.replace(escapedKey("y"),Number(fullyear));

    result = result.replace(escapedKey("MMMM"),monthLit);
    result = result.replace(escapedKey("MMM"),monthLit.substr(0,3));
    result = result.replace(escapedKey("MM"),month);
    result = result.replace(escapedKey("M"),Number(month));

    result = result.replace(escapedKey("dd"),day);
    result = result.replace(escapedKey("d"),Number(day));

    result = result.replace(escapedKey("EEEE"),weekdayLit);
    result = result.replace(escapedKey("EEE"),weekdayLit.substr(0,3));

    result = result.replace(escapedKey("HH"),hour24);
    result = result.replace(escapedKey("H"),Number(hour24));

    result = result.replace(escapedKey("hh"),hour12);
    result = result.replace(escapedKey("h"),Number(hour12));

    result = result.replace(escapedKey("mm"),min);
    result = result.replace(escapedKey("m"),Number(min));

    result = result.replace(escapedKey("ssss"),msec);

    result = result.replace(escapedKey("ss"),sc);
    result = result.replace(escapedKey("s"),Number(sc));

    result = result.replace(escapedKey("a"),am_pm);

    return result;
  }

  getTimeFromTimezone (tz) {
    return new Date().toLocaleString("en-US", {timeZone: tz});
  }

  pickTimezone () {
    let parent = this;
    const timezones = new __WEBPACK_IMPORTED_MODULE_0__common_timezones__["a" /* TimeZones */]().getList() || [];
    let htmlList = "";
    for (let line of timezones) {
      htmlList += "<div class=\"timezone-elem\" style=\"cursor:pointer\">" + line + "</div>";
    }
    let _selected = "";
    return new Promise((resolve) => {
      parent.timezonePicker =
      $(`<div id="modal" class="modal fade pickerModal">
        <div class="modal-dialog-sm" style = "position:relative;background:#fff;width:300px; margin:0 auto;padding:25px;padding-left:30px;">
          <div id="timezonelist"></div>
      </div>`);
      $(parent.timezonePicker).find("#timezonelist").append(htmlList);
      $(parent.timezonePicker).find(".timezone-elem").click(function (e) {
        _selected = e.target ? e.target.innerText : "";
        if (_selected) {
          $(parent.timezonePicker).modal("hide");
          resolve(_selected);
        }
      });
      $(parent.timezonePicker).modal("show");
    });
  }


}

/* harmony default export */ __webpack_exports__["a"] = (TimeLibraryObject);

/***/ }),
/* 194 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

class VideoCallObject {

  constructor () {}

  startVideoCall(roomId, onfinishcallback, onjoinedcallback){
    if (!window._wifiAvailable) {
      console.error("Network was turned off for the preview");
      return;
    }
    var domain = "jitsi.snapclinical-it.net";
    var options = {
      roomName: roomId,
      width: document.width,
      height: document.height
    };
    var api = new JitsiMeetExternalAPI(domain, options);
    var iframe = api.getIFrame();

    iframe.parentNode.style.position = "relative";
    iframe.style.position = "absolute";
    iframe.style.left = 0;
    iframe.style.top = 0;

    api.addEventListener("videoConferenceLeft",function(data){
      iframe.parentNode.removeChild(iframe);
      onfinishcallback(data);
    });

    api.addEventListener("videoConferenceJoined", function(data){
      onjoinedcallback(data);
    });
  }

}
/* harmony default export */ __webpack_exports__["a"] = (VideoCallObject);


/***/ }),
/* 195 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Created by Ravish S on 16/10/17.
*/

class VideoLibraryObject {

    constructor() {}

    createVideoFromResource (url) {
        let vid = document.createElement("VIDEO");
        let source = document.createElement("source");
        vid.appendChild(source);
        vid.crossOrigin = 'anonymous';
        source.src = url;
        return vid;
    }

    createVideoFromUrl (url, successCallBack, failureCallBack) {
        let vid = document.createElement("VIDEO");
        let source = document.createElement("source");
        vid.appendChild(source);
        vid.crossOrigin = 'anonymous';
        source.src = url;
        console.log (vid);
        vid.onloadeddata = (e) => {
            successCallBack (vid);
        };

        vid.onerror = (e) => {
          console.log('createVideoFromUrl, load error', e);
          failureCallBack(e);
        }
    }

    getDuration (video) {
        return video.duration;
    }

    playVideo (video, successCallBack) {
        video.play();
        video.onended = function(e) {
            successCallBack(e);
        };
    }

    playVideoFrom (video,position,successCallBack) {
        video.currentTime = position;
        video.play();
        video.onended = function(e) {
            successCallBack(e);
        };
    }


}

/* harmony default export */ __webpack_exports__["a"] = (VideoLibraryObject);

/***/ }),
/* 196 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);
// ES6 imports


class VideoObject extends __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__["a" /* default */] {

    constructor() {
        super('');

        var self = this;

        this.setProperty = Object.assign(this.setProperty, {
            'Video': (objName, value) => {
                console.log (value);
                let elemSelector = '[obj-name="' + objName + '"]';
                let width = $(elemSelector).width();
                let height = $(elemSelector).height();
                $(elemSelector).html(value);
                $(elemSelector).find("video").attr("width", width).attr("height", height);
            },
        });

    }

    getElemFromObj(objName) {
        let elemSelector = '[obj-name="' + objName + '"]';
        let elem = $(elemSelector).find('video');
        console.log (elem);
        return elem;
    }
    play (objName) {
        let elem = this.getElemFromObj(objName);
        $(elem).get(0).play();
    }

    pause (objName) {
        let elem = this.getElemFromObj(objName);
        $(elem).get(0).pause();  
    }

    stop (objName) {
        let elem = this.getElemFromObj(objName);
        $(elem).get(0).pause();
        $(elem).get(0).currentTime = 0;
    }

    getElapsedTime (objName) {
        let elem = this.getElemFromObj(objName);
        return $(elem).get(0).currentTime;
    }

    getVolume (objName) {
        let elem = this.getElemFromObj(objName);
        return $(elem).get(0).volume;   
    }

    setVolume (objName,vol) {
        let elem = this.getElemFromObj(objName);
        return $(elem).get(0).volume = vol; 
    }

    playFromPosition (objName,pos) {
        let elem = this.getElemFromObj(objName);
        $(elem).get(0).currentTime = pos;
        $(elem).get(0).play();
    }

    skipToPosition (objName,pos) {
        let elem = this.getElemFromObj(objName);
        $(elem).get(0).currentTime = pos;
    }

}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (VideoObject);



/***/ }),
/* 197 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);
// ES6 imports


class WebViewObject extends __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__["a" /* default */] {

    constructor() {
        super(' web view');
        var self = this;
        this.callback = null;
        this.interceptTimer = null;

        this.setProperty['URL'] = function(objName, value) {
            let elem =  $('[obj-name= "' + objName + '"]');
            $(elem).find('iframe').attr('src',value);
            self.startUrlIntercept(objName);
        };

        this.getProperty['URL'] = function(objName) {
            let elem =  $('[obj-name= "' + objName + '"]');
            return $(elem).find('iframe').attr('src');        
        };

        this.setProperty['intercept-domain'] = function(objName, value) {
          let elem =  $('[obj-name= "' + objName + '"]');
          $(elem).find('iframe').attr('intercept-domain',value);
          self.startUrlIntercept(objName);
        };

        this.getProperty['intercept-domain'] = function(objName) {
            let elem =  $('[obj-name= "' + objName + '"]');
            return $(elem).find('iframe').attr('intercept-domain');      
        };
    }

    refresh (objName) {
        let elem =  $('[obj-name= "' + objName + '"]');
        let url = $(elem).find('iframe').attr('src');
        $(elem).find('iframe').attr('src',url);
    }

    setDomainInterceptCallback(objName, callback) {
        this.callback = callback;
        this.startUrlIntercept(objName);
    }

    startUrlIntercept(objName) {
        let self = this;
        if (self.interceptTimer!=null ) {
            clearInterval(self.interceptTimer);
            self.interceptTimer = null;
        }
        let elem =  $('[obj-name= "' + objName + '"]');
        let iframe = $(elem).find('iframe').get(0);
        let interceptDomain = this.getProperty['intercept-domain'](objName);
        //This function is called for scenarios which are short lived ( oAuth / Web URL Intersept )
        // Since load is the only available event in this case, using a timer for 100ms
        try {
            self.interceptTimer = setInterval(function(){ 
                let url = iframe.contentWindow.location.href;
                let hostname = $('<a>').prop('href', url).prop('hostname');
                if( interceptDomain!=undefined && hostname!=undefined ) {
                    if( hostname.indexOf(interceptDomain)!=-1 ) {
                        if( self.callback!=null ) {
                            self.callback(url);    
                        }
                        clearInterval(self.interceptTimer);
                        self.interceptTimer = null;
                    }
                }
            },100);
        } catch (e) {

        }
    }


    WebViewException(msg) {
      let error = new Error(msg);
      error.name = "WebViewException";
      throw error;
    }
}

// ES6 exports
/* harmony default export */ __webpack_exports__["a"] = (WebViewObject);



/***/ }),
/* 198 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__ = __webpack_require__(3);
/**
 * Widget Canvas Module Module
*/



class WidgetCanvasObject extends __WEBPACK_IMPORTED_MODULE_0__base_object_base_object_module_js__["a" /* default */] {

    constructor() {
        super();

        this.getProperty = Object.assign(this.getProperty, {
            'Accept widgets': (objName) => {
            
            } 
        });

        this.setProperty = Object.assign(this.setProperty, {

            'Accept widgets': (objName, value) => {
                
            }
        });

    }

}

/* harmony default export */ __webpack_exports__["a"] = (WidgetCanvasObject);

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(5), __webpack_require__(6), __webpack_require__(4), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var BlockCipher = C_lib.BlockCipher;
	    var C_algo = C.algo;

	    // Lookup tables
	    var SBOX = [];
	    var INV_SBOX = [];
	    var SUB_MIX_0 = [];
	    var SUB_MIX_1 = [];
	    var SUB_MIX_2 = [];
	    var SUB_MIX_3 = [];
	    var INV_SUB_MIX_0 = [];
	    var INV_SUB_MIX_1 = [];
	    var INV_SUB_MIX_2 = [];
	    var INV_SUB_MIX_3 = [];

	    // Compute lookup tables
	    (function () {
	        // Compute double table
	        var d = [];
	        for (var i = 0; i < 256; i++) {
	            if (i < 128) {
	                d[i] = i << 1;
	            } else {
	                d[i] = (i << 1) ^ 0x11b;
	            }
	        }

	        // Walk GF(2^8)
	        var x = 0;
	        var xi = 0;
	        for (var i = 0; i < 256; i++) {
	            // Compute sbox
	            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);
	            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;
	            SBOX[x] = sx;
	            INV_SBOX[sx] = x;

	            // Compute multiplication
	            var x2 = d[x];
	            var x4 = d[x2];
	            var x8 = d[x4];

	            // Compute sub bytes, mix columns tables
	            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);
	            SUB_MIX_0[x] = (t << 24) | (t >>> 8);
	            SUB_MIX_1[x] = (t << 16) | (t >>> 16);
	            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);
	            SUB_MIX_3[x] = t;

	            // Compute inv sub bytes, inv mix columns tables
	            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);
	            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);
	            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);
	            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);
	            INV_SUB_MIX_3[sx] = t;

	            // Compute next counter
	            if (!x) {
	                x = xi = 1;
	            } else {
	                x = x2 ^ d[d[d[x8 ^ x2]]];
	                xi ^= d[d[xi]];
	            }
	        }
	    }());

	    // Precomputed Rcon lookup
	    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];

	    /**
	     * AES block cipher algorithm.
	     */
	    var AES = C_algo.AES = BlockCipher.extend({
	        _doReset: function () {
	            // Skip reset of nRounds has been set before and key did not change
	            if (this._nRounds && this._keyPriorReset === this._key) {
	                return;
	            }

	            // Shortcuts
	            var key = this._keyPriorReset = this._key;
	            var keyWords = key.words;
	            var keySize = key.sigBytes / 4;

	            // Compute number of rounds
	            var nRounds = this._nRounds = keySize + 6;

	            // Compute number of key schedule rows
	            var ksRows = (nRounds + 1) * 4;

	            // Compute key schedule
	            var keySchedule = this._keySchedule = [];
	            for (var ksRow = 0; ksRow < ksRows; ksRow++) {
	                if (ksRow < keySize) {
	                    keySchedule[ksRow] = keyWords[ksRow];
	                } else {
	                    var t = keySchedule[ksRow - 1];

	                    if (!(ksRow % keySize)) {
	                        // Rot word
	                        t = (t << 8) | (t >>> 24);

	                        // Sub word
	                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];

	                        // Mix Rcon
	                        t ^= RCON[(ksRow / keySize) | 0] << 24;
	                    } else if (keySize > 6 && ksRow % keySize == 4) {
	                        // Sub word
	                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];
	                    }

	                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;
	                }
	            }

	            // Compute inv key schedule
	            var invKeySchedule = this._invKeySchedule = [];
	            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {
	                var ksRow = ksRows - invKsRow;

	                if (invKsRow % 4) {
	                    var t = keySchedule[ksRow];
	                } else {
	                    var t = keySchedule[ksRow - 4];
	                }

	                if (invKsRow < 4 || ksRow <= 4) {
	                    invKeySchedule[invKsRow] = t;
	                } else {
	                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^
	                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];
	                }
	            }
	        },

	        encryptBlock: function (M, offset) {
	            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);
	        },

	        decryptBlock: function (M, offset) {
	            // Swap 2nd and 4th rows
	            var t = M[offset + 1];
	            M[offset + 1] = M[offset + 3];
	            M[offset + 3] = t;

	            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);

	            // Inv swap 2nd and 4th rows
	            var t = M[offset + 1];
	            M[offset + 1] = M[offset + 3];
	            M[offset + 3] = t;
	        },

	        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {
	            // Shortcut
	            var nRounds = this._nRounds;

	            // Get input, add round key
	            var s0 = M[offset]     ^ keySchedule[0];
	            var s1 = M[offset + 1] ^ keySchedule[1];
	            var s2 = M[offset + 2] ^ keySchedule[2];
	            var s3 = M[offset + 3] ^ keySchedule[3];

	            // Key schedule row counter
	            var ksRow = 4;

	            // Rounds
	            for (var round = 1; round < nRounds; round++) {
	                // Shift rows, sub bytes, mix columns, add round key
	                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];
	                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];
	                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];
	                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];

	                // Update state
	                s0 = t0;
	                s1 = t1;
	                s2 = t2;
	                s3 = t3;
	            }

	            // Shift rows, sub bytes, add round key
	            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];
	            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];
	            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];
	            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];

	            // Set output
	            M[offset]     = t0;
	            M[offset + 1] = t1;
	            M[offset + 2] = t2;
	            M[offset + 3] = t3;
	        },

	        keySize: 256/32
	    });

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);
	     */
	    C.AES = BlockCipher._createHelper(AES);
	}());


	return CryptoJS.AES;

}));

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var C_enc = C.enc;

	    /**
	     * UTF-16 BE encoding strategy.
	     */
	    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {
	        /**
	         * Converts a word array to a UTF-16 BE string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The UTF-16 BE string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var utf16Chars = [];
	            for (var i = 0; i < sigBytes; i += 2) {
	                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;
	                utf16Chars.push(String.fromCharCode(codePoint));
	            }

	            return utf16Chars.join('');
	        },

	        /**
	         * Converts a UTF-16 BE string to a word array.
	         *
	         * @param {string} utf16Str The UTF-16 BE string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);
	         */
	        parse: function (utf16Str) {
	            // Shortcut
	            var utf16StrLength = utf16Str.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < utf16StrLength; i++) {
	                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);
	            }

	            return WordArray.create(words, utf16StrLength * 2);
	        }
	    };

	    /**
	     * UTF-16 LE encoding strategy.
	     */
	    C_enc.Utf16LE = {
	        /**
	         * Converts a word array to a UTF-16 LE string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The UTF-16 LE string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var utf16Chars = [];
	            for (var i = 0; i < sigBytes; i += 2) {
	                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);
	                utf16Chars.push(String.fromCharCode(codePoint));
	            }

	            return utf16Chars.join('');
	        },

	        /**
	         * Converts a UTF-16 LE string to a word array.
	         *
	         * @param {string} utf16Str The UTF-16 LE string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
	         */
	        parse: function (utf16Str) {
	            // Shortcut
	            var utf16StrLength = utf16Str.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < utf16StrLength; i++) {
	                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));
	            }

	            return WordArray.create(words, utf16StrLength * 2);
	        }
	    };

	    function swapEndian(word) {
	        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);
	    }
	}());


	return CryptoJS.enc.Utf16;

}));

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function (undefined) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var CipherParams = C_lib.CipherParams;
	    var C_enc = C.enc;
	    var Hex = C_enc.Hex;
	    var C_format = C.format;

	    var HexFormatter = C_format.Hex = {
	        /**
	         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.
	         *
	         * @param {CipherParams} cipherParams The cipher params object.
	         *
	         * @return {string} The hexadecimally encoded string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);
	         */
	        stringify: function (cipherParams) {
	            return cipherParams.ciphertext.toString(Hex);
	        },

	        /**
	         * Converts a hexadecimally encoded ciphertext string to a cipher params object.
	         *
	         * @param {string} input The hexadecimally encoded string.
	         *
	         * @return {CipherParams} The cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);
	         */
	        parse: function (input) {
	            var ciphertext = Hex.parse(input);
	            return CipherParams.create({ ciphertext: ciphertext });
	        }
	    };
	}());


	return CryptoJS.format.Hex;

}));

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Check if typed arrays are supported
	    if (typeof ArrayBuffer != 'function') {
	        return;
	    }

	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;

	    // Reference original init
	    var superInit = WordArray.init;

	    // Augment WordArray.init to handle typed arrays
	    var subInit = WordArray.init = function (typedArray) {
	        // Convert buffers to uint8
	        if (typedArray instanceof ArrayBuffer) {
	            typedArray = new Uint8Array(typedArray);
	        }

	        // Convert other array views to uint8
	        if (
	            typedArray instanceof Int8Array ||
	            (typeof Uint8ClampedArray !== "undefined" && typedArray instanceof Uint8ClampedArray) ||
	            typedArray instanceof Int16Array ||
	            typedArray instanceof Uint16Array ||
	            typedArray instanceof Int32Array ||
	            typedArray instanceof Uint32Array ||
	            typedArray instanceof Float32Array ||
	            typedArray instanceof Float64Array
	        ) {
	            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);
	        }

	        // Handle Uint8Array
	        if (typedArray instanceof Uint8Array) {
	            // Shortcut
	            var typedArrayByteLength = typedArray.byteLength;

	            // Extract bytes
	            var words = [];
	            for (var i = 0; i < typedArrayByteLength; i++) {
	                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);
	            }

	            // Initialize this word array
	            superInit.call(this, words, typedArrayByteLength);
	        } else {
	            // Else call normal init
	            superInit.apply(this, arguments);
	        }
	    };

	    subInit.prototype = WordArray;
	}());


	return CryptoJS.lib.WordArray;

}));

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	/**
	 * Cipher Feedback block mode.
	 */
	CryptoJS.mode.CFB = (function () {
	    var CFB = CryptoJS.lib.BlockCipherMode.extend();

	    CFB.Encryptor = CFB.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher;
	            var blockSize = cipher.blockSize;

	            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

	            // Remember this block to use with next block
	            this._prevBlock = words.slice(offset, offset + blockSize);
	        }
	    });

	    CFB.Decryptor = CFB.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher;
	            var blockSize = cipher.blockSize;

	            // Remember this block to use with next block
	            var thisBlock = words.slice(offset, offset + blockSize);

	            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

	            // This block becomes the previous block
	            this._prevBlock = thisBlock;
	        }
	    });

	    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {
	        // Shortcut
	        var iv = this._iv;

	        // Generate keystream
	        if (iv) {
	            var keystream = iv.slice(0);

	            // Remove IV for subsequent blocks
	            this._iv = undefined;
	        } else {
	            var keystream = this._prevBlock;
	        }
	        cipher.encryptBlock(keystream, 0);

	        // Encrypt
	        for (var i = 0; i < blockSize; i++) {
	            words[offset + i] ^= keystream[i];
	        }
	    }

	    return CFB;
	}());


	return CryptoJS.mode.CFB;

}));

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	/** @preserve
	 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
	 * derived from CryptoJS.mode.CTR
	 * Jan Hruby jhruby.web@gmail.com
	 */
	CryptoJS.mode.CTRGladman = (function () {
	    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();

		function incWord(word)
		{
			if (((word >> 24) & 0xff) === 0xff) { //overflow
			var b1 = (word >> 16)&0xff;
			var b2 = (word >> 8)&0xff;
			var b3 = word & 0xff;

			if (b1 === 0xff) // overflow b1
			{
			b1 = 0;
			if (b2 === 0xff)
			{
				b2 = 0;
				if (b3 === 0xff)
				{
					b3 = 0;
				}
				else
				{
					++b3;
				}
			}
			else
			{
				++b2;
			}
			}
			else
			{
			++b1;
			}

			word = 0;
			word += (b1 << 16);
			word += (b2 << 8);
			word += b3;
			}
			else
			{
			word += (0x01 << 24);
			}
			return word;
		}

		function incCounter(counter)
		{
			if ((counter[0] = incWord(counter[0])) === 0)
			{
				// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8
				counter[1] = incWord(counter[1]);
			}
			return counter;
		}

	    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher
	            var blockSize = cipher.blockSize;
	            var iv = this._iv;
	            var counter = this._counter;

	            // Generate keystream
	            if (iv) {
	                counter = this._counter = iv.slice(0);

	                // Remove IV for subsequent blocks
	                this._iv = undefined;
	            }

				incCounter(counter);

				var keystream = counter.slice(0);
	            cipher.encryptBlock(keystream, 0);

	            // Encrypt
	            for (var i = 0; i < blockSize; i++) {
	                words[offset + i] ^= keystream[i];
	            }
	        }
	    });

	    CTRGladman.Decryptor = Encryptor;

	    return CTRGladman;
	}());




	return CryptoJS.mode.CTRGladman;

}));

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	/**
	 * Counter block mode.
	 */
	CryptoJS.mode.CTR = (function () {
	    var CTR = CryptoJS.lib.BlockCipherMode.extend();

	    var Encryptor = CTR.Encryptor = CTR.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher
	            var blockSize = cipher.blockSize;
	            var iv = this._iv;
	            var counter = this._counter;

	            // Generate keystream
	            if (iv) {
	                counter = this._counter = iv.slice(0);

	                // Remove IV for subsequent blocks
	                this._iv = undefined;
	            }
	            var keystream = counter.slice(0);
	            cipher.encryptBlock(keystream, 0);

	            // Increment counter
	            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0

	            // Encrypt
	            for (var i = 0; i < blockSize; i++) {
	                words[offset + i] ^= keystream[i];
	            }
	        }
	    });

	    CTR.Decryptor = Encryptor;

	    return CTR;
	}());


	return CryptoJS.mode.CTR;

}));

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	/**
	 * Electronic Codebook block mode.
	 */
	CryptoJS.mode.ECB = (function () {
	    var ECB = CryptoJS.lib.BlockCipherMode.extend();

	    ECB.Encryptor = ECB.extend({
	        processBlock: function (words, offset) {
	            this._cipher.encryptBlock(words, offset);
	        }
	    });

	    ECB.Decryptor = ECB.extend({
	        processBlock: function (words, offset) {
	            this._cipher.decryptBlock(words, offset);
	        }
	    });

	    return ECB;
	}());


	return CryptoJS.mode.ECB;

}));

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	/**
	 * Output Feedback block mode.
	 */
	CryptoJS.mode.OFB = (function () {
	    var OFB = CryptoJS.lib.BlockCipherMode.extend();

	    var Encryptor = OFB.Encryptor = OFB.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher
	            var blockSize = cipher.blockSize;
	            var iv = this._iv;
	            var keystream = this._keystream;

	            // Generate keystream
	            if (iv) {
	                keystream = this._keystream = iv.slice(0);

	                // Remove IV for subsequent blocks
	                this._iv = undefined;
	            }
	            cipher.encryptBlock(keystream, 0);

	            // Encrypt
	            for (var i = 0; i < blockSize; i++) {
	                words[offset + i] ^= keystream[i];
	            }
	        }
	    });

	    OFB.Decryptor = Encryptor;

	    return OFB;
	}());


	return CryptoJS.mode.OFB;

}));

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	/**
	 * ANSI X.923 padding strategy.
	 */
	CryptoJS.pad.AnsiX923 = {
	    pad: function (data, blockSize) {
	        // Shortcuts
	        var dataSigBytes = data.sigBytes;
	        var blockSizeBytes = blockSize * 4;

	        // Count padding bytes
	        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;

	        // Compute last byte position
	        var lastBytePos = dataSigBytes + nPaddingBytes - 1;

	        // Pad
	        data.clamp();
	        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);
	        data.sigBytes += nPaddingBytes;
	    },

	    unpad: function (data) {
	        // Get number of padding bytes from last byte
	        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

	        // Remove padding
	        data.sigBytes -= nPaddingBytes;
	    }
	};


	return CryptoJS.pad.Ansix923;

}));

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	/**
	 * ISO 10126 padding strategy.
	 */
	CryptoJS.pad.Iso10126 = {
	    pad: function (data, blockSize) {
	        // Shortcut
	        var blockSizeBytes = blockSize * 4;

	        // Count padding bytes
	        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

	        // Pad
	        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).
	             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));
	    },

	    unpad: function (data) {
	        // Get number of padding bytes from last byte
	        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

	        // Remove padding
	        data.sigBytes -= nPaddingBytes;
	    }
	};


	return CryptoJS.pad.Iso10126;

}));

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	/**
	 * ISO/IEC 9797-1 Padding Method 2.
	 */
	CryptoJS.pad.Iso97971 = {
	    pad: function (data, blockSize) {
	        // Add 0x80 byte
	        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));

	        // Zero pad the rest
	        CryptoJS.pad.ZeroPadding.pad(data, blockSize);
	    },

	    unpad: function (data) {
	        // Remove zero padding
	        CryptoJS.pad.ZeroPadding.unpad(data);

	        // Remove one more byte -- the 0x80 byte
	        data.sigBytes--;
	    }
	};


	return CryptoJS.pad.Iso97971;

}));

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	/**
	 * A noop padding strategy.
	 */
	CryptoJS.pad.NoPadding = {
	    pad: function () {
	    },

	    unpad: function () {
	    }
	};


	return CryptoJS.pad.NoPadding;

}));

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	/**
	 * Zero padding strategy.
	 */
	CryptoJS.pad.ZeroPadding = {
	    pad: function (data, blockSize) {
	        // Shortcut
	        var blockSizeBytes = blockSize * 4;

	        // Pad
	        data.clamp();
	        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);
	    },

	    unpad: function (data) {
	        // Shortcut
	        var dataWords = data.words;

	        // Unpad
	        var i = data.sigBytes - 1;
	        while (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {
	            i--;
	        }
	        data.sigBytes = i + 1;
	    }
	};


	return CryptoJS.pad.ZeroPadding;

}));

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(11), __webpack_require__(10));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./sha1", "./hmac"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var WordArray = C_lib.WordArray;
	    var C_algo = C.algo;
	    var SHA1 = C_algo.SHA1;
	    var HMAC = C_algo.HMAC;

	    /**
	     * Password-Based Key Derivation Function 2 algorithm.
	     */
	    var PBKDF2 = C_algo.PBKDF2 = Base.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
	         * @property {Hasher} hasher The hasher to use. Default: SHA1
	         * @property {number} iterations The number of iterations to perform. Default: 1
	         */
	        cfg: Base.extend({
	            keySize: 128/32,
	            hasher: SHA1,
	            iterations: 1
	        }),

	        /**
	         * Initializes a newly created key derivation function.
	         *
	         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
	         *
	         * @example
	         *
	         *     var kdf = CryptoJS.algo.PBKDF2.create();
	         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
	         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
	         */
	        init: function (cfg) {
	            this.cfg = this.cfg.extend(cfg);
	        },

	        /**
	         * Computes the Password-Based Key Derivation Function 2.
	         *
	         * @param {WordArray|string} password The password.
	         * @param {WordArray|string} salt A salt.
	         *
	         * @return {WordArray} The derived key.
	         *
	         * @example
	         *
	         *     var key = kdf.compute(password, salt);
	         */
	        compute: function (password, salt) {
	            // Shortcut
	            var cfg = this.cfg;

	            // Init HMAC
	            var hmac = HMAC.create(cfg.hasher, password);

	            // Initial values
	            var derivedKey = WordArray.create();
	            var blockIndex = WordArray.create([0x00000001]);

	            // Shortcuts
	            var derivedKeyWords = derivedKey.words;
	            var blockIndexWords = blockIndex.words;
	            var keySize = cfg.keySize;
	            var iterations = cfg.iterations;

	            // Generate key
	            while (derivedKeyWords.length < keySize) {
	                var block = hmac.update(salt).finalize(blockIndex);
	                hmac.reset();

	                // Shortcuts
	                var blockWords = block.words;
	                var blockWordsLength = blockWords.length;

	                // Iterations
	                var intermediate = block;
	                for (var i = 1; i < iterations; i++) {
	                    intermediate = hmac.finalize(intermediate);
	                    hmac.reset();

	                    // Shortcut
	                    var intermediateWords = intermediate.words;

	                    // XOR intermediate with block
	                    for (var j = 0; j < blockWordsLength; j++) {
	                        blockWords[j] ^= intermediateWords[j];
	                    }
	                }

	                derivedKey.concat(block);
	                blockIndexWords[0]++;
	            }
	            derivedKey.sigBytes = keySize * 4;

	            return derivedKey;
	        }
	    });

	    /**
	     * Computes the Password-Based Key Derivation Function 2.
	     *
	     * @param {WordArray|string} password The password.
	     * @param {WordArray|string} salt A salt.
	     * @param {Object} cfg (Optional) The configuration options to use for this computation.
	     *
	     * @return {WordArray} The derived key.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var key = CryptoJS.PBKDF2(password, salt);
	     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });
	     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });
	     */
	    C.PBKDF2 = function (password, salt, cfg) {
	        return PBKDF2.create(cfg).compute(password, salt);
	    };
	}());


	return CryptoJS.PBKDF2;

}));

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(5), __webpack_require__(6), __webpack_require__(4), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var StreamCipher = C_lib.StreamCipher;
	    var C_algo = C.algo;

	    // Reusable objects
	    var S  = [];
	    var C_ = [];
	    var G  = [];

	    /**
	     * Rabbit stream cipher algorithm.
	     *
	     * This is a legacy version that neglected to convert the key to little-endian.
	     * This error doesn't affect the cipher's security,
	     * but it does affect its compatibility with other implementations.
	     */
	    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var K = this._key.words;
	            var iv = this.cfg.iv;

	            // Generate initial state values
	            var X = this._X = [
	                K[0], (K[3] << 16) | (K[2] >>> 16),
	                K[1], (K[0] << 16) | (K[3] >>> 16),
	                K[2], (K[1] << 16) | (K[0] >>> 16),
	                K[3], (K[2] << 16) | (K[1] >>> 16)
	            ];

	            // Generate initial counter values
	            var C = this._C = [
	                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),
	                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),
	                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),
	                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)
	            ];

	            // Carry bit
	            this._b = 0;

	            // Iterate the system four times
	            for (var i = 0; i < 4; i++) {
	                nextState.call(this);
	            }

	            // Modify the counters
	            for (var i = 0; i < 8; i++) {
	                C[i] ^= X[(i + 4) & 7];
	            }

	            // IV setup
	            if (iv) {
	                // Shortcuts
	                var IV = iv.words;
	                var IV_0 = IV[0];
	                var IV_1 = IV[1];

	                // Generate four subvectors
	                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);
	                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);
	                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);
	                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);

	                // Modify counter values
	                C[0] ^= i0;
	                C[1] ^= i1;
	                C[2] ^= i2;
	                C[3] ^= i3;
	                C[4] ^= i0;
	                C[5] ^= i1;
	                C[6] ^= i2;
	                C[7] ^= i3;

	                // Iterate the system four times
	                for (var i = 0; i < 4; i++) {
	                    nextState.call(this);
	                }
	            }
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcut
	            var X = this._X;

	            // Iterate the system
	            nextState.call(this);

	            // Generate four keystream words
	            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);
	            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);
	            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);
	            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);

	            for (var i = 0; i < 4; i++) {
	                // Swap endian
	                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |
	                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);

	                // Encrypt
	                M[offset + i] ^= S[i];
	            }
	        },

	        blockSize: 128/32,

	        ivSize: 64/32
	    });

	    function nextState() {
	        // Shortcuts
	        var X = this._X;
	        var C = this._C;

	        // Save old counter values
	        for (var i = 0; i < 8; i++) {
	            C_[i] = C[i];
	        }

	        // Calculate new counter values
	        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;
	        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;
	        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;
	        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;
	        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;
	        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;
	        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;
	        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;
	        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;

	        // Calculate the g-values
	        for (var i = 0; i < 8; i++) {
	            var gx = X[i] + C[i];

	            // Construct high and low argument for squaring
	            var ga = gx & 0xffff;
	            var gb = gx >>> 16;

	            // Calculate high and low result of squaring
	            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;
	            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);

	            // High XOR low
	            G[i] = gh ^ gl;
	        }

	        // Calculate new state values
	        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;
	        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;
	        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;
	        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;
	        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;
	        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;
	        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;
	        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;
	    }

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);
	     */
	    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);
	}());


	return CryptoJS.RabbitLegacy;

}));

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(5), __webpack_require__(6), __webpack_require__(4), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var StreamCipher = C_lib.StreamCipher;
	    var C_algo = C.algo;

	    // Reusable objects
	    var S  = [];
	    var C_ = [];
	    var G  = [];

	    /**
	     * Rabbit stream cipher algorithm
	     */
	    var Rabbit = C_algo.Rabbit = StreamCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var K = this._key.words;
	            var iv = this.cfg.iv;

	            // Swap endian
	            for (var i = 0; i < 4; i++) {
	                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |
	                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);
	            }

	            // Generate initial state values
	            var X = this._X = [
	                K[0], (K[3] << 16) | (K[2] >>> 16),
	                K[1], (K[0] << 16) | (K[3] >>> 16),
	                K[2], (K[1] << 16) | (K[0] >>> 16),
	                K[3], (K[2] << 16) | (K[1] >>> 16)
	            ];

	            // Generate initial counter values
	            var C = this._C = [
	                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),
	                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),
	                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),
	                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)
	            ];

	            // Carry bit
	            this._b = 0;

	            // Iterate the system four times
	            for (var i = 0; i < 4; i++) {
	                nextState.call(this);
	            }

	            // Modify the counters
	            for (var i = 0; i < 8; i++) {
	                C[i] ^= X[(i + 4) & 7];
	            }

	            // IV setup
	            if (iv) {
	                // Shortcuts
	                var IV = iv.words;
	                var IV_0 = IV[0];
	                var IV_1 = IV[1];

	                // Generate four subvectors
	                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);
	                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);
	                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);
	                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);

	                // Modify counter values
	                C[0] ^= i0;
	                C[1] ^= i1;
	                C[2] ^= i2;
	                C[3] ^= i3;
	                C[4] ^= i0;
	                C[5] ^= i1;
	                C[6] ^= i2;
	                C[7] ^= i3;

	                // Iterate the system four times
	                for (var i = 0; i < 4; i++) {
	                    nextState.call(this);
	                }
	            }
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcut
	            var X = this._X;

	            // Iterate the system
	            nextState.call(this);

	            // Generate four keystream words
	            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);
	            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);
	            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);
	            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);

	            for (var i = 0; i < 4; i++) {
	                // Swap endian
	                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |
	                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);

	                // Encrypt
	                M[offset + i] ^= S[i];
	            }
	        },

	        blockSize: 128/32,

	        ivSize: 64/32
	    });

	    function nextState() {
	        // Shortcuts
	        var X = this._X;
	        var C = this._C;

	        // Save old counter values
	        for (var i = 0; i < 8; i++) {
	            C_[i] = C[i];
	        }

	        // Calculate new counter values
	        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;
	        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;
	        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;
	        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;
	        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;
	        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;
	        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;
	        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;
	        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;

	        // Calculate the g-values
	        for (var i = 0; i < 8; i++) {
	            var gx = X[i] + C[i];

	            // Construct high and low argument for squaring
	            var ga = gx & 0xffff;
	            var gb = gx >>> 16;

	            // Calculate high and low result of squaring
	            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;
	            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);

	            // High XOR low
	            G[i] = gh ^ gl;
	        }

	        // Calculate new state values
	        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;
	        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;
	        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;
	        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;
	        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;
	        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;
	        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;
	        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;
	    }

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);
	     */
	    C.Rabbit = StreamCipher._createHelper(Rabbit);
	}());


	return CryptoJS.Rabbit;

}));

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(5), __webpack_require__(6), __webpack_require__(4), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var StreamCipher = C_lib.StreamCipher;
	    var C_algo = C.algo;

	    /**
	     * RC4 stream cipher algorithm.
	     */
	    var RC4 = C_algo.RC4 = StreamCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var key = this._key;
	            var keyWords = key.words;
	            var keySigBytes = key.sigBytes;

	            // Init sbox
	            var S = this._S = [];
	            for (var i = 0; i < 256; i++) {
	                S[i] = i;
	            }

	            // Key setup
	            for (var i = 0, j = 0; i < 256; i++) {
	                var keyByteIndex = i % keySigBytes;
	                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;

	                j = (j + S[i] + keyByte) % 256;

	                // Swap
	                var t = S[i];
	                S[i] = S[j];
	                S[j] = t;
	            }

	            // Counters
	            this._i = this._j = 0;
	        },

	        _doProcessBlock: function (M, offset) {
	            M[offset] ^= generateKeystreamWord.call(this);
	        },

	        keySize: 256/32,

	        ivSize: 0
	    });

	    function generateKeystreamWord() {
	        // Shortcuts
	        var S = this._S;
	        var i = this._i;
	        var j = this._j;

	        // Generate keystream word
	        var keystreamWord = 0;
	        for (var n = 0; n < 4; n++) {
	            i = (i + 1) % 256;
	            j = (j + S[i]) % 256;

	            // Swap
	            var t = S[i];
	            S[i] = S[j];
	            S[j] = t;

	            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);
	        }

	        // Update counters
	        this._i = i;
	        this._j = j;

	        return keystreamWord;
	    }

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);
	     */
	    C.RC4 = StreamCipher._createHelper(RC4);

	    /**
	     * Modified RC4 stream cipher algorithm.
	     */
	    var RC4Drop = C_algo.RC4Drop = RC4.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {number} drop The number of keystream words to drop. Default 192
	         */
	        cfg: RC4.cfg.extend({
	            drop: 192
	        }),

	        _doReset: function () {
	            RC4._doReset.call(this);

	            // Drop
	            for (var i = this.cfg.drop; i > 0; i--) {
	                generateKeystreamWord.call(this);
	            }
	        }
	    });

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);
	     */
	    C.RC4Drop = StreamCipher._createHelper(RC4Drop);
	}());


	return CryptoJS.RC4;

}));

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	/** @preserve
	(c) 2012 by Cédric Mesnil. All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Constants table
	    var _zl = WordArray.create([
	        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
	        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,
	        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,
	        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,
	        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);
	    var _zr = WordArray.create([
	        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,
	        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,
	        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,
	        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,
	        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);
	    var _sl = WordArray.create([
	         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,
	        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,
	        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,
	          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,
	        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);
	    var _sr = WordArray.create([
	        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,
	        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,
	        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,
	        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,
	        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);

	    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);
	    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);

	    /**
	     * RIPEMD160 hash algorithm.
	     */
	    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({
	        _doReset: function () {
	            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);
	        },

	        _doProcessBlock: function (M, offset) {

	            // Swap endian
	            for (var i = 0; i < 16; i++) {
	                // Shortcuts
	                var offset_i = offset + i;
	                var M_offset_i = M[offset_i];

	                // Swap
	                M[offset_i] = (
	                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
	                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
	                );
	            }
	            // Shortcut
	            var H  = this._hash.words;
	            var hl = _hl.words;
	            var hr = _hr.words;
	            var zl = _zl.words;
	            var zr = _zr.words;
	            var sl = _sl.words;
	            var sr = _sr.words;

	            // Working variables
	            var al, bl, cl, dl, el;
	            var ar, br, cr, dr, er;

	            ar = al = H[0];
	            br = bl = H[1];
	            cr = cl = H[2];
	            dr = dl = H[3];
	            er = el = H[4];
	            // Computation
	            var t;
	            for (var i = 0; i < 80; i += 1) {
	                t = (al +  M[offset+zl[i]])|0;
	                if (i<16){
		            t +=  f1(bl,cl,dl) + hl[0];
	                } else if (i<32) {
		            t +=  f2(bl,cl,dl) + hl[1];
	                } else if (i<48) {
		            t +=  f3(bl,cl,dl) + hl[2];
	                } else if (i<64) {
		            t +=  f4(bl,cl,dl) + hl[3];
	                } else {// if (i<80) {
		            t +=  f5(bl,cl,dl) + hl[4];
	                }
	                t = t|0;
	                t =  rotl(t,sl[i]);
	                t = (t+el)|0;
	                al = el;
	                el = dl;
	                dl = rotl(cl, 10);
	                cl = bl;
	                bl = t;

	                t = (ar + M[offset+zr[i]])|0;
	                if (i<16){
		            t +=  f5(br,cr,dr) + hr[0];
	                } else if (i<32) {
		            t +=  f4(br,cr,dr) + hr[1];
	                } else if (i<48) {
		            t +=  f3(br,cr,dr) + hr[2];
	                } else if (i<64) {
		            t +=  f2(br,cr,dr) + hr[3];
	                } else {// if (i<80) {
		            t +=  f1(br,cr,dr) + hr[4];
	                }
	                t = t|0;
	                t =  rotl(t,sr[i]) ;
	                t = (t+er)|0;
	                ar = er;
	                er = dr;
	                dr = rotl(cr, 10);
	                cr = br;
	                br = t;
	            }
	            // Intermediate hash value
	            t    = (H[1] + cl + dr)|0;
	            H[1] = (H[2] + dl + er)|0;
	            H[2] = (H[3] + el + ar)|0;
	            H[3] = (H[4] + al + br)|0;
	            H[4] = (H[0] + bl + cr)|0;
	            H[0] =  t;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
	                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |
	                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)
	            );
	            data.sigBytes = (dataWords.length + 1) * 4;

	            // Hash final blocks
	            this._process();

	            // Shortcuts
	            var hash = this._hash;
	            var H = hash.words;

	            // Swap endian
	            for (var i = 0; i < 5; i++) {
	                // Shortcut
	                var H_i = H[i];

	                // Swap
	                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
	                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
	            }

	            // Return final computed hash
	            return hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });


	    function f1(x, y, z) {
	        return ((x) ^ (y) ^ (z));

	    }

	    function f2(x, y, z) {
	        return (((x)&(y)) | ((~x)&(z)));
	    }

	    function f3(x, y, z) {
	        return (((x) | (~(y))) ^ (z));
	    }

	    function f4(x, y, z) {
	        return (((x) & (z)) | ((y)&(~(z))));
	    }

	    function f5(x, y, z) {
	        return ((x) ^ ((y) |(~(z))));

	    }

	    function rotl(x,n) {
	        return (x<<n) | (x>>>(32-n));
	    }


	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.RIPEMD160('message');
	     *     var hash = CryptoJS.RIPEMD160(wordArray);
	     */
	    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);
	     */
	    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);
	}(Math));


	return CryptoJS.RIPEMD160;

}));

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(12));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./sha256"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var C_algo = C.algo;
	    var SHA256 = C_algo.SHA256;

	    /**
	     * SHA-224 hash algorithm.
	     */
	    var SHA224 = C_algo.SHA224 = SHA256.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init([
	                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
	                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4
	            ]);
	        },

	        _doFinalize: function () {
	            var hash = SHA256._doFinalize.call(this);

	            hash.sigBytes -= 4;

	            return hash;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA224('message');
	     *     var hash = CryptoJS.SHA224(wordArray);
	     */
	    C.SHA224 = SHA256._createHelper(SHA224);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA224(message, key);
	     */
	    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);
	}());


	return CryptoJS.SHA224;

}));

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(8));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./x64-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_x64 = C.x64;
	    var X64Word = C_x64.Word;
	    var C_algo = C.algo;

	    // Constants tables
	    var RHO_OFFSETS = [];
	    var PI_INDEXES  = [];
	    var ROUND_CONSTANTS = [];

	    // Compute Constants
	    (function () {
	        // Compute rho offset constants
	        var x = 1, y = 0;
	        for (var t = 0; t < 24; t++) {
	            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;

	            var newX = y % 5;
	            var newY = (2 * x + 3 * y) % 5;
	            x = newX;
	            y = newY;
	        }

	        // Compute pi index constants
	        for (var x = 0; x < 5; x++) {
	            for (var y = 0; y < 5; y++) {
	                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;
	            }
	        }

	        // Compute round constants
	        var LFSR = 0x01;
	        for (var i = 0; i < 24; i++) {
	            var roundConstantMsw = 0;
	            var roundConstantLsw = 0;

	            for (var j = 0; j < 7; j++) {
	                if (LFSR & 0x01) {
	                    var bitPosition = (1 << j) - 1;
	                    if (bitPosition < 32) {
	                        roundConstantLsw ^= 1 << bitPosition;
	                    } else /* if (bitPosition >= 32) */ {
	                        roundConstantMsw ^= 1 << (bitPosition - 32);
	                    }
	                }

	                // Compute next LFSR
	                if (LFSR & 0x80) {
	                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1
	                    LFSR = (LFSR << 1) ^ 0x71;
	                } else {
	                    LFSR <<= 1;
	                }
	            }

	            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);
	        }
	    }());

	    // Reusable objects for temporary values
	    var T = [];
	    (function () {
	        for (var i = 0; i < 25; i++) {
	            T[i] = X64Word.create();
	        }
	    }());

	    /**
	     * SHA-3 hash algorithm.
	     */
	    var SHA3 = C_algo.SHA3 = Hasher.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {number} outputLength
	         *   The desired number of bits in the output hash.
	         *   Only values permitted are: 224, 256, 384, 512.
	         *   Default: 512
	         */
	        cfg: Hasher.cfg.extend({
	            outputLength: 512
	        }),

	        _doReset: function () {
	            var state = this._state = []
	            for (var i = 0; i < 25; i++) {
	                state[i] = new X64Word.init();
	            }

	            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcuts
	            var state = this._state;
	            var nBlockSizeLanes = this.blockSize / 2;

	            // Absorb
	            for (var i = 0; i < nBlockSizeLanes; i++) {
	                // Shortcuts
	                var M2i  = M[offset + 2 * i];
	                var M2i1 = M[offset + 2 * i + 1];

	                // Swap endian
	                M2i = (
	                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |
	                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)
	                );
	                M2i1 = (
	                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |
	                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)
	                );

	                // Absorb message into state
	                var lane = state[i];
	                lane.high ^= M2i1;
	                lane.low  ^= M2i;
	            }

	            // Rounds
	            for (var round = 0; round < 24; round++) {
	                // Theta
	                for (var x = 0; x < 5; x++) {
	                    // Mix column lanes
	                    var tMsw = 0, tLsw = 0;
	                    for (var y = 0; y < 5; y++) {
	                        var lane = state[x + 5 * y];
	                        tMsw ^= lane.high;
	                        tLsw ^= lane.low;
	                    }

	                    // Temporary values
	                    var Tx = T[x];
	                    Tx.high = tMsw;
	                    Tx.low  = tLsw;
	                }
	                for (var x = 0; x < 5; x++) {
	                    // Shortcuts
	                    var Tx4 = T[(x + 4) % 5];
	                    var Tx1 = T[(x + 1) % 5];
	                    var Tx1Msw = Tx1.high;
	                    var Tx1Lsw = Tx1.low;

	                    // Mix surrounding columns
	                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));
	                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));
	                    for (var y = 0; y < 5; y++) {
	                        var lane = state[x + 5 * y];
	                        lane.high ^= tMsw;
	                        lane.low  ^= tLsw;
	                    }
	                }

	                // Rho Pi
	                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {
	                    // Shortcuts
	                    var lane = state[laneIndex];
	                    var laneMsw = lane.high;
	                    var laneLsw = lane.low;
	                    var rhoOffset = RHO_OFFSETS[laneIndex];

	                    // Rotate lanes
	                    if (rhoOffset < 32) {
	                        var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));
	                        var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));
	                    } else /* if (rhoOffset >= 32) */ {
	                        var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));
	                        var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));
	                    }

	                    // Transpose lanes
	                    var TPiLane = T[PI_INDEXES[laneIndex]];
	                    TPiLane.high = tMsw;
	                    TPiLane.low  = tLsw;
	                }

	                // Rho pi at x = y = 0
	                var T0 = T[0];
	                var state0 = state[0];
	                T0.high = state0.high;
	                T0.low  = state0.low;

	                // Chi
	                for (var x = 0; x < 5; x++) {
	                    for (var y = 0; y < 5; y++) {
	                        // Shortcuts
	                        var laneIndex = x + 5 * y;
	                        var lane = state[laneIndex];
	                        var TLane = T[laneIndex];
	                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];
	                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];

	                        // Mix rows
	                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);
	                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);
	                    }
	                }

	                // Iota
	                var lane = state[0];
	                var roundConstant = ROUND_CONSTANTS[round];
	                lane.high ^= roundConstant.high;
	                lane.low  ^= roundConstant.low;;
	            }
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;
	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;
	            var blockSizeBits = this.blockSize * 32;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);
	            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Shortcuts
	            var state = this._state;
	            var outputLengthBytes = this.cfg.outputLength / 8;
	            var outputLengthLanes = outputLengthBytes / 8;

	            // Squeeze
	            var hashWords = [];
	            for (var i = 0; i < outputLengthLanes; i++) {
	                // Shortcuts
	                var lane = state[i];
	                var laneMsw = lane.high;
	                var laneLsw = lane.low;

	                // Swap endian
	                laneMsw = (
	                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |
	                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)
	                );
	                laneLsw = (
	                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |
	                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)
	                );

	                // Squeeze state to retrieve hash
	                hashWords.push(laneLsw);
	                hashWords.push(laneMsw);
	            }

	            // Return final computed hash
	            return new WordArray.init(hashWords, outputLengthBytes);
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);

	            var state = clone._state = this._state.slice(0);
	            for (var i = 0; i < 25; i++) {
	                state[i] = state[i].clone();
	            }

	            return clone;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA3('message');
	     *     var hash = CryptoJS.SHA3(wordArray);
	     */
	    C.SHA3 = Hasher._createHelper(SHA3);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA3(message, key);
	     */
	    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);
	}(Math));


	return CryptoJS.SHA3;

}));

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(8), __webpack_require__(13));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./x64-core", "./sha512"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_x64 = C.x64;
	    var X64Word = C_x64.Word;
	    var X64WordArray = C_x64.WordArray;
	    var C_algo = C.algo;
	    var SHA512 = C_algo.SHA512;

	    /**
	     * SHA-384 hash algorithm.
	     */
	    var SHA384 = C_algo.SHA384 = SHA512.extend({
	        _doReset: function () {
	            this._hash = new X64WordArray.init([
	                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),
	                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),
	                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),
	                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)
	            ]);
	        },

	        _doFinalize: function () {
	            var hash = SHA512._doFinalize.call(this);

	            hash.sigBytes -= 16;

	            return hash;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA384('message');
	     *     var hash = CryptoJS.SHA384(wordArray);
	     */
	    C.SHA384 = SHA512._createHelper(SHA384);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA384(message, key);
	     */
	    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);
	}());


	return CryptoJS.SHA384;

}));

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(1), __webpack_require__(5), __webpack_require__(6), __webpack_require__(4), __webpack_require__(2));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var BlockCipher = C_lib.BlockCipher;
	    var C_algo = C.algo;

	    // Permuted Choice 1 constants
	    var PC1 = [
	        57, 49, 41, 33, 25, 17, 9,  1,
	        58, 50, 42, 34, 26, 18, 10, 2,
	        59, 51, 43, 35, 27, 19, 11, 3,
	        60, 52, 44, 36, 63, 55, 47, 39,
	        31, 23, 15, 7,  62, 54, 46, 38,
	        30, 22, 14, 6,  61, 53, 45, 37,
	        29, 21, 13, 5,  28, 20, 12, 4
	    ];

	    // Permuted Choice 2 constants
	    var PC2 = [
	        14, 17, 11, 24, 1,  5,
	        3,  28, 15, 6,  21, 10,
	        23, 19, 12, 4,  26, 8,
	        16, 7,  27, 20, 13, 2,
	        41, 52, 31, 37, 47, 55,
	        30, 40, 51, 45, 33, 48,
	        44, 49, 39, 56, 34, 53,
	        46, 42, 50, 36, 29, 32
	    ];

	    // Cumulative bit shift constants
	    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];

	    // SBOXes and round permutation constants
	    var SBOX_P = [
	        {
	            0x0: 0x808200,
	            0x10000000: 0x8000,
	            0x20000000: 0x808002,
	            0x30000000: 0x2,
	            0x40000000: 0x200,
	            0x50000000: 0x808202,
	            0x60000000: 0x800202,
	            0x70000000: 0x800000,
	            0x80000000: 0x202,
	            0x90000000: 0x800200,
	            0xa0000000: 0x8200,
	            0xb0000000: 0x808000,
	            0xc0000000: 0x8002,
	            0xd0000000: 0x800002,
	            0xe0000000: 0x0,
	            0xf0000000: 0x8202,
	            0x8000000: 0x0,
	            0x18000000: 0x808202,
	            0x28000000: 0x8202,
	            0x38000000: 0x8000,
	            0x48000000: 0x808200,
	            0x58000000: 0x200,
	            0x68000000: 0x808002,
	            0x78000000: 0x2,
	            0x88000000: 0x800200,
	            0x98000000: 0x8200,
	            0xa8000000: 0x808000,
	            0xb8000000: 0x800202,
	            0xc8000000: 0x800002,
	            0xd8000000: 0x8002,
	            0xe8000000: 0x202,
	            0xf8000000: 0x800000,
	            0x1: 0x8000,
	            0x10000001: 0x2,
	            0x20000001: 0x808200,
	            0x30000001: 0x800000,
	            0x40000001: 0x808002,
	            0x50000001: 0x8200,
	            0x60000001: 0x200,
	            0x70000001: 0x800202,
	            0x80000001: 0x808202,
	            0x90000001: 0x808000,
	            0xa0000001: 0x800002,
	            0xb0000001: 0x8202,
	            0xc0000001: 0x202,
	            0xd0000001: 0x800200,
	            0xe0000001: 0x8002,
	            0xf0000001: 0x0,
	            0x8000001: 0x808202,
	            0x18000001: 0x808000,
	            0x28000001: 0x800000,
	            0x38000001: 0x200,
	            0x48000001: 0x8000,
	            0x58000001: 0x800002,
	            0x68000001: 0x2,
	            0x78000001: 0x8202,
	            0x88000001: 0x8002,
	            0x98000001: 0x800202,
	            0xa8000001: 0x202,
	            0xb8000001: 0x808200,
	            0xc8000001: 0x800200,
	            0xd8000001: 0x0,
	            0xe8000001: 0x8200,
	            0xf8000001: 0x808002
	        },
	        {
	            0x0: 0x40084010,
	            0x1000000: 0x4000,
	            0x2000000: 0x80000,
	            0x3000000: 0x40080010,
	            0x4000000: 0x40000010,
	            0x5000000: 0x40084000,
	            0x6000000: 0x40004000,
	            0x7000000: 0x10,
	            0x8000000: 0x84000,
	            0x9000000: 0x40004010,
	            0xa000000: 0x40000000,
	            0xb000000: 0x84010,
	            0xc000000: 0x80010,
	            0xd000000: 0x0,
	            0xe000000: 0x4010,
	            0xf000000: 0x40080000,
	            0x800000: 0x40004000,
	            0x1800000: 0x84010,
	            0x2800000: 0x10,
	            0x3800000: 0x40004010,
	            0x4800000: 0x40084010,
	            0x5800000: 0x40000000,
	            0x6800000: 0x80000,
	            0x7800000: 0x40080010,
	            0x8800000: 0x80010,
	            0x9800000: 0x0,
	            0xa800000: 0x4000,
	            0xb800000: 0x40080000,
	            0xc800000: 0x40000010,
	            0xd800000: 0x84000,
	            0xe800000: 0x40084000,
	            0xf800000: 0x4010,
	            0x10000000: 0x0,
	            0x11000000: 0x40080010,
	            0x12000000: 0x40004010,
	            0x13000000: 0x40084000,
	            0x14000000: 0x40080000,
	            0x15000000: 0x10,
	            0x16000000: 0x84010,
	            0x17000000: 0x4000,
	            0x18000000: 0x4010,
	            0x19000000: 0x80000,
	            0x1a000000: 0x80010,
	            0x1b000000: 0x40000010,
	            0x1c000000: 0x84000,
	            0x1d000000: 0x40004000,
	            0x1e000000: 0x40000000,
	            0x1f000000: 0x40084010,
	            0x10800000: 0x84010,
	            0x11800000: 0x80000,
	            0x12800000: 0x40080000,
	            0x13800000: 0x4000,
	            0x14800000: 0x40004000,
	            0x15800000: 0x40084010,
	            0x16800000: 0x10,
	            0x17800000: 0x40000000,
	            0x18800000: 0x40084000,
	            0x19800000: 0x40000010,
	            0x1a800000: 0x40004010,
	            0x1b800000: 0x80010,
	            0x1c800000: 0x0,
	            0x1d800000: 0x4010,
	            0x1e800000: 0x40080010,
	            0x1f800000: 0x84000
	        },
	        {
	            0x0: 0x104,
	            0x100000: 0x0,
	            0x200000: 0x4000100,
	            0x300000: 0x10104,
	            0x400000: 0x10004,
	            0x500000: 0x4000004,
	            0x600000: 0x4010104,
	            0x700000: 0x4010000,
	            0x800000: 0x4000000,
	            0x900000: 0x4010100,
	            0xa00000: 0x10100,
	            0xb00000: 0x4010004,
	            0xc00000: 0x4000104,
	            0xd00000: 0x10000,
	            0xe00000: 0x4,
	            0xf00000: 0x100,
	            0x80000: 0x4010100,
	            0x180000: 0x4010004,
	            0x280000: 0x0,
	            0x380000: 0x4000100,
	            0x480000: 0x4000004,
	            0x580000: 0x10000,
	            0x680000: 0x10004,
	            0x780000: 0x104,
	            0x880000: 0x4,
	            0x980000: 0x100,
	            0xa80000: 0x4010000,
	            0xb80000: 0x10104,
	            0xc80000: 0x10100,
	            0xd80000: 0x4000104,
	            0xe80000: 0x4010104,
	            0xf80000: 0x4000000,
	            0x1000000: 0x4010100,
	            0x1100000: 0x10004,
	            0x1200000: 0x10000,
	            0x1300000: 0x4000100,
	            0x1400000: 0x100,
	            0x1500000: 0x4010104,
	            0x1600000: 0x4000004,
	            0x1700000: 0x0,
	            0x1800000: 0x4000104,
	            0x1900000: 0x4000000,
	            0x1a00000: 0x4,
	            0x1b00000: 0x10100,
	            0x1c00000: 0x4010000,
	            0x1d00000: 0x104,
	            0x1e00000: 0x10104,
	            0x1f00000: 0x4010004,
	            0x1080000: 0x4000000,
	            0x1180000: 0x104,
	            0x1280000: 0x4010100,
	            0x1380000: 0x0,
	            0x1480000: 0x10004,
	            0x1580000: 0x4000100,
	            0x1680000: 0x100,
	            0x1780000: 0x4010004,
	            0x1880000: 0x10000,
	            0x1980000: 0x4010104,
	            0x1a80000: 0x10104,
	            0x1b80000: 0x4000004,
	            0x1c80000: 0x4000104,
	            0x1d80000: 0x4010000,
	            0x1e80000: 0x4,
	            0x1f80000: 0x10100
	        },
	        {
	            0x0: 0x80401000,
	            0x10000: 0x80001040,
	            0x20000: 0x401040,
	            0x30000: 0x80400000,
	            0x40000: 0x0,
	            0x50000: 0x401000,
	            0x60000: 0x80000040,
	            0x70000: 0x400040,
	            0x80000: 0x80000000,
	            0x90000: 0x400000,
	            0xa0000: 0x40,
	            0xb0000: 0x80001000,
	            0xc0000: 0x80400040,
	            0xd0000: 0x1040,
	            0xe0000: 0x1000,
	            0xf0000: 0x80401040,
	            0x8000: 0x80001040,
	            0x18000: 0x40,
	            0x28000: 0x80400040,
	            0x38000: 0x80001000,
	            0x48000: 0x401000,
	            0x58000: 0x80401040,
	            0x68000: 0x0,
	            0x78000: 0x80400000,
	            0x88000: 0x1000,
	            0x98000: 0x80401000,
	            0xa8000: 0x400000,
	            0xb8000: 0x1040,
	            0xc8000: 0x80000000,
	            0xd8000: 0x400040,
	            0xe8000: 0x401040,
	            0xf8000: 0x80000040,
	            0x100000: 0x400040,
	            0x110000: 0x401000,
	            0x120000: 0x80000040,
	            0x130000: 0x0,
	            0x140000: 0x1040,
	            0x150000: 0x80400040,
	            0x160000: 0x80401000,
	            0x170000: 0x80001040,
	            0x180000: 0x80401040,
	            0x190000: 0x80000000,
	            0x1a0000: 0x80400000,
	            0x1b0000: 0x401040,
	            0x1c0000: 0x80001000,
	            0x1d0000: 0x400000,
	            0x1e0000: 0x40,
	            0x1f0000: 0x1000,
	            0x108000: 0x80400000,
	            0x118000: 0x80401040,
	            0x128000: 0x0,
	            0x138000: 0x401000,
	            0x148000: 0x400040,
	            0x158000: 0x80000000,
	            0x168000: 0x80001040,
	            0x178000: 0x40,
	            0x188000: 0x80000040,
	            0x198000: 0x1000,
	            0x1a8000: 0x80001000,
	            0x1b8000: 0x80400040,
	            0x1c8000: 0x1040,
	            0x1d8000: 0x80401000,
	            0x1e8000: 0x400000,
	            0x1f8000: 0x401040
	        },
	        {
	            0x0: 0x80,
	            0x1000: 0x1040000,
	            0x2000: 0x40000,
	            0x3000: 0x20000000,
	            0x4000: 0x20040080,
	            0x5000: 0x1000080,
	            0x6000: 0x21000080,
	            0x7000: 0x40080,
	            0x8000: 0x1000000,
	            0x9000: 0x20040000,
	            0xa000: 0x20000080,
	            0xb000: 0x21040080,
	            0xc000: 0x21040000,
	            0xd000: 0x0,
	            0xe000: 0x1040080,
	            0xf000: 0x21000000,
	            0x800: 0x1040080,
	            0x1800: 0x21000080,
	            0x2800: 0x80,
	            0x3800: 0x1040000,
	            0x4800: 0x40000,
	            0x5800: 0x20040080,
	            0x6800: 0x21040000,
	            0x7800: 0x20000000,
	            0x8800: 0x20040000,
	            0x9800: 0x0,
	            0xa800: 0x21040080,
	            0xb800: 0x1000080,
	            0xc800: 0x20000080,
	            0xd800: 0x21000000,
	            0xe800: 0x1000000,
	            0xf800: 0x40080,
	            0x10000: 0x40000,
	            0x11000: 0x80,
	            0x12000: 0x20000000,
	            0x13000: 0x21000080,
	            0x14000: 0x1000080,
	            0x15000: 0x21040000,
	            0x16000: 0x20040080,
	            0x17000: 0x1000000,
	            0x18000: 0x21040080,
	            0x19000: 0x21000000,
	            0x1a000: 0x1040000,
	            0x1b000: 0x20040000,
	            0x1c000: 0x40080,
	            0x1d000: 0x20000080,
	            0x1e000: 0x0,
	            0x1f000: 0x1040080,
	            0x10800: 0x21000080,
	            0x11800: 0x1000000,
	            0x12800: 0x1040000,
	            0x13800: 0x20040080,
	            0x14800: 0x20000000,
	            0x15800: 0x1040080,
	            0x16800: 0x80,
	            0x17800: 0x21040000,
	            0x18800: 0x40080,
	            0x19800: 0x21040080,
	            0x1a800: 0x0,
	            0x1b800: 0x21000000,
	            0x1c800: 0x1000080,
	            0x1d800: 0x40000,
	            0x1e800: 0x20040000,
	            0x1f800: 0x20000080
	        },
	        {
	            0x0: 0x10000008,
	            0x100: 0x2000,
	            0x200: 0x10200000,
	            0x300: 0x10202008,
	            0x400: 0x10002000,
	            0x500: 0x200000,
	            0x600: 0x200008,
	            0x700: 0x10000000,
	            0x800: 0x0,
	            0x900: 0x10002008,
	            0xa00: 0x202000,
	            0xb00: 0x8,
	            0xc00: 0x10200008,
	            0xd00: 0x202008,
	            0xe00: 0x2008,
	            0xf00: 0x10202000,
	            0x80: 0x10200000,
	            0x180: 0x10202008,
	            0x280: 0x8,
	            0x380: 0x200000,
	            0x480: 0x202008,
	            0x580: 0x10000008,
	            0x680: 0x10002000,
	            0x780: 0x2008,
	            0x880: 0x200008,
	            0x980: 0x2000,
	            0xa80: 0x10002008,
	            0xb80: 0x10200008,
	            0xc80: 0x0,
	            0xd80: 0x10202000,
	            0xe80: 0x202000,
	            0xf80: 0x10000000,
	            0x1000: 0x10002000,
	            0x1100: 0x10200008,
	            0x1200: 0x10202008,
	            0x1300: 0x2008,
	            0x1400: 0x200000,
	            0x1500: 0x10000000,
	            0x1600: 0x10000008,
	            0x1700: 0x202000,
	            0x1800: 0x202008,
	            0x1900: 0x0,
	            0x1a00: 0x8,
	            0x1b00: 0x10200000,
	            0x1c00: 0x2000,
	            0x1d00: 0x10002008,
	            0x1e00: 0x10202000,
	            0x1f00: 0x200008,
	            0x1080: 0x8,
	            0x1180: 0x202000,
	            0x1280: 0x200000,
	            0x1380: 0x10000008,
	            0x1480: 0x10002000,
	            0x1580: 0x2008,
	            0x1680: 0x10202008,
	            0x1780: 0x10200000,
	            0x1880: 0x10202000,
	            0x1980: 0x10200008,
	            0x1a80: 0x2000,
	            0x1b80: 0x202008,
	            0x1c80: 0x200008,
	            0x1d80: 0x0,
	            0x1e80: 0x10000000,
	            0x1f80: 0x10002008
	        },
	        {
	            0x0: 0x100000,
	            0x10: 0x2000401,
	            0x20: 0x400,
	            0x30: 0x100401,
	            0x40: 0x2100401,
	            0x50: 0x0,
	            0x60: 0x1,
	            0x70: 0x2100001,
	            0x80: 0x2000400,
	            0x90: 0x100001,
	            0xa0: 0x2000001,
	            0xb0: 0x2100400,
	            0xc0: 0x2100000,
	            0xd0: 0x401,
	            0xe0: 0x100400,
	            0xf0: 0x2000000,
	            0x8: 0x2100001,
	            0x18: 0x0,
	            0x28: 0x2000401,
	            0x38: 0x2100400,
	            0x48: 0x100000,
	            0x58: 0x2000001,
	            0x68: 0x2000000,
	            0x78: 0x401,
	            0x88: 0x100401,
	            0x98: 0x2000400,
	            0xa8: 0x2100000,
	            0xb8: 0x100001,
	            0xc8: 0x400,
	            0xd8: 0x2100401,
	            0xe8: 0x1,
	            0xf8: 0x100400,
	            0x100: 0x2000000,
	            0x110: 0x100000,
	            0x120: 0x2000401,
	            0x130: 0x2100001,
	            0x140: 0x100001,
	            0x150: 0x2000400,
	            0x160: 0x2100400,
	            0x170: 0x100401,
	            0x180: 0x401,
	            0x190: 0x2100401,
	            0x1a0: 0x100400,
	            0x1b0: 0x1,
	            0x1c0: 0x0,
	            0x1d0: 0x2100000,
	            0x1e0: 0x2000001,
	            0x1f0: 0x400,
	            0x108: 0x100400,
	            0x118: 0x2000401,
	            0x128: 0x2100001,
	            0x138: 0x1,
	            0x148: 0x2000000,
	            0x158: 0x100000,
	            0x168: 0x401,
	            0x178: 0x2100400,
	            0x188: 0x2000001,
	            0x198: 0x2100000,
	            0x1a8: 0x0,
	            0x1b8: 0x2100401,
	            0x1c8: 0x100401,
	            0x1d8: 0x400,
	            0x1e8: 0x2000400,
	            0x1f8: 0x100001
	        },
	        {
	            0x0: 0x8000820,
	            0x1: 0x20000,
	            0x2: 0x8000000,
	            0x3: 0x20,
	            0x4: 0x20020,
	            0x5: 0x8020820,
	            0x6: 0x8020800,
	            0x7: 0x800,
	            0x8: 0x8020000,
	            0x9: 0x8000800,
	            0xa: 0x20800,
	            0xb: 0x8020020,
	            0xc: 0x820,
	            0xd: 0x0,
	            0xe: 0x8000020,
	            0xf: 0x20820,
	            0x80000000: 0x800,
	            0x80000001: 0x8020820,
	            0x80000002: 0x8000820,
	            0x80000003: 0x8000000,
	            0x80000004: 0x8020000,
	            0x80000005: 0x20800,
	            0x80000006: 0x20820,
	            0x80000007: 0x20,
	            0x80000008: 0x8000020,
	            0x80000009: 0x820,
	            0x8000000a: 0x20020,
	            0x8000000b: 0x8020800,
	            0x8000000c: 0x0,
	            0x8000000d: 0x8020020,
	            0x8000000e: 0x8000800,
	            0x8000000f: 0x20000,
	            0x10: 0x20820,
	            0x11: 0x8020800,
	            0x12: 0x20,
	            0x13: 0x800,
	            0x14: 0x8000800,
	            0x15: 0x8000020,
	            0x16: 0x8020020,
	            0x17: 0x20000,
	            0x18: 0x0,
	            0x19: 0x20020,
	            0x1a: 0x8020000,
	            0x1b: 0x8000820,
	            0x1c: 0x8020820,
	            0x1d: 0x20800,
	            0x1e: 0x820,
	            0x1f: 0x8000000,
	            0x80000010: 0x20000,
	            0x80000011: 0x800,
	            0x80000012: 0x8020020,
	            0x80000013: 0x20820,
	            0x80000014: 0x20,
	            0x80000015: 0x8020000,
	            0x80000016: 0x8000000,
	            0x80000017: 0x8000820,
	            0x80000018: 0x8020820,
	            0x80000019: 0x8000020,
	            0x8000001a: 0x8000800,
	            0x8000001b: 0x0,
	            0x8000001c: 0x20800,
	            0x8000001d: 0x820,
	            0x8000001e: 0x20020,
	            0x8000001f: 0x8020800
	        }
	    ];

	    // Masks that select the SBOX input
	    var SBOX_MASK = [
	        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,
	        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f
	    ];

	    /**
	     * DES block cipher algorithm.
	     */
	    var DES = C_algo.DES = BlockCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var key = this._key;
	            var keyWords = key.words;

	            // Select 56 bits according to PC1
	            var keyBits = [];
	            for (var i = 0; i < 56; i++) {
	                var keyBitPos = PC1[i] - 1;
	                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;
	            }

	            // Assemble 16 subkeys
	            var subKeys = this._subKeys = [];
	            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {
	                // Create subkey
	                var subKey = subKeys[nSubKey] = [];

	                // Shortcut
	                var bitShift = BIT_SHIFTS[nSubKey];

	                // Select 48 bits according to PC2
	                for (var i = 0; i < 24; i++) {
	                    // Select from the left 28 key bits
	                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);

	                    // Select from the right 28 key bits
	                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);
	                }

	                // Since each subkey is applied to an expanded 32-bit input,
	                // the subkey can be broken into 8 values scaled to 32-bits,
	                // which allows the key to be used without expansion
	                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);
	                for (var i = 1; i < 7; i++) {
	                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);
	                }
	                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);
	            }

	            // Compute inverse subkeys
	            var invSubKeys = this._invSubKeys = [];
	            for (var i = 0; i < 16; i++) {
	                invSubKeys[i] = subKeys[15 - i];
	            }
	        },

	        encryptBlock: function (M, offset) {
	            this._doCryptBlock(M, offset, this._subKeys);
	        },

	        decryptBlock: function (M, offset) {
	            this._doCryptBlock(M, offset, this._invSubKeys);
	        },

	        _doCryptBlock: function (M, offset, subKeys) {
	            // Get input
	            this._lBlock = M[offset];
	            this._rBlock = M[offset + 1];

	            // Initial permutation
	            exchangeLR.call(this, 4,  0x0f0f0f0f);
	            exchangeLR.call(this, 16, 0x0000ffff);
	            exchangeRL.call(this, 2,  0x33333333);
	            exchangeRL.call(this, 8,  0x00ff00ff);
	            exchangeLR.call(this, 1,  0x55555555);

	            // Rounds
	            for (var round = 0; round < 16; round++) {
	                // Shortcuts
	                var subKey = subKeys[round];
	                var lBlock = this._lBlock;
	                var rBlock = this._rBlock;

	                // Feistel function
	                var f = 0;
	                for (var i = 0; i < 8; i++) {
	                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];
	                }
	                this._lBlock = rBlock;
	                this._rBlock = lBlock ^ f;
	            }

	            // Undo swap from last round
	            var t = this._lBlock;
	            this._lBlock = this._rBlock;
	            this._rBlock = t;

	            // Final permutation
	            exchangeLR.call(this, 1,  0x55555555);
	            exchangeRL.call(this, 8,  0x00ff00ff);
	            exchangeRL.call(this, 2,  0x33333333);
	            exchangeLR.call(this, 16, 0x0000ffff);
	            exchangeLR.call(this, 4,  0x0f0f0f0f);

	            // Set output
	            M[offset] = this._lBlock;
	            M[offset + 1] = this._rBlock;
	        },

	        keySize: 64/32,

	        ivSize: 64/32,

	        blockSize: 64/32
	    });

	    // Swap bits across the left and right words
	    function exchangeLR(offset, mask) {
	        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;
	        this._rBlock ^= t;
	        this._lBlock ^= t << offset;
	    }

	    function exchangeRL(offset, mask) {
	        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;
	        this._lBlock ^= t;
	        this._rBlock ^= t << offset;
	    }

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);
	     */
	    C.DES = BlockCipher._createHelper(DES);

	    /**
	     * Triple-DES block cipher algorithm.
	     */
	    var TripleDES = C_algo.TripleDES = BlockCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var key = this._key;
	            var keyWords = key.words;

	            // Create DES instances
	            this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));
	            this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));
	            this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));
	        },

	        encryptBlock: function (M, offset) {
	            this._des1.encryptBlock(M, offset);
	            this._des2.decryptBlock(M, offset);
	            this._des3.encryptBlock(M, offset);
	        },

	        decryptBlock: function (M, offset) {
	            this._des3.decryptBlock(M, offset);
	            this._des2.encryptBlock(M, offset);
	            this._des1.decryptBlock(M, offset);
	        },

	        keySize: 192/32,

	        ivSize: 64/32,

	        blockSize: 64/32
	    });

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);
	     */
	    C.TripleDES = BlockCipher._createHelper(TripleDES);
	}());


	return CryptoJS.TripleDES;

}));

/***/ }),
/* 222 */
/***/ (function(module, exports) {

module.exports = {"version":"2019b","zones":["Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q|48e5","Africa/Accra|LMT GMT +0020|.Q 0 -k|012121212121212121212121212121212121212121212121|-26BbX.8 6tzX.8 MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE|41e5","Africa/Nairobi|LMT EAT +0230 +0245|-2r.g -30 -2u -2J|01231|-1F3Cr.g 3Dzr.g okMu MFXJ|47e5","Africa/Algiers|PMT WET WEST CET CEST|-9.l 0 -10 -10 -20|0121212121212121343431312123431213|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0 Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0 2Dy0 1cN0 1fB0 1cL0|26e5","Africa/Lagos|LMT WAT|-d.A -10|01|-22y0d.A|17e6","Africa/Bissau|LMT -01 GMT|12.k 10 0|012|-2ldX0 2xoo0|39e4","Africa/Maputo|LMT CAT|-2a.k -20|01|-2GJea.k|26e5","Africa/Cairo|EET EEST|-20 -30|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1bIO0 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0|15e6","Africa/Casablanca|LMT +00 +01|u.k 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2gMnt.E 130Lt.E rb0 Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0|32e5","Africa/Ceuta|WET WEST CET CEST|0 -10 -10 -20|010101010101010101010232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-25KN0 11z0 drd0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1y7o0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|85e3","Africa/El_Aaiun|LMT -01 +00 +01|Q.M 10 0 -10|012323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1rDz7.c 1GVA7.c 6L0 AL0 1Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0|20e4","Africa/Johannesburg|SAST SAST SAST|-1u -20 -30|012121|-2GJdu 1Ajdu 1cL0 1cN0 1cL0|84e5","Africa/Juba|LMT CAT CAST EAT|-26.s -20 -30 -30|01212121212121212121212121212121213|-1yW26.s 1zK06.s 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0","Africa/Khartoum|LMT CAT CAST EAT|-2a.8 -20 -30 -30|012121212121212121212121212121212131|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 HjL0|51e5","Africa/Monrovia|MMT MMT GMT|H.8 I.u 0|012|-23Lzg.Q 28G01.m|11e5","Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0|13e5","Africa/Sao_Tome|LMT GMT WAT|A.J 0 -10|0121|-2le00 4i6N0 2q00","Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|012121213121212121212121213123123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq0 TA0 1o00|11e5","Africa/Tunis|PMT CET CEST|-9.l -10 -20|0121212121212121212121212121212121|-2nco9.l 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0 1o00|20e5","Africa/Windhoek|+0130 SAST SAST CAT WAT|-1u -20 -30 -20 -10|01213434343434343434343434343434343434343434343434343|-2GJdu 1Ajdu 1cL0 1SqL0 9Io0 16P0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4","America/Adak|NST NWT NPT BST BDT AHST HST HDT|b0 a0 a0 b0 a0 a0 a0 90|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326","America/Anchorage|AST AWT APT AHST AHDT YST AKST AKDT|a0 90 90 a0 90 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T00 8wX0 iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4","America/Port_of_Spain|LMT AST|46.4 40|01|-2kNvR.U|43e3","America/Araguaina|LMT -03 -02|3c.M 30 20|0121212121212121212121212121212121212121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 ny10 Lz0|14e4","America/Argentina/Buenos_Aires|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 A4p0 uL0 1qN0 WL0","America/Argentina/Catamarca|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 7B0 8zb0 uL0","America/Argentina/Cordoba|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0 1qN0 WL0","America/Argentina/Jujuy|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 A4p0 uL0","America/Argentina/La_Rioja|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0","America/Argentina/Mendoza|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232312121321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 ri10 Op0 7TX0 uL0","America/Argentina/Rio_Gallegos|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0","America/Argentina/Salta|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0","America/Argentina/San_Juan|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rld0 m10 8lb0 uL0","America/Argentina/San_Luis|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121212321212|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 vDb0 m10 8lb0 8L0 jd0 1qN0 WL0 1qN0","America/Argentina/Tucuman|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121212121212121212121212323232313232123232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 4N0 8BX0 uL0 1qN0 WL0","America/Argentina/Ushuaia|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rkN0 8p0 8zb0 uL0","America/Curacao|LMT -0430 AST|4z.L 4u 40|012|-2kV7o.d 28KLS.d|15e4","America/Asuncion|AMT -04 -03|3O.E 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-1x589.k 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0|28e5","America/Atikokan|CST CDT CWT CPT EST|60 50 50 50 50|0101234|-25TQ0 1in0 Rnb0 3je0 8x30 iw0|28e2","America/Bahia_Banderas|LMT MST CST PST MDT CDT|71 70 60 80 60 50|0121212131414141414141414141414141414152525252525252525252525252525252525252525252525252525252|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|84e3","America/Bahia|LMT -03 -02|2y.4 30 20|01212121212121212121212121212121212121212121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0|27e5","America/Barbados|LMT BMT AST ADT|3W.t 3W.t 40 30|01232323232|-1Q0I1.v jsM0 1ODC1.v IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0|28e4","America/Belem|LMT -03 -02|3d.U 30 20|012121212121212121212121212121|-2glwK.4 HdKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|20e5","America/Belize|LMT CST -0530 CDT|5Q.M 60 5u 50|01212121212121212121212121212121212121212121212121213131|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1f0Mu qn0 lxB0 mn0|57e3","America/Blanc-Sablon|AST ADT AWT APT|40 30 30 30|010230|-25TS0 1in0 UGp0 8x50 iu0|11e2","America/Boa_Vista|LMT -04 -03|42.E 40 30|0121212121212121212121212121212121|-2glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0|62e2","America/Bogota|BMT -05 -04|4U.g 50 40|0121|-2eb73.I 38yo3.I 2en0|90e5","America/Boise|PST PDT MST MWT MPT MDT|80 70 70 60 60 60|0101023425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-261q0 1nX0 11B0 1nX0 8C10 JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e4","America/Cambridge_Bay|-00 MST MWT MPT MDDT MDT CST CDT EST|0 70 60 60 50 60 60 50 50|0123141515151515151515151515151515151515151515678651515151515151515151515151515151515151515151515151515151515151515151515151|-21Jc0 RO90 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e2","America/Campo_Grande|LMT -04 -03|3C.s 40 30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwl.w HdLl.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|77e4","America/Cancun|LMT CST EST EDT CDT|5L.4 60 50 40 50|0123232341414141414141414141414141414141412|-1UQG0 2q2o0 yLB0 1lb0 14p0 1lb0 14p0 Lz0 xB0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4","America/Caracas|CMT -0430 -04|4r.E 4u 40|01212|-2kV7w.k 28KM2.k 1IwOu kqo0|29e5","America/Cayenne|LMT -04 -03|3t.k 40 30|012|-2mrwu.E 2gWou.E|58e3","America/Panama|CMT EST|5j.A 50|01|-2uduE.o|15e5","America/Chicago|CST CDT EST CWT CPT|60 50 50 50 50|01010101010101010101010101010101010102010101010103401010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 1wp0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5","America/Chihuahua|LMT MST CST CDT MDT|74.k 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|81e4","America/Costa_Rica|SJMT CST CDT|5A.d 60 50|0121212121|-1Xd6n.L 2lu0n.L Db0 1Kp0 Db0 pRB0 15b0 1kp0 mL0|12e5","America/Creston|MST PST|70 80|010|-29DR0 43B0|53e2","America/Cuiaba|LMT -04 -03|3I.k 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwf.E HdLf.E 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|54e4","America/Danmarkshavn|LMT -03 -02 GMT|1e.E 30 20 0|01212121212121212121212121212121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 DC0|8","America/Dawson_Creek|PST PDT PWT PPT MST|80 70 70 70 70|0102301010101010101010101010101010101010101010101010101014|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 ML0|12e3","America/Dawson|YST YDT YWT YPT YDDT PST PDT|90 80 80 80 70 80 70|0101023040565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|13e2","America/Denver|MST MDT MWT MPT|70 60 60 60|01010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 11B0 1qL0 WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5","America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|012342525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 XQp0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e5","America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60|01212121212121341212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2yd4q.8 shdq.8 1in0 17d0 hz0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 LFB0 1cL0 3Cp0 1cL0 66N0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|10e5","America/Eirunepe|LMT -05 -04|4D.s 50 40|0121212121212121212121212121212121|-2glvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0|31e3","America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL0|11e5","America/Tijuana|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOO0 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|20e5","America/Fort_Nelson|PST PDT PWT PPT MST|80 70 70 70 70|01023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010104|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2","America/Fort_Wayne|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010101023010101010101010101040454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","America/Fortaleza|LMT -03 -02|2y 30 20|0121212121212121212121212121212121212121|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 5z0 2mN0 On0|34e5","America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30|012134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3","America/Godthab|LMT -03 -02|3q.U 30 20|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e3","America/Goose_Bay|NST NDT NST NDT NWT NPT AST ADT ADDT|3u.Q 2u.Q 3u 2u 2u 2u 40 30 20|010232323232323245232323232323232323232323232323232323232326767676767676767676767676767676767676767676768676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-25TSt.8 1in0 DXb0 2HbX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|76e2","America/Grand_Turk|KMT EST EDT AST|57.a 50 40 40|01212121212121212121212121212121212121212121212121212121212121212121212121232121212121212121212121212121212121212121|-2l1uQ.O 2HHBQ.O 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 5Ip0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2","America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 Nz0 ifB0 17b0 zDB0 11z0|13e5","America/Guayaquil|QMT -05 -04|5e 50 40|0121|-1yVSK 2uILK rz0|27e5","America/Guyana|LMT -0345 -03 -04|3Q.E 3J 30 40|0123|-2dvU7.k 2r6LQ.k Bxbf|80e4","America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30|0121212121212121212121212121212121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsHJ.A xzzJ.A 1db0 3I30 1in0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10 Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4","America/Havana|HMT CST CDT|5t.A 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Meuu.o 72zu.o ML0 sld0 An0 1Nd0 Db0 1Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5","America/Hermosillo|LMT MST CST PST MDT|7n.Q 70 60 80 60|0121212131414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0|64e4","America/Indiana/Knox|CST CDT CWT CPT EST|60 50 50 50 50|0101023010101010101010101010101010101040101010101010101010101010101010101010101010101010141010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","America/Indiana/Marengo|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010104545454545414545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","America/Indiana/Petersburg|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010104010101010101010101010141014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","America/Indiana/Tell_City|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","America/Indiana/Vevay|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102304545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","America/Indiana/Vincennes|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","America/Indiana/Winamac|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010101010454541054545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","America/Inuvik|-00 PST PDDT MST MDT|0 80 60 70 60|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-FnA0 tWU0 1fA0 wPe0 2pz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|35e2","America/Iqaluit|-00 EWT EPT EST EDDT EDT CST CDT|0 40 40 50 30 40 60 50|01234353535353535353535353535353535353535353567353535353535353535353535353535353535353535353535353535353535353535353535353|-16K00 7nX0 iv0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|67e2","America/Jamaica|KMT EST EDT|57.a 50 40|0121212121212121212121|-2l1uQ.O 2uM1Q.O 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0|94e4","America/Juneau|PST PWT PPT PDT YDT YST AKST AKDT|80 70 70 70 80 90 90 80|01203030303030303030303030403030356767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|33e3","America/Kentucky/Louisville|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101010102301010101010101010101010101454545454545414545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 Bb0 10N0 2bB0 8in0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","America/Kentucky/Monticello|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","America/La_Paz|CMT BST -04|4w.A 3w.A 40|012|-1x37r.o 13b0|19e5","America/Lima|LMT -05 -04|58.A 50 40|0121212121212121|-2tyGP.o 1bDzP.o zX0 1aN0 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0|11e6","America/Los_Angeles|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp1 1VaX 3dA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6","America/Maceio|LMT -03 -02|2m.Q 30 20|012121212121212121212121212121212121212121|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0|93e4","America/Managua|MMT CST EST CDT|5J.c 60 50 50|0121313121213131|-1quie.M 1yAMe.M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0|22e5","America/Manaus|LMT -04 -03|40.4 40 30|01212121212121212121212121212121|-2glvX.U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0|19e5","America/Martinique|FFMT AST ADT|44.k 40 30|0121|-2mPTT.E 2LPbT.E 19X0|39e4","America/Matamoros|LMT CST CDT|6E 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|45e4","America/Mazatlan|LMT MST CST PST MDT|75.E 70 60 80 60|0121212131414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|44e4","America/Menominee|CST CDT CWT CPT EST|60 50 50 50 50|01010230101041010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|85e2","America/Merida|LMT CST EST CDT|5W.s 60 50 50|0121313131313131313131313131313131313131313131313131313131313131313131313131313131313131|-1UQG0 2q2o0 2hz0 wu30 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|11e5","America/Metlakatla|PST PWT PPT PDT AKST AKDT|80 70 70 70 90 80|01203030303030303030303030303030304545450454545454545454545454545454545454545454|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1hU10 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2","America/Mexico_City|LMT MST CST CDT CWT|6A.A 70 60 50 50|012121232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|20e6","America/Miquelon|LMT AST -03 -02|3I.E 40 30 20|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2mKkf.k 2LTAf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2","America/Moncton|EST AST ADT AWT APT|50 40 30 30 30|012121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsH0 CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|64e3","America/Monterrey|LMT CST CDT|6F.g 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|41e5","America/Montevideo|LMT MMT -04 -03 -0330 -0230 -02 -0130|3I.P 3I.P 40 30 3u 2u 20 1u|012343434343434343434343435353636353636375363636363636363636363636363636363636363636363|-2tRUf.9 sVc0 8jcf.9 1db0 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1fAu 1cLu 1o0u 11zu NAu 3jXu zXu Dq0u 19Xu pcu jz0 cm10 19X0 6tB0 1fbu 3o0u jX0 4vB0 xz0 3Cp0 mmu 1a10 IMu Db0 4c10 uL0 1Nd0 An0 1SN0 uL0 mp0 28L0 iPB0 un0 1SN0 xz0 1zd0 Lz0 1zd0 Rb0 1zd0 On0 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0|17e5","America/Toronto|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101012301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 11Wu 1nzu 1fD0 WJ0 1wr0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1nX0 11z0 1o10 11z0 1o10 1qL0 11D0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e5","America/Nassau|LMT EST EDT|59.u 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2kNuO.u 26XdO.u 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|24e4","America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6","America/Nipigon|EST EDT EWT EPT|50 40 40 40|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 Rnb0 3je0 8x40 iv0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|16e2","America/Nome|NST NWT NPT BST BDT YST AKST AKDT|b0 a0 a0 b0 a0 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|38e2","America/Noronha|LMT -02 -01|29.E 20 10|0121212121212121212121212121212121212121|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|30e2","America/North_Dakota/Beulah|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","America/North_Dakota/Center|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","America/North_Dakota/New_Salem|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","America/Ojinaga|LMT MST CST CDT MDT|6V.E 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3","America/Pangnirtung|-00 AST AWT APT ADDT ADT EDT EST CST CDT|0 40 30 30 20 30 40 50 60 50|012314151515151515151515151515151515167676767689767676767676767676767676767676767676767676767676767676767676767676767676767|-1XiM0 PnG0 8x50 iu0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1o00 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2","America/Paramaribo|LMT PMT PMT -0330 -03|3E.E 3E.Q 3E.A 3u 30|01234|-2nDUj.k Wqo0.c qanX.I 1yVXN.o|24e4","America/Phoenix|MST MDT MWT|70 60 60|01010202010|-261r0 1nX0 11B0 1nX0 SgN0 4Al1 Ap0 1db0 SWqX 1cL0|42e5","America/Port-au-Prince|PPMT EST EDT|4N 50 40|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-28RHb 2FnMb 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d430 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5","America/Rio_Branco|LMT -05 -04|4v.c 50 40|01212121212121212121212121212121|-2glvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0|31e4","America/Porto_Velho|LMT -04 -03|4f.A 40 30|012121212121212121212121212121|-2glvI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|37e4","America/Puerto_Rico|AST AWT APT|40 30 30|0120|-17lU0 7XT0 iu0|24e5","America/Punta_Arenas|SMT -05 -04 -03|4G.K 50 40 30|0102021212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 blz0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0","America/Rainy_River|CST CDT CWT CPT|60 50 50 50|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TQ0 1in0 Rnb0 3je0 8x30 iw0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|842","America/Rankin_Inlet|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313131313131313131313131313131313131313131313131313131313131313131|-vDc0 keu0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e2","America/Recife|LMT -03 -02|2j.A 30 20|0121212121212121212121212121212121212121|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|33e5","America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|012121212121212121212121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0|19e4","America/Resolute|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313431313131313131313131313131313131313131313131313131313131313131|-SnA0 GWS0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|229","America/Santarem|LMT -04 -03|3C.M 40 30|0121212121212121212121212121212|-2glwl.c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0|21e4","America/Santiago|SMT -05 -04 -03|4G.K 50 40 30|010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9Bz0 jb0 1oN0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|62e5","America/Santo_Domingo|SDMT EST EDT -0430 AST|4E 50 40 4u 40|01213131313131414|-1ttjk 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00|29e5","America/Sao_Paulo|LMT -03 -02|36.s 30 20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwR.w HdKR.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|20e6","America/Scoresbysund|LMT -02 -01 +00|1r.Q 20 10 0|0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|452","America/Sitka|PST PWT PPT PDT YST AKST AKDT|80 70 70 70 90 90 80|01203030303030303030303030303030345656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|90e2","America/St_Johns|NST NDT NST NDT NWT NPT NDDT|3u.Q 2u.Q 3u 2u 2u 2u 1u|01010101010101010101010101010101010102323232323232324523232323232323232323232323232323232323232323232323232323232323232323232323232323232326232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28oit.8 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4","America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0|16e3","America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 WL0 GRd0 AL0|11e5","America/Thule|LMT AST ADT|4z.8 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5To.Q 31NBo.Q 1cL0 1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|656","America/Thunder_Bay|CST EST EWT EPT EDT|60 50 40 40 40|0123141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2q5S0 1iaN0 8x40 iv0 XNB0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4","America/Vancouver|PST PDT PWT PPT|80 70 70 70|0102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TO0 1in0 UGp0 8x10 iy0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5","America/Whitehorse|YST YDT YWT YPT YDDT PST PDT|90 80 80 80 70 80 70|0101023040565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 3NA0 vrd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3","America/Winnipeg|CST CDT CWT CPT|60 50 50 50|010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aIi0 WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 11z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|66e4","America/Yakutat|YST YWT YPT YDT AKST AKDT|90 80 80 80 90 80|01203030303030303030303030303030304545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-17T10 8x00 iz0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|642","America/Yellowknife|-00 MST MWT MPT MDDT MDT|0 70 60 60 50 60|012314151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151|-1pdA0 hix0 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3","Antarctica/Casey|-00 +08 +11|0 -80 -b0|01212121|-2q00 1DjS0 T90 40P0 KL0 blz0 3m10|10","Antarctica/Davis|-00 +07 +05|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0 KN0|70","Antarctica/DumontDUrville|-00 +10|0 -a0|0101|-U0o0 cfq0 bFm0|80","Antarctica/Macquarie|AEST AEDT -00 +11|-a0 -b0 0 -b0|0102010101010101010101010101010101010101010101010101010101010101010101010101010101010101013|-29E80 19X0 4SL0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0|1","Antarctica/Mawson|-00 +06 +05|0 -60 -50|012|-CEo0 2fyk0|60","Pacific/Auckland|NZMT NZST NZST NZDT|-bu -cu -c0 -d0|01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1GCVu Lz0 1tB0 11zu 1o0u 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|14e5","Antarctica/Palmer|-00 -03 -04 -02|0 30 40 20|0121212121213121212121212121212121212121212121212121212121212121212121212121212121|-cao0 nD0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40","Antarctica/Rothera|-00 -03|0 30|01|gOo0|130","Antarctica/Syowa|-00 +03|0 -30|01|-vs00|20","Antarctica/Troll|-00 +00 +02|0 0 -20|01212121212121212121212121212121212121212121212121212121212121212121|1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|40","Antarctica/Vostok|-00 +06|0 -60|01|-tjA0|25","Europe/Oslo|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2awM0 Qm0 W6o0 5pf0 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 wJc0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1qM0 WM0 zpc0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e4","Asia/Riyadh|LMT +03|-36.Q -30|01|-TvD6.Q|57e5","Asia/Almaty|LMT +05 +06 +07|-57.M -50 -60 -70|012323232323232323232321232323232323232323232323232|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|15e5","Asia/Amman|LMT EET EEST|-2n.I -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|25e5","Asia/Anadyr|LMT +12 +13 +14 +11|-bN.U -c0 -d0 -e0 -b0|01232121212121212121214121212121212121212121212121212121212141|-1PcbN.U eUnN.U 23CL0 1db0 2q10 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|13e3","Asia/Aqtau|LMT +04 +05 +06|-3l.4 -40 -50 -60|012323232323232323232123232312121212121212121212|-1Pc3l.4 eUnl.4 24PX0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|15e4","Asia/Aqtobe|LMT +04 +05 +06|-3M.E -40 -50 -60|0123232323232323232321232323232323232323232323232|-1Pc3M.E eUnM.E 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|27e4","Asia/Ashgabat|LMT +04 +05 +06|-3R.w -40 -50 -60|0123232323232323232323212|-1Pc3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0|41e4","Asia/Atyrau|LMT +03 +05 +06 +04|-3r.I -30 -50 -60 -40|01232323232323232323242323232323232324242424242|-1Pc3r.I eUor.I 24PW0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 2sp0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0","Asia/Baghdad|BMT +03 +04|-2V.A -30 -40|012121212121212121212121212121212121212121212121212121|-26BeV.A 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0|66e5","Asia/Qatar|LMT +04 +03|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8|96e4","Asia/Baku|LMT +03 +04 +05|-3j.o -30 -40 -50|01232323232323232323232123232323232323232323232323232323232323232|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 9Je0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5","Asia/Bangkok|BMT +07|-6G.4 -70|01|-218SG.4|15e6","Asia/Barnaul|LMT +06 +07 +08|-5z -60 -70 -80|0123232323232323232323212323232321212121212121212121212121212121212|-21S5z pCnz 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 p90 LE0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0","Asia/Beirut|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-21aq0 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|22e5","Asia/Bishkek|LMT +05 +06 +07|-4W.o -50 -60 -70|012323232323232323232321212121212121212121212121212|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2e00 1tX0 17b0 1ip0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0|87e4","Asia/Brunei|LMT +0730 +08|-7D.E -7u -80|012|-1KITD.E gDc9.E|42e4","Asia/Kolkata|MMT IST +0630|-5l.a -5u -6u|012121|-2zOtl.a 1r2LP.a 1un0 HB0 7zX0|15e6","Asia/Chita|LMT +08 +09 +10|-7x.Q -80 -90 -a0|012323232323232323232321232323232323232323232323232323232323232312|-21Q7x.Q pAnx.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3re0|33e4","Asia/Choibalsan|LMT +07 +08 +10 +09|-7C -70 -80 -a0 -90|0123434343434343434343434343434343434343434343424242|-2APHC 2UkoC cKn0 1da0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 3Db0 h1f0 1cJ0 1cP0 1cJ0|38e3","Asia/Shanghai|CST CDT|-80 -90|010101010101010101010101010|-1c2w0 Rz0 11d0 1wL0 A10 8HX0 1G10 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 aL0 1tU30 Rb0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0|23e6","Asia/Colombo|MMT +0530 +06 +0630|-5j.w -5u -60 -6u|01231321|-2zOtj.w 1rFbN.w 1zzu 7Apu 23dz0 11zu n3cu|22e5","Asia/Dhaka|HMT +0630 +0530 +06 +07|-5R.k -6u -5u -60 -70|0121343|-18LFR.k 1unn.k HB0 m6n0 2kxbu 1i00|16e6","Asia/Damascus|LMT EET EEST|-2p.c -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1dz0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0|26e5","Asia/Dili|LMT +08 +09|-8m.k -80 -90|01212|-2le8m.k 1dnXm.k 1nfA0 Xld0|19e4","Asia/Dubai|LMT +04|-3F.c -40|01|-21JfF.c|39e5","Asia/Dushanbe|LMT +05 +06 +07|-4z.c -50 -60 -70|012323232323232323232321|-1Pc4z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2hB0|76e4","Asia/Famagusta|LMT EET EEST +03|-2f.M -20 -30 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212312121212121212121212121212121212121212121|-1Vc2f.M 2a3cf.M 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00","Asia/Gaza|EET EEST IST IDT|-20 -30 -20 -30|0101010101010101010101010101010123232323232323232323232323232320101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|18e5","Asia/Hebron|EET EEST IST IDT|-20 -30 -20 -30|010101010101010101010101010101012323232323232323232323232323232010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|25e4","Asia/Ho_Chi_Minh|LMT PLMT +07 +08 +09|-76.E -76.u -70 -80 -90|0123423232|-2yC76.E bK00.a 1h7b6.u 5lz0 18o0 3Oq0 k5b0 aW00 BAM0|90e5","Asia/Hong_Kong|LMT HKT HKST HKT JST|-7A.G -80 -90 -8u -90|0123412121212121212121212121212121212121212121212121212121212121212121|-2CFH0 1taO0 Hc0 xUu 9tBu 11z0 1tDu Rc0 1wo0 11A0 1cM0 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1nX0 U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|73e5","Asia/Hovd|LMT +06 +07 +08|-66.A -60 -70 -80|012323232323232323232323232323232323232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|81e3","Asia/Irkutsk|IMT +07 +08 +09|-6V.5 -70 -80 -90|01232323232323232323232123232323232323232323232323232323232323232|-21zGV.5 pjXV.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4","Europe/Istanbul|IMT EET EEST +04 +03|-1U.U -20 -30 -40 -30|012121212121212121212121212121212121212121212121212121234343434342121212121212121212121212121212121212121212121212121212121212124|-2ogNU.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0 1oN0 11b0 zSp0 CL0 mN0 1Vz0 1gN0 1pz0 5Rd0 1fz0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 1jB0 18L0 1ip0 17z0 qdd0 xX0 3S10 Tz0 dA10 11z0 1o10 11z0 1qN0 11z0 1ze0 11B0 WM0 1qO0 WI0 1nX0 1rB0 10L0 11B0 1in0 17d0 1in0 2pX0 19E0 1fU0 16Q0 1iI0 16Q0 1iI0 1Vd0 pb0 3Kp0 14o0 1de0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1a00 1fA0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 15w0|13e6","Asia/Jakarta|BMT +0720 +0730 +09 +08 WIB|-77.c -7k -7u -90 -80 -70|01232425|-1Q0Tk luM0 mPzO 8vWu 6kpu 4PXu xhcu|31e6","Asia/Jayapura|LMT +09 +0930 WIT|-9m.M -90 -9u -90|0123|-1uu9m.M sMMm.M L4nu|26e4","Asia/Jerusalem|JMT IST IDT IDDT|-2k.E -20 -30 -40|012121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-26Bek.E SyMk.E 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 3LB0 Em0 or0 1cn0 1dB0 16n0 10O0 1ja0 1tC0 14o0 1cM0 1a00 11A0 1Na0 An0 1MP0 AJ0 1Kp0 LC0 1oo0 Wl0 EQN0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 19W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0|81e4","Asia/Kabul|+04 +0430|-40 -4u|01|-10Qs0|46e5","Asia/Kamchatka|LMT +11 +12 +13|-ay.A -b0 -c0 -d0|012323232323232323232321232323232323232323232323232323232323212|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|18e4","Asia/Karachi|LMT +0530 +0630 +05 PKT PKST|-4s.c -5u -6u -50 -50 -60|012134545454|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy00 1cL0 dK10 11b0 1610 1jX0|24e6","Asia/Urumqi|LMT +06|-5O.k -60|01|-1GgtO.k|32e5","Asia/Kathmandu|LMT +0530 +0545|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g|12e5","Asia/Khandyga|LMT +08 +09 +10 +11|-92.d -80 -90 -a0 -b0|0123232323232323232323212323232323232323232323232343434343434343432|-21Q92.d pAp2.d 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|66e2","Asia/Krasnoyarsk|LMT +06 +07 +08|-6b.q -60 -70 -80|01232323232323232323232123232323232323232323232323232323232323232|-21Hib.q prAb.q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|10e5","Asia/Kuala_Lumpur|SMT +07 +0720 +0730 +09 +08|-6T.p -70 -7k -7u -90 -80|0123435|-2Bg6T.p 17anT.p l5XE 17bO 8Fyu 1so1u|71e5","Asia/Kuching|LMT +0730 +08 +0820 +09|-7l.k -7u -80 -8k -90|0123232323232323242|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk AnE pAk 8Fz0|13e4","Asia/Macau|LMT CST +09 +10 CDT|-7y.a -80 -90 -a0 -90|012323214141414141414141414141414141414141414141414141414141414141414141|-2CFHy.a 1uqKy.a PX0 1kn0 15B0 11b0 4Qq0 1oM0 11c0 1ko0 1u00 11A0 1cM0 11c0 1o00 11A0 1o00 11A0 1oo0 1400 1o00 11A0 1o00 U00 1tA0 U00 1wo0 Rc0 1wru U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cK0 1cO0 1cK0 1cO0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|57e4","Asia/Magadan|LMT +10 +11 +12|-a3.c -a0 -b0 -c0|012323232323232323232321232323232323232323232323232323232323232312|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Cq0|95e3","Asia/Makassar|LMT MMT +08 +09 WITA|-7V.A -7V.A -80 -90 -80|01234|-21JjV.A vfc0 myLV.A 8ML0|15e5","Asia/Manila|PST PDT JST|-80 -90 -90|010201010|-1kJI0 AL0 cK10 65X0 mXB0 vX0 VK10 1db0|24e6","Asia/Nicosia|LMT EET EEST|-2d.s -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|32e4","Asia/Novokuznetsk|LMT +06 +07 +08|-5M.M -60 -70 -80|012323232323232323232321232323232323232323232323232323232323212|-1PctM.M eULM.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|55e4","Asia/Novosibirsk|LMT +06 +07 +08|-5v.E -60 -70 -80|0123232323232323232323212323212121212121212121212121212121212121212|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 4eN0|15e5","Asia/Omsk|LMT +05 +06 +07|-4R.u -50 -60 -70|01232323232323232323232123232323232323232323232323232323232323232|-224sR.u pMLR.u 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|12e5","Asia/Oral|LMT +03 +05 +06 +04|-3p.o -30 -50 -60 -40|01232323232323232424242424242424242424242424242|-1Pc3p.o eUop.o 23CK0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 1cM0 IM0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|27e4","Asia/Pontianak|LMT PMT +0730 +09 +08 WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu|23e4","Asia/Pyongyang|LMT KST JST KST|-8n -8u -90 -90|012313|-2um8n 97XR 1lTzu 2Onc0 6BA0|29e5","Asia/Qostanay|LMT +04 +05 +06|-4e.s -40 -50 -60|012323232323232323232123232323232323232323232323|-1Pc4e.s eUoe.s 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0","Asia/Qyzylorda|LMT +04 +05 +06|-4l.Q -40 -50 -60|01232323232323232323232323232323232323232323232|-1Pc4l.Q eUol.Q 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3ao0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 zQl0|73e4","Asia/Rangoon|RMT +0630 +09|-6o.L -6u -90|0121|-21Jio.L SmnS.L 7j9u|48e5","Asia/Sakhalin|LMT +09 +11 +12 +10|-9u.M -90 -b0 -c0 -a0|01232323232323232323232423232323232424242424242424242424242424242|-2AGVu.M 1BoMu.M 1qFa0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 2pB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|58e4","Asia/Samarkand|LMT +04 +05 +06|-4r.R -40 -50 -60|01232323232323232323232|-1Pc4r.R eUor.R 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0|36e4","Asia/Seoul|LMT KST JST KST KDT KDT|-8r.Q -8u -90 -90 -9u -a0|0123141414141414135353|-2um8r.Q 97XV.Q 1m1zu kKo0 2I0u OL0 1FB0 Rb0 1qN0 TX0 1tB0 TX0 1tB0 TX0 1tB0 TX0 2ap0 12FBu 11A0 1o00 11A0|23e6","Asia/Srednekolymsk|LMT +10 +11 +12|-ae.Q -a0 -b0 -c0|01232323232323232323232123232323232323232323232323232323232323232|-1Pcae.Q eUoe.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|35e2","Asia/Taipei|CST JST CDT|-80 -90 -90|01020202020202020202020202020202020202020|-1iw80 joM0 1yo0 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1BX0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97B0 AL0|74e5","Asia/Tashkent|LMT +05 +06 +07|-4B.b -50 -60 -70|012323232323232323232321|-1Pc4B.b eUnB.b 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0|23e5","Asia/Tbilisi|TBMT +03 +04 +05|-2X.b -30 -40 -50|0123232323232323232323212121232323232323232323212|-1Pc2X.b 1jUnX.b WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cK0 1cL0 1cN0 1cL0 1cN0 2pz0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 An0 Os0 WM0|11e5","Asia/Tehran|LMT TMT +0330 +04 +05 +0430|-3p.I -3p.I -3u -40 -50 -4u|01234325252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2btDp.I 1d3c0 1huLT.I TXu 1pz0 sN0 vAu 1cL0 1dB0 1en0 pNB0 UL0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0|14e6","Asia/Thimphu|LMT +0530 +06|-5W.A -5u -60|012|-Su5W.A 1BGMs.A|79e3","Asia/Tokyo|JST JDT|-90 -a0|010101010|-QJJ0 Rb0 1ld0 14n0 1zd0 On0 1zd0 On0|38e6","Asia/Tomsk|LMT +06 +07 +08|-5D.P -60 -70 -80|0123232323232323232323212323232323232323232323212121212121212121212|-21NhD.P pxzD.P 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 co0 1bB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Qp0|10e5","Asia/Ulaanbaatar|LMT +07 +08 +09|-77.w -70 -80 -90|012323232323232323232323232323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|12e5","Asia/Ust-Nera|LMT +08 +09 +12 +11 +10|-9w.S -80 -90 -c0 -b0 -a0|012343434343434343434345434343434343434343434343434343434343434345|-21Q9w.S pApw.S 23CL0 1d90 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|65e2","Asia/Vladivostok|LMT +09 +10 +11|-8L.v -90 -a0 -b0|01232323232323232323232123232323232323232323232323232323232323232|-1SJIL.v itXL.v 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4","Asia/Yakutsk|LMT +08 +09 +10|-8C.W -80 -90 -a0|01232323232323232323232123232323232323232323232323232323232323232|-21Q8C.W pAoC.W 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|28e4","Asia/Yekaterinburg|LMT PMT +04 +05 +06|-42.x -3J.5 -40 -50 -60|012343434343434343434343234343434343434343434343434343434343434343|-2ag42.x 7mQh.s qBvJ.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|14e5","Asia/Yerevan|LMT +03 +04 +05|-2W -30 -40 -50|0123232323232323232323212121212323232323232323232323232323232|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 4RX0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|13e5","Atlantic/Azores|HMT -02 -01 +00 WET|1S.w 20 10 0 0|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121232323232323232323232323232323234323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2ldW0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4","Atlantic/Bermuda|LMT AST ADT|4j.i 40 30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1BnRE.G 1LTbE.G 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e3","Atlantic/Canary|LMT -01 WET WEST|11.A 10 0 -10|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4","Atlantic/Cape_Verde|LMT -02 -01|1y.4 20 10|01212|-2ldW0 1eEo0 7zX0 1djf0|50e4","Atlantic/Faroe|LMT WET WEST|r.4 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|49e3","Atlantic/Madeira|FMT -01 +00 +01 WET WEST|17.A 10 0 -10 0 -10|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2ldX0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e4","Atlantic/Reykjavik|LMT -01 +00 GMT|1s 10 0 0|012121212121212121212121212121212121212121212121212121212121212121213|-2uWmw mfaw 1Bd0 ML0 1LB0 Cn0 1LB0 3fX0 C10 HrX0 1cO0 LB0 1EL0 LA0 1C00 Oo0 1wo0 Rc0 1wo0 Rc0 1wo0 Rc0 1zc0 Oo0 1zc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0|12e4","Atlantic/South_Georgia|-02|20|0||30","Atlantic/Stanley|SMT -04 -03 -02|3P.o 40 30 20|012121212121212323212121212121212121212121212121212121212121212121212|-2kJw8.A 12bA8.A 19X0 1fB0 19X0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 2mN0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10|21e2","Australia/Sydney|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|40e5","Australia/Adelaide|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|11e5","Australia/Brisbane|AEST AEDT|-a0 -b0|01010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0|20e5","Australia/Broken_Hill|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|18e3","Australia/Currie|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|746","Australia/Darwin|ACST ACDT|-9u -au|010101010|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0|12e4","Australia/Eucla|+0845 +0945|-8J -9J|0101010101010101010|-293kI xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|368","Australia/Hobart|AEST AEDT|-a0 -b0|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 VfB0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|21e4","Australia/Lord_Howe|AEST +1030 +1130 +11|-a0 -au -bu -b0|0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|raC0 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1tAu WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu|347","Australia/Lindeman|AEST AEDT|-a0 -b0|010101010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0|10","Australia/Melbourne|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|39e5","Australia/Perth|AWST AWDT|-80 -90|0101010101010101010|-293jX xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|18e5","CET|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00","Pacific/Easter|EMT -07 -06 -05|7h.s 70 60 50|012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1uSgG.w 1s4IG.w WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 2pA0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|30e2","CST6CDT|CST CDT CWT CPT|60 50 50 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","EET|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00","Europe/Dublin|DMT IST GMT BST IST|p.l -y.D 0 -10 -10|01232323232324242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242|-2ax9y.D Rc0 1fzy.D 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g600 14o0 1wo0 17c0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","EST|EST|50|0|","EST5EDT|EST EDT EWT EPT|50 40 40 40|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 SgN0 8x40 iv0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","Etc/GMT-0|GMT|0|0|","Etc/GMT-1|+01|-10|0|","Pacific/Port_Moresby|+10|-a0|0||25e4","Etc/GMT-11|+11|-b0|0|","Pacific/Tarawa|+12|-c0|0||29e3","Etc/GMT-13|+13|-d0|0|","Etc/GMT-14|+14|-e0|0|","Etc/GMT-2|+02|-20|0|","Etc/GMT-3|+03|-30|0|","Etc/GMT-4|+04|-40|0|","Etc/GMT-5|+05|-50|0|","Etc/GMT-6|+06|-60|0|","Indian/Christmas|+07|-70|0||21e2","Etc/GMT-8|+08|-80|0|","Pacific/Palau|+09|-90|0||21e3","Etc/GMT+1|-01|10|0|","Etc/GMT+10|-10|a0|0|","Etc/GMT+11|-11|b0|0|","Etc/GMT+12|-12|c0|0|","Etc/GMT+3|-03|30|0|","Etc/GMT+4|-04|40|0|","Etc/GMT+5|-05|50|0|","Etc/GMT+6|-06|60|0|","Etc/GMT+7|-07|70|0|","Etc/GMT+8|-08|80|0|","Etc/GMT+9|-09|90|0|","Etc/UTC|UTC|0|0|","Europe/Amsterdam|AMT NST +0120 +0020 CEST CET|-j.w -1j.w -1k -k -20 -10|010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2aFcj.w 11b0 1iP0 11A0 1io0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1co0 1io0 1yo0 Pc0 1a00 1fA0 1Bc0 Mo0 1tc0 Uo0 1tA0 U00 1uo0 W00 1s00 VA0 1so0 Vc0 1sM0 UM0 1wo0 Rc0 1u00 Wo0 1rA0 W00 1s00 VA0 1sM0 UM0 1w00 fV0 BCX.w 1tA0 U00 1u00 Wo0 1sm0 601k WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|16e5","Europe/Andorra|WET CET CEST|0 -10 -20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-UBA0 1xIN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|79e3","Europe/Astrakhan|LMT +03 +04 +05|-3c.c -30 -40 -50|012323232323232323212121212121212121212121212121212121212121212|-1Pcrc.c eUMc.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|10e5","Europe/Athens|AMT EET EEST CEST CET|-1y.Q -20 -30 -20 -10|012123434121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a61x.Q CNbx.Q mn0 kU10 9b0 3Es0 Xa0 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|35e5","Europe/London|GMT BST BDST|0 -10 -20|0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|10e6","Europe/Belgrade|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19RC0 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Berlin|CET CEST CEMT|-10 -20 -30|01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e5","Europe/Prague|CET CEST GMT|-10 -20 0|01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 1qM0 11c0 mp0 xA0 mn0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|13e5","Europe/Brussels|WET CET CEST WEST|0 -10 -20 -10|0121212103030303030303030303030303030303030303030303212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ehc0 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|21e5","Europe/Bucharest|BMT EET EEST|-1I.o -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1xApI.o 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|19e5","Europe/Budapest|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1ip0 17b0 1op0 1tb0 Q2m0 3Ne0 WM0 1fA0 1cM0 1cM0 1oJ0 1dc0 1030 1fA0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1iM0 1fA0 8Ha0 Rb0 1wN0 Rb0 1BB0 Lz0 1C20 LB0 SNX0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5","Europe/Zurich|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19Lc0 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e4","Europe/Chisinau|CMT BMT EET EEST CEST CET MSK MSD|-1T -1I.o -20 -30 -20 -10 -30 -40|012323232323232323234545467676767676767676767323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-26jdT wGMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 gL0 WO0 1cM0 1cM0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11D0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|67e4","Europe/Copenhagen|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 Tz0 VuO0 60q0 WM0 1fA0 1cM0 1cM0 1cM0 S00 1HA0 Nc0 1C00 Dc0 1Nc0 Ao0 1h5A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Gibraltar|GMT BST BDST CET CEST|0 -10 -20 -10 -20|010101010101010101010101010101010101010101010101012121212121010121010101010101010101034343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|30e3","Europe/Helsinki|HMT EET EEST|-1D.N -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1WuND.N OULD.N 1dA0 1xGq0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Kaliningrad|CET CEST CET CEST MSK MSD EEST EET +03|-10 -20 -20 -30 -30 -40 -30 -20 -30|0101010101010232454545454545454546767676767676767676767676767676767676767676787|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 Am0 Lb0 1en0 op0 1pNz0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|44e4","Europe/Kiev|KMT EET MSK CEST CET MSD EEST|-22.4 -20 -30 -20 -10 -40 -30|0123434252525252525252525256161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc22.4 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 Db0 3220 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|34e5","Europe/Kirov|LMT +03 +04 +05|-3i.M -30 -40 -50|01232323232323232321212121212121212121212121212121212121212121|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|48e4","Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.J 0 -10 -20 -10 -20|012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121214121212121212121212121212121212124545454212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2le00 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 pvy0 1cM0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e5","Europe/Luxembourg|LMT CET CEST WET WEST WEST WET|-o.A -10 -20 0 -10 -20 -10|0121212134343434343434343434343434343434343434343434565651212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2DG0o.A t6mo.A TB0 1nX0 Up0 1o20 11A0 rW0 CM0 1qP0 R90 1EO0 UK0 1u20 10m0 1ip0 1in0 17e0 19W0 1fB0 1db0 1cp0 1in0 17d0 1fz0 1a10 1in0 1a10 1in0 17f0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 vA0 60L0 WM0 1fA0 1cM0 17c0 1io0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4","Europe/Madrid|WET WEST WEMT CET CEST|0 -10 -20 -10 -20|010101010101010101210343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-25Td0 19B0 1cL0 1dd0 b1z0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1in0 17d0 iIn0 Hd0 1cL0 bb0 1200 2s20 14n0 5aL0 Mp0 1vz0 17d0 1in0 17d0 1in0 17d0 1in0 17d0 6hX0 11B0 XHX0 1a10 1fz0 1a10 19X0 1cN0 1fz0 1a10 1fC0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e5","Europe/Malta|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1co0 17c0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1co0 1cM0 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4","Europe/Minsk|MMT EET MSK CEST CET MSD EEST +03|-1O -20 -30 -20 -10 -40 -30 -30|01234343252525252525252525261616161616161616161616161616161616161617|-1Pc1O eUnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0|19e5","Europe/Monaco|PMT WET WEST WEMT CET CEST|-9.l 0 -10 -20 -10 -20|01212121212121212121212121212121212121212121212121232323232345454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 2RV0 11z0 11B0 1ze0 WM0 1fA0 1cM0 1fa0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e3","Europe/Moscow|MMT MMT MST MDST MSD MSK +05 EET EEST MSK|-2u.h -2v.j -3v.j -4v.j -40 -30 -50 -20 -30 -40|012132345464575454545454545454545458754545454545454545454545454545454545454595|-2ag2u.h 2pyW.W 1bA0 11X0 GN0 1Hb0 c4v.j ik0 3DA0 dz0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|16e6","Europe/Paris|PMT WET WEST CEST CET WEMT|-9.l 0 -10 -20 -10 -20|0121212121212121212121212121212121212121212121212123434352543434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2nco8.l cNb8.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e6","Europe/Riga|RMT LST EET MSK CEST CET MSD EEST|-1A.y -2A.y -20 -30 -20 -10 -40 -30|010102345454536363636363636363727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272|-25TzA.y 11A0 1iM0 ko0 gWm0 yDXA.y 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|64e4","Europe/Rome|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1cM0 16M0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1C00 LA0 1zc0 Oo0 1C00 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|39e5","Europe/Samara|LMT +03 +04 +05|-3k.k -30 -40 -50|0123232323232323232121232323232323232323232323232323232323212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2y10 14m0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|12e5","Europe/Saratov|LMT +03 +04 +05|-34.i -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 5810","Europe/Simferopol|SMT EET MSK CEST CET MSD EEST MSK|-2g -20 -30 -20 -10 -40 -30 -40|012343432525252525252525252161616525252616161616161616161616161616161616172|-1Pc2g eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eL0 1cL0 1cN0 1cL0 1cN0 dX0 WL0 1cN0 1cL0 1fB0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0|33e4","Europe/Sofia|EET CET CEST EEST|-20 -10 -20 -30|01212103030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030|-168L0 WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Stockholm|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 TB0 2yDe0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|15e5","Europe/Tallinn|TMT CET CEST EET MSK MSD EEST|-1D -10 -20 -20 -30 -40 -30|012103421212454545454545454546363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363|-26oND teD 11A0 1Ta0 4rXl KSLD 2FX0 2Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e4","Europe/Tirane|LMT CET CEST|-1j.k -10 -20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4","Europe/Ulyanovsk|LMT +03 +04 +05 +02|-3d.A -30 -40 -50 -20|01232323232323232321214121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|13e5","Europe/Uzhgorod|CET CEST MSK MSD EET EEST|-10 -20 -30 -40 -20 -30|010101023232323232323232320454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-1cqL0 6i00 WM0 1fA0 1cM0 1ml0 1Cp0 1r3W0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 1Nf0 2pw0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e4","Europe/Vienna|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1cM0 1cM0 1cM0 400 2qM0 1a00 1cM0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5","Europe/Vilnius|WMT KMT CET EET MSK CEST MSD EEST|-1o -1z.A -10 -20 -30 -20 -40 -30|012324525254646464646464646473737373737373737352537373737373737373737373737373737373737373737373737373737373737373737373|-293do 6ILM.o 1Ooz.A zz0 Mfd0 29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4","Europe/Volgograd|LMT +03 +04 +05|-2V.E -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-21IqV.E psLV.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 9Jd0|10e5","Europe/Warsaw|WMT CET CEST EET EEST|-1o -10 -20 -20 -30|012121234312121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ctdo 1LXo 11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5","Europe/Zaporozhye|+0220 EET MSK CEST CET MSD EEST|-2k -20 -30 -20 -10 -40 -30|01234342525252525252525252526161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc2k eUok rdb0 2RE0 WM0 1fA0 8m0 1v9a0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|77e4","HST|HST|a0|0|","Indian/Chagos|LMT +05 +06|-4N.E -50 -60|012|-2xosN.E 3AGLN.E|30e2","Indian/Cocos|+0630|-6u|0||596","Indian/Kerguelen|-00 +05|0 -50|01|-MG00|130","Indian/Mahe|LMT +04|-3F.M -40|01|-2yO3F.M|79e3","Indian/Maldives|MMT +05|-4S -50|01|-olgS|35e4","Indian/Mauritius|LMT +04 +05|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0|15e4","Indian/Reunion|LMT +04|-3F.Q -40|01|-2mDDF.Q|84e4","Pacific/Kwajalein|+11 +10 +09 -12 +12|-b0 -a0 -90 c0 -c0|012034|-1kln0 akp0 6Up0 12ry0 Wan0|14e3","MET|MET MEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00","MST|MST|70|0|","MST7MDT|MST MDT MWT MPT|70 60 60 60|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","Pacific/Chatham|+1215 +1245 +1345|-cf -cJ -dJ|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-WqAf 1adef IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|600","Pacific/Apia|LMT -1130 -11 -10 +14 +13|bq.U bu b0 a0 -e0 -d0|01232345454545454545454545454545454545454545454545454545454|-2nDMx.4 1yW03.4 2rRbu 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|37e3","Pacific/Bougainville|+10 +09 +11|-a0 -90 -b0|0102|-16Wy0 7CN0 2MQp0|18e4","Pacific/Chuuk|+10 +09|-a0 -90|01010|-2ewy0 axB0 RVX0 axd0|49e3","Pacific/Efate|LMT +11 +12|-bd.g -b0 -c0|0121212121212121212121|-2l9nd.g 2Szcd.g 1cL0 1oN0 10L0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 Lz0 1Nd0 An0|66e3","Pacific/Enderbury|-12 -11 +13|c0 b0 -d0|012|nIc0 B7X0|1","Pacific/Fakaofo|-11 +13|b0 -d0|01|1Gfn0|483","Pacific/Fiji|LMT +12 +13|-bT.I -c0 -d0|0121212121212121212121212121212121212121212121212121212121212121|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0|88e4","Pacific/Galapagos|LMT -05 -06|5W.o 50 60|01212|-1yVS1.A 2dTz1.A gNd0 rz0|25e3","Pacific/Gambier|LMT -09|8X.M 90|01|-2jof0.c|125","Pacific/Guadalcanal|LMT +11|-aD.M -b0|01|-2joyD.M|11e4","Pacific/Guam|GST +09 GDT ChST|-a0 -90 -b0 -a0|01020202020202020203|-18jK0 6pB0 AhB0 3QL0 g2p0 3p91 WOX rX0 1zd0 Rb0 1wp0 Rb0 5xd0 rX0 5sN0 zb1 1C0X On0 ULb0|17e4","Pacific/Honolulu|HST HDT HWT HPT HST|au 9u 9u 9u a0|0102304|-1thLu 8x0 lef0 8wWu iAu 46p0|37e4","Pacific/Kiritimati|-1040 -10 +14|aE a0 -e0|012|nIaE B7Xk|51e2","Pacific/Kosrae|+11 +09 +10 +12|-b0 -90 -a0 -c0|01021030|-2ewz0 axC0 HBy0 akp0 axd0 WOK0 1bdz0|66e2","Pacific/Majuro|+11 +09 +10 +12|-b0 -90 -a0 -c0|0102103|-2ewz0 axC0 HBy0 akp0 6RB0 12um0|28e3","Pacific/Marquesas|LMT -0930|9i 9u|01|-2joeG|86e2","Pacific/Pago_Pago|LMT SST|bm.M b0|01|-2nDMB.c|37e2","Pacific/Nauru|LMT +1130 +09 +12|-b7.E -bu -90 -c0|01213|-1Xdn7.E QCnB.E 7mqu 1lnbu|10e3","Pacific/Niue|-1120 -1130 -11|bk bu b0|012|-KfME 17y0a|12e2","Pacific/Norfolk|+1112 +1130 +1230 +11|-bc -bu -cu -b0|01213|-Kgbc W01G On0 1COp0|25e4","Pacific/Noumea|LMT +11 +12|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn0 HeP0 Ao0|98e3","Pacific/Pitcairn|-0830 -08|8u 80|01|18Vku|56","Pacific/Pohnpei|+11 +09 +10|-b0 -90 -a0|010210|-2ewz0 axC0 HBy0 akp0 axd0|34e3","Pacific/Rarotonga|-1030 -0930 -10|au 9u a0|012121212121212121212121212|lyWu IL0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu|13e3","Pacific/Tahiti|LMT -10|9W.g a0|01|-2joe1.I|18e4","Pacific/Tongatapu|+1220 +13 +14|-ck -d0 -e0|0121212121|-1aB0k 2n5dk 15A0 1wo0 xz0 1Q10 xz0 zWN0 s00|75e3","PST8PDT|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0","WET|WET WEST|0 -10|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00"],"links":["Africa/Abidjan|Africa/Bamako","Africa/Abidjan|Africa/Banjul","Africa/Abidjan|Africa/Conakry","Africa/Abidjan|Africa/Dakar","Africa/Abidjan|Africa/Freetown","Africa/Abidjan|Africa/Lome","Africa/Abidjan|Africa/Nouakchott","Africa/Abidjan|Africa/Ouagadougou","Africa/Abidjan|Africa/Timbuktu","Africa/Abidjan|Atlantic/St_Helena","Africa/Cairo|Egypt","Africa/Johannesburg|Africa/Maseru","Africa/Johannesburg|Africa/Mbabane","Africa/Lagos|Africa/Bangui","Africa/Lagos|Africa/Brazzaville","Africa/Lagos|Africa/Douala","Africa/Lagos|Africa/Kinshasa","Africa/Lagos|Africa/Libreville","Africa/Lagos|Africa/Luanda","Africa/Lagos|Africa/Malabo","Africa/Lagos|Africa/Niamey","Africa/Lagos|Africa/Porto-Novo","Africa/Maputo|Africa/Blantyre","Africa/Maputo|Africa/Bujumbura","Africa/Maputo|Africa/Gaborone","Africa/Maputo|Africa/Harare","Africa/Maputo|Africa/Kigali","Africa/Maputo|Africa/Lubumbashi","Africa/Maputo|Africa/Lusaka","Africa/Nairobi|Africa/Addis_Ababa","Africa/Nairobi|Africa/Asmara","Africa/Nairobi|Africa/Asmera","Africa/Nairobi|Africa/Dar_es_Salaam","Africa/Nairobi|Africa/Djibouti","Africa/Nairobi|Africa/Kampala","Africa/Nairobi|Africa/Mogadishu","Africa/Nairobi|Indian/Antananarivo","Africa/Nairobi|Indian/Comoro","Africa/Nairobi|Indian/Mayotte","Africa/Tripoli|Libya","America/Adak|America/Atka","America/Adak|US/Aleutian","America/Anchorage|US/Alaska","America/Argentina/Buenos_Aires|America/Buenos_Aires","America/Argentina/Catamarca|America/Argentina/ComodRivadavia","America/Argentina/Catamarca|America/Catamarca","America/Argentina/Cordoba|America/Cordoba","America/Argentina/Cordoba|America/Rosario","America/Argentina/Jujuy|America/Jujuy","America/Argentina/Mendoza|America/Mendoza","America/Atikokan|America/Coral_Harbour","America/Chicago|US/Central","America/Curacao|America/Aruba","America/Curacao|America/Kralendijk","America/Curacao|America/Lower_Princes","America/Denver|America/Shiprock","America/Denver|Navajo","America/Denver|US/Mountain","America/Detroit|US/Michigan","America/Edmonton|Canada/Mountain","America/Fort_Wayne|America/Indiana/Indianapolis","America/Fort_Wayne|America/Indianapolis","America/Fort_Wayne|US/East-Indiana","America/Halifax|Canada/Atlantic","America/Havana|Cuba","America/Indiana/Knox|America/Knox_IN","America/Indiana/Knox|US/Indiana-Starke","America/Jamaica|Jamaica","America/Kentucky/Louisville|America/Louisville","America/Los_Angeles|US/Pacific","America/Los_Angeles|US/Pacific-New","America/Manaus|Brazil/West","America/Mazatlan|Mexico/BajaSur","America/Mexico_City|Mexico/General","America/New_York|US/Eastern","America/Noronha|Brazil/DeNoronha","America/Panama|America/Cayman","America/Phoenix|US/Arizona","America/Port_of_Spain|America/Anguilla","America/Port_of_Spain|America/Antigua","America/Port_of_Spain|America/Dominica","America/Port_of_Spain|America/Grenada","America/Port_of_Spain|America/Guadeloupe","America/Port_of_Spain|America/Marigot","America/Port_of_Spain|America/Montserrat","America/Port_of_Spain|America/St_Barthelemy","America/Port_of_Spain|America/St_Kitts","America/Port_of_Spain|America/St_Lucia","America/Port_of_Spain|America/St_Thomas","America/Port_of_Spain|America/St_Vincent","America/Port_of_Spain|America/Tortola","America/Port_of_Spain|America/Virgin","America/Regina|Canada/Saskatchewan","America/Rio_Branco|America/Porto_Acre","America/Rio_Branco|Brazil/Acre","America/Santiago|Chile/Continental","America/Sao_Paulo|Brazil/East","America/St_Johns|Canada/Newfoundland","America/Tijuana|America/Ensenada","America/Tijuana|America/Santa_Isabel","America/Tijuana|Mexico/BajaNorte","America/Toronto|America/Montreal","America/Toronto|Canada/Eastern","America/Vancouver|Canada/Pacific","America/Whitehorse|Canada/Yukon","America/Winnipeg|Canada/Central","Asia/Ashgabat|Asia/Ashkhabad","Asia/Bangkok|Asia/Phnom_Penh","Asia/Bangkok|Asia/Vientiane","Asia/Dhaka|Asia/Dacca","Asia/Dubai|Asia/Muscat","Asia/Ho_Chi_Minh|Asia/Saigon","Asia/Hong_Kong|Hongkong","Asia/Jerusalem|Asia/Tel_Aviv","Asia/Jerusalem|Israel","Asia/Kathmandu|Asia/Katmandu","Asia/Kolkata|Asia/Calcutta","Asia/Kuala_Lumpur|Asia/Singapore","Asia/Kuala_Lumpur|Singapore","Asia/Macau|Asia/Macao","Asia/Makassar|Asia/Ujung_Pandang","Asia/Nicosia|Europe/Nicosia","Asia/Qatar|Asia/Bahrain","Asia/Rangoon|Asia/Yangon","Asia/Riyadh|Asia/Aden","Asia/Riyadh|Asia/Kuwait","Asia/Seoul|ROK","Asia/Shanghai|Asia/Chongqing","Asia/Shanghai|Asia/Chungking","Asia/Shanghai|Asia/Harbin","Asia/Shanghai|PRC","Asia/Taipei|ROC","Asia/Tehran|Iran","Asia/Thimphu|Asia/Thimbu","Asia/Tokyo|Japan","Asia/Ulaanbaatar|Asia/Ulan_Bator","Asia/Urumqi|Asia/Kashgar","Atlantic/Faroe|Atlantic/Faeroe","Atlantic/Reykjavik|Iceland","Atlantic/South_Georgia|Etc/GMT+2","Australia/Adelaide|Australia/South","Australia/Brisbane|Australia/Queensland","Australia/Broken_Hill|Australia/Yancowinna","Australia/Darwin|Australia/North","Australia/Hobart|Australia/Tasmania","Australia/Lord_Howe|Australia/LHI","Australia/Melbourne|Australia/Victoria","Australia/Perth|Australia/West","Australia/Sydney|Australia/ACT","Australia/Sydney|Australia/Canberra","Australia/Sydney|Australia/NSW","Etc/GMT-0|Etc/GMT","Etc/GMT-0|Etc/GMT+0","Etc/GMT-0|Etc/GMT0","Etc/GMT-0|Etc/Greenwich","Etc/GMT-0|GMT","Etc/GMT-0|GMT+0","Etc/GMT-0|GMT-0","Etc/GMT-0|GMT0","Etc/GMT-0|Greenwich","Etc/UTC|Etc/UCT","Etc/UTC|Etc/Universal","Etc/UTC|Etc/Zulu","Etc/UTC|UCT","Etc/UTC|UTC","Etc/UTC|Universal","Etc/UTC|Zulu","Europe/Belgrade|Europe/Ljubljana","Europe/Belgrade|Europe/Podgorica","Europe/Belgrade|Europe/Sarajevo","Europe/Belgrade|Europe/Skopje","Europe/Belgrade|Europe/Zagreb","Europe/Chisinau|Europe/Tiraspol","Europe/Dublin|Eire","Europe/Helsinki|Europe/Mariehamn","Europe/Istanbul|Asia/Istanbul","Europe/Istanbul|Turkey","Europe/Lisbon|Portugal","Europe/London|Europe/Belfast","Europe/London|Europe/Guernsey","Europe/London|Europe/Isle_of_Man","Europe/London|Europe/Jersey","Europe/London|GB","Europe/London|GB-Eire","Europe/Moscow|W-SU","Europe/Oslo|Arctic/Longyearbyen","Europe/Oslo|Atlantic/Jan_Mayen","Europe/Prague|Europe/Bratislava","Europe/Rome|Europe/San_Marino","Europe/Rome|Europe/Vatican","Europe/Warsaw|Poland","Europe/Zurich|Europe/Busingen","Europe/Zurich|Europe/Vaduz","Indian/Christmas|Etc/GMT-7","Pacific/Auckland|Antarctica/McMurdo","Pacific/Auckland|Antarctica/South_Pole","Pacific/Auckland|NZ","Pacific/Chatham|NZ-CHAT","Pacific/Chuuk|Pacific/Truk","Pacific/Chuuk|Pacific/Yap","Pacific/Easter|Chile/EasterIsland","Pacific/Guam|Pacific/Saipan","Pacific/Honolulu|Pacific/Johnston","Pacific/Honolulu|US/Hawaii","Pacific/Kwajalein|Kwajalein","Pacific/Pago_Pago|Pacific/Midway","Pacific/Pago_Pago|Pacific/Samoa","Pacific/Pago_Pago|US/Samoa","Pacific/Palau|Etc/GMT-9","Pacific/Pohnpei|Pacific/Ponape","Pacific/Port_Moresby|Etc/GMT-10","Pacific/Tarawa|Etc/GMT-12","Pacific/Tarawa|Pacific/Funafuti","Pacific/Tarawa|Pacific/Wake","Pacific/Tarawa|Pacific/Wallis"]}

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//! moment-timezone.js
//! version : 0.5.26
//! Copyright (c) JS Foundation and other contributors
//! license : MIT
//! github.com/moment/moment-timezone

(function (root, factory) {
	"use strict";

	/*global define*/
	if (typeof module === 'object' && module.exports) {
		module.exports = factory(__webpack_require__(0)); // Node
	} else if (true) {
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));                 // AMD
	} else {
		factory(root.moment);                        // Browser
	}
}(this, function (moment) {
	"use strict";

	// Do not load moment-timezone a second time.
	// if (moment.tz !== undefined) {
	// 	logError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);
	// 	return moment;
	// }

	var VERSION = "0.5.26",
		zones = {},
		links = {},
		names = {},
		guesses = {},
		cachedGuess;

	if (!moment || typeof moment.version !== 'string') {
		logError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');
	}

	var momentVersion = moment.version.split('.'),
		major = +momentVersion[0],
		minor = +momentVersion[1];

	// Moment.js version check
	if (major < 2 || (major === 2 && minor < 6)) {
		logError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');
	}

	/************************************
		Unpacking
	************************************/

	function charCodeToInt(charCode) {
		if (charCode > 96) {
			return charCode - 87;
		} else if (charCode > 64) {
			return charCode - 29;
		}
		return charCode - 48;
	}

	function unpackBase60(string) {
		var i = 0,
			parts = string.split('.'),
			whole = parts[0],
			fractional = parts[1] || '',
			multiplier = 1,
			num,
			out = 0,
			sign = 1;

		// handle negative numbers
		if (string.charCodeAt(0) === 45) {
			i = 1;
			sign = -1;
		}

		// handle digits before the decimal
		for (i; i < whole.length; i++) {
			num = charCodeToInt(whole.charCodeAt(i));
			out = 60 * out + num;
		}

		// handle digits after the decimal
		for (i = 0; i < fractional.length; i++) {
			multiplier = multiplier / 60;
			num = charCodeToInt(fractional.charCodeAt(i));
			out += num * multiplier;
		}

		return out * sign;
	}

	function arrayToInt (array) {
		for (var i = 0; i < array.length; i++) {
			array[i] = unpackBase60(array[i]);
		}
	}

	function intToUntil (array, length) {
		for (var i = 0; i < length; i++) {
			array[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds
		}

		array[length - 1] = Infinity;
	}

	function mapIndices (source, indices) {
		var out = [], i;

		for (i = 0; i < indices.length; i++) {
			out[i] = source[indices[i]];
		}

		return out;
	}

	function unpack (string) {
		var data = string.split('|'),
			offsets = data[2].split(' '),
			indices = data[3].split(''),
			untils  = data[4].split(' ');

		arrayToInt(offsets);
		arrayToInt(indices);
		arrayToInt(untils);

		intToUntil(untils, indices.length);

		return {
			name       : data[0],
			abbrs      : mapIndices(data[1].split(' '), indices),
			offsets    : mapIndices(offsets, indices),
			untils     : untils,
			population : data[5] | 0
		};
	}

	/************************************
		Zone object
	************************************/

	function Zone (packedString) {
		if (packedString) {
			this._set(unpack(packedString));
		}
	}

	Zone.prototype = {
		_set : function (unpacked) {
			this.name       = unpacked.name;
			this.abbrs      = unpacked.abbrs;
			this.untils     = unpacked.untils;
			this.offsets    = unpacked.offsets;
			this.population = unpacked.population;
		},

		_index : function (timestamp) {
			var target = +timestamp,
				untils = this.untils,
				i;

			for (i = 0; i < untils.length; i++) {
				if (target < untils[i]) {
					return i;
				}
			}
		},

		parse : function (timestamp) {
			var target  = +timestamp,
				offsets = this.offsets,
				untils  = this.untils,
				max     = untils.length - 1,
				offset, offsetNext, offsetPrev, i;

			for (i = 0; i < max; i++) {
				offset     = offsets[i];
				offsetNext = offsets[i + 1];
				offsetPrev = offsets[i ? i - 1 : i];

				if (offset < offsetNext && tz.moveAmbiguousForward) {
					offset = offsetNext;
				} else if (offset > offsetPrev && tz.moveInvalidForward) {
					offset = offsetPrev;
				}

				if (target < untils[i] - (offset * 60000)) {
					return offsets[i];
				}
			}

			return offsets[max];
		},

		abbr : function (mom) {
			return this.abbrs[this._index(mom)];
		},

		offset : function (mom) {
			logError("zone.offset has been deprecated in favor of zone.utcOffset");
			return this.offsets[this._index(mom)];
		},

		utcOffset : function (mom) {
			return this.offsets[this._index(mom)];
		}
	};

	/************************************
		Current Timezone
	************************************/

	function OffsetAt(at) {
		var timeString = at.toTimeString();
		var abbr = timeString.match(/\([a-z ]+\)/i);
		if (abbr && abbr[0]) {
			// 17:56:31 GMT-0600 (CST)
			// 17:56:31 GMT-0600 (Central Standard Time)
			abbr = abbr[0].match(/[A-Z]/g);
			abbr = abbr ? abbr.join('') : undefined;
		} else {
			// 17:56:31 CST
			// 17:56:31 GMT+0800 (台北標準時間)
			abbr = timeString.match(/[A-Z]{3,5}/g);
			abbr = abbr ? abbr[0] : undefined;
		}

		if (abbr === 'GMT') {
			abbr = undefined;
		}

		this.at = +at;
		this.abbr = abbr;
		this.offset = at.getTimezoneOffset();
	}

	function ZoneScore(zone) {
		this.zone = zone;
		this.offsetScore = 0;
		this.abbrScore = 0;
	}

	ZoneScore.prototype.scoreOffsetAt = function (offsetAt) {
		this.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);
		if (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {
			this.abbrScore++;
		}
	};

	function findChange(low, high) {
		var mid, diff;

		while ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {
			mid = new OffsetAt(new Date(low.at + diff));
			if (mid.offset === low.offset) {
				low = mid;
			} else {
				high = mid;
			}
		}

		return low;
	}

	function userOffsets() {
		var startYear = new Date().getFullYear() - 2,
			last = new OffsetAt(new Date(startYear, 0, 1)),
			offsets = [last],
			change, next, i;

		for (i = 1; i < 48; i++) {
			next = new OffsetAt(new Date(startYear, i, 1));
			if (next.offset !== last.offset) {
				change = findChange(last, next);
				offsets.push(change);
				offsets.push(new OffsetAt(new Date(change.at + 6e4)));
			}
			last = next;
		}

		for (i = 0; i < 4; i++) {
			offsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));
			offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));
		}

		return offsets;
	}

	function sortZoneScores (a, b) {
		if (a.offsetScore !== b.offsetScore) {
			return a.offsetScore - b.offsetScore;
		}
		if (a.abbrScore !== b.abbrScore) {
			return a.abbrScore - b.abbrScore;
		}
		if (a.zone.population !== b.zone.population) {
			return b.zone.population - a.zone.population;
		}
		return b.zone.name.localeCompare(a.zone.name);
	}

	function addToGuesses (name, offsets) {
		var i, offset;
		arrayToInt(offsets);
		for (i = 0; i < offsets.length; i++) {
			offset = offsets[i];
			guesses[offset] = guesses[offset] || {};
			guesses[offset][name] = true;
		}
	}

	function guessesForUserOffsets (offsets) {
		var offsetsLength = offsets.length,
			filteredGuesses = {},
			out = [],
			i, j, guessesOffset;

		for (i = 0; i < offsetsLength; i++) {
			guessesOffset = guesses[offsets[i].offset] || {};
			for (j in guessesOffset) {
				if (guessesOffset.hasOwnProperty(j)) {
					filteredGuesses[j] = true;
				}
			}
		}

		for (i in filteredGuesses) {
			if (filteredGuesses.hasOwnProperty(i)) {
				out.push(names[i]);
			}
		}

		return out;
	}

	function rebuildGuess () {

		// use Intl API when available and returning valid time zone
		try {
			var intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;
			if (intlName && intlName.length > 3) {
				var name = names[normalizeName(intlName)];
				if (name) {
					return name;
				}
				logError("Moment Timezone found " + intlName + " from the Intl api, but did not have that data loaded.");
			}
		} catch (e) {
			// Intl unavailable, fall back to manual guessing.
		}

		var offsets = userOffsets(),
			offsetsLength = offsets.length,
			guesses = guessesForUserOffsets(offsets),
			zoneScores = [],
			zoneScore, i, j;

		for (i = 0; i < guesses.length; i++) {
			zoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);
			for (j = 0; j < offsetsLength; j++) {
				zoneScore.scoreOffsetAt(offsets[j]);
			}
			zoneScores.push(zoneScore);
		}

		zoneScores.sort(sortZoneScores);

		return zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;
	}

	function guess (ignoreCache) {
		if (!cachedGuess || ignoreCache) {
			cachedGuess = rebuildGuess();
		}
		return cachedGuess;
	}

	/************************************
		Global Methods
	************************************/

	function normalizeName (name) {
		return (name || '').toLowerCase().replace(/\//g, '_');
	}

	function addZone (packed) {
		var i, name, split, normalized;

		if (typeof packed === "string") {
			packed = [packed];
		}

		for (i = 0; i < packed.length; i++) {
			split = packed[i].split('|');
			name = split[0];
			normalized = normalizeName(name);
			zones[normalized] = packed[i];
			names[normalized] = name;
			addToGuesses(normalized, split[2].split(' '));
		}
	}

	function getZone (name, caller) {

		name = normalizeName(name);

		var zone = zones[name];
		var link;

		if (zone instanceof Zone) {
			return zone;
		}

		if (typeof zone === 'string') {
			zone = new Zone(zone);
			zones[name] = zone;
			return zone;
		}

		// Pass getZone to prevent recursion more than 1 level deep
		if (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {
			zone = zones[name] = new Zone();
			zone._set(link);
			zone.name = names[name];
			return zone;
		}

		return null;
	}

	function getNames () {
		var i, out = [];

		for (i in names) {
			if (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {
				out.push(names[i]);
			}
		}

		return out.sort();
	}

	function addLink (aliases) {
		var i, alias, normal0, normal1;

		if (typeof aliases === "string") {
			aliases = [aliases];
		}

		for (i = 0; i < aliases.length; i++) {
			alias = aliases[i].split('|');

			normal0 = normalizeName(alias[0]);
			normal1 = normalizeName(alias[1]);

			links[normal0] = normal1;
			names[normal0] = alias[0];

			links[normal1] = normal0;
			names[normal1] = alias[1];
		}
	}

	function loadData (data) {
		addZone(data.zones);
		addLink(data.links);
		tz.dataVersion = data.version;
	}

	function zoneExists (name) {
		if (!zoneExists.didShowError) {
			zoneExists.didShowError = true;
				logError("moment.tz.zoneExists('" + name + "') has been deprecated in favor of !moment.tz.zone('" + name + "')");
		}
		return !!getZone(name);
	}

	function needsOffset (m) {
		var isUnixTimestamp = (m._f === 'X' || m._f === 'x');
		return !!(m._a && (m._tzm === undefined) && !isUnixTimestamp);
	}

	function logError (message) {
		if (typeof console !== 'undefined' && typeof console.error === 'function') {
			console.error(message);
		}
	}

	/************************************
		moment.tz namespace
	************************************/

	function tz (input) {
		var args = Array.prototype.slice.call(arguments, 0, -1),
			name = arguments[arguments.length - 1],
			zone = getZone(name),
			out  = moment.utc.apply(null, args);

		if (zone && !moment.isMoment(input) && needsOffset(out)) {
			out.add(zone.parse(out), 'minutes');
		}

		out.tz(name);

		return out;
	}

	tz.version      = VERSION;
	tz.dataVersion  = '';
	tz._zones       = zones;
	tz._links       = links;
	tz._names       = names;
	tz.add          = addZone;
	tz.link         = addLink;
	tz.load         = loadData;
	tz.zone         = getZone;
	tz.zoneExists   = zoneExists; // deprecated in 0.1.0
	tz.guess        = guess;
	tz.names        = getNames;
	tz.Zone         = Zone;
	tz.unpack       = unpack;
	tz.unpackBase60 = unpackBase60;
	tz.needsOffset  = needsOffset;
	tz.moveInvalidForward   = true;
	tz.moveAmbiguousForward = false;

	/************************************
		Interface with Moment.js
	************************************/

	var fn = moment.fn;

	moment.tz = tz;

	moment.defaultZone = null;

	moment.updateOffset = function (mom, keepTime) {
		var zone = moment.defaultZone,
			offset;

		if (mom._z === undefined) {
			if (zone && needsOffset(mom) && !mom._isUTC) {
				mom._d = moment.utc(mom._a)._d;
				mom.utc().add(zone.parse(mom), 'minutes');
			}
			mom._z = zone;
		}
		if (mom._z) {
			offset = mom._z.utcOffset(mom);
			if (Math.abs(offset) < 16) {
				offset = offset / 60;
			}
			if (mom.utcOffset !== undefined) {
				var z = mom._z;
				mom.utcOffset(-offset, keepTime);
				mom._z = z;
			} else {
				mom.zone(offset, keepTime);
			}
		}
	};

	fn.tz = function (name, keepTime) {
		if (name) {
			if (typeof name !== 'string') {
				throw new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');
			}
			this._z = getZone(name);
			if (this._z) {
				moment.updateOffset(this, keepTime);
			} else {
				logError("Moment Timezone has no data for " + name + ". See http://momentjs.com/timezone/docs/#/data-loading/.");
			}
			return this;
		}
		if (this._z) { return this._z.name; }
	};

	function abbrWrap (old) {
		return function () {
			if (this._z) { return this._z.abbr(this); }
			return old.call(this);
		};
	}

	function resetZoneWrap (old) {
		return function () {
			this._z = null;
			return old.apply(this, arguments);
		};
	}

	function resetZoneWrap2 (old) {
		return function () {
			if (arguments.length > 0) this._z = null;
			return old.apply(this, arguments);
		};
	}

	fn.zoneName  = abbrWrap(fn.zoneName);
	fn.zoneAbbr  = abbrWrap(fn.zoneAbbr);
	fn.utc       = resetZoneWrap(fn.utc);
	fn.local     = resetZoneWrap(fn.local);
	fn.utcOffset = resetZoneWrap2(fn.utcOffset);

	moment.tz.setDefault = function(name) {
		if (major < 2 || (major === 2 && minor < 9)) {
			logError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');
		}
		moment.defaultZone = name ? getZone(name) : null;
		return moment;
	};

	// Cloning a moment should include the _z property.
	var momentProperties = moment.momentProperties;
	if (Object.prototype.toString.call(momentProperties) === '[object Array]') {
		// moment 2.8.1+
		momentProperties.push('_z');
		momentProperties.push('_a');
	} else if (momentProperties) {
		// moment 2.7.0
		momentProperties._z = null;
	}

	// INJECT DATA

	return moment;
}));


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 14,
	"./af.js": 14,
	"./ar": 21,
	"./ar-dz": 15,
	"./ar-dz.js": 15,
	"./ar-kw": 16,
	"./ar-kw.js": 16,
	"./ar-ly": 17,
	"./ar-ly.js": 17,
	"./ar-ma": 18,
	"./ar-ma.js": 18,
	"./ar-sa": 19,
	"./ar-sa.js": 19,
	"./ar-tn": 20,
	"./ar-tn.js": 20,
	"./ar.js": 21,
	"./az": 22,
	"./az.js": 22,
	"./be": 23,
	"./be.js": 23,
	"./bg": 24,
	"./bg.js": 24,
	"./bm": 25,
	"./bm.js": 25,
	"./bn": 26,
	"./bn.js": 26,
	"./bo": 27,
	"./bo.js": 27,
	"./br": 28,
	"./br.js": 28,
	"./bs": 29,
	"./bs.js": 29,
	"./ca": 30,
	"./ca.js": 30,
	"./cs": 31,
	"./cs.js": 31,
	"./cv": 32,
	"./cv.js": 32,
	"./cy": 33,
	"./cy.js": 33,
	"./da": 34,
	"./da.js": 34,
	"./de": 37,
	"./de-at": 35,
	"./de-at.js": 35,
	"./de-ch": 36,
	"./de-ch.js": 36,
	"./de.js": 37,
	"./dv": 38,
	"./dv.js": 38,
	"./el": 39,
	"./el.js": 39,
	"./en-SG": 40,
	"./en-SG.js": 40,
	"./en-au": 41,
	"./en-au.js": 41,
	"./en-ca": 42,
	"./en-ca.js": 42,
	"./en-gb": 43,
	"./en-gb.js": 43,
	"./en-ie": 44,
	"./en-ie.js": 44,
	"./en-il": 45,
	"./en-il.js": 45,
	"./en-nz": 46,
	"./en-nz.js": 46,
	"./eo": 47,
	"./eo.js": 47,
	"./es": 50,
	"./es-do": 48,
	"./es-do.js": 48,
	"./es-us": 49,
	"./es-us.js": 49,
	"./es.js": 50,
	"./et": 51,
	"./et.js": 51,
	"./eu": 52,
	"./eu.js": 52,
	"./fa": 53,
	"./fa.js": 53,
	"./fi": 54,
	"./fi.js": 54,
	"./fo": 55,
	"./fo.js": 55,
	"./fr": 58,
	"./fr-ca": 56,
	"./fr-ca.js": 56,
	"./fr-ch": 57,
	"./fr-ch.js": 57,
	"./fr.js": 58,
	"./fy": 59,
	"./fy.js": 59,
	"./ga": 60,
	"./ga.js": 60,
	"./gd": 61,
	"./gd.js": 61,
	"./gl": 62,
	"./gl.js": 62,
	"./gom-latn": 63,
	"./gom-latn.js": 63,
	"./gu": 64,
	"./gu.js": 64,
	"./he": 65,
	"./he.js": 65,
	"./hi": 66,
	"./hi.js": 66,
	"./hr": 67,
	"./hr.js": 67,
	"./hu": 68,
	"./hu.js": 68,
	"./hy-am": 69,
	"./hy-am.js": 69,
	"./id": 70,
	"./id.js": 70,
	"./is": 71,
	"./is.js": 71,
	"./it": 73,
	"./it-ch": 72,
	"./it-ch.js": 72,
	"./it.js": 73,
	"./ja": 74,
	"./ja.js": 74,
	"./jv": 75,
	"./jv.js": 75,
	"./ka": 76,
	"./ka.js": 76,
	"./kk": 77,
	"./kk.js": 77,
	"./km": 78,
	"./km.js": 78,
	"./kn": 79,
	"./kn.js": 79,
	"./ko": 80,
	"./ko.js": 80,
	"./ku": 81,
	"./ku.js": 81,
	"./ky": 82,
	"./ky.js": 82,
	"./lb": 83,
	"./lb.js": 83,
	"./lo": 84,
	"./lo.js": 84,
	"./lt": 85,
	"./lt.js": 85,
	"./lv": 86,
	"./lv.js": 86,
	"./me": 87,
	"./me.js": 87,
	"./mi": 88,
	"./mi.js": 88,
	"./mk": 89,
	"./mk.js": 89,
	"./ml": 90,
	"./ml.js": 90,
	"./mn": 91,
	"./mn.js": 91,
	"./mr": 92,
	"./mr.js": 92,
	"./ms": 94,
	"./ms-my": 93,
	"./ms-my.js": 93,
	"./ms.js": 94,
	"./mt": 95,
	"./mt.js": 95,
	"./my": 96,
	"./my.js": 96,
	"./nb": 97,
	"./nb.js": 97,
	"./ne": 98,
	"./ne.js": 98,
	"./nl": 100,
	"./nl-be": 99,
	"./nl-be.js": 99,
	"./nl.js": 100,
	"./nn": 101,
	"./nn.js": 101,
	"./pa-in": 102,
	"./pa-in.js": 102,
	"./pl": 103,
	"./pl.js": 103,
	"./pt": 105,
	"./pt-br": 104,
	"./pt-br.js": 104,
	"./pt.js": 105,
	"./ro": 106,
	"./ro.js": 106,
	"./ru": 107,
	"./ru.js": 107,
	"./sd": 108,
	"./sd.js": 108,
	"./se": 109,
	"./se.js": 109,
	"./si": 110,
	"./si.js": 110,
	"./sk": 111,
	"./sk.js": 111,
	"./sl": 112,
	"./sl.js": 112,
	"./sq": 113,
	"./sq.js": 113,
	"./sr": 115,
	"./sr-cyrl": 114,
	"./sr-cyrl.js": 114,
	"./sr.js": 115,
	"./ss": 116,
	"./ss.js": 116,
	"./sv": 117,
	"./sv.js": 117,
	"./sw": 118,
	"./sw.js": 118,
	"./ta": 119,
	"./ta.js": 119,
	"./te": 120,
	"./te.js": 120,
	"./tet": 121,
	"./tet.js": 121,
	"./tg": 122,
	"./tg.js": 122,
	"./th": 123,
	"./th.js": 123,
	"./tl-ph": 124,
	"./tl-ph.js": 124,
	"./tlh": 125,
	"./tlh.js": 125,
	"./tr": 126,
	"./tr.js": 126,
	"./tzl": 127,
	"./tzl.js": 127,
	"./tzm": 129,
	"./tzm-latn": 128,
	"./tzm-latn.js": 128,
	"./tzm.js": 129,
	"./ug-cn": 130,
	"./ug-cn.js": 130,
	"./uk": 131,
	"./uk.js": 131,
	"./ur": 132,
	"./ur.js": 132,
	"./uz": 134,
	"./uz-latn": 133,
	"./uz-latn.js": 133,
	"./uz.js": 134,
	"./vi": 135,
	"./vi.js": 135,
	"./x-pseudo": 136,
	"./x-pseudo.js": 136,
	"./yo": 137,
	"./yo.js": 137,
	"./zh-cn": 138,
	"./zh-cn.js": 138,
	"./zh-hk": 139,
	"./zh-hk.js": 139,
	"./zh-tw": 140,
	"./zh-tw.js": 140
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 224;

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
  if(true)
    module.exports = factory();
  else if(typeof define === 'function' && define.amd)
    define("snapClinical", [], factory);
  else if(typeof exports === 'object')
    exports["snapClinical"] = factory();
  else
    root["snapClinical"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
  return /******/ (function(modules) { // webpackBootstrap
    /******/ 	// The module cache
    /******/ 	var installedModules = {};
    /******/
    /******/ 	// The require function
    /******/ 	function __webpack_require__(moduleId) {
      /******/
      /******/ 		// Check if module is in cache
      /******/ 		if(installedModules[moduleId]) {
        /******/ 			return installedModules[moduleId].exports;
        /******/ 		}
      /******/ 		// Create a new module (and put it into the cache)
      /******/ 		var module = installedModules[moduleId] = {
        /******/ 			i: moduleId,
        /******/ 			l: false,
        /******/ 			exports: {}
        /******/ 		};
      /******/
      /******/ 		// Execute the module function
      /******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
      /******/
      /******/ 		// Flag the module as loaded
      /******/ 		module.l = true;
      /******/
      /******/ 		// Return the exports of the module
      /******/ 		return module.exports;
      /******/ 	}
    /******/
    /******/
    /******/ 	// expose the modules object (__webpack_modules__)
    /******/ 	__webpack_require__.m = modules;
    /******/
    /******/ 	// expose the module cache
    /******/ 	__webpack_require__.c = installedModules;
    /******/
    /******/ 	// define getter function for harmony exports
    /******/ 	__webpack_require__.d = function(exports, name, getter) {
      /******/ 		if(!__webpack_require__.o(exports, name)) {
        /******/ 			Object.defineProperty(exports, name, {
          /******/ 				configurable: false,
          /******/ 				enumerable: true,
          /******/ 				get: getter
          /******/ 			});
        /******/ 		}
      /******/ 	};
    /******/
    /******/ 	// getDefaultExport function for compatibility with non-harmony modules
    /******/ 	__webpack_require__.n = function(module) {
      /******/ 		var getter = module && module.__esModule ?
        /******/ 			function getDefault() { return module['default']; } :
        /******/ 			function getModuleExports() { return module; };
      /******/ 		__webpack_require__.d(getter, 'a', getter);
      /******/ 		return getter;
      /******/ 	};
    /******/
    /******/ 	// Object.prototype.hasOwnProperty.call
    /******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
    /******/
    /******/ 	// __webpack_public_path__
    /******/ 	__webpack_require__.p = "";
    /******/
    /******/ 	// Load entry module and return exports
    /******/ 	return __webpack_require__(__webpack_require__.s = 22);
    /******/ })
  /************************************************************************/
  /******/ ([
    /* 0 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory) {
        if (true) {
          // CommonJS
          module.exports = exports = factory();
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define([], factory);
        }
        else {
          // Global (browser)
          root.CryptoJS = factory();
        }
      }(this, function () {

        /**
         * CryptoJS core components.
         */
        var CryptoJS = CryptoJS || (function (Math, undefined) {
          /*
	     * Local polyfil of Object.create
	     */
          var create = Object.create || (function () {
            function F() {};

            return function (obj) {
              var subtype;

              F.prototype = obj;

              subtype = new F();

              F.prototype = null;

              return subtype;
            };
          }())

          /**
           * CryptoJS namespace.
           */
          var C = {};

          /**
           * Library namespace.
           */
          var C_lib = C.lib = {};

          /**
           * Base object for prototypal inheritance.
           */
          var Base = C_lib.Base = (function () {


            return {
              /**
               * Creates a new object that inherits from this object.
               *
               * @param {Object} overrides Properties to copy into the new object.
               *
               * @return {Object} The new object.
               *
               * @static
               *
               * @example
               *
               *     var MyType = CryptoJS.lib.Base.extend({
	             *         field: 'value',
	             *
	             *         method: function () {
	             *         }
	             *     });
               */
              extend: function (overrides) {
                // Spawn
                var subtype = create(this);

                // Augment
                if (overrides) {
                  subtype.mixIn(overrides);
                }

                // Create default initializer
                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {
                  subtype.init = function () {
                    subtype.$super.init.apply(this, arguments);
                  };
                }

                // Initializer's prototype is the subtype object
                subtype.init.prototype = subtype;

                // Reference supertype
                subtype.$super = this;

                return subtype;
              },

              /**
               * Extends this object and runs the init method.
               * Arguments to create() will be passed to init().
               *
               * @return {Object} The new object.
               *
               * @static
               *
               * @example
               *
               *     var instance = MyType.create();
               */
              create: function () {
                var instance = this.extend();
                instance.init.apply(instance, arguments);

                return instance;
              },

              /**
               * Initializes a newly created object.
               * Override this method to add some logic when your objects are created.
               *
               * @example
               *
               *     var MyType = CryptoJS.lib.Base.extend({
	             *         init: function () {
	             *             // ...
	             *         }
	             *     });
               */
              init: function () {
              },

              /**
               * Copies properties into this object.
               *
               * @param {Object} properties The properties to mix in.
               *
               * @example
               *
               *     MyType.mixIn({
	             *         field: 'value'
	             *     });
               */
              mixIn: function (properties) {
                for (var propertyName in properties) {
                  if (properties.hasOwnProperty(propertyName)) {
                    this[propertyName] = properties[propertyName];
                  }
                }

                // IE won't copy toString using the loop above
                if (properties.hasOwnProperty('toString')) {
                  this.toString = properties.toString;
                }
              },

              /**
               * Creates a copy of this object.
               *
               * @return {Object} The clone.
               *
               * @example
               *
               *     var clone = instance.clone();
               */
              clone: function () {
                return this.init.prototype.extend(this);
              }
            };
          }());

          /**
           * An array of 32-bit words.
           *
           * @property {Array} words The array of 32-bit words.
           * @property {number} sigBytes The number of significant bytes in this word array.
           */
          var WordArray = C_lib.WordArray = Base.extend({
            /**
             * Initializes a newly created word array.
             *
             * @param {Array} words (Optional) An array of 32-bit words.
             * @param {number} sigBytes (Optional) The number of significant bytes in the words.
             *
             * @example
             *
             *     var wordArray = CryptoJS.lib.WordArray.create();
             *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
             *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
             */
            init: function (words, sigBytes) {
              words = this.words = words || [];

              if (sigBytes != undefined) {
                this.sigBytes = sigBytes;
              } else {
                this.sigBytes = words.length * 4;
              }
            },

            /**
             * Converts this word array to a string.
             *
             * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
             *
             * @return {string} The stringified word array.
             *
             * @example
             *
             *     var string = wordArray + '';
             *     var string = wordArray.toString();
             *     var string = wordArray.toString(CryptoJS.enc.Utf8);
             */
            toString: function (encoder) {
              return (encoder || Hex).stringify(this);
            },

            /**
             * Concatenates a word array to this word array.
             *
             * @param {WordArray} wordArray The word array to append.
             *
             * @return {WordArray} This word array.
             *
             * @example
             *
             *     wordArray1.concat(wordArray2);
             */
            concat: function (wordArray) {
              // Shortcuts
              var thisWords = this.words;
              var thatWords = wordArray.words;
              var thisSigBytes = this.sigBytes;
              var thatSigBytes = wordArray.sigBytes;

              // Clamp excess bits
              this.clamp();

              // Concat
              if (thisSigBytes % 4) {
                // Copy one byte at a time
                for (var i = 0; i < thatSigBytes; i++) {
                  var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
                  thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);
                }
              } else {
                // Copy one word at a time
                for (var i = 0; i < thatSigBytes; i += 4) {
                  thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];
                }
              }
              this.sigBytes += thatSigBytes;

              // Chainable
              return this;
            },

            /**
             * Removes insignificant bits.
             *
             * @example
             *
             *     wordArray.clamp();
             */
            clamp: function () {
              // Shortcuts
              var words = this.words;
              var sigBytes = this.sigBytes;

              // Clamp
              words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);
              words.length = Math.ceil(sigBytes / 4);
            },

            /**
             * Creates a copy of this word array.
             *
             * @return {WordArray} The clone.
             *
             * @example
             *
             *     var clone = wordArray.clone();
             */
            clone: function () {
              var clone = Base.clone.call(this);
              clone.words = this.words.slice(0);

              return clone;
            },

            /**
             * Creates a word array filled with random bytes.
             *
             * @param {number} nBytes The number of random bytes to generate.
             *
             * @return {WordArray} The random word array.
             *
             * @static
             *
             * @example
             *
             *     var wordArray = CryptoJS.lib.WordArray.random(16);
             */
            random: function (nBytes) {
              var words = [];

              var r = (function (m_w) {
                var m_w = m_w;
                var m_z = 0x3ade68b1;
                var mask = 0xffffffff;

                return function () {
                  m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;
                  m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;
                  var result = ((m_z << 0x10) + m_w) & mask;
                  result /= 0x100000000;
                  result += 0.5;
                  return result * (Math.random() > .5 ? 1 : -1);
                }
              });

              for (var i = 0, rcache; i < nBytes; i += 4) {
                var _r = r((rcache || Math.random()) * 0x100000000);

                rcache = _r() * 0x3ade67b7;
                words.push((_r() * 0x100000000) | 0);
              }

              return new WordArray.init(words, nBytes);
            }
          });

          /**
           * Encoder namespace.
           */
          var C_enc = C.enc = {};

          /**
           * Hex encoding strategy.
           */
          var Hex = C_enc.Hex = {
            /**
             * Converts a word array to a hex string.
             *
             * @param {WordArray} wordArray The word array.
             *
             * @return {string} The hex string.
             *
             * @static
             *
             * @example
             *
             *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
             */
            stringify: function (wordArray) {
              // Shortcuts
              var words = wordArray.words;
              var sigBytes = wordArray.sigBytes;

              // Convert
              var hexChars = [];
              for (var i = 0; i < sigBytes; i++) {
                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
                hexChars.push((bite >>> 4).toString(16));
                hexChars.push((bite & 0x0f).toString(16));
              }

              return hexChars.join('');
            },

            /**
             * Converts a hex string to a word array.
             *
             * @param {string} hexStr The hex string.
             *
             * @return {WordArray} The word array.
             *
             * @static
             *
             * @example
             *
             *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
             */
            parse: function (hexStr) {
              // Shortcut
              var hexStrLength = hexStr.length;

              // Convert
              var words = [];
              for (var i = 0; i < hexStrLength; i += 2) {
                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);
              }

              return new WordArray.init(words, hexStrLength / 2);
            }
          };

          /**
           * Latin1 encoding strategy.
           */
          var Latin1 = C_enc.Latin1 = {
            /**
             * Converts a word array to a Latin1 string.
             *
             * @param {WordArray} wordArray The word array.
             *
             * @return {string} The Latin1 string.
             *
             * @static
             *
             * @example
             *
             *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
             */
            stringify: function (wordArray) {
              // Shortcuts
              var words = wordArray.words;
              var sigBytes = wordArray.sigBytes;

              // Convert
              var latin1Chars = [];
              for (var i = 0; i < sigBytes; i++) {
                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
                latin1Chars.push(String.fromCharCode(bite));
              }

              return latin1Chars.join('');
            },

            /**
             * Converts a Latin1 string to a word array.
             *
             * @param {string} latin1Str The Latin1 string.
             *
             * @return {WordArray} The word array.
             *
             * @static
             *
             * @example
             *
             *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
             */
            parse: function (latin1Str) {
              // Shortcut
              var latin1StrLength = latin1Str.length;

              // Convert
              var words = [];
              for (var i = 0; i < latin1StrLength; i++) {
                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);
              }

              return new WordArray.init(words, latin1StrLength);
            }
          };

          /**
           * UTF-8 encoding strategy.
           */
          var Utf8 = C_enc.Utf8 = {
            /**
             * Converts a word array to a UTF-8 string.
             *
             * @param {WordArray} wordArray The word array.
             *
             * @return {string} The UTF-8 string.
             *
             * @static
             *
             * @example
             *
             *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
             */
            stringify: function (wordArray) {
              try {
                return decodeURIComponent(escape(Latin1.stringify(wordArray)));
              } catch (e) {
                throw new Error('Malformed UTF-8 data');
              }
            },

            /**
             * Converts a UTF-8 string to a word array.
             *
             * @param {string} utf8Str The UTF-8 string.
             *
             * @return {WordArray} The word array.
             *
             * @static
             *
             * @example
             *
             *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
             */
            parse: function (utf8Str) {
              return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
            }
          };

          /**
           * Abstract buffered block algorithm template.
           *
           * The property blockSize must be implemented in a concrete subtype.
           *
           * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0
           */
          var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
            /**
             * Resets this block algorithm's data buffer to its initial state.
             *
             * @example
             *
             *     bufferedBlockAlgorithm.reset();
             */
            reset: function () {
              // Initial values
              this._data = new WordArray.init();
              this._nDataBytes = 0;
            },

            /**
             * Adds new data to this block algorithm's buffer.
             *
             * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
             *
             * @example
             *
             *     bufferedBlockAlgorithm._append('data');
             *     bufferedBlockAlgorithm._append(wordArray);
             */
            _append: function (data) {
              // Convert string to WordArray, else assume WordArray already
              if (typeof data == 'string') {
                data = Utf8.parse(data);
              }

              // Append
              this._data.concat(data);
              this._nDataBytes += data.sigBytes;
            },

            /**
             * Processes available data blocks.
             *
             * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
             *
             * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
             *
             * @return {WordArray} The processed data.
             *
             * @example
             *
             *     var processedData = bufferedBlockAlgorithm._process();
             *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
             */
            _process: function (doFlush) {
              // Shortcuts
              var data = this._data;
              var dataWords = data.words;
              var dataSigBytes = data.sigBytes;
              var blockSize = this.blockSize;
              var blockSizeBytes = blockSize * 4;

              // Count blocks ready
              var nBlocksReady = dataSigBytes / blockSizeBytes;
              if (doFlush) {
                // Round up to include partial blocks
                nBlocksReady = Math.ceil(nBlocksReady);
              } else {
                // Round down to include only full blocks,
                // less the number of blocks that must remain in the buffer
                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
              }

              // Count words ready
              var nWordsReady = nBlocksReady * blockSize;

              // Count bytes ready
              var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

              // Process blocks
              if (nWordsReady) {
                for (var offset = 0; offset < nWordsReady; offset += blockSize) {
                  // Perform concrete-algorithm logic
                  this._doProcessBlock(dataWords, offset);
                }

                // Remove processed words
                var processedWords = dataWords.splice(0, nWordsReady);
                data.sigBytes -= nBytesReady;
              }

              // Return processed words
              return new WordArray.init(processedWords, nBytesReady);
            },

            /**
             * Creates a copy of this object.
             *
             * @return {Object} The clone.
             *
             * @example
             *
             *     var clone = bufferedBlockAlgorithm.clone();
             */
            clone: function () {
              var clone = Base.clone.call(this);
              clone._data = this._data.clone();

              return clone;
            },

            _minBufferSize: 0
          });

          /**
           * Abstract hasher template.
           *
           * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
           */
          var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({
            /**
             * Configuration options.
             */
            cfg: Base.extend(),

            /**
             * Initializes a newly created hasher.
             *
             * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
             *
             * @example
             *
             *     var hasher = CryptoJS.algo.SHA256.create();
             */
            init: function (cfg) {
              // Apply config defaults
              this.cfg = this.cfg.extend(cfg);

              // Set initial values
              this.reset();
            },

            /**
             * Resets this hasher to its initial state.
             *
             * @example
             *
             *     hasher.reset();
             */
            reset: function () {
              // Reset data buffer
              BufferedBlockAlgorithm.reset.call(this);

              // Perform concrete-hasher logic
              this._doReset();
            },

            /**
             * Updates this hasher with a message.
             *
             * @param {WordArray|string} messageUpdate The message to append.
             *
             * @return {Hasher} This hasher.
             *
             * @example
             *
             *     hasher.update('message');
             *     hasher.update(wordArray);
             */
            update: function (messageUpdate) {
              // Append
              this._append(messageUpdate);

              // Update the hash
              this._process();

              // Chainable
              return this;
            },

            /**
             * Finalizes the hash computation.
             * Note that the finalize operation is effectively a destructive, read-once operation.
             *
             * @param {WordArray|string} messageUpdate (Optional) A final message update.
             *
             * @return {WordArray} The hash.
             *
             * @example
             *
             *     var hash = hasher.finalize();
             *     var hash = hasher.finalize('message');
             *     var hash = hasher.finalize(wordArray);
             */
            finalize: function (messageUpdate) {
              // Final message update
              if (messageUpdate) {
                this._append(messageUpdate);
              }

              // Perform concrete-hasher logic
              var hash = this._doFinalize();

              return hash;
            },

            blockSize: 512/32,

            /**
             * Creates a shortcut function to a hasher's object interface.
             *
             * @param {Hasher} hasher The hasher to create a helper for.
             *
             * @return {Function} The shortcut function.
             *
             * @static
             *
             * @example
             *
             *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
             */
            _createHelper: function (hasher) {
              return function (message, cfg) {
                return new hasher.init(cfg).finalize(message);
              };
            },

            /**
             * Creates a shortcut function to the HMAC's object interface.
             *
             * @param {Hasher} hasher The hasher to use in this HMAC helper.
             *
             * @return {Function} The shortcut function.
             *
             * @static
             *
             * @example
             *
             *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
             */
            _createHmacHelper: function (hasher) {
              return function (message, key) {
                return new C_algo.HMAC.init(hasher, key).finalize(message);
              };
            }
          });

          /**
           * Algorithm namespace.
           */
          var C_algo = C.algo = {};

          return C;
        }(Math));


        return CryptoJS;

      }));

      /***/ }),
    /* 1 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(4));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./evpkdf"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        /**
         * Cipher core components.
         */
        CryptoJS.lib.Cipher || (function (undefined) {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var Base = C_lib.Base;
          var WordArray = C_lib.WordArray;
          var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;
          var C_enc = C.enc;
          var Utf8 = C_enc.Utf8;
          var Base64 = C_enc.Base64;
          var C_algo = C.algo;
          var EvpKDF = C_algo.EvpKDF;

          /**
           * Abstract base cipher template.
           *
           * @property {number} keySize This cipher's key size. Default: 4 (128 bits)
           * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)
           * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.
           * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.
           */
          var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({
            /**
             * Configuration options.
             *
             * @property {WordArray} iv The IV to use for this operation.
             */
            cfg: Base.extend(),

            /**
             * Creates this cipher in encryption mode.
             *
             * @param {WordArray} key The key.
             * @param {Object} cfg (Optional) The configuration options to use for this operation.
             *
             * @return {Cipher} A cipher instance.
             *
             * @static
             *
             * @example
             *
             *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
             */
            createEncryptor: function (key, cfg) {
              return this.create(this._ENC_XFORM_MODE, key, cfg);
            },

            /**
             * Creates this cipher in decryption mode.
             *
             * @param {WordArray} key The key.
             * @param {Object} cfg (Optional) The configuration options to use for this operation.
             *
             * @return {Cipher} A cipher instance.
             *
             * @static
             *
             * @example
             *
             *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
             */
            createDecryptor: function (key, cfg) {
              return this.create(this._DEC_XFORM_MODE, key, cfg);
            },

            /**
             * Initializes a newly created cipher.
             *
             * @param {number} xformMode Either the encryption or decryption transormation mode constant.
             * @param {WordArray} key The key.
             * @param {Object} cfg (Optional) The configuration options to use for this operation.
             *
             * @example
             *
             *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
             */
            init: function (xformMode, key, cfg) {
              // Apply config defaults
              this.cfg = this.cfg.extend(cfg);

              // Store transform mode and key
              this._xformMode = xformMode;
              this._key = key;

              // Set initial values
              this.reset();
            },

            /**
             * Resets this cipher to its initial state.
             *
             * @example
             *
             *     cipher.reset();
             */
            reset: function () {
              // Reset data buffer
              BufferedBlockAlgorithm.reset.call(this);

              // Perform concrete-cipher logic
              this._doReset();
            },

            /**
             * Adds data to be encrypted or decrypted.
             *
             * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
             *
             * @return {WordArray} The data after processing.
             *
             * @example
             *
             *     var encrypted = cipher.process('data');
             *     var encrypted = cipher.process(wordArray);
             */
            process: function (dataUpdate) {
              // Append
              this._append(dataUpdate);

              // Process available blocks
              return this._process();
            },

            /**
             * Finalizes the encryption or decryption process.
             * Note that the finalize operation is effectively a destructive, read-once operation.
             *
             * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
             *
             * @return {WordArray} The data after final processing.
             *
             * @example
             *
             *     var encrypted = cipher.finalize();
             *     var encrypted = cipher.finalize('data');
             *     var encrypted = cipher.finalize(wordArray);
             */
            finalize: function (dataUpdate) {
              // Final data update
              if (dataUpdate) {
                this._append(dataUpdate);
              }

              // Perform concrete-cipher logic
              var finalProcessedData = this._doFinalize();

              return finalProcessedData;
            },

            keySize: 128/32,

            ivSize: 128/32,

            _ENC_XFORM_MODE: 1,

            _DEC_XFORM_MODE: 2,

            /**
             * Creates shortcut functions to a cipher's object interface.
             *
             * @param {Cipher} cipher The cipher to create a helper for.
             *
             * @return {Object} An object with encrypt and decrypt shortcut functions.
             *
             * @static
             *
             * @example
             *
             *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
             */
            _createHelper: (function () {
              function selectCipherStrategy(key) {
                if (typeof key == 'string') {
                  return PasswordBasedCipher;
                } else {
                  return SerializableCipher;
                }
              }

              return function (cipher) {
                return {
                  encrypt: function (message, key, cfg) {
                    return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);
                  },

                  decrypt: function (ciphertext, key, cfg) {
                    return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);
                  }
                };
              };
            }())
          });

          /**
           * Abstract base stream cipher template.
           *
           * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)
           */
          var StreamCipher = C_lib.StreamCipher = Cipher.extend({
            _doFinalize: function () {
              // Process partial blocks
              var finalProcessedBlocks = this._process(!!'flush');

              return finalProcessedBlocks;
            },

            blockSize: 1
          });

          /**
           * Mode namespace.
           */
          var C_mode = C.mode = {};

          /**
           * Abstract base block cipher mode template.
           */
          var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({
            /**
             * Creates this mode for encryption.
             *
             * @param {Cipher} cipher A block cipher instance.
             * @param {Array} iv The IV words.
             *
             * @static
             *
             * @example
             *
             *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
             */
            createEncryptor: function (cipher, iv) {
              return this.Encryptor.create(cipher, iv);
            },

            /**
             * Creates this mode for decryption.
             *
             * @param {Cipher} cipher A block cipher instance.
             * @param {Array} iv The IV words.
             *
             * @static
             *
             * @example
             *
             *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
             */
            createDecryptor: function (cipher, iv) {
              return this.Decryptor.create(cipher, iv);
            },

            /**
             * Initializes a newly created mode.
             *
             * @param {Cipher} cipher A block cipher instance.
             * @param {Array} iv The IV words.
             *
             * @example
             *
             *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
             */
            init: function (cipher, iv) {
              this._cipher = cipher;
              this._iv = iv;
            }
          });

          /**
           * Cipher Block Chaining mode.
           */
          var CBC = C_mode.CBC = (function () {
            /**
             * Abstract base CBC mode.
             */
            var CBC = BlockCipherMode.extend();

            /**
             * CBC encryptor.
             */
            CBC.Encryptor = CBC.extend({
              /**
               * Processes the data block at offset.
               *
               * @param {Array} words The data words to operate on.
               * @param {number} offset The offset where the block starts.
               *
               * @example
               *
               *     mode.processBlock(data.words, offset);
               */
              processBlock: function (words, offset) {
                // Shortcuts
                var cipher = this._cipher;
                var blockSize = cipher.blockSize;

                // XOR and encrypt
                xorBlock.call(this, words, offset, blockSize);
                cipher.encryptBlock(words, offset);

                // Remember this block to use with next block
                this._prevBlock = words.slice(offset, offset + blockSize);
              }
            });

            /**
             * CBC decryptor.
             */
            CBC.Decryptor = CBC.extend({
              /**
               * Processes the data block at offset.
               *
               * @param {Array} words The data words to operate on.
               * @param {number} offset The offset where the block starts.
               *
               * @example
               *
               *     mode.processBlock(data.words, offset);
               */
              processBlock: function (words, offset) {
                // Shortcuts
                var cipher = this._cipher;
                var blockSize = cipher.blockSize;

                // Remember this block to use with next block
                var thisBlock = words.slice(offset, offset + blockSize);

                // Decrypt and XOR
                cipher.decryptBlock(words, offset);
                xorBlock.call(this, words, offset, blockSize);

                // This block becomes the previous block
                this._prevBlock = thisBlock;
              }
            });

            function xorBlock(words, offset, blockSize) {
              // Shortcut
              var iv = this._iv;

              // Choose mixing block
              if (iv) {
                var block = iv;

                // Remove IV for subsequent blocks
                this._iv = undefined;
              } else {
                var block = this._prevBlock;
              }

              // XOR blocks
              for (var i = 0; i < blockSize; i++) {
                words[offset + i] ^= block[i];
              }
            }

            return CBC;
          }());

          /**
           * Padding namespace.
           */
          var C_pad = C.pad = {};

          /**
           * PKCS #5/7 padding strategy.
           */
          var Pkcs7 = C_pad.Pkcs7 = {
            /**
             * Pads data using the algorithm defined in PKCS #5/7.
             *
             * @param {WordArray} data The data to pad.
             * @param {number} blockSize The multiple that the data should be padded to.
             *
             * @static
             *
             * @example
             *
             *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
             */
            pad: function (data, blockSize) {
              // Shortcut
              var blockSizeBytes = blockSize * 4;

              // Count padding bytes
              var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

              // Create padding word
              var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;

              // Create padding
              var paddingWords = [];
              for (var i = 0; i < nPaddingBytes; i += 4) {
                paddingWords.push(paddingWord);
              }
              var padding = WordArray.create(paddingWords, nPaddingBytes);

              // Add padding
              data.concat(padding);
            },

            /**
             * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
             *
             * @param {WordArray} data The data to unpad.
             *
             * @static
             *
             * @example
             *
             *     CryptoJS.pad.Pkcs7.unpad(wordArray);
             */
            unpad: function (data) {
              // Get number of padding bytes from last byte
              var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

              // Remove padding
              data.sigBytes -= nPaddingBytes;
            }
          };

          /**
           * Abstract base block cipher template.
           *
           * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)
           */
          var BlockCipher = C_lib.BlockCipher = Cipher.extend({
            /**
             * Configuration options.
             *
             * @property {Mode} mode The block mode to use. Default: CBC
             * @property {Padding} padding The padding strategy to use. Default: Pkcs7
             */
            cfg: Cipher.cfg.extend({
              mode: CBC,
              padding: Pkcs7
            }),

            reset: function () {
              // Reset cipher
              Cipher.reset.call(this);

              // Shortcuts
              var cfg = this.cfg;
              var iv = cfg.iv;
              var mode = cfg.mode;

              // Reset block mode
              if (this._xformMode == this._ENC_XFORM_MODE) {
                var modeCreator = mode.createEncryptor;
              } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {
                var modeCreator = mode.createDecryptor;
                // Keep at least one block in the buffer for unpadding
                this._minBufferSize = 1;
              }

              if (this._mode && this._mode.__creator == modeCreator) {
                this._mode.init(this, iv && iv.words);
              } else {
                this._mode = modeCreator.call(mode, this, iv && iv.words);
                this._mode.__creator = modeCreator;
              }
            },

            _doProcessBlock: function (words, offset) {
              this._mode.processBlock(words, offset);
            },

            _doFinalize: function () {
              // Shortcut
              var padding = this.cfg.padding;

              // Finalize
              if (this._xformMode == this._ENC_XFORM_MODE) {
                // Pad data
                padding.pad(this._data, this.blockSize);

                // Process final blocks
                var finalProcessedBlocks = this._process(!!'flush');
              } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {
                // Process final blocks
                var finalProcessedBlocks = this._process(!!'flush');

                // Unpad data
                padding.unpad(finalProcessedBlocks);
              }

              return finalProcessedBlocks;
            },

            blockSize: 128/32
          });

          /**
           * A collection of cipher parameters.
           *
           * @property {WordArray} ciphertext The raw ciphertext.
           * @property {WordArray} key The key to this ciphertext.
           * @property {WordArray} iv The IV used in the ciphering operation.
           * @property {WordArray} salt The salt used with a key derivation function.
           * @property {Cipher} algorithm The cipher algorithm.
           * @property {Mode} mode The block mode used in the ciphering operation.
           * @property {Padding} padding The padding scheme used in the ciphering operation.
           * @property {number} blockSize The block size of the cipher.
           * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.
           */
          var CipherParams = C_lib.CipherParams = Base.extend({
            /**
             * Initializes a newly created cipher params object.
             *
             * @param {Object} cipherParams An object with any of the possible cipher parameters.
             *
             * @example
             *
             *     var cipherParams = CryptoJS.lib.CipherParams.create({
	         *         ciphertext: ciphertextWordArray,
	         *         key: keyWordArray,
	         *         iv: ivWordArray,
	         *         salt: saltWordArray,
	         *         algorithm: CryptoJS.algo.AES,
	         *         mode: CryptoJS.mode.CBC,
	         *         padding: CryptoJS.pad.PKCS7,
	         *         blockSize: 4,
	         *         formatter: CryptoJS.format.OpenSSL
	         *     });
             */
            init: function (cipherParams) {
              this.mixIn(cipherParams);
            },

            /**
             * Converts this cipher params object to a string.
             *
             * @param {Format} formatter (Optional) The formatting strategy to use.
             *
             * @return {string} The stringified cipher params.
             *
             * @throws Error If neither the formatter nor the default formatter is set.
             *
             * @example
             *
             *     var string = cipherParams + '';
             *     var string = cipherParams.toString();
             *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
             */
            toString: function (formatter) {
              return (formatter || this.formatter).stringify(this);
            }
          });

          /**
           * Format namespace.
           */
          var C_format = C.format = {};

          /**
           * OpenSSL formatting strategy.
           */
          var OpenSSLFormatter = C_format.OpenSSL = {
            /**
             * Converts a cipher params object to an OpenSSL-compatible string.
             *
             * @param {CipherParams} cipherParams The cipher params object.
             *
             * @return {string} The OpenSSL-compatible string.
             *
             * @static
             *
             * @example
             *
             *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
             */
            stringify: function (cipherParams) {
              // Shortcuts
              var ciphertext = cipherParams.ciphertext;
              var salt = cipherParams.salt;

              // Format
              if (salt) {
                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);
              } else {
                var wordArray = ciphertext;
              }

              return wordArray.toString(Base64);
            },

            /**
             * Converts an OpenSSL-compatible string to a cipher params object.
             *
             * @param {string} openSSLStr The OpenSSL-compatible string.
             *
             * @return {CipherParams} The cipher params object.
             *
             * @static
             *
             * @example
             *
             *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
             */
            parse: function (openSSLStr) {
              // Parse base64
              var ciphertext = Base64.parse(openSSLStr);

              // Shortcut
              var ciphertextWords = ciphertext.words;

              // Test for salt
              if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {
                // Extract salt
                var salt = WordArray.create(ciphertextWords.slice(2, 4));

                // Remove salt from ciphertext
                ciphertextWords.splice(0, 4);
                ciphertext.sigBytes -= 16;
              }

              return CipherParams.create({ ciphertext: ciphertext, salt: salt });
            }
          };

          /**
           * A cipher wrapper that returns ciphertext as a serializable cipher params object.
           */
          var SerializableCipher = C_lib.SerializableCipher = Base.extend({
            /**
             * Configuration options.
             *
             * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
             */
            cfg: Base.extend({
              format: OpenSSLFormatter
            }),

            /**
             * Encrypts a message.
             *
             * @param {Cipher} cipher The cipher algorithm to use.
             * @param {WordArray|string} message The message to encrypt.
             * @param {WordArray} key The key.
             * @param {Object} cfg (Optional) The configuration options to use for this operation.
             *
             * @return {CipherParams} A cipher params object.
             *
             * @static
             *
             * @example
             *
             *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
             *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
             *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
             */
            encrypt: function (cipher, message, key, cfg) {
              // Apply config defaults
              cfg = this.cfg.extend(cfg);

              // Encrypt
              var encryptor = cipher.createEncryptor(key, cfg);
              var ciphertext = encryptor.finalize(message);

              // Shortcut
              var cipherCfg = encryptor.cfg;

              // Create and return serializable cipher params
              return CipherParams.create({
                ciphertext: ciphertext,
                key: key,
                iv: cipherCfg.iv,
                algorithm: cipher,
                mode: cipherCfg.mode,
                padding: cipherCfg.padding,
                blockSize: cipher.blockSize,
                formatter: cfg.format
              });
            },

            /**
             * Decrypts serialized ciphertext.
             *
             * @param {Cipher} cipher The cipher algorithm to use.
             * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
             * @param {WordArray} key The key.
             * @param {Object} cfg (Optional) The configuration options to use for this operation.
             *
             * @return {WordArray} The plaintext.
             *
             * @static
             *
             * @example
             *
             *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
             *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
             */
            decrypt: function (cipher, ciphertext, key, cfg) {
              // Apply config defaults
              cfg = this.cfg.extend(cfg);

              // Convert string to CipherParams
              ciphertext = this._parse(ciphertext, cfg.format);

              // Decrypt
              var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);

              return plaintext;
            },

            /**
             * Converts serialized ciphertext to CipherParams,
             * else assumed CipherParams already and returns ciphertext unchanged.
             *
             * @param {CipherParams|string} ciphertext The ciphertext.
             * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
             *
             * @return {CipherParams} The unserialized ciphertext.
             *
             * @static
             *
             * @example
             *
             *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
             */
            _parse: function (ciphertext, format) {
              if (typeof ciphertext == 'string') {
                return format.parse(ciphertext, this);
              } else {
                return ciphertext;
              }
            }
          });

          /**
           * Key derivation function namespace.
           */
          var C_kdf = C.kdf = {};

          /**
           * OpenSSL key derivation function.
           */
          var OpenSSLKdf = C_kdf.OpenSSL = {
            /**
             * Derives a key and IV from a password.
             *
             * @param {string} password The password to derive from.
             * @param {number} keySize The size in words of the key to generate.
             * @param {number} ivSize The size in words of the IV to generate.
             * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
             *
             * @return {CipherParams} A cipher params object with the key, IV, and salt.
             *
             * @static
             *
             * @example
             *
             *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
             *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
             */
            execute: function (password, keySize, ivSize, salt) {
              // Generate random salt
              if (!salt) {
                salt = WordArray.random(64/8);
              }

              // Derive key and IV
              var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);

              // Separate key and IV
              var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);
              key.sigBytes = keySize * 4;

              // Return params
              return CipherParams.create({ key: key, iv: iv, salt: salt });
            }
          };

          /**
           * A serializable cipher wrapper that derives the key from a password,
           * and returns ciphertext as a serializable cipher params object.
           */
          var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({
            /**
             * Configuration options.
             *
             * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
             */
            cfg: SerializableCipher.cfg.extend({
              kdf: OpenSSLKdf
            }),

            /**
             * Encrypts a message using a password.
             *
             * @param {Cipher} cipher The cipher algorithm to use.
             * @param {WordArray|string} message The message to encrypt.
             * @param {string} password The password.
             * @param {Object} cfg (Optional) The configuration options to use for this operation.
             *
             * @return {CipherParams} A cipher params object.
             *
             * @static
             *
             * @example
             *
             *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
             *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
             */
            encrypt: function (cipher, message, password, cfg) {
              // Apply config defaults
              cfg = this.cfg.extend(cfg);

              // Derive key and other params
              var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);

              // Add IV to config
              cfg.iv = derivedParams.iv;

              // Encrypt
              var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);

              // Mix in derived params
              ciphertext.mixIn(derivedParams);

              return ciphertext;
            },

            /**
             * Decrypts serialized ciphertext using a password.
             *
             * @param {Cipher} cipher The cipher algorithm to use.
             * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
             * @param {string} password The password.
             * @param {Object} cfg (Optional) The configuration options to use for this operation.
             *
             * @return {WordArray} The plaintext.
             *
             * @static
             *
             * @example
             *
             *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
             *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
             */
            decrypt: function (cipher, ciphertext, password, cfg) {
              // Apply config defaults
              cfg = this.cfg.extend(cfg);

              // Convert string to CipherParams
              ciphertext = this._parse(ciphertext, cfg.format);

              // Derive key and other params
              var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);

              // Add IV to config
              cfg.iv = derivedParams.iv;

              // Decrypt
              var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);

              return plaintext;
            }
          });
        }());


      }));

      /***/ }),
    /* 2 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "user", function() { return user; });
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "processService", function() { return processService; });
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "taskService", function() { return taskService; });
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formService", function() { return formService; });
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flowService", function() { return flowService; });
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "snapClinicalApiService", function() { return snapClinicalApiService; });
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "oauthService", function() { return oauthService; });
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Client__ = __webpack_require__(3);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__helpers_User__ = __webpack_require__(48);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_ProcessService__ = __webpack_require__(50);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_TaskService__ = __webpack_require__(53);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_FormService__ = __webpack_require__(55);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_FlowService__ = __webpack_require__(56);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_SnapClinicalApiService__ = __webpack_require__(58);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_OauthService__ = __webpack_require__(19);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utility_Version__ = __webpack_require__(60);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__utility_CookieUtility__ = __webpack_require__(15);
      /* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "client", function() { return __WEBPACK_IMPORTED_MODULE_0__Client__["a"]; });
      /* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "User", function() { return __WEBPACK_IMPORTED_MODULE_1__helpers_User__["a"]; });
      /* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ProcessService", function() { return __WEBPACK_IMPORTED_MODULE_2__services_ProcessService__["a"]; });
      /* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "TaskService", function() { return __WEBPACK_IMPORTED_MODULE_3__services_TaskService__["a"]; });
      /* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "FormService", function() { return __WEBPACK_IMPORTED_MODULE_4__services_FormService__["a"]; });
      /* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "FlowService", function() { return __WEBPACK_IMPORTED_MODULE_5__services_FlowService__["a"]; });
      /* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "SnapClinicalApiService", function() { return __WEBPACK_IMPORTED_MODULE_6__services_SnapClinicalApiService__["a"]; });
      /* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "OauthService", function() { return __WEBPACK_IMPORTED_MODULE_7__services_OauthService__["a"]; });
      /* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Version", function() { return __WEBPACK_IMPORTED_MODULE_8__utility_Version__["a"]; });
      /* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "CookieUtility", function() { return __WEBPACK_IMPORTED_MODULE_9__utility_CookieUtility__["a"]; });











      /** @type {User} */
      const user = new __WEBPACK_IMPORTED_MODULE_1__helpers_User__["a" /* default */]();

      /** @type {ProcessService} */
      const processService = new __WEBPACK_IMPORTED_MODULE_2__services_ProcessService__["a" /* default */]();

      /** @type {TaskService} */
      const taskService = new __WEBPACK_IMPORTED_MODULE_3__services_TaskService__["a" /* default */]();

      /** @type {FormService} */
      const formService = new __WEBPACK_IMPORTED_MODULE_4__services_FormService__["a" /* default */]();

      /** @type {FlowService} */
      const flowService = new __WEBPACK_IMPORTED_MODULE_5__services_FlowService__["a" /* default */]();

      /** @type {SnapClinicalApiService} */
      const snapClinicalApiService = new __WEBPACK_IMPORTED_MODULE_6__services_SnapClinicalApiService__["a" /* default */]();

      /** @type {OauthService} */
      const oauthService = new __WEBPACK_IMPORTED_MODULE_7__services_OauthService__["a" /* default */]();



      /***/ }),
    /* 3 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return client; });
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src__ = __webpack_require__(2);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utility_RefreshToken_lib__ = __webpack_require__(13);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utility_CookieUtility__ = __webpack_require__(15);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utility_OfflineUtility__ = __webpack_require__(12);




// import {authorize, isResponseUnauthorized, configure} from '@shoutem/fetch-token-intercept';

// here you provide tokens obtained from your Authorization Server
// authorize(refreshToken, accessToken);

      /**
       * Client is the base class that is used for setting system wide information about
       * connection, device, and general SDK settings.
       */
      class Client {

        /**
         * Constructor
         *
         */
        constructor() {
          this._config = {
            apiBaseUrl: undefined,
            basicCredentials: undefined,
            tokenObj: undefined,
            personalId: undefined,
            frontEndKey: undefined,
            oauthId: "snapClinicalClient",
            oauthPw: "secret",
            forceOffline: false,
            enableOauth: false,
            contextPath: {
              oauth: "snap-oauth", // ':8081/snap-oauth'
              snap: "snap-api",// ':9090/snap-api',
              flowable: "flowable-task"//':9999/flow-api'
            },
            ports: {
              oauth: "", //'8443',// '8081',
              snap: "", //'8443',// '9090',
              flowable: "" // '8443', //'9999'
            }
          };
          __WEBPACK_IMPORTED_MODULE_3__utility_OfflineUtility__["a" /* default */].init();
          this.encryptionKey = "";
        }

        /**
         * Gets the apiBaseUrl
         *
         * @type {string} - Current apiBaseUrl - the base url for api client requests
         */
        get apiBaseUrl() {
          return this._config.apiBaseUrl;
        }

        /**
         * Sets the apiBaseUrl
         *
         * @param {string} url
         */
        set apiBaseUrl(url) {
          let data = url;
          if (typeof data !== "string") {
            throw new Error("Error : apiBaseUrl must be a string");
          }
          if (data[data.length - 1] === "/") {
            data = data.slice(0, -1);
          }
          this._config.apiBaseUrl = data;
        }

        /**
         * Gets the basicCredentials - the credential string for Basic Authentication
         *
         * @type {string} - Current apiBaseUrl
         */
        get basicCredentials() {
          return this._config.basicCredentials;
        }

        /**
         * Sets the basicCredentials
         *
         * @param {string} credentials
         */
        set basicCredentials(credentials) {
          this._config.basicCredentials = credentials;
        }

        /**
         * Gets the configuration information
         *
         * @type {Object} - the information in a key value object
         * @property {String} config.apiBaseUrl - url
         * @property {String} config.basicCredentials - the credential string for Basic Authentication
         */
        get config() {
          return this._config;
        }

        /**
         * Sets the configuration
         *
         * @param {Object} data - the information in a key value object
         * @property {String} config.apiBaseUrl - url
         * @property {String} config.basicAuthentication - the credential string for Basic Authentication
         */
        set config(data) {
          Object.assign(this._config, data);
        }

        /**
         * Gets the personalId
         *
         * @type {Object} - Current personalId
         */
        get personalId() {
          return this._config.personalId;
        }

        /**
         * Sets the personalId
         *
         * @param {Object} personalId
         */
        set personalId(personalId) {
          this._config.personalId = personalId;
        }

        /**
         * Gets the frontEndKey
         *
         * @type {Object} - Current frontEndKey
         */
        get frontEndKey() {
          return this._config.frontEndKey;
        }

        /**
         * Sets the frontEndKey
         *
         * @param {Object} frontEndKey
         */
        set frontEndKey(frontEndKey) {
          this._config.frontEndKey = frontEndKey;
        }

        /**
         * Gets oauth
         */
        get enableOauth() {
          return this._config.enableOauth;
        }

        /**
         * Enable/Disable oauth
         * @param {Boolean}value
         */
        set enableOauth(value) {
          this._config.enableOauth = value;
        }

        /**
         * Gets the token object
         * containing access_token, token_type, refresh_token, expires_in, scope
         * @type {Object} - current tokenObj
         */
        get tokenObj(){
          return this._config.tokenObj;
        }

        /**
         * Sets the tokenObj
         *
         * @param {Object} tokenObj
         */
        set tokenObj(tokenObj){
          this._config.tokenObj = tokenObj;
        }

        /**
         * Gets the oauth id string
         *
         * @type {String} - current oauthId
         */
        get oauthId() {
          return this._config.oauthId;
        }

        /**
         * Sets the oauth id
         *
         * @param {String} oauthId
         */
        set oauthId(value) {
          this._config.oauthId = value;
        }

        /**
         * Gets the oauth password string
         *
         * @type {String} - current oauthPw
         */
        get oauthPw() {
          return this._config.oauthPw;
        }

        /**
         * Sets the oauth password
         *
         * @param {String} value
         */
        set oauthPw(value) {
          this._config.oauthPw = value;
        }

        /**
         * Gets the offline status
         *
         * @type {boolean} - current offline value
         */
        get forceOffline() {
          return this._config.forceOffline;
        }

        /**
         * Sets offline status
         *
         * @param {boolean} value
         */
        set forceOffline(value) {
          this._config.forceOffline = value;
        }


        /**
         * Gets the contextPath object
         * containing oauth, snap, flowable context paths string
         * @type {Object} - current contextPath
         */
        get contextPath(){
          return this._config.contextPath;
        }

        /**
         * Sets the contextPath object containing oauth, snap and flowable context paths
         *
         * @param {Object} contextPath
         */
        set contextPath(contextPath){
          this._config.contextPath = contextPath;
        }

        /**
         * Gets the ports object
         * containing oauth, snap, flowable ports
         * @type {Object} - current ports
         */
        get ports(){
          return this._config.ports;
        }

        /**
         * Sets the ports object containing oauth, snap and flowable ports
         *
         * @param {Object} ports
         */
        set ports(ports){
          this._config.ports = ports;
        }

        /**
         * Checks whether the app can go online.
         * Returns "false" in case there is no network or the user forced offline mode.
         * @return {boolean}
         */
        isOnlineEnabled () {
          // return (!this.forceOffline && navigator.onLine);
          return (!this.forceOffline && window._wifiAvailable);
        }

        /**
         * Send HTTP request to API
         *
         * @param {!String} url       - Path to the endpoint starting with '/'
         * @param {?String} [method]  - HTTP Method (DELETE|GET|POST|PUT)
         * @param {?Object} [params]  - Key/Value list of url parameters
         * @param {?Object} [body]    - a Blob, BufferSource, FormData, URLSearchParams, or USVString object
         *                              In case of a json body, this can be created with something like:
         *                              new Blob(body, {type : 'application/json'});
         * @param {?Object} [headers] - Key/Value list of headers. If not present it default to `{
     *                                'Accept' : 'application/json',
     *                              }`
         * @return {Promise}          - Resolves on HTTP 200. Rejects on all else.
         */
        async fetch(url, method = "GET", params = {}, body = undefined, headers = undefined) {
          // Determine if method is valid
          if ((["POST", "PUT", "PATCH"].indexOf(method.toUpperCase()) !== -1) && !body) {
            throw new Error("fetch error: invalid PUT/POST/PATCH request, no data given");
          }

          const self = this;

          if (!this.isOnlineEnabled()) {
            return __WEBPACK_IMPORTED_MODULE_3__utility_OfflineUtility__["a" /* default */].fetch(url, method, params, body, headers);
          }

          // Initialize parameters
          let fetchParams = new URLSearchParams();
          for (let key in params) {
            fetchParams.append(key, params[key]);
          }
          const fetchParamsString = fetchParams.toString();

          // Initialize headers
          let fetchHeaders = headers;
          if (!fetchHeaders) {
            fetchHeaders = {
              "Accept" : "application/json",
              "Content-Type" : "application/json"
            };
          }

          if (this._config.enableOauth) {
            // handle token based authentication
            // store the token in a cookie in case of web page refresh
            window.onbeforeunload = () => {
              // set time expiration to 2 minutes
              let expireDate = new Date();
              expireDate.setTime(expireDate.getTime() + 2 * 60 * 1000);
              __WEBPACK_IMPORTED_MODULE_2__utility_CookieUtility__["a" /* default */].saveTokenCookie(self._config.tokenObj, {expireDate});
            };
            if (!this._config.tokenObj) {
              // retrieve the existing token from the cookies
              const token = this._config.tokenObj = __WEBPACK_IMPORTED_MODULE_2__utility_CookieUtility__["a" /* default */].getCookieData() ? JSON.parse(__WEBPACK_IMPORTED_MODULE_2__utility_CookieUtility__["a" /* default */].getCookieData()) : null;
              // remove cookie
              if (!token) {
                // get a valid token if it doesn't exist
                if (__WEBPACK_IMPORTED_MODULE_0__src__["user"]._accountName && __WEBPACK_IMPORTED_MODULE_0__src__["user"]._password) {
                  await this.getToken(__WEBPACK_IMPORTED_MODULE_0__src__["user"]._accountName, __WEBPACK_IMPORTED_MODULE_0__src__["user"]._password);
                }
              } else {
                __WEBPACK_IMPORTED_MODULE_2__utility_CookieUtility__["a" /* default */].saveTokenCookie(token);
              }
            }
          } else {
            // Add the Basic Authentication header
            if (this._config.basicCredentials)
              fetchHeaders["Authorization"] = "Basic "+ this._config.basicCredentials;
          }

          let requestData = {
            method: method,
            headers: new Headers(fetchHeaders),
            mode: "cors",
            cache: "default",
            body: body
          };

          // use this as temporary fix to avoid changing all the libraries to test oauth
          if (this._config.enableOauth && url.indexOf("/flowable-task/") > -1)
            url = url.replace("/flowable-task/", `/${this._config.contextPath.flowable}/`);

          // append ports info to the url (necessary for local tests)
          let ports = "";
          if (url.indexOf(`/${this._config.contextPath.oauth}/`) > -1 && this._config.ports.oauth)
            ports = `${this._config.ports.oauth}`;
          else if (url.indexOf(`/${this._config.contextPath.flowable}/`) > -1 && this._config.ports.flowable)
            ports = `${this._config.ports.flowable}`;
          else if (url.indexOf(`/${this._config.contextPath.snap}/`) > -1 && this._config.ports.snap)
            ports = `${this._config.ports.snap}`;

          const fetchUrl = this._config.apiBaseUrl + ports + url +
            (fetchParamsString.length > 0 ? "?" + fetchParamsString : "");

          if (this._config.enableOauth){
            // Using this custom fetch function the API will be called with Bearer token in Authorization header and if it
            // returns 401 with message 'Token has expired', request to /api/refresh-token
            // will be issued and then the request to /api/data will be automatically
            // repeated with the new token
            const response = await Object(__WEBPACK_IMPORTED_MODULE_1__utility_RefreshToken_lib__["a" /* customFetch */])(fetchUrl, requestData);
            await __WEBPACK_IMPORTED_MODULE_3__utility_OfflineUtility__["a" /* default */].storeToCache(method, url, response);
            return response;
          } else {
            let fetchRequest = new Request(fetchUrl, requestData);
            // fetch for Basic Authentication
            return fetch(fetchRequest);
          }
        }

        /**
         * get a valid token
         * @param {*} username
         * @param {*} password
         */
        async getToken(username, password){
          // refresh the token
          try {
            await __WEBPACK_IMPORTED_MODULE_0__src__["oauthService"].getToken(username, password);
          } catch (e) {
            throw(e);
          }
        }

        /**
         * Send all pending requests to server
         */
        async syncToRemote() {
          __WEBPACK_IMPORTED_MODULE_3__utility_OfflineUtility__["a" /* default */].syncToRemote();
        }

        /**
         * Return the current sync status
         */
        getCurrentSyncStatus() {
          return __WEBPACK_IMPORTED_MODULE_3__utility_OfflineUtility__["a" /* default */].syncStatus;
        }
      }

      const client = new Client();

// export default Client;



      /***/ }),
    /* 4 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(10), __webpack_require__(11));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./sha1", "./hmac"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var Base = C_lib.Base;
          var WordArray = C_lib.WordArray;
          var C_algo = C.algo;
          var MD5 = C_algo.MD5;

          /**
           * This key derivation function is meant to conform with EVP_BytesToKey.
           * www.openssl.org/docs/crypto/EVP_BytesToKey.html
           */
          var EvpKDF = C_algo.EvpKDF = Base.extend({
            /**
             * Configuration options.
             *
             * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
             * @property {Hasher} hasher The hash algorithm to use. Default: MD5
             * @property {number} iterations The number of iterations to perform. Default: 1
             */
            cfg: Base.extend({
              keySize: 128/32,
              hasher: MD5,
              iterations: 1
            }),

            /**
             * Initializes a newly created key derivation function.
             *
             * @param {Object} cfg (Optional) The configuration options to use for the derivation.
             *
             * @example
             *
             *     var kdf = CryptoJS.algo.EvpKDF.create();
             *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
             *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
             */
            init: function (cfg) {
              this.cfg = this.cfg.extend(cfg);
            },

            /**
             * Derives a key from a password.
             *
             * @param {WordArray|string} password The password.
             * @param {WordArray|string} salt A salt.
             *
             * @return {WordArray} The derived key.
             *
             * @example
             *
             *     var key = kdf.compute(password, salt);
             */
            compute: function (password, salt) {
              // Shortcut
              var cfg = this.cfg;

              // Init hasher
              var hasher = cfg.hasher.create();

              // Initial values
              var derivedKey = WordArray.create();

              // Shortcuts
              var derivedKeyWords = derivedKey.words;
              var keySize = cfg.keySize;
              var iterations = cfg.iterations;

              // Generate key
              while (derivedKeyWords.length < keySize) {
                if (block) {
                  hasher.update(block);
                }
                var block = hasher.update(password).finalize(salt);
                hasher.reset();

                // Iterations
                for (var i = 1; i < iterations; i++) {
                  block = hasher.finalize(block);
                  hasher.reset();
                }

                derivedKey.concat(block);
              }
              derivedKey.sigBytes = keySize * 4;

              return derivedKey;
            }
          });

          /**
           * Derives a key from a password.
           *
           * @param {WordArray|string} password The password.
           * @param {WordArray|string} salt A salt.
           * @param {Object} cfg (Optional) The configuration options to use for this computation.
           *
           * @return {WordArray} The derived key.
           *
           * @static
           *
           * @example
           *
           *     var key = CryptoJS.EvpKDF(password, salt);
           *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });
           *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });
           */
          C.EvpKDF = function (password, salt, cfg) {
            return EvpKDF.create(cfg).compute(password, salt);
          };
        }());


        return CryptoJS.EvpKDF;

      }));

      /***/ }),
    /* 5 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var WordArray = C_lib.WordArray;
          var C_enc = C.enc;

          /**
           * Base64 encoding strategy.
           */
          var Base64 = C_enc.Base64 = {
            /**
             * Converts a word array to a Base64 string.
             *
             * @param {WordArray} wordArray The word array.
             *
             * @return {string} The Base64 string.
             *
             * @static
             *
             * @example
             *
             *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
             */
            stringify: function (wordArray) {
              // Shortcuts
              var words = wordArray.words;
              var sigBytes = wordArray.sigBytes;
              var map = this._map;

              // Clamp excess bits
              wordArray.clamp();

              // Convert
              var base64Chars = [];
              for (var i = 0; i < sigBytes; i += 3) {
                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;
                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;
                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;

                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;

                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {
                  base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));
                }
              }

              // Add padding
              var paddingChar = map.charAt(64);
              if (paddingChar) {
                while (base64Chars.length % 4) {
                  base64Chars.push(paddingChar);
                }
              }

              return base64Chars.join('');
            },

            /**
             * Converts a Base64 string to a word array.
             *
             * @param {string} base64Str The Base64 string.
             *
             * @return {WordArray} The word array.
             *
             * @static
             *
             * @example
             *
             *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
             */
            parse: function (base64Str) {
              // Shortcuts
              var base64StrLength = base64Str.length;
              var map = this._map;
              var reverseMap = this._reverseMap;

              if (!reverseMap) {
                reverseMap = this._reverseMap = [];
                for (var j = 0; j < map.length; j++) {
                  reverseMap[map.charCodeAt(j)] = j;
                }
              }

              // Ignore padding
              var paddingChar = map.charAt(64);
              if (paddingChar) {
                var paddingIndex = base64Str.indexOf(paddingChar);
                if (paddingIndex !== -1) {
                  base64StrLength = paddingIndex;
                }
              }

              // Convert
              return parseLoop(base64Str, base64StrLength, reverseMap);

            },

            _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
          };

          function parseLoop(base64Str, base64StrLength, reverseMap) {
            var words = [];
            var nBytes = 0;
            for (var i = 0; i < base64StrLength; i++) {
              if (i % 4) {
                var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);
                var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);
                words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);
                nBytes++;
              }
            }
            return WordArray.create(words, nBytes);
          }
        }());


        return CryptoJS.enc.Base64;

      }));

      /***/ }),
    /* 6 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function (Math) {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var WordArray = C_lib.WordArray;
          var Hasher = C_lib.Hasher;
          var C_algo = C.algo;

          // Constants table
          var T = [];

          // Compute constants
          (function () {
            for (var i = 0; i < 64; i++) {
              T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;
            }
          }());

          /**
           * MD5 hash algorithm.
           */
          var MD5 = C_algo.MD5 = Hasher.extend({
            _doReset: function () {
              this._hash = new WordArray.init([
                0x67452301, 0xefcdab89,
                0x98badcfe, 0x10325476
              ]);
            },

            _doProcessBlock: function (M, offset) {
              // Swap endian
              for (var i = 0; i < 16; i++) {
                // Shortcuts
                var offset_i = offset + i;
                var M_offset_i = M[offset_i];

                M[offset_i] = (
                  (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
                  (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
                );
              }

              // Shortcuts
              var H = this._hash.words;

              var M_offset_0  = M[offset + 0];
              var M_offset_1  = M[offset + 1];
              var M_offset_2  = M[offset + 2];
              var M_offset_3  = M[offset + 3];
              var M_offset_4  = M[offset + 4];
              var M_offset_5  = M[offset + 5];
              var M_offset_6  = M[offset + 6];
              var M_offset_7  = M[offset + 7];
              var M_offset_8  = M[offset + 8];
              var M_offset_9  = M[offset + 9];
              var M_offset_10 = M[offset + 10];
              var M_offset_11 = M[offset + 11];
              var M_offset_12 = M[offset + 12];
              var M_offset_13 = M[offset + 13];
              var M_offset_14 = M[offset + 14];
              var M_offset_15 = M[offset + 15];

              // Working varialbes
              var a = H[0];
              var b = H[1];
              var c = H[2];
              var d = H[3];

              // Computation
              a = FF(a, b, c, d, M_offset_0,  7,  T[0]);
              d = FF(d, a, b, c, M_offset_1,  12, T[1]);
              c = FF(c, d, a, b, M_offset_2,  17, T[2]);
              b = FF(b, c, d, a, M_offset_3,  22, T[3]);
              a = FF(a, b, c, d, M_offset_4,  7,  T[4]);
              d = FF(d, a, b, c, M_offset_5,  12, T[5]);
              c = FF(c, d, a, b, M_offset_6,  17, T[6]);
              b = FF(b, c, d, a, M_offset_7,  22, T[7]);
              a = FF(a, b, c, d, M_offset_8,  7,  T[8]);
              d = FF(d, a, b, c, M_offset_9,  12, T[9]);
              c = FF(c, d, a, b, M_offset_10, 17, T[10]);
              b = FF(b, c, d, a, M_offset_11, 22, T[11]);
              a = FF(a, b, c, d, M_offset_12, 7,  T[12]);
              d = FF(d, a, b, c, M_offset_13, 12, T[13]);
              c = FF(c, d, a, b, M_offset_14, 17, T[14]);
              b = FF(b, c, d, a, M_offset_15, 22, T[15]);

              a = GG(a, b, c, d, M_offset_1,  5,  T[16]);
              d = GG(d, a, b, c, M_offset_6,  9,  T[17]);
              c = GG(c, d, a, b, M_offset_11, 14, T[18]);
              b = GG(b, c, d, a, M_offset_0,  20, T[19]);
              a = GG(a, b, c, d, M_offset_5,  5,  T[20]);
              d = GG(d, a, b, c, M_offset_10, 9,  T[21]);
              c = GG(c, d, a, b, M_offset_15, 14, T[22]);
              b = GG(b, c, d, a, M_offset_4,  20, T[23]);
              a = GG(a, b, c, d, M_offset_9,  5,  T[24]);
              d = GG(d, a, b, c, M_offset_14, 9,  T[25]);
              c = GG(c, d, a, b, M_offset_3,  14, T[26]);
              b = GG(b, c, d, a, M_offset_8,  20, T[27]);
              a = GG(a, b, c, d, M_offset_13, 5,  T[28]);
              d = GG(d, a, b, c, M_offset_2,  9,  T[29]);
              c = GG(c, d, a, b, M_offset_7,  14, T[30]);
              b = GG(b, c, d, a, M_offset_12, 20, T[31]);

              a = HH(a, b, c, d, M_offset_5,  4,  T[32]);
              d = HH(d, a, b, c, M_offset_8,  11, T[33]);
              c = HH(c, d, a, b, M_offset_11, 16, T[34]);
              b = HH(b, c, d, a, M_offset_14, 23, T[35]);
              a = HH(a, b, c, d, M_offset_1,  4,  T[36]);
              d = HH(d, a, b, c, M_offset_4,  11, T[37]);
              c = HH(c, d, a, b, M_offset_7,  16, T[38]);
              b = HH(b, c, d, a, M_offset_10, 23, T[39]);
              a = HH(a, b, c, d, M_offset_13, 4,  T[40]);
              d = HH(d, a, b, c, M_offset_0,  11, T[41]);
              c = HH(c, d, a, b, M_offset_3,  16, T[42]);
              b = HH(b, c, d, a, M_offset_6,  23, T[43]);
              a = HH(a, b, c, d, M_offset_9,  4,  T[44]);
              d = HH(d, a, b, c, M_offset_12, 11, T[45]);
              c = HH(c, d, a, b, M_offset_15, 16, T[46]);
              b = HH(b, c, d, a, M_offset_2,  23, T[47]);

              a = II(a, b, c, d, M_offset_0,  6,  T[48]);
              d = II(d, a, b, c, M_offset_7,  10, T[49]);
              c = II(c, d, a, b, M_offset_14, 15, T[50]);
              b = II(b, c, d, a, M_offset_5,  21, T[51]);
              a = II(a, b, c, d, M_offset_12, 6,  T[52]);
              d = II(d, a, b, c, M_offset_3,  10, T[53]);
              c = II(c, d, a, b, M_offset_10, 15, T[54]);
              b = II(b, c, d, a, M_offset_1,  21, T[55]);
              a = II(a, b, c, d, M_offset_8,  6,  T[56]);
              d = II(d, a, b, c, M_offset_15, 10, T[57]);
              c = II(c, d, a, b, M_offset_6,  15, T[58]);
              b = II(b, c, d, a, M_offset_13, 21, T[59]);
              a = II(a, b, c, d, M_offset_4,  6,  T[60]);
              d = II(d, a, b, c, M_offset_11, 10, T[61]);
              c = II(c, d, a, b, M_offset_2,  15, T[62]);
              b = II(b, c, d, a, M_offset_9,  21, T[63]);

              // Intermediate hash value
              H[0] = (H[0] + a) | 0;
              H[1] = (H[1] + b) | 0;
              H[2] = (H[2] + c) | 0;
              H[3] = (H[3] + d) | 0;
            },

            _doFinalize: function () {
              // Shortcuts
              var data = this._data;
              var dataWords = data.words;

              var nBitsTotal = this._nDataBytes * 8;
              var nBitsLeft = data.sigBytes * 8;

              // Add padding
              dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);

              var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
              var nBitsTotalL = nBitsTotal;
              dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (
                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |
                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)
              );
              dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |
                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)
              );

              data.sigBytes = (dataWords.length + 1) * 4;

              // Hash final blocks
              this._process();

              // Shortcuts
              var hash = this._hash;
              var H = hash.words;

              // Swap endian
              for (var i = 0; i < 4; i++) {
                // Shortcut
                var H_i = H[i];

                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
                  (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
              }

              // Return final computed hash
              return hash;
            },

            clone: function () {
              var clone = Hasher.clone.call(this);
              clone._hash = this._hash.clone();

              return clone;
            }
          });

          function FF(a, b, c, d, x, s, t) {
            var n = a + ((b & c) | (~b & d)) + x + t;
            return ((n << s) | (n >>> (32 - s))) + b;
          }

          function GG(a, b, c, d, x, s, t) {
            var n = a + ((b & d) | (c & ~d)) + x + t;
            return ((n << s) | (n >>> (32 - s))) + b;
          }

          function HH(a, b, c, d, x, s, t) {
            var n = a + (b ^ c ^ d) + x + t;
            return ((n << s) | (n >>> (32 - s))) + b;
          }

          function II(a, b, c, d, x, s, t) {
            var n = a + (c ^ (b | ~d)) + x + t;
            return ((n << s) | (n >>> (32 - s))) + b;
          }

          /**
           * Shortcut function to the hasher's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           *
           * @return {WordArray} The hash.
           *
           * @static
           *
           * @example
           *
           *     var hash = CryptoJS.MD5('message');
           *     var hash = CryptoJS.MD5(wordArray);
           */
          C.MD5 = Hasher._createHelper(MD5);

          /**
           * Shortcut function to the HMAC's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           * @param {WordArray|string} key The secret key.
           *
           * @return {WordArray} The HMAC.
           *
           * @static
           *
           * @example
           *
           *     var hmac = CryptoJS.HmacMD5(message, key);
           */
          C.HmacMD5 = Hasher._createHmacHelper(MD5);
        }(Math));


        return CryptoJS.MD5;

      }));

      /***/ }),
    /* 7 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return hasAttribute; });
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return hasCredentials; });
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return isA; });
      /* unused harmony export isDate */
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return isRequired; });
      /* unused harmony export isValid */
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return validate; });
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return hasPersonalId; });
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Client__ = __webpack_require__(3);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1____ = __webpack_require__(2);


      /**
       * If there is no token, a message is returned.
       * @param  {String}  msg - Message to return if validation fails
       * @return {String}      - A message if the validation fails and is blank if it passes
       */
      function hasCredentials(msg = 'requires Authentication credentials') {
        return (__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].basicCredentials || (__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].tokenObj) || (__WEBPACK_IMPORTED_MODULE_1____["user"]._accountName && __WEBPACK_IMPORTED_MODULE_1____["user"]._password)) ? '' : msg;
      }

      /**
       * If the value is not a date, a message is returned.
       * @param  {Object}  date - The target value to see if it is a date.
       * @param  {String}  msg  - Message to return if validation fails
       * @return {String}       - A message if the validation fails and is blank if it passes
       */
      function isDate(date, msg = 'requires valid date') { return (Date.parse(date)) ? '' : msg; }

      /**
       * If the required item does not exist, a message is returned.
       * @param  {Object}  p   - The target value to see if it exists, to be
       *                         Must contain a { key: value } to be the target of validation
       * @param  {String}  msg - Message to return if validation fails
       * @return {String}      - A message if the validation fails and is blank if it passes
       */
      function isRequired(p, msg = 'is not defined') {
        return Object.keys(p)
          .map(key => ({ key, value: p[key] }))
          .filter(obj => (obj.value === null || obj.value === undefined))
          .map(value => `${value.key} ${msg}`)
          .join(' and ');
      }

      /**
       * If the parameter is not of primitive type 'type', a message is returned.
       * @param  {Object}  p    - The target value to see if the type exists.
       *                          Must contain a { key: value } to be the target of validation
       * @param  {Object}  type - The type is the class the target is an instance of (example Array, String, etc.).
       * @param  {String}  msg  - Message to return if validation fails
       * @return {String}       - A message if the validation fails and is blank if it passes
       */
      function isA(p, type, msg = 'is not a') {
        if (isRequired(p).length > 0) { return ''; }
        return Object.keys(p)
          .map(key => ({ key, value: p[key] }))
          .filter(obj => ((typeof type !== 'function' && typeof obj.value !== type)
            || (typeof obj.value === 'object' && !(obj.value instanceof type))))
          .map(value => `${value.key} ${msg} ${type}`).join(' and ');
      }

      /**
       * If the parameter does not have the attribute, a message is returned
       * @param  {Object}  p             - The target value to see if it has attributes
       *                                   Must contain a { key: value } to be the target of validation
       * @param  {String}  attributeName - Must be a string to validate p
       * @param  {String}  msg           - Message to return if validation fails
       * @return {String}                - A message if the validation fails and blank if it passes
       */
      function hasAttribute(p, attributeName, msg = 'does not have') {
        if (isRequired(p).length > 0) { return ''; }
        return Object.keys(p)
          .map(key => ({ key, value: p[key] }))
          .filter(obj => !{}.hasOwnProperty.call(obj.value, attributeName))
          .map(value => `${value.key} ${msg} ${attributeName}`)
          .join(' and ');
      }

      /**
       * If the boolean statement is false, return a message, otherwise return an empty string
       * @param  {Boolean} booleanStatement - Any boolean statement that should be true
       * @param  {String}  msg              - Message to return if validation fails
       * @return {String}                   - A message if the validation fails and blank if it passes
       */
      function isValid(booleanStatement, msg = 'is not true') { return (booleanStatement) ? '' : msg; }

      /**
       * Checks if the client has stored personalId information
       * @param  {String}  msg           - Message to return if validation fails
       * @return {String}                - A message if the validation fails and blank if it passes
       */
      function hasPersonalId(msg = 'requires personalId') { return (__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].personalId) ? '' : msg; }

      /**
       * Loops through each validation item and throws an error if something fails (a message exists)
       * @param  {String}    module  - The location that calls this method.
       * @param  {...Object} results - An array of functions to test.
       */
      function validate(module, ...results) {
        const uniqueResults = results.filter(result => result);
        if (uniqueResults.length > 0) {
          const messages = uniqueResults.join(' and ');
          throw new Error(`${module} error: ${messages}`, module);
        }
      }

// Original, substitued methods, TODO: remove

      /**
       * If the required item does not exist, a message is returned.
       * @param  {Object}  p    - The target value to see if it exists.
       * @param  {String}  msg - Message to return if validation fails
       * @return {String}      - A message if the validation fails and is blank if it passes
       */
      function isRequiredOrig(p, msg = 'is not defined') {
        return Object.keys(p)
          .map(key => ({ key, value: p[key] }))
          .filter(obj => !obj.value)
          .map(value => `${value.key} ${msg}`)
          .join(' and ');
      }






      /***/ }),
    /* 8 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /**
       * Model representing a user profile.
       */
      class BaseModel {
        /**
         * @param {Object}          response            - JSON formatted response of base object.
         * @param {String|Number}   response.id         - The base ID value
         */
        constructor(response = {}) {
          const _response = response['data'] || response;

          /** @type {String} */
          this._id = _response.id;
          this._response = _response;

          // Add any other fields in the response
          // for (let prop in _response) {
          //     this['_' + prop] = _response[prop];
          // }
        }

        /**
         * Gets the id
         *
         * @type {String}
         */
        get id() {
          return this._id;
        }

        /**
         * Sets the id
         *
         * @param {String} id
         */
        set id(id) {
          this._id = id;
        }
      }

      /* harmony default export */ __webpack_exports__["a"] = (BaseModel);

      /***/ }),
    /* 9 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function (undefined) {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var Base = C_lib.Base;
          var X32WordArray = C_lib.WordArray;

          /**
           * x64 namespace.
           */
          var C_x64 = C.x64 = {};

          /**
           * A 64-bit word.
           */
          var X64Word = C_x64.Word = Base.extend({
            /**
             * Initializes a newly created 64-bit word.
             *
             * @param {number} high The high 32 bits.
             * @param {number} low The low 32 bits.
             *
             * @example
             *
             *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
             */
            init: function (high, low) {
              this.high = high;
              this.low = low;
            }

            /**
             * Bitwise NOTs this word.
             *
             * @return {X64Word} A new x64-Word object after negating.
             *
             * @example
             *
             *     var negated = x64Word.not();
             */
            // not: function () {
            // var high = ~this.high;
            // var low = ~this.low;

            // return X64Word.create(high, low);
            // },

            /**
             * Bitwise ANDs this word with the passed word.
             *
             * @param {X64Word} word The x64-Word to AND with this word.
             *
             * @return {X64Word} A new x64-Word object after ANDing.
             *
             * @example
             *
             *     var anded = x64Word.and(anotherX64Word);
             */
            // and: function (word) {
            // var high = this.high & word.high;
            // var low = this.low & word.low;

            // return X64Word.create(high, low);
            // },

            /**
             * Bitwise ORs this word with the passed word.
             *
             * @param {X64Word} word The x64-Word to OR with this word.
             *
             * @return {X64Word} A new x64-Word object after ORing.
             *
             * @example
             *
             *     var ored = x64Word.or(anotherX64Word);
             */
            // or: function (word) {
            // var high = this.high | word.high;
            // var low = this.low | word.low;

            // return X64Word.create(high, low);
            // },

            /**
             * Bitwise XORs this word with the passed word.
             *
             * @param {X64Word} word The x64-Word to XOR with this word.
             *
             * @return {X64Word} A new x64-Word object after XORing.
             *
             * @example
             *
             *     var xored = x64Word.xor(anotherX64Word);
             */
            // xor: function (word) {
            // var high = this.high ^ word.high;
            // var low = this.low ^ word.low;

            // return X64Word.create(high, low);
            // },

            /**
             * Shifts this word n bits to the left.
             *
             * @param {number} n The number of bits to shift.
             *
             * @return {X64Word} A new x64-Word object after shifting.
             *
             * @example
             *
             *     var shifted = x64Word.shiftL(25);
             */
            // shiftL: function (n) {
            // if (n < 32) {
            // var high = (this.high << n) | (this.low >>> (32 - n));
            // var low = this.low << n;
            // } else {
            // var high = this.low << (n - 32);
            // var low = 0;
            // }

            // return X64Word.create(high, low);
            // },

            /**
             * Shifts this word n bits to the right.
             *
             * @param {number} n The number of bits to shift.
             *
             * @return {X64Word} A new x64-Word object after shifting.
             *
             * @example
             *
             *     var shifted = x64Word.shiftR(7);
             */
            // shiftR: function (n) {
            // if (n < 32) {
            // var low = (this.low >>> n) | (this.high << (32 - n));
            // var high = this.high >>> n;
            // } else {
            // var low = this.high >>> (n - 32);
            // var high = 0;
            // }

            // return X64Word.create(high, low);
            // },

            /**
             * Rotates this word n bits to the left.
             *
             * @param {number} n The number of bits to rotate.
             *
             * @return {X64Word} A new x64-Word object after rotating.
             *
             * @example
             *
             *     var rotated = x64Word.rotL(25);
             */
            // rotL: function (n) {
            // return this.shiftL(n).or(this.shiftR(64 - n));
            // },

            /**
             * Rotates this word n bits to the right.
             *
             * @param {number} n The number of bits to rotate.
             *
             * @return {X64Word} A new x64-Word object after rotating.
             *
             * @example
             *
             *     var rotated = x64Word.rotR(7);
             */
            // rotR: function (n) {
            // return this.shiftR(n).or(this.shiftL(64 - n));
            // },

            /**
             * Adds this word with the passed word.
             *
             * @param {X64Word} word The x64-Word to add with this word.
             *
             * @return {X64Word} A new x64-Word object after adding.
             *
             * @example
             *
             *     var added = x64Word.add(anotherX64Word);
             */
            // add: function (word) {
            // var low = (this.low + word.low) | 0;
            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
            // var high = (this.high + word.high + carry) | 0;

            // return X64Word.create(high, low);
            // }
          });

          /**
           * An array of 64-bit words.
           *
           * @property {Array} words The array of CryptoJS.x64.Word objects.
           * @property {number} sigBytes The number of significant bytes in this word array.
           */
          var X64WordArray = C_x64.WordArray = Base.extend({
            /**
             * Initializes a newly created word array.
             *
             * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
             * @param {number} sigBytes (Optional) The number of significant bytes in the words.
             *
             * @example
             *
             *     var wordArray = CryptoJS.x64.WordArray.create();
             *
             *     var wordArray = CryptoJS.x64.WordArray.create([
             *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
             *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
             *     ]);
             *
             *     var wordArray = CryptoJS.x64.WordArray.create([
             *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
             *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
             *     ], 10);
             */
            init: function (words, sigBytes) {
              words = this.words = words || [];

              if (sigBytes != undefined) {
                this.sigBytes = sigBytes;
              } else {
                this.sigBytes = words.length * 8;
              }
            },

            /**
             * Converts this 64-bit word array to a 32-bit word array.
             *
             * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
             *
             * @example
             *
             *     var x32WordArray = x64WordArray.toX32();
             */
            toX32: function () {
              // Shortcuts
              var x64Words = this.words;
              var x64WordsLength = x64Words.length;

              // Convert
              var x32Words = [];
              for (var i = 0; i < x64WordsLength; i++) {
                var x64Word = x64Words[i];
                x32Words.push(x64Word.high);
                x32Words.push(x64Word.low);
              }

              return X32WordArray.create(x32Words, this.sigBytes);
            },

            /**
             * Creates a copy of this word array.
             *
             * @return {X64WordArray} The clone.
             *
             * @example
             *
             *     var clone = x64WordArray.clone();
             */
            clone: function () {
              var clone = Base.clone.call(this);

              // Clone "words" array
              var words = clone.words = this.words.slice(0);

              // Clone each X64Word object
              var wordsLength = words.length;
              for (var i = 0; i < wordsLength; i++) {
                words[i] = words[i].clone();
              }

              return clone;
            }
          });
        }());


        return CryptoJS;

      }));

      /***/ }),
    /* 10 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var WordArray = C_lib.WordArray;
          var Hasher = C_lib.Hasher;
          var C_algo = C.algo;

          // Reusable object
          var W = [];

          /**
           * SHA-1 hash algorithm.
           */
          var SHA1 = C_algo.SHA1 = Hasher.extend({
            _doReset: function () {
              this._hash = new WordArray.init([
                0x67452301, 0xefcdab89,
                0x98badcfe, 0x10325476,
                0xc3d2e1f0
              ]);
            },

            _doProcessBlock: function (M, offset) {
              // Shortcut
              var H = this._hash.words;

              // Working variables
              var a = H[0];
              var b = H[1];
              var c = H[2];
              var d = H[3];
              var e = H[4];

              // Computation
              for (var i = 0; i < 80; i++) {
                if (i < 16) {
                  W[i] = M[offset + i] | 0;
                } else {
                  var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
                  W[i] = (n << 1) | (n >>> 31);
                }

                var t = ((a << 5) | (a >>> 27)) + e + W[i];
                if (i < 20) {
                  t += ((b & c) | (~b & d)) + 0x5a827999;
                } else if (i < 40) {
                  t += (b ^ c ^ d) + 0x6ed9eba1;
                } else if (i < 60) {
                  t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;
                } else /* if (i < 80) */ {
                  t += (b ^ c ^ d) - 0x359d3e2a;
                }

                e = d;
                d = c;
                c = (b << 30) | (b >>> 2);
                b = a;
                a = t;
              }

              // Intermediate hash value
              H[0] = (H[0] + a) | 0;
              H[1] = (H[1] + b) | 0;
              H[2] = (H[2] + c) | 0;
              H[3] = (H[3] + d) | 0;
              H[4] = (H[4] + e) | 0;
            },

            _doFinalize: function () {
              // Shortcuts
              var data = this._data;
              var dataWords = data.words;

              var nBitsTotal = this._nDataBytes * 8;
              var nBitsLeft = data.sigBytes * 8;

              // Add padding
              dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
              dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
              dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;
              data.sigBytes = dataWords.length * 4;

              // Hash final blocks
              this._process();

              // Return final computed hash
              return this._hash;
            },

            clone: function () {
              var clone = Hasher.clone.call(this);
              clone._hash = this._hash.clone();

              return clone;
            }
          });

          /**
           * Shortcut function to the hasher's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           *
           * @return {WordArray} The hash.
           *
           * @static
           *
           * @example
           *
           *     var hash = CryptoJS.SHA1('message');
           *     var hash = CryptoJS.SHA1(wordArray);
           */
          C.SHA1 = Hasher._createHelper(SHA1);

          /**
           * Shortcut function to the HMAC's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           * @param {WordArray|string} key The secret key.
           *
           * @return {WordArray} The HMAC.
           *
           * @static
           *
           * @example
           *
           *     var hmac = CryptoJS.HmacSHA1(message, key);
           */
          C.HmacSHA1 = Hasher._createHmacHelper(SHA1);
        }());


        return CryptoJS.SHA1;

      }));

      /***/ }),
    /* 11 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var Base = C_lib.Base;
          var C_enc = C.enc;
          var Utf8 = C_enc.Utf8;
          var C_algo = C.algo;

          /**
           * HMAC algorithm.
           */
          var HMAC = C_algo.HMAC = Base.extend({
            /**
             * Initializes a newly created HMAC.
             *
             * @param {Hasher} hasher The hash algorithm to use.
             * @param {WordArray|string} key The secret key.
             *
             * @example
             *
             *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
             */
            init: function (hasher, key) {
              // Init hasher
              hasher = this._hasher = new hasher.init();

              // Convert string to WordArray, else assume WordArray already
              if (typeof key == 'string') {
                key = Utf8.parse(key);
              }

              // Shortcuts
              var hasherBlockSize = hasher.blockSize;
              var hasherBlockSizeBytes = hasherBlockSize * 4;

              // Allow arbitrary length keys
              if (key.sigBytes > hasherBlockSizeBytes) {
                key = hasher.finalize(key);
              }

              // Clamp excess bits
              key.clamp();

              // Clone key for inner and outer pads
              var oKey = this._oKey = key.clone();
              var iKey = this._iKey = key.clone();

              // Shortcuts
              var oKeyWords = oKey.words;
              var iKeyWords = iKey.words;

              // XOR keys with pad constants
              for (var i = 0; i < hasherBlockSize; i++) {
                oKeyWords[i] ^= 0x5c5c5c5c;
                iKeyWords[i] ^= 0x36363636;
              }
              oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;

              // Set initial values
              this.reset();
            },

            /**
             * Resets this HMAC to its initial state.
             *
             * @example
             *
             *     hmacHasher.reset();
             */
            reset: function () {
              // Shortcut
              var hasher = this._hasher;

              // Reset
              hasher.reset();
              hasher.update(this._iKey);
            },

            /**
             * Updates this HMAC with a message.
             *
             * @param {WordArray|string} messageUpdate The message to append.
             *
             * @return {HMAC} This HMAC instance.
             *
             * @example
             *
             *     hmacHasher.update('message');
             *     hmacHasher.update(wordArray);
             */
            update: function (messageUpdate) {
              this._hasher.update(messageUpdate);

              // Chainable
              return this;
            },

            /**
             * Finalizes the HMAC computation.
             * Note that the finalize operation is effectively a destructive, read-once operation.
             *
             * @param {WordArray|string} messageUpdate (Optional) A final message update.
             *
             * @return {WordArray} The HMAC.
             *
             * @example
             *
             *     var hmac = hmacHasher.finalize();
             *     var hmac = hmacHasher.finalize('message');
             *     var hmac = hmacHasher.finalize(wordArray);
             */
            finalize: function (messageUpdate) {
              // Shortcut
              var hasher = this._hasher;

              // Compute HMAC
              var innerHash = hasher.finalize(messageUpdate);
              hasher.reset();
              var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));

              return hmac;
            }
          });
        }());


      }));

      /***/ }),
    /* 12 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_crypto_js__ = __webpack_require__(16);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_crypto_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_crypto_js__);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_OauthService__ = __webpack_require__(19);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Client__ = __webpack_require__(3);




      class OfflineUtility {

        /**
         * Start the utility listening the online event
         * Possible sync statuses:
         *  - pending
         *  - started
         *  - progress
         *  - ended
         *  - failed
         */
        static init() {
          const self = this;
          this.syncStatus = "pending";
          window.addEventListener("online", function(e) { self.syncToRemote(); });
        }

        /// ---------- STORAGE HANDLERS ----------
        /**
         * Returns the value for specific key if exists
         * @param {string} key
         */
        static get(key) {
          return this.decrypt(localStorage.getItem(key));
        }

        /**
         * Set a new stored value for key
         * @param {string} key
         * @param {*} value
         */
        static post(key, value) {
          localStorage.setItem(key, this.encrypt(value));
          return value;
        }

        /**
         * Update the stored value for key
         * @param {string} key
         * @param {*} value
         */
        static patch(key, value) {
          return this.post(key, value);
        }

        /**
         * Update the stored value for key
         * @param {string} key
         * @param {*} value
         */
        static put(key, value) {
          return this.post(key, value);
        }

        /**
         * Remove item from storage
         * @param {string} key
         */
        static delete(key) {
          localStorage.removeItem(key);
          return "{}";
        }

        /**
         * If key is defined it will remove the stored item, otherwise it will clear the storage
         * @param {string} key
         */
        static clear() {
          localStorage.clear();
        }

        /// ----------- CRYPT METHODS -----------
        static get cryptoKey() { return "0FFL1N3=!"; }

        static get cryptoDataKey() { return "TH3B1RD0SN4P10T0FFL1N3=!"; }

        static encrypt(value, _key = null) {
          let key = _key ? _key: this.cryptoDataKey;
          if (typeof value === 'string' || value instanceof String)
            return __WEBPACK_IMPORTED_MODULE_0_crypto_js__["AES"].encrypt(value, key);
          else if (typeof data === 'object' || value instanceof Object)
            return __WEBPACK_IMPORTED_MODULE_0_crypto_js__["AES"].encrypt(JSON.stringify(value), key);

          //   if (typeof value === 'string' || value instanceof String)
          //     return value;
          //   else if (typeof data === 'object' || value instanceof Object)
          //     return JSON.stringify(value);

        }

        static decrypt(value, _key = null) {
          let key = _key ? _key: this.cryptoDataKey;
          const bytes  = __WEBPACK_IMPORTED_MODULE_0_crypto_js__["AES"].decrypt(value, key);
          return bytes.toString(__WEBPACK_IMPORTED_MODULE_0_crypto_js__["enc"].Utf8);

          //   return value;


        }

        /// ---------- OFFLINE METHODS ----------
        /**
         * Start the synchronization to remote
         */
        static async syncToRemote() {
          if (!__WEBPACK_IMPORTED_MODULE_2__Client__["a" /* client */].isOnlineEnabled()) {
            this.changeSyncStatus("failed");
            return;
          }
          if (this.synching) {
            this.changeSyncStatus("progress");
            return;
          }
          console.log("You are back online: syncing to remote...");
          this.synching = true;
          this.changeSyncStatus("started");
          const oauth = new __WEBPACK_IMPORTED_MODULE_1__services_OauthService__["a" /* default */]();
          try {
            await oauth.refreshToken();
          } catch (err) {
            console.warn("Failed to refresh token:", err);
            try {
              const credentials = this.getUser();
              await oauth.getToken(credentials[0], credentials[1]);
            } catch (err) {
              console.error("Cannot get token: ", err);
              this.synching = false;
              this.changeSyncStatus("failed");
              return;
            }
          }
          try {
            await this.sendFromStack();
            console.log("...sync completed!");
            this.synching = false;
            this.changeSyncStatus("ended");
          } catch (err) {
            console.error("Sync error: could not send the pending requests to server.", err);
            this.synching = false;
            this.changeSyncStatus("failed");
          }
        }

        /**
         * Update sync status and notify the change
         * @param {*} status
         */
        static changeSyncStatus(status) {
          this.syncStatus = status;
          document.dispatchEvent(new CustomEvent("sync_status_change"));
        }

        /**
         * Uses storage to let user proceed with app functionalities
         * @param {*} url
         * @param {*} method
         * @param {*} params
         * @param {*} body
         * @param {*} headers
         */
        static async fetch(url, method = 'GET', params = {}, body = undefined, headers) {
          console.warn("You are not online, using the offline mode.");
          const jsonstring = this[method.toLowerCase()](method.toLowerCase() + url.split("/").pop(), body);
          this.pushToStack({url:url,method:method,params:params,body:body,headers:headers});
          return new Response(new Blob([jsonstring],{type: "application/json"}));
        }

        /**
         * Helper function to save into storage the response from api
         * using the url as key and response as value
         * @param {*} url
         * @param {*} response
         */
        static async storeToCache(method, url, response) {
          try {
            // Skip if flow-api for now..
            if (url.indexOf("flow-api/") >= 0) return;
            const cloned = response.clone(); // clone to prevent locked body
            const json = await cloned.json();
            this.post(method.toLowerCase() + url.split("/").pop(), JSON.stringify(json));
          } catch (err) {
            console.warn("Error caching response from: " + url);
          }
        }

        /**
         * Checks if entered credentials are valid
         * @param {string} username
         * @param {string} password
         */
        static async isValidUser(username, password) {
          return this.get("userauth") === (username + '/' + password);
        }

        /**
         * Store credentials as encrypted string
         * @param {string} username
         * @param {string} password
         */
        static saveUser(username, password) {
          this.post("userauth", username + '/' + password);
        }

        static getUser() {
          try {
            return this.get("userauth").split("/");
          } catch (err) {
            return ["", ""];
          }
        }

        /// ---------- REQUEST STACK  ----------
        /**
         * Put the request infos into stack that will be used when
         * app will be back online
         * @param {Object} request
         */
        static pushToStack(request) {
          if (!this.stack) this.stack = [];
          this.stack.push(request);
          this.saveStackIntoCache();
        }

        /**
         * Clear the request stack
         */
        static cleanStack() {
          this.stack = [];
          const email = localStorage.getItem("email");
          const mapped = this.loadStackFromCache();
          if (mapped[email]) {
            mapped[email] = [];
          }
          localStorage.setItem("pending_reqs", btoa(JSON.stringify(mapped)));
        }

        static saveStackIntoCache() {
          if (!this.stack) return;
          const email = localStorage.getItem("email");
          const mapped = this.loadStackFromCache();
          mapped[email] = this.stack;
          localStorage.setItem("pending_reqs", btoa(JSON.stringify(mapped)));
        }

        static getStackFromCache() {
          const email = localStorage.getItem("email");
          const mapped = this.loadStackFromCache();
          if (mapped[email]) {
            this.stack = mapped[email];
          }
        }

        static loadStackFromCache() {
          const mapped = localStorage.getItem("pending_reqs");
          if (mapped) {
            return JSON.parse(atob(mapped));
          }
          return {};
        }

        /**
         * Send all pending requests to server when device
         * is back online
         */
        static async sendFromStack() {
          if (!this.stack) return;
          const tmp = [];
          for (const req of this.stack) {
            if (__WEBPACK_IMPORTED_MODULE_2__Client__["a" /* client */].isOnlineEnabled()) {
              try {
                await __WEBPACK_IMPORTED_MODULE_2__Client__["a" /* client */].fetch(req.url, req.method, req.params, req.body, req.headers);
              } catch(e) {
                console.error("Could not be able to send the request to " + req.url);
              }
            } else {
              // keep the request for later
              tmp.push(req);
            }
          }
          this.cleanStack();
          this.stack = tmp;
          this.saveStackIntoCache();
        }
      }

      /* harmony default export */ __webpack_exports__["a"] = (OfflineUtility);

      /***/ }),
    /* 13 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return customFetch; });
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return fetchRefreshToken; });
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Client__ = __webpack_require__(3);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_querystring__ = __webpack_require__(14);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_querystring___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_querystring__);



      const configureRefreshFetch = (configuration) => {
        const refreshToken = configuration.refreshToken,
          shouldRefreshToken = configuration.shouldRefreshToken,
          fetch = configuration.fetch;
        var refreshingTokenPromise = null;
        return  (url, options) => {
          if (refreshingTokenPromise !== null) {
            return refreshingTokenPromise
              .then(() => {
                return fetch(url, options);
              })
              // Even if the refreshing fails, do the fetch so we reject with
              // error of that request
              .catch(() => {
                return fetch(url, options);
              });
          }

          return fetch(url, options)
            .then(res => {
              return res;
            })
            .catch(function (error) {
              if (shouldRefreshToken(error)) {
                if (refreshingTokenPromise === null) {
                  refreshingTokenPromise = new Promise( (resolve, reject) => {
                    refreshToken()
                      .then(() => {
                        refreshingTokenPromise = null;
                        resolve();
                      })
                      .catch((refreshTokenError) => {
                        refreshingTokenPromise = null;
                        reject(refreshTokenError);
                      });
                  });
                }

                return refreshingTokenPromise
                  .then(() => {
                    return fetch(url, options);
                  })
                  .catch(() => {
                    // If refreshing fails, continue with original error
                    throw error;
                  });
              } else {
                throw error;
              }
            });
        };
      }

      /* global fetch */
      const fetchJSON = async (url, options) => {
        // var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        // var jsonOptions = Object.assign({
        //   headers: {
        //     'Content-Type': 'application/json'
        //   }
        // }, options);
        const response = await fetch(url, options);
        if (response.status != 401) {
          let res = new Promise((resolve) => resolve(response));
          return res;

        }
        else {
          const body = await response.json();
          return checkStatus({response, body})
        }
        // return fetch(url, jsonOptions)
        //     .then(function (response) {
        //     if (response.status != 401)
        //         return response;
        //     else
        //         return getResponseBody(response.clone()).then(function (body) {
        //             return {
        //             response: response,
        //             body: body
        //             };
        //         });
        // }).then(checkStatus);
        //   };
      }

// const getResponseBody =  (response) => {
//     var contentType = response.headers.get('content-type');
//     return contentType && contentType.indexOf('json') >= 0 ? response.text().then(tryParseJSON) : response.text();
// };

// const tryParseJSON = (json) => {
//     if (!json)
//         return null;
//     try {
//         return JSON.parse(json);
//     } catch (e) {
//         throw new Error("Failed to parse unexpected JSON response: ".concat(json));
//     }
// };

      function ResponseError(status, response, body) {
        this.name = 'ResponseError';
        this.status = status;
        this.response = response;
        this.body = body;
      } // $FlowIssue


      ResponseError.prototype = Error.prototype;

      const checkStatus = (_ref) => {
        let response = _ref.response || _ref,
          body = _ref.body;

        if (response.ok) {
          return {
            response: response,
            body: body
          };
        } else {
          throw new ResponseError(response.status, response, body);
        }
      };


// Add token to the request headers
      const fetchJSONWithToken =  async (url, options = {}) => {
        let token = __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].tokenObj && __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].tokenObj.access_token;
        if (token != null && options.headers) {
          options.headers.set('Authorization', `Bearer ${token}`);
        }
        const resp = await fetchJSON(url, options)
        return resp.response || resp;

      };

// Decide whether this error returned from API means that we want
// to try refreshing the token. error.response contains the fetch Response
// object, error.body contains the parsed JSON response body
      const shouldRefreshToken = (error = {}) => {
        return (error.status && error.status === 401) ||  ( error.body &&
          error.body.error === 'invalid_token' &&
          (error.body.error_description === `Access token expired: ${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].tokenObj.access_token}` ||
            error.body.error_description === `Invalid access token: ${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].tokenObj.access_token}`));
      }

// Do the actual token refreshing and update the saved token
      const fetchRefreshToken = async (refreshToken) => {
        const refresh_token = refreshToken || __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].tokenObj.refresh_token;
        const requestData = {
          method: "POST",
          headers: new Headers({'Content-Type' : 'application/x-www-form-urlencoded'}),
          mode: 'cors',
          cache: 'default',
          body: Object(__WEBPACK_IMPORTED_MODULE_1_querystring__["stringify"])({
            refresh_token,
            grant_type: "refresh_token",
            client_id: 'snapClinicalClient',
            client_secret: 'secret'
          })
        };

        let url = `/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.oauth}/oauth/token`;
        let ports = '';
        if (url.indexOf(__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.oauth) > -1 && __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].ports.oauth)
          ports = `${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].ports.oauth}`;

        const fetchUrl = __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].apiBaseUrl + ports + url;
        const resp = await fetchJSONWithToken(fetchUrl, requestData);
        if (resp.status === 200) { // 200 OK
          let json = await resp.json();
          __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].tokenObj = json;
          // user._password = null;
          // user._accountName = null;
          return json;
        }
        else {
          let json = await resp.json();
          __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].tokenObj = null;
          throw new Error(JSON.stringify(json));
        }
      };

      const customFetch = configureRefreshFetch({
        // Pass fetch function you want to wrap, it should already be adding
        // token to the request
        fetch: fetchJSONWithToken,
        // shouldRefreshToken is called when API fetch fails and it should decide
        // whether the response error means we need to refresh token
        shouldRefreshToken,
        // refreshToken should call the refresh token API, save the refreshed
        // token and return promise -- resolving it when everything goes fine,
        // rejecting it when refreshing fails for some reason
        refreshToken: fetchRefreshToken
      })




      /***/ }),
    /* 14 */
    /***/ (function(module, exports, __webpack_require__) {

      "use strict";


      exports.decode = exports.parse = __webpack_require__(23);
      exports.encode = exports.stringify = __webpack_require__(24);


      /***/ }),
    /* 15 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_crypto_js__ = __webpack_require__(16);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_crypto_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_crypto_js__);



      class CookieUtility {

        static get cryptoKey() { return "4UTHT0K3N"; }

        static get cryptoDataKey() { return "TH3B1RD0SN4P10TT0K3N"; }

        /**
         * Helper method to save a cookie
         * @param {any} data - data that should be stored into a cookie
         * @param {any} [options] - Optional parameters used during cookie creation.
         * @param {Date} [options.expireDate] - cookie expiration date
         * @param {string} [options.key] - private key used to encrypt the cookie name
         * @param {string} [options.dataKey] - private key used to encrypt the cookie data
         */
        static saveTokenCookie(data, options = {}) {
          const {expireDate, key, dataKey} = options;
          const _key =  key ? __WEBPACK_IMPORTED_MODULE_0_crypto_js__["SHA256"](key).toString() : __WEBPACK_IMPORTED_MODULE_0_crypto_js__["SHA256"](this.cryptoKey).toString();
          const _data = this.encryptData(data, dataKey);
          const _expireDate= expireDate ? expireDate.toUTCString() : "Thu, 01 Jan 1970 00:00:00 GMT";
          document.cookie = _key && _data && _expireDate ? `${_key}=${_data};expires=${_expireDate}` : null;
        }

        /**
         * Helper method to retrieve data from a cookie
         * @param {any} [options] - Optional parameters used to retrieve the cookie.
         * @param {string} [options.key] - private key used to dencrypt the cookie name
         * @param {string} [options.dataKey] - private key used to dencrypt the cookie data
         */
        static getCookieData(options = {}) {
          const {key, dataKey} = options;
          const _key =  key ? __WEBPACK_IMPORTED_MODULE_0_crypto_js__["SHA256"](key).toString() : __WEBPACK_IMPORTED_MODULE_0_crypto_js__["SHA256"](this.cryptoKey).toString();
          const cookie = this.getCookie(_key);
          return cookie && this.decryptData(cookie, dataKey);
        }

        /**
         * Helper method to retrieve cookie by name
         * @param {string} [options.key] - cookie name
         */
        static getCookie(name) {
          var re = new RegExp(name + "=([^;]+)");
          var value = re.exec(document.cookie);
          return (value != null) ? unescape(value[1]) : null;
        }

        /**
         * Helper method to encrypt data
         * @param {any} data - data to encrypt
         * @param {string} _key - private key used to encrypt data
         */
        static encryptData(data, _key = null) {
          let key = _key ? _key: this.cryptoDataKey;
          if (typeof data === 'string' || data instanceof String)
            return __WEBPACK_IMPORTED_MODULE_0_crypto_js__["AES"].encrypt(data, key);
          else if (typeof data === 'object' || data instanceof Object)
            return __WEBPACK_IMPORTED_MODULE_0_crypto_js__["AES"].encrypt(JSON.stringify(data), key);
        }

        /**
         * Helper method to dencrypt data
         * @param {any} data - data to dencrypt
         * @param {string} _key - private key used to dencrypt data
         */
        static decryptData(data, _key = null) {
          let key = _key ? _key: this.cryptoDataKey;
          const bytes  = __WEBPACK_IMPORTED_MODULE_0_crypto_js__["AES"].decrypt(data, key);
          return bytes.toString(__WEBPACK_IMPORTED_MODULE_0_crypto_js__["enc"].Utf8);
        }

      }

      /* harmony default export */ __webpack_exports__["a"] = (CookieUtility);

      /***/ }),
    /* 16 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(9), __webpack_require__(25), __webpack_require__(26), __webpack_require__(5), __webpack_require__(6), __webpack_require__(10), __webpack_require__(17), __webpack_require__(27), __webpack_require__(18), __webpack_require__(28), __webpack_require__(29), __webpack_require__(30), __webpack_require__(11), __webpack_require__(31), __webpack_require__(4), __webpack_require__(1), __webpack_require__(32), __webpack_require__(33), __webpack_require__(34), __webpack_require__(35), __webpack_require__(36), __webpack_require__(37), __webpack_require__(38), __webpack_require__(39), __webpack_require__(40), __webpack_require__(41), __webpack_require__(42), __webpack_require__(43), __webpack_require__(44), __webpack_require__(45), __webpack_require__(46), __webpack_require__(47));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./x64-core", "./lib-typedarrays", "./enc-utf16", "./enc-base64", "./md5", "./sha1", "./sha256", "./sha224", "./sha512", "./sha384", "./sha3", "./ripemd160", "./hmac", "./pbkdf2", "./evpkdf", "./cipher-core", "./mode-cfb", "./mode-ctr", "./mode-ctr-gladman", "./mode-ofb", "./mode-ecb", "./pad-ansix923", "./pad-iso10126", "./pad-iso97971", "./pad-zeropadding", "./pad-nopadding", "./format-hex", "./aes", "./tripledes", "./rc4", "./rabbit", "./rabbit-legacy"], factory);
        }
        else {
          // Global (browser)
          root.CryptoJS = factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        return CryptoJS;

      }));

      /***/ }),
    /* 17 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function (Math) {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var WordArray = C_lib.WordArray;
          var Hasher = C_lib.Hasher;
          var C_algo = C.algo;

          // Initialization and round constants tables
          var H = [];
          var K = [];

          // Compute constants
          (function () {
            function isPrime(n) {
              var sqrtN = Math.sqrt(n);
              for (var factor = 2; factor <= sqrtN; factor++) {
                if (!(n % factor)) {
                  return false;
                }
              }

              return true;
            }

            function getFractionalBits(n) {
              return ((n - (n | 0)) * 0x100000000) | 0;
            }

            var n = 2;
            var nPrime = 0;
            while (nPrime < 64) {
              if (isPrime(n)) {
                if (nPrime < 8) {
                  H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));
                }
                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));

                nPrime++;
              }

              n++;
            }
          }());

          // Reusable object
          var W = [];

          /**
           * SHA-256 hash algorithm.
           */
          var SHA256 = C_algo.SHA256 = Hasher.extend({
            _doReset: function () {
              this._hash = new WordArray.init(H.slice(0));
            },

            _doProcessBlock: function (M, offset) {
              // Shortcut
              var H = this._hash.words;

              // Working variables
              var a = H[0];
              var b = H[1];
              var c = H[2];
              var d = H[3];
              var e = H[4];
              var f = H[5];
              var g = H[6];
              var h = H[7];

              // Computation
              for (var i = 0; i < 64; i++) {
                if (i < 16) {
                  W[i] = M[offset + i] | 0;
                } else {
                  var gamma0x = W[i - 15];
                  var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^
                    ((gamma0x << 14) | (gamma0x >>> 18)) ^
                    (gamma0x >>> 3);

                  var gamma1x = W[i - 2];
                  var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^
                    ((gamma1x << 13) | (gamma1x >>> 19)) ^
                    (gamma1x >>> 10);

                  W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
                }

                var ch  = (e & f) ^ (~e & g);
                var maj = (a & b) ^ (a & c) ^ (b & c);

                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));
                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));

                var t1 = h + sigma1 + ch + K[i] + W[i];
                var t2 = sigma0 + maj;

                h = g;
                g = f;
                f = e;
                e = (d + t1) | 0;
                d = c;
                c = b;
                b = a;
                a = (t1 + t2) | 0;
              }

              // Intermediate hash value
              H[0] = (H[0] + a) | 0;
              H[1] = (H[1] + b) | 0;
              H[2] = (H[2] + c) | 0;
              H[3] = (H[3] + d) | 0;
              H[4] = (H[4] + e) | 0;
              H[5] = (H[5] + f) | 0;
              H[6] = (H[6] + g) | 0;
              H[7] = (H[7] + h) | 0;
            },

            _doFinalize: function () {
              // Shortcuts
              var data = this._data;
              var dataWords = data.words;

              var nBitsTotal = this._nDataBytes * 8;
              var nBitsLeft = data.sigBytes * 8;

              // Add padding
              dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
              dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
              dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;
              data.sigBytes = dataWords.length * 4;

              // Hash final blocks
              this._process();

              // Return final computed hash
              return this._hash;
            },

            clone: function () {
              var clone = Hasher.clone.call(this);
              clone._hash = this._hash.clone();

              return clone;
            }
          });

          /**
           * Shortcut function to the hasher's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           *
           * @return {WordArray} The hash.
           *
           * @static
           *
           * @example
           *
           *     var hash = CryptoJS.SHA256('message');
           *     var hash = CryptoJS.SHA256(wordArray);
           */
          C.SHA256 = Hasher._createHelper(SHA256);

          /**
           * Shortcut function to the HMAC's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           * @param {WordArray|string} key The secret key.
           *
           * @return {WordArray} The HMAC.
           *
           * @static
           *
           * @example
           *
           *     var hmac = CryptoJS.HmacSHA256(message, key);
           */
          C.HmacSHA256 = Hasher._createHmacHelper(SHA256);
        }(Math));


        return CryptoJS.SHA256;

      }));

      /***/ }),
    /* 18 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(9));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./x64-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var Hasher = C_lib.Hasher;
          var C_x64 = C.x64;
          var X64Word = C_x64.Word;
          var X64WordArray = C_x64.WordArray;
          var C_algo = C.algo;

          function X64Word_create() {
            return X64Word.create.apply(X64Word, arguments);
          }

          // Constants
          var K = [
            X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),
            X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),
            X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),
            X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),
            X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),
            X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),
            X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),
            X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),
            X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),
            X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),
            X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),
            X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),
            X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),
            X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),
            X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),
            X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),
            X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),
            X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),
            X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),
            X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),
            X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),
            X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),
            X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),
            X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),
            X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),
            X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),
            X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),
            X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),
            X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),
            X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),
            X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),
            X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),
            X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),
            X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),
            X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),
            X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),
            X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),
            X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),
            X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),
            X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)
          ];

          // Reusable objects
          var W = [];
          (function () {
            for (var i = 0; i < 80; i++) {
              W[i] = X64Word_create();
            }
          }());

          /**
           * SHA-512 hash algorithm.
           */
          var SHA512 = C_algo.SHA512 = Hasher.extend({
            _doReset: function () {
              this._hash = new X64WordArray.init([
                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),
                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),
                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),
                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)
              ]);
            },

            _doProcessBlock: function (M, offset) {
              // Shortcuts
              var H = this._hash.words;

              var H0 = H[0];
              var H1 = H[1];
              var H2 = H[2];
              var H3 = H[3];
              var H4 = H[4];
              var H5 = H[5];
              var H6 = H[6];
              var H7 = H[7];

              var H0h = H0.high;
              var H0l = H0.low;
              var H1h = H1.high;
              var H1l = H1.low;
              var H2h = H2.high;
              var H2l = H2.low;
              var H3h = H3.high;
              var H3l = H3.low;
              var H4h = H4.high;
              var H4l = H4.low;
              var H5h = H5.high;
              var H5l = H5.low;
              var H6h = H6.high;
              var H6l = H6.low;
              var H7h = H7.high;
              var H7l = H7.low;

              // Working variables
              var ah = H0h;
              var al = H0l;
              var bh = H1h;
              var bl = H1l;
              var ch = H2h;
              var cl = H2l;
              var dh = H3h;
              var dl = H3l;
              var eh = H4h;
              var el = H4l;
              var fh = H5h;
              var fl = H5l;
              var gh = H6h;
              var gl = H6l;
              var hh = H7h;
              var hl = H7l;

              // Rounds
              for (var i = 0; i < 80; i++) {
                // Shortcut
                var Wi = W[i];

                // Extend message
                if (i < 16) {
                  var Wih = Wi.high = M[offset + i * 2]     | 0;
                  var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;
                } else {
                  // Gamma0
                  var gamma0x  = W[i - 15];
                  var gamma0xh = gamma0x.high;
                  var gamma0xl = gamma0x.low;
                  var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);
                  var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));

                  // Gamma1
                  var gamma1x  = W[i - 2];
                  var gamma1xh = gamma1x.high;
                  var gamma1xl = gamma1x.low;
                  var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);
                  var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));

                  // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
                  var Wi7  = W[i - 7];
                  var Wi7h = Wi7.high;
                  var Wi7l = Wi7.low;

                  var Wi16  = W[i - 16];
                  var Wi16h = Wi16.high;
                  var Wi16l = Wi16.low;

                  var Wil = gamma0l + Wi7l;
                  var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);
                  var Wil = Wil + gamma1l;
                  var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);
                  var Wil = Wil + Wi16l;
                  var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);

                  Wi.high = Wih;
                  Wi.low  = Wil;
                }

                var chh  = (eh & fh) ^ (~eh & gh);
                var chl  = (el & fl) ^ (~el & gl);
                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);
                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);

                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));
                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));
                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));
                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));

                // t1 = h + sigma1 + ch + K[i] + W[i]
                var Ki  = K[i];
                var Kih = Ki.high;
                var Kil = Ki.low;

                var t1l = hl + sigma1l;
                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);
                var t1l = t1l + chl;
                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);
                var t1l = t1l + Kil;
                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);
                var t1l = t1l + Wil;
                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);

                // t2 = sigma0 + maj
                var t2l = sigma0l + majl;
                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);

                // Update working variables
                hh = gh;
                hl = gl;
                gh = fh;
                gl = fl;
                fh = eh;
                fl = el;
                el = (dl + t1l) | 0;
                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;
                dh = ch;
                dl = cl;
                ch = bh;
                cl = bl;
                bh = ah;
                bl = al;
                al = (t1l + t2l) | 0;
                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;
              }

              // Intermediate hash value
              H0l = H0.low  = (H0l + al);
              H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));
              H1l = H1.low  = (H1l + bl);
              H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));
              H2l = H2.low  = (H2l + cl);
              H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));
              H3l = H3.low  = (H3l + dl);
              H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));
              H4l = H4.low  = (H4l + el);
              H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));
              H5l = H5.low  = (H5l + fl);
              H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));
              H6l = H6.low  = (H6l + gl);
              H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));
              H7l = H7.low  = (H7l + hl);
              H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));
            },

            _doFinalize: function () {
              // Shortcuts
              var data = this._data;
              var dataWords = data.words;

              var nBitsTotal = this._nDataBytes * 8;
              var nBitsLeft = data.sigBytes * 8;

              // Add padding
              dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
              dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);
              dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;
              data.sigBytes = dataWords.length * 4;

              // Hash final blocks
              this._process();

              // Convert hash to 32-bit word array before returning
              var hash = this._hash.toX32();

              // Return final computed hash
              return hash;
            },

            clone: function () {
              var clone = Hasher.clone.call(this);
              clone._hash = this._hash.clone();

              return clone;
            },

            blockSize: 1024/32
          });

          /**
           * Shortcut function to the hasher's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           *
           * @return {WordArray} The hash.
           *
           * @static
           *
           * @example
           *
           *     var hash = CryptoJS.SHA512('message');
           *     var hash = CryptoJS.SHA512(wordArray);
           */
          C.SHA512 = Hasher._createHelper(SHA512);

          /**
           * Shortcut function to the HMAC's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           * @param {WordArray|string} key The secret key.
           *
           * @return {WordArray} The HMAC.
           *
           * @static
           *
           * @example
           *
           *     var hmac = CryptoJS.HmacSHA512(message, key);
           */
          C.HmacSHA512 = Hasher._createHmacHelper(SHA512);
        }());


        return CryptoJS.SHA512;

      }));

      /***/ }),
    /* 19 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utility_ValidationUtility__ = __webpack_require__(7);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_querystring__ = __webpack_require__(14);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_querystring___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_querystring__);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utility_RefreshToken_lib__ = __webpack_require__(13);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src__ = __webpack_require__(2);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utility_OfflineUtility__ = __webpack_require__(12);





// import {authorize} from '@shoutem/fetch-token-intercept';

      /**
       *  Service for hanlding token based authiencation
       */
      class OauthService {
        constructor(){ }

        /**
         * get the access token by passing in the username and password
         * each token as 1 hour expiration
         * @param {*} username
         * @param {*} password
         */
        async getToken(username, password){
          Object(__WEBPACK_IMPORTED_MODULE_0__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.getToken', Object(__WEBPACK_IMPORTED_MODULE_0__utility_ValidationUtility__["e" /* isRequired */])({username, password}));
          const fetchHeaders = {
            'Content-Type' : 'application/x-www-form-urlencoded'
          };


          const requestData = {
            method: "POST",
            headers: new Headers(fetchHeaders),
            mode: 'cors',
            cache: 'default',
            body: Object(__WEBPACK_IMPORTED_MODULE_1_querystring__["stringify"])({
              client_id: 'snapClinicalClient',
              client_secret: 'secret',
              grant_type: 'password',
              username,
              password
            })
          };

          let url = `/${__WEBPACK_IMPORTED_MODULE_3__src__["client"].contextPath.oauth}/oauth/token`;
          let ports = '';
          if (url.indexOf(__WEBPACK_IMPORTED_MODULE_3__src__["client"].contextPath.oauth) > -1 && __WEBPACK_IMPORTED_MODULE_3__src__["client"].ports.oauth)
            ports = `${__WEBPACK_IMPORTED_MODULE_3__src__["client"].ports.oauth}`;

          const fetchUrl = __WEBPACK_IMPORTED_MODULE_3__src__["client"].apiBaseUrl + ports + url; // +  (fetchParamsString.length > 0 ? '?' + fetchParamsString : '');
          const fetchRequest = new Request(fetchUrl, requestData);

          // Check connection status
          if (!__WEBPACK_IMPORTED_MODULE_3__src__["client"].isOnlineEnabled()) return;

          let response = await fetch(fetchRequest);
          if (response.status === 200) { // 200 OK
            let json = await response.json();
            __WEBPACK_IMPORTED_MODULE_3__src__["client"].tokenObj = json;
            // reset user info
            __WEBPACK_IMPORTED_MODULE_3__src__["user"]._password = null;
            __WEBPACK_IMPORTED_MODULE_3__src__["user"]._accountName = null;
            __WEBPACK_IMPORTED_MODULE_4__utility_OfflineUtility__["a" /* default */].saveUser(username, password);
            __WEBPACK_IMPORTED_MODULE_4__utility_OfflineUtility__["a" /* default */].getStackFromCache();
            return json;
          }
          else {
            let json = await response.json();
            throw new Error("getToken failed: " + json.error + ". " + json.error_description);
          }
        }
        /**
         * refresh the token once expired
         * @param {*} refresh_token
         */
        async refreshToken(refresh_token){
          return Object(__WEBPACK_IMPORTED_MODULE_2__utility_RefreshToken_lib__["b" /* fetchRefreshToken */])(refresh_token);
        }

        /**
         * revoke the current token
         * @param {*} tokenId
         */
        async revokeToken(tokenId){
          let token = !tokenId ? __WEBPACK_IMPORTED_MODULE_3__src__["client"].tokenObj.access_token : tokenId;
          Object(__WEBPACK_IMPORTED_MODULE_0__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.revokeToken', Object(__WEBPACK_IMPORTED_MODULE_0__utility_ValidationUtility__["e" /* isRequired */])({token}));

          let response = await __WEBPACK_IMPORTED_MODULE_3__src__["client"].fetch(`/${__WEBPACK_IMPORTED_MODULE_3__src__["client"].contextPath.oauth}/tokens/revokeById/${token}`, "GET");
          if (response.status === 200) { // 200 OK
            // reset the token object
            __WEBPACK_IMPORTED_MODULE_3__src__["client"].tokenObj = null;
            return response.status;
          } else {
            let json = await response.json();
            throw new Error("revokeToken failed: " + json.error + ". " + json.error_description);
          }
        }

        /**
         * get tokens info
         */
        async getTokensInfo(){
          Object(__WEBPACK_IMPORTED_MODULE_0__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.getTokensInfo');
          let response = await __WEBPACK_IMPORTED_MODULE_3__src__["client"].fetch(`/${__WEBPACK_IMPORTED_MODULE_3__src__["client"].contextPath.oauth}/tokens/info`, "GET");
          if (response.status === 200) { // 200 OK
            return response.json();
          } else {
            let json = await response.json();
            throw new Error("getTokensInfo failed: " + json.error + ". " + json.error_description);
          }
        }

        /**
         * get tokens list
         * @param {*} tokenId
         */
        async getTokens(clientId){
          Object(__WEBPACK_IMPORTED_MODULE_0__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.getTokens', Object(__WEBPACK_IMPORTED_MODULE_0__utility_ValidationUtility__["e" /* isRequired */])({clientId}));

          let response = await __WEBPACK_IMPORTED_MODULE_3__src__["client"].fetch(`/${__WEBPACK_IMPORTED_MODULE_3__src__["client"].contextPath.oauth}/tokens/${clientId}`, "GET");
          if (response.status === 200) { // 200 OK
            return response.json();
          }
          else {
            let json = await response.json();
            throw new Error("getTokens failed: " + json.error + ". " + json.error_description);
          }
        }

        /**
         * refresh oauth server settings
         */
        async refreshSettings(){
          Object(__WEBPACK_IMPORTED_MODULE_0__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.refreshSettings');

          let response = await __WEBPACK_IMPORTED_MODULE_3__src__["client"].fetch(`/${__WEBPACK_IMPORTED_MODULE_3__src__["client"].contextPath.oauth}/refreshSettings`, "GET");
          if (response.status === 200) { // 200 OK
            return response.json();
          }
          else {
            let json = await response.json();
            throw new Error("refreshSettings failed: " + json.error + ". " + json.error_description);
          }
        }
      }
      /* harmony default export */ __webpack_exports__["a"] = (OauthService);

      /***/ }),
    /* 20 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Base__ = __webpack_require__(8);


      /**
       * Model representing a process definition.
       */
      class Form extends __WEBPACK_IMPORTED_MODULE_0__Base__["a" /* default */]{
        /**
         * @param {Object}  response                        - JSON formatted response of process definition.
         * @param {String}  response.id                     - The process definition ID value
         */
        constructor(response = {}) {
          super(response);
        }

        /**
         * Gets the formKey
         *
         * @type {String}
         */
        get formKey() {
          return this._response.formKey;
        }
      }

      /* harmony default export */ __webpack_exports__["a"] = (Form);

      /***/ }),
    /* 21 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Form__ = __webpack_require__(20);


      /**
       * Model representing a process definition.
       */
      class FormModel extends __WEBPACK_IMPORTED_MODULE_0__Form__["a" /* default */] {
        /**
         * @param {Object}  response            - JSON formatted response of a form model.
         *                  response.id         - The form model ID value
         */
        constructor(response) {
          super(response);
        }

        /**
         * Gets the fields
         *
         * @type {Array}
         */
        get fields() {
          return this._response.fields;
        }

        /**
         * Gets the outcomes
         *
         * @type {Array}
         */
        get outcomes() {
          return this._response.outcomes;
        }
      }

      /* harmony default export */ __webpack_exports__["a"] = (FormModel);

      /***/ }),
    /* 22 */
    /***/ (function(module, exports, __webpack_require__) {

      module.exports = __webpack_require__(2);


      /***/ }),
    /* 23 */
    /***/ (function(module, exports, __webpack_require__) {

      "use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
      function hasOwnProperty(obj, prop) {
        return Object.prototype.hasOwnProperty.call(obj, prop);
      }

      module.exports = function(qs, sep, eq, options) {
        sep = sep || '&';
        eq = eq || '=';
        var obj = {};

        if (typeof qs !== 'string' || qs.length === 0) {
          return obj;
        }

        var regexp = /\+/g;
        qs = qs.split(sep);

        var maxKeys = 1000;
        if (options && typeof options.maxKeys === 'number') {
          maxKeys = options.maxKeys;
        }

        var len = qs.length;
        // maxKeys <= 0 means that we should not limit keys count
        if (maxKeys > 0 && len > maxKeys) {
          len = maxKeys;
        }

        for (var i = 0; i < len; ++i) {
          var x = qs[i].replace(regexp, '%20'),
            idx = x.indexOf(eq),
            kstr, vstr, k, v;

          if (idx >= 0) {
            kstr = x.substr(0, idx);
            vstr = x.substr(idx + 1);
          } else {
            kstr = x;
            vstr = '';
          }

          k = decodeURIComponent(kstr);
          v = decodeURIComponent(vstr);

          if (!hasOwnProperty(obj, k)) {
            obj[k] = v;
          } else if (isArray(obj[k])) {
            obj[k].push(v);
          } else {
            obj[k] = [obj[k], v];
          }
        }

        return obj;
      };

      var isArray = Array.isArray || function (xs) {
        return Object.prototype.toString.call(xs) === '[object Array]';
      };


      /***/ }),
    /* 24 */
    /***/ (function(module, exports, __webpack_require__) {

      "use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



      var stringifyPrimitive = function(v) {
        switch (typeof v) {
          case 'string':
            return v;

          case 'boolean':
            return v ? 'true' : 'false';

          case 'number':
            return isFinite(v) ? v : '';

          default:
            return '';
        }
      };

      module.exports = function(obj, sep, eq, name) {
        sep = sep || '&';
        eq = eq || '=';
        if (obj === null) {
          obj = undefined;
        }

        if (typeof obj === 'object') {
          return map(objectKeys(obj), function(k) {
            var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
            if (isArray(obj[k])) {
              return map(obj[k], function(v) {
                return ks + encodeURIComponent(stringifyPrimitive(v));
              }).join(sep);
            } else {
              return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
            }
          }).join(sep);

        }

        if (!name) return '';
        return encodeURIComponent(stringifyPrimitive(name)) + eq +
          encodeURIComponent(stringifyPrimitive(obj));
      };

      var isArray = Array.isArray || function (xs) {
        return Object.prototype.toString.call(xs) === '[object Array]';
      };

      function map (xs, f) {
        if (xs.map) return xs.map(f);
        var res = [];
        for (var i = 0; i < xs.length; i++) {
          res.push(f(xs[i], i));
        }
        return res;
      }

      var objectKeys = Object.keys || function (obj) {
        var res = [];
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
        }
        return res;
      };


      /***/ }),
    /* 25 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Check if typed arrays are supported
          if (typeof ArrayBuffer != 'function') {
            return;
          }

          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var WordArray = C_lib.WordArray;

          // Reference original init
          var superInit = WordArray.init;

          // Augment WordArray.init to handle typed arrays
          var subInit = WordArray.init = function (typedArray) {
            // Convert buffers to uint8
            if (typedArray instanceof ArrayBuffer) {
              typedArray = new Uint8Array(typedArray);
            }

            // Convert other array views to uint8
            if (
              typedArray instanceof Int8Array ||
              (typeof Uint8ClampedArray !== "undefined" && typedArray instanceof Uint8ClampedArray) ||
              typedArray instanceof Int16Array ||
              typedArray instanceof Uint16Array ||
              typedArray instanceof Int32Array ||
              typedArray instanceof Uint32Array ||
              typedArray instanceof Float32Array ||
              typedArray instanceof Float64Array
            ) {
              typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);
            }

            // Handle Uint8Array
            if (typedArray instanceof Uint8Array) {
              // Shortcut
              var typedArrayByteLength = typedArray.byteLength;

              // Extract bytes
              var words = [];
              for (var i = 0; i < typedArrayByteLength; i++) {
                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);
              }

              // Initialize this word array
              superInit.call(this, words, typedArrayByteLength);
            } else {
              // Else call normal init
              superInit.apply(this, arguments);
            }
          };

          subInit.prototype = WordArray;
        }());


        return CryptoJS.lib.WordArray;

      }));

      /***/ }),
    /* 26 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var WordArray = C_lib.WordArray;
          var C_enc = C.enc;

          /**
           * UTF-16 BE encoding strategy.
           */
          var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {
            /**
             * Converts a word array to a UTF-16 BE string.
             *
             * @param {WordArray} wordArray The word array.
             *
             * @return {string} The UTF-16 BE string.
             *
             * @static
             *
             * @example
             *
             *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
             */
            stringify: function (wordArray) {
              // Shortcuts
              var words = wordArray.words;
              var sigBytes = wordArray.sigBytes;

              // Convert
              var utf16Chars = [];
              for (var i = 0; i < sigBytes; i += 2) {
                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;
                utf16Chars.push(String.fromCharCode(codePoint));
              }

              return utf16Chars.join('');
            },

            /**
             * Converts a UTF-16 BE string to a word array.
             *
             * @param {string} utf16Str The UTF-16 BE string.
             *
             * @return {WordArray} The word array.
             *
             * @static
             *
             * @example
             *
             *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);
             */
            parse: function (utf16Str) {
              // Shortcut
              var utf16StrLength = utf16Str.length;

              // Convert
              var words = [];
              for (var i = 0; i < utf16StrLength; i++) {
                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);
              }

              return WordArray.create(words, utf16StrLength * 2);
            }
          };

          /**
           * UTF-16 LE encoding strategy.
           */
          C_enc.Utf16LE = {
            /**
             * Converts a word array to a UTF-16 LE string.
             *
             * @param {WordArray} wordArray The word array.
             *
             * @return {string} The UTF-16 LE string.
             *
             * @static
             *
             * @example
             *
             *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
             */
            stringify: function (wordArray) {
              // Shortcuts
              var words = wordArray.words;
              var sigBytes = wordArray.sigBytes;

              // Convert
              var utf16Chars = [];
              for (var i = 0; i < sigBytes; i += 2) {
                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);
                utf16Chars.push(String.fromCharCode(codePoint));
              }

              return utf16Chars.join('');
            },

            /**
             * Converts a UTF-16 LE string to a word array.
             *
             * @param {string} utf16Str The UTF-16 LE string.
             *
             * @return {WordArray} The word array.
             *
             * @static
             *
             * @example
             *
             *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
             */
            parse: function (utf16Str) {
              // Shortcut
              var utf16StrLength = utf16Str.length;

              // Convert
              var words = [];
              for (var i = 0; i < utf16StrLength; i++) {
                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));
              }

              return WordArray.create(words, utf16StrLength * 2);
            }
          };

          function swapEndian(word) {
            return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);
          }
        }());


        return CryptoJS.enc.Utf16;

      }));

      /***/ }),
    /* 27 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(17));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./sha256"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var WordArray = C_lib.WordArray;
          var C_algo = C.algo;
          var SHA256 = C_algo.SHA256;

          /**
           * SHA-224 hash algorithm.
           */
          var SHA224 = C_algo.SHA224 = SHA256.extend({
            _doReset: function () {
              this._hash = new WordArray.init([
                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4
              ]);
            },

            _doFinalize: function () {
              var hash = SHA256._doFinalize.call(this);

              hash.sigBytes -= 4;

              return hash;
            }
          });

          /**
           * Shortcut function to the hasher's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           *
           * @return {WordArray} The hash.
           *
           * @static
           *
           * @example
           *
           *     var hash = CryptoJS.SHA224('message');
           *     var hash = CryptoJS.SHA224(wordArray);
           */
          C.SHA224 = SHA256._createHelper(SHA224);

          /**
           * Shortcut function to the HMAC's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           * @param {WordArray|string} key The secret key.
           *
           * @return {WordArray} The HMAC.
           *
           * @static
           *
           * @example
           *
           *     var hmac = CryptoJS.HmacSHA224(message, key);
           */
          C.HmacSHA224 = SHA256._createHmacHelper(SHA224);
        }());


        return CryptoJS.SHA224;

      }));

      /***/ }),
    /* 28 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(9), __webpack_require__(18));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./x64-core", "./sha512"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Shortcuts
          var C = CryptoJS;
          var C_x64 = C.x64;
          var X64Word = C_x64.Word;
          var X64WordArray = C_x64.WordArray;
          var C_algo = C.algo;
          var SHA512 = C_algo.SHA512;

          /**
           * SHA-384 hash algorithm.
           */
          var SHA384 = C_algo.SHA384 = SHA512.extend({
            _doReset: function () {
              this._hash = new X64WordArray.init([
                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),
                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),
                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),
                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)
              ]);
            },

            _doFinalize: function () {
              var hash = SHA512._doFinalize.call(this);

              hash.sigBytes -= 16;

              return hash;
            }
          });

          /**
           * Shortcut function to the hasher's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           *
           * @return {WordArray} The hash.
           *
           * @static
           *
           * @example
           *
           *     var hash = CryptoJS.SHA384('message');
           *     var hash = CryptoJS.SHA384(wordArray);
           */
          C.SHA384 = SHA512._createHelper(SHA384);

          /**
           * Shortcut function to the HMAC's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           * @param {WordArray|string} key The secret key.
           *
           * @return {WordArray} The HMAC.
           *
           * @static
           *
           * @example
           *
           *     var hmac = CryptoJS.HmacSHA384(message, key);
           */
          C.HmacSHA384 = SHA512._createHmacHelper(SHA384);
        }());


        return CryptoJS.SHA384;

      }));

      /***/ }),
    /* 29 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(9));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./x64-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function (Math) {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var WordArray = C_lib.WordArray;
          var Hasher = C_lib.Hasher;
          var C_x64 = C.x64;
          var X64Word = C_x64.Word;
          var C_algo = C.algo;

          // Constants tables
          var RHO_OFFSETS = [];
          var PI_INDEXES  = [];
          var ROUND_CONSTANTS = [];

          // Compute Constants
          (function () {
            // Compute rho offset constants
            var x = 1, y = 0;
            for (var t = 0; t < 24; t++) {
              RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;

              var newX = y % 5;
              var newY = (2 * x + 3 * y) % 5;
              x = newX;
              y = newY;
            }

            // Compute pi index constants
            for (var x = 0; x < 5; x++) {
              for (var y = 0; y < 5; y++) {
                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;
              }
            }

            // Compute round constants
            var LFSR = 0x01;
            for (var i = 0; i < 24; i++) {
              var roundConstantMsw = 0;
              var roundConstantLsw = 0;

              for (var j = 0; j < 7; j++) {
                if (LFSR & 0x01) {
                  var bitPosition = (1 << j) - 1;
                  if (bitPosition < 32) {
                    roundConstantLsw ^= 1 << bitPosition;
                  } else /* if (bitPosition >= 32) */ {
                    roundConstantMsw ^= 1 << (bitPosition - 32);
                  }
                }

                // Compute next LFSR
                if (LFSR & 0x80) {
                  // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1
                  LFSR = (LFSR << 1) ^ 0x71;
                } else {
                  LFSR <<= 1;
                }
              }

              ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);
            }
          }());

          // Reusable objects for temporary values
          var T = [];
          (function () {
            for (var i = 0; i < 25; i++) {
              T[i] = X64Word.create();
            }
          }());

          /**
           * SHA-3 hash algorithm.
           */
          var SHA3 = C_algo.SHA3 = Hasher.extend({
            /**
             * Configuration options.
             *
             * @property {number} outputLength
             *   The desired number of bits in the output hash.
             *   Only values permitted are: 224, 256, 384, 512.
             *   Default: 512
             */
            cfg: Hasher.cfg.extend({
              outputLength: 512
            }),

            _doReset: function () {
              var state = this._state = []
              for (var i = 0; i < 25; i++) {
                state[i] = new X64Word.init();
              }

              this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
            },

            _doProcessBlock: function (M, offset) {
              // Shortcuts
              var state = this._state;
              var nBlockSizeLanes = this.blockSize / 2;

              // Absorb
              for (var i = 0; i < nBlockSizeLanes; i++) {
                // Shortcuts
                var M2i  = M[offset + 2 * i];
                var M2i1 = M[offset + 2 * i + 1];

                // Swap endian
                M2i = (
                  (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |
                  (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)
                );
                M2i1 = (
                  (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |
                  (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)
                );

                // Absorb message into state
                var lane = state[i];
                lane.high ^= M2i1;
                lane.low  ^= M2i;
              }

              // Rounds
              for (var round = 0; round < 24; round++) {
                // Theta
                for (var x = 0; x < 5; x++) {
                  // Mix column lanes
                  var tMsw = 0, tLsw = 0;
                  for (var y = 0; y < 5; y++) {
                    var lane = state[x + 5 * y];
                    tMsw ^= lane.high;
                    tLsw ^= lane.low;
                  }

                  // Temporary values
                  var Tx = T[x];
                  Tx.high = tMsw;
                  Tx.low  = tLsw;
                }
                for (var x = 0; x < 5; x++) {
                  // Shortcuts
                  var Tx4 = T[(x + 4) % 5];
                  var Tx1 = T[(x + 1) % 5];
                  var Tx1Msw = Tx1.high;
                  var Tx1Lsw = Tx1.low;

                  // Mix surrounding columns
                  var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));
                  var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));
                  for (var y = 0; y < 5; y++) {
                    var lane = state[x + 5 * y];
                    lane.high ^= tMsw;
                    lane.low  ^= tLsw;
                  }
                }

                // Rho Pi
                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {
                  // Shortcuts
                  var lane = state[laneIndex];
                  var laneMsw = lane.high;
                  var laneLsw = lane.low;
                  var rhoOffset = RHO_OFFSETS[laneIndex];

                  // Rotate lanes
                  if (rhoOffset < 32) {
                    var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));
                    var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));
                  } else /* if (rhoOffset >= 32) */ {
                    var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));
                    var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));
                  }

                  // Transpose lanes
                  var TPiLane = T[PI_INDEXES[laneIndex]];
                  TPiLane.high = tMsw;
                  TPiLane.low  = tLsw;
                }

                // Rho pi at x = y = 0
                var T0 = T[0];
                var state0 = state[0];
                T0.high = state0.high;
                T0.low  = state0.low;

                // Chi
                for (var x = 0; x < 5; x++) {
                  for (var y = 0; y < 5; y++) {
                    // Shortcuts
                    var laneIndex = x + 5 * y;
                    var lane = state[laneIndex];
                    var TLane = T[laneIndex];
                    var Tx1Lane = T[((x + 1) % 5) + 5 * y];
                    var Tx2Lane = T[((x + 2) % 5) + 5 * y];

                    // Mix rows
                    lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);
                    lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);
                  }
                }

                // Iota
                var lane = state[0];
                var roundConstant = ROUND_CONSTANTS[round];
                lane.high ^= roundConstant.high;
                lane.low  ^= roundConstant.low;;
              }
            },

            _doFinalize: function () {
              // Shortcuts
              var data = this._data;
              var dataWords = data.words;
              var nBitsTotal = this._nDataBytes * 8;
              var nBitsLeft = data.sigBytes * 8;
              var blockSizeBits = this.blockSize * 32;

              // Add padding
              dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);
              dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;
              data.sigBytes = dataWords.length * 4;

              // Hash final blocks
              this._process();

              // Shortcuts
              var state = this._state;
              var outputLengthBytes = this.cfg.outputLength / 8;
              var outputLengthLanes = outputLengthBytes / 8;

              // Squeeze
              var hashWords = [];
              for (var i = 0; i < outputLengthLanes; i++) {
                // Shortcuts
                var lane = state[i];
                var laneMsw = lane.high;
                var laneLsw = lane.low;

                // Swap endian
                laneMsw = (
                  (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |
                  (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)
                );
                laneLsw = (
                  (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |
                  (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)
                );

                // Squeeze state to retrieve hash
                hashWords.push(laneLsw);
                hashWords.push(laneMsw);
              }

              // Return final computed hash
              return new WordArray.init(hashWords, outputLengthBytes);
            },

            clone: function () {
              var clone = Hasher.clone.call(this);

              var state = clone._state = this._state.slice(0);
              for (var i = 0; i < 25; i++) {
                state[i] = state[i].clone();
              }

              return clone;
            }
          });

          /**
           * Shortcut function to the hasher's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           *
           * @return {WordArray} The hash.
           *
           * @static
           *
           * @example
           *
           *     var hash = CryptoJS.SHA3('message');
           *     var hash = CryptoJS.SHA3(wordArray);
           */
          C.SHA3 = Hasher._createHelper(SHA3);

          /**
           * Shortcut function to the HMAC's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           * @param {WordArray|string} key The secret key.
           *
           * @return {WordArray} The HMAC.
           *
           * @static
           *
           * @example
           *
           *     var hmac = CryptoJS.HmacSHA3(message, key);
           */
          C.HmacSHA3 = Hasher._createHmacHelper(SHA3);
        }(Math));


        return CryptoJS.SHA3;

      }));

      /***/ }),
    /* 30 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        /** @preserve
         (c) 2012 by Cédric Mesnil. All rights reserved.

         Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

         - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
         - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

         THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
         */

        (function (Math) {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var WordArray = C_lib.WordArray;
          var Hasher = C_lib.Hasher;
          var C_algo = C.algo;

          // Constants table
          var _zl = WordArray.create([
            0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
            7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,
            3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,
            1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,
            4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);
          var _zr = WordArray.create([
            5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,
            6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,
            15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,
            8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,
            12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);
          var _sl = WordArray.create([
            11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,
            7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,
            11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,
            11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,
            9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);
          var _sr = WordArray.create([
            8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,
            9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,
            9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,
            15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,
            8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);

          var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);
          var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);

          /**
           * RIPEMD160 hash algorithm.
           */
          var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({
            _doReset: function () {
              this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);
            },

            _doProcessBlock: function (M, offset) {

              // Swap endian
              for (var i = 0; i < 16; i++) {
                // Shortcuts
                var offset_i = offset + i;
                var M_offset_i = M[offset_i];

                // Swap
                M[offset_i] = (
                  (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
                  (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
                );
              }
              // Shortcut
              var H  = this._hash.words;
              var hl = _hl.words;
              var hr = _hr.words;
              var zl = _zl.words;
              var zr = _zr.words;
              var sl = _sl.words;
              var sr = _sr.words;

              // Working variables
              var al, bl, cl, dl, el;
              var ar, br, cr, dr, er;

              ar = al = H[0];
              br = bl = H[1];
              cr = cl = H[2];
              dr = dl = H[3];
              er = el = H[4];
              // Computation
              var t;
              for (var i = 0; i < 80; i += 1) {
                t = (al +  M[offset+zl[i]])|0;
                if (i<16){
                  t +=  f1(bl,cl,dl) + hl[0];
                } else if (i<32) {
                  t +=  f2(bl,cl,dl) + hl[1];
                } else if (i<48) {
                  t +=  f3(bl,cl,dl) + hl[2];
                } else if (i<64) {
                  t +=  f4(bl,cl,dl) + hl[3];
                } else {// if (i<80) {
                  t +=  f5(bl,cl,dl) + hl[4];
                }
                t = t|0;
                t =  rotl(t,sl[i]);
                t = (t+el)|0;
                al = el;
                el = dl;
                dl = rotl(cl, 10);
                cl = bl;
                bl = t;

                t = (ar + M[offset+zr[i]])|0;
                if (i<16){
                  t +=  f5(br,cr,dr) + hr[0];
                } else if (i<32) {
                  t +=  f4(br,cr,dr) + hr[1];
                } else if (i<48) {
                  t +=  f3(br,cr,dr) + hr[2];
                } else if (i<64) {
                  t +=  f2(br,cr,dr) + hr[3];
                } else {// if (i<80) {
                  t +=  f1(br,cr,dr) + hr[4];
                }
                t = t|0;
                t =  rotl(t,sr[i]) ;
                t = (t+er)|0;
                ar = er;
                er = dr;
                dr = rotl(cr, 10);
                cr = br;
                br = t;
              }
              // Intermediate hash value
              t    = (H[1] + cl + dr)|0;
              H[1] = (H[2] + dl + er)|0;
              H[2] = (H[3] + el + ar)|0;
              H[3] = (H[4] + al + br)|0;
              H[4] = (H[0] + bl + cr)|0;
              H[0] =  t;
            },

            _doFinalize: function () {
              // Shortcuts
              var data = this._data;
              var dataWords = data.words;

              var nBitsTotal = this._nDataBytes * 8;
              var nBitsLeft = data.sigBytes * 8;

              // Add padding
              dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
              dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |
                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)
              );
              data.sigBytes = (dataWords.length + 1) * 4;

              // Hash final blocks
              this._process();

              // Shortcuts
              var hash = this._hash;
              var H = hash.words;

              // Swap endian
              for (var i = 0; i < 5; i++) {
                // Shortcut
                var H_i = H[i];

                // Swap
                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
                  (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
              }

              // Return final computed hash
              return hash;
            },

            clone: function () {
              var clone = Hasher.clone.call(this);
              clone._hash = this._hash.clone();

              return clone;
            }
          });


          function f1(x, y, z) {
            return ((x) ^ (y) ^ (z));

          }

          function f2(x, y, z) {
            return (((x)&(y)) | ((~x)&(z)));
          }

          function f3(x, y, z) {
            return (((x) | (~(y))) ^ (z));
          }

          function f4(x, y, z) {
            return (((x) & (z)) | ((y)&(~(z))));
          }

          function f5(x, y, z) {
            return ((x) ^ ((y) |(~(z))));

          }

          function rotl(x,n) {
            return (x<<n) | (x>>>(32-n));
          }


          /**
           * Shortcut function to the hasher's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           *
           * @return {WordArray} The hash.
           *
           * @static
           *
           * @example
           *
           *     var hash = CryptoJS.RIPEMD160('message');
           *     var hash = CryptoJS.RIPEMD160(wordArray);
           */
          C.RIPEMD160 = Hasher._createHelper(RIPEMD160);

          /**
           * Shortcut function to the HMAC's object interface.
           *
           * @param {WordArray|string} message The message to hash.
           * @param {WordArray|string} key The secret key.
           *
           * @return {WordArray} The HMAC.
           *
           * @static
           *
           * @example
           *
           *     var hmac = CryptoJS.HmacRIPEMD160(message, key);
           */
          C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);
        }(Math));


        return CryptoJS.RIPEMD160;

      }));

      /***/ }),
    /* 31 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(10), __webpack_require__(11));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./sha1", "./hmac"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var Base = C_lib.Base;
          var WordArray = C_lib.WordArray;
          var C_algo = C.algo;
          var SHA1 = C_algo.SHA1;
          var HMAC = C_algo.HMAC;

          /**
           * Password-Based Key Derivation Function 2 algorithm.
           */
          var PBKDF2 = C_algo.PBKDF2 = Base.extend({
            /**
             * Configuration options.
             *
             * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
             * @property {Hasher} hasher The hasher to use. Default: SHA1
             * @property {number} iterations The number of iterations to perform. Default: 1
             */
            cfg: Base.extend({
              keySize: 128/32,
              hasher: SHA1,
              iterations: 1
            }),

            /**
             * Initializes a newly created key derivation function.
             *
             * @param {Object} cfg (Optional) The configuration options to use for the derivation.
             *
             * @example
             *
             *     var kdf = CryptoJS.algo.PBKDF2.create();
             *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
             *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
             */
            init: function (cfg) {
              this.cfg = this.cfg.extend(cfg);
            },

            /**
             * Computes the Password-Based Key Derivation Function 2.
             *
             * @param {WordArray|string} password The password.
             * @param {WordArray|string} salt A salt.
             *
             * @return {WordArray} The derived key.
             *
             * @example
             *
             *     var key = kdf.compute(password, salt);
             */
            compute: function (password, salt) {
              // Shortcut
              var cfg = this.cfg;

              // Init HMAC
              var hmac = HMAC.create(cfg.hasher, password);

              // Initial values
              var derivedKey = WordArray.create();
              var blockIndex = WordArray.create([0x00000001]);

              // Shortcuts
              var derivedKeyWords = derivedKey.words;
              var blockIndexWords = blockIndex.words;
              var keySize = cfg.keySize;
              var iterations = cfg.iterations;

              // Generate key
              while (derivedKeyWords.length < keySize) {
                var block = hmac.update(salt).finalize(blockIndex);
                hmac.reset();

                // Shortcuts
                var blockWords = block.words;
                var blockWordsLength = blockWords.length;

                // Iterations
                var intermediate = block;
                for (var i = 1; i < iterations; i++) {
                  intermediate = hmac.finalize(intermediate);
                  hmac.reset();

                  // Shortcut
                  var intermediateWords = intermediate.words;

                  // XOR intermediate with block
                  for (var j = 0; j < blockWordsLength; j++) {
                    blockWords[j] ^= intermediateWords[j];
                  }
                }

                derivedKey.concat(block);
                blockIndexWords[0]++;
              }
              derivedKey.sigBytes = keySize * 4;

              return derivedKey;
            }
          });

          /**
           * Computes the Password-Based Key Derivation Function 2.
           *
           * @param {WordArray|string} password The password.
           * @param {WordArray|string} salt A salt.
           * @param {Object} cfg (Optional) The configuration options to use for this computation.
           *
           * @return {WordArray} The derived key.
           *
           * @static
           *
           * @example
           *
           *     var key = CryptoJS.PBKDF2(password, salt);
           *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });
           *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });
           */
          C.PBKDF2 = function (password, salt, cfg) {
            return PBKDF2.create(cfg).compute(password, salt);
          };
        }());


        return CryptoJS.PBKDF2;

      }));

      /***/ }),
    /* 32 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        /**
         * Cipher Feedback block mode.
         */
        CryptoJS.mode.CFB = (function () {
          var CFB = CryptoJS.lib.BlockCipherMode.extend();

          CFB.Encryptor = CFB.extend({
            processBlock: function (words, offset) {
              // Shortcuts
              var cipher = this._cipher;
              var blockSize = cipher.blockSize;

              generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

              // Remember this block to use with next block
              this._prevBlock = words.slice(offset, offset + blockSize);
            }
          });

          CFB.Decryptor = CFB.extend({
            processBlock: function (words, offset) {
              // Shortcuts
              var cipher = this._cipher;
              var blockSize = cipher.blockSize;

              // Remember this block to use with next block
              var thisBlock = words.slice(offset, offset + blockSize);

              generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

              // This block becomes the previous block
              this._prevBlock = thisBlock;
            }
          });

          function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {
            // Shortcut
            var iv = this._iv;

            // Generate keystream
            if (iv) {
              var keystream = iv.slice(0);

              // Remove IV for subsequent blocks
              this._iv = undefined;
            } else {
              var keystream = this._prevBlock;
            }
            cipher.encryptBlock(keystream, 0);

            // Encrypt
            for (var i = 0; i < blockSize; i++) {
              words[offset + i] ^= keystream[i];
            }
          }

          return CFB;
        }());


        return CryptoJS.mode.CFB;

      }));

      /***/ }),
    /* 33 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        /**
         * Counter block mode.
         */
        CryptoJS.mode.CTR = (function () {
          var CTR = CryptoJS.lib.BlockCipherMode.extend();

          var Encryptor = CTR.Encryptor = CTR.extend({
            processBlock: function (words, offset) {
              // Shortcuts
              var cipher = this._cipher
              var blockSize = cipher.blockSize;
              var iv = this._iv;
              var counter = this._counter;

              // Generate keystream
              if (iv) {
                counter = this._counter = iv.slice(0);

                // Remove IV for subsequent blocks
                this._iv = undefined;
              }
              var keystream = counter.slice(0);
              cipher.encryptBlock(keystream, 0);

              // Increment counter
              counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0

              // Encrypt
              for (var i = 0; i < blockSize; i++) {
                words[offset + i] ^= keystream[i];
              }
            }
          });

          CTR.Decryptor = Encryptor;

          return CTR;
        }());


        return CryptoJS.mode.CTR;

      }));

      /***/ }),
    /* 34 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        /** @preserve
         * Counter block mode compatible with  Dr Brian Gladman fileenc.c
         * derived from CryptoJS.mode.CTR
         * Jan Hruby jhruby.web@gmail.com
         */
        CryptoJS.mode.CTRGladman = (function () {
          var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();

          function incWord(word)
          {
            if (((word >> 24) & 0xff) === 0xff) { //overflow
              var b1 = (word >> 16)&0xff;
              var b2 = (word >> 8)&0xff;
              var b3 = word & 0xff;

              if (b1 === 0xff) // overflow b1
              {
                b1 = 0;
                if (b2 === 0xff)
                {
                  b2 = 0;
                  if (b3 === 0xff)
                  {
                    b3 = 0;
                  }
                  else
                  {
                    ++b3;
                  }
                }
                else
                {
                  ++b2;
                }
              }
              else
              {
                ++b1;
              }

              word = 0;
              word += (b1 << 16);
              word += (b2 << 8);
              word += b3;
            }
            else
            {
              word += (0x01 << 24);
            }
            return word;
          }

          function incCounter(counter)
          {
            if ((counter[0] = incWord(counter[0])) === 0)
            {
              // encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8
              counter[1] = incWord(counter[1]);
            }
            return counter;
          }

          var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({
            processBlock: function (words, offset) {
              // Shortcuts
              var cipher = this._cipher
              var blockSize = cipher.blockSize;
              var iv = this._iv;
              var counter = this._counter;

              // Generate keystream
              if (iv) {
                counter = this._counter = iv.slice(0);

                // Remove IV for subsequent blocks
                this._iv = undefined;
              }

              incCounter(counter);

              var keystream = counter.slice(0);
              cipher.encryptBlock(keystream, 0);

              // Encrypt
              for (var i = 0; i < blockSize; i++) {
                words[offset + i] ^= keystream[i];
              }
            }
          });

          CTRGladman.Decryptor = Encryptor;

          return CTRGladman;
        }());




        return CryptoJS.mode.CTRGladman;

      }));

      /***/ }),
    /* 35 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        /**
         * Output Feedback block mode.
         */
        CryptoJS.mode.OFB = (function () {
          var OFB = CryptoJS.lib.BlockCipherMode.extend();

          var Encryptor = OFB.Encryptor = OFB.extend({
            processBlock: function (words, offset) {
              // Shortcuts
              var cipher = this._cipher
              var blockSize = cipher.blockSize;
              var iv = this._iv;
              var keystream = this._keystream;

              // Generate keystream
              if (iv) {
                keystream = this._keystream = iv.slice(0);

                // Remove IV for subsequent blocks
                this._iv = undefined;
              }
              cipher.encryptBlock(keystream, 0);

              // Encrypt
              for (var i = 0; i < blockSize; i++) {
                words[offset + i] ^= keystream[i];
              }
            }
          });

          OFB.Decryptor = Encryptor;

          return OFB;
        }());


        return CryptoJS.mode.OFB;

      }));

      /***/ }),
    /* 36 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        /**
         * Electronic Codebook block mode.
         */
        CryptoJS.mode.ECB = (function () {
          var ECB = CryptoJS.lib.BlockCipherMode.extend();

          ECB.Encryptor = ECB.extend({
            processBlock: function (words, offset) {
              this._cipher.encryptBlock(words, offset);
            }
          });

          ECB.Decryptor = ECB.extend({
            processBlock: function (words, offset) {
              this._cipher.decryptBlock(words, offset);
            }
          });

          return ECB;
        }());


        return CryptoJS.mode.ECB;

      }));

      /***/ }),
    /* 37 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        /**
         * ANSI X.923 padding strategy.
         */
        CryptoJS.pad.AnsiX923 = {
          pad: function (data, blockSize) {
            // Shortcuts
            var dataSigBytes = data.sigBytes;
            var blockSizeBytes = blockSize * 4;

            // Count padding bytes
            var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;

            // Compute last byte position
            var lastBytePos = dataSigBytes + nPaddingBytes - 1;

            // Pad
            data.clamp();
            data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);
            data.sigBytes += nPaddingBytes;
          },

          unpad: function (data) {
            // Get number of padding bytes from last byte
            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

            // Remove padding
            data.sigBytes -= nPaddingBytes;
          }
        };


        return CryptoJS.pad.Ansix923;

      }));

      /***/ }),
    /* 38 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        /**
         * ISO 10126 padding strategy.
         */
        CryptoJS.pad.Iso10126 = {
          pad: function (data, blockSize) {
            // Shortcut
            var blockSizeBytes = blockSize * 4;

            // Count padding bytes
            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

            // Pad
            data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).
            concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));
          },

          unpad: function (data) {
            // Get number of padding bytes from last byte
            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

            // Remove padding
            data.sigBytes -= nPaddingBytes;
          }
        };


        return CryptoJS.pad.Iso10126;

      }));

      /***/ }),
    /* 39 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        /**
         * ISO/IEC 9797-1 Padding Method 2.
         */
        CryptoJS.pad.Iso97971 = {
          pad: function (data, blockSize) {
            // Add 0x80 byte
            data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));

            // Zero pad the rest
            CryptoJS.pad.ZeroPadding.pad(data, blockSize);
          },

          unpad: function (data) {
            // Remove zero padding
            CryptoJS.pad.ZeroPadding.unpad(data);

            // Remove one more byte -- the 0x80 byte
            data.sigBytes--;
          }
        };


        return CryptoJS.pad.Iso97971;

      }));

      /***/ }),
    /* 40 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        /**
         * Zero padding strategy.
         */
        CryptoJS.pad.ZeroPadding = {
          pad: function (data, blockSize) {
            // Shortcut
            var blockSizeBytes = blockSize * 4;

            // Pad
            data.clamp();
            data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);
          },

          unpad: function (data) {
            // Shortcut
            var dataWords = data.words;

            // Unpad
            var i = data.sigBytes - 1;
            while (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {
              i--;
            }
            data.sigBytes = i + 1;
          }
        };


        return CryptoJS.pad.ZeroPadding;

      }));

      /***/ }),
    /* 41 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        /**
         * A noop padding strategy.
         */
        CryptoJS.pad.NoPadding = {
          pad: function () {
          },

          unpad: function () {
          }
        };


        return CryptoJS.pad.NoPadding;

      }));

      /***/ }),
    /* 42 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function (undefined) {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var CipherParams = C_lib.CipherParams;
          var C_enc = C.enc;
          var Hex = C_enc.Hex;
          var C_format = C.format;

          var HexFormatter = C_format.Hex = {
            /**
             * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.
             *
             * @param {CipherParams} cipherParams The cipher params object.
             *
             * @return {string} The hexadecimally encoded string.
             *
             * @static
             *
             * @example
             *
             *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);
             */
            stringify: function (cipherParams) {
              return cipherParams.ciphertext.toString(Hex);
            },

            /**
             * Converts a hexadecimally encoded ciphertext string to a cipher params object.
             *
             * @param {string} input The hexadecimally encoded string.
             *
             * @return {CipherParams} The cipher params object.
             *
             * @static
             *
             * @example
             *
             *     var cipherParams = CryptoJS.format.Hex.parse(hexString);
             */
            parse: function (input) {
              var ciphertext = Hex.parse(input);
              return CipherParams.create({ ciphertext: ciphertext });
            }
          };
        }());


        return CryptoJS.format.Hex;

      }));

      /***/ }),
    /* 43 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(5), __webpack_require__(6), __webpack_require__(4), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var BlockCipher = C_lib.BlockCipher;
          var C_algo = C.algo;

          // Lookup tables
          var SBOX = [];
          var INV_SBOX = [];
          var SUB_MIX_0 = [];
          var SUB_MIX_1 = [];
          var SUB_MIX_2 = [];
          var SUB_MIX_3 = [];
          var INV_SUB_MIX_0 = [];
          var INV_SUB_MIX_1 = [];
          var INV_SUB_MIX_2 = [];
          var INV_SUB_MIX_3 = [];

          // Compute lookup tables
          (function () {
            // Compute double table
            var d = [];
            for (var i = 0; i < 256; i++) {
              if (i < 128) {
                d[i] = i << 1;
              } else {
                d[i] = (i << 1) ^ 0x11b;
              }
            }

            // Walk GF(2^8)
            var x = 0;
            var xi = 0;
            for (var i = 0; i < 256; i++) {
              // Compute sbox
              var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);
              sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;
              SBOX[x] = sx;
              INV_SBOX[sx] = x;

              // Compute multiplication
              var x2 = d[x];
              var x4 = d[x2];
              var x8 = d[x4];

              // Compute sub bytes, mix columns tables
              var t = (d[sx] * 0x101) ^ (sx * 0x1010100);
              SUB_MIX_0[x] = (t << 24) | (t >>> 8);
              SUB_MIX_1[x] = (t << 16) | (t >>> 16);
              SUB_MIX_2[x] = (t << 8)  | (t >>> 24);
              SUB_MIX_3[x] = t;

              // Compute inv sub bytes, inv mix columns tables
              var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);
              INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);
              INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);
              INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);
              INV_SUB_MIX_3[sx] = t;

              // Compute next counter
              if (!x) {
                x = xi = 1;
              } else {
                x = x2 ^ d[d[d[x8 ^ x2]]];
                xi ^= d[d[xi]];
              }
            }
          }());

          // Precomputed Rcon lookup
          var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];

          /**
           * AES block cipher algorithm.
           */
          var AES = C_algo.AES = BlockCipher.extend({
            _doReset: function () {
              // Skip reset of nRounds has been set before and key did not change
              if (this._nRounds && this._keyPriorReset === this._key) {
                return;
              }

              // Shortcuts
              var key = this._keyPriorReset = this._key;
              var keyWords = key.words;
              var keySize = key.sigBytes / 4;

              // Compute number of rounds
              var nRounds = this._nRounds = keySize + 6;

              // Compute number of key schedule rows
              var ksRows = (nRounds + 1) * 4;

              // Compute key schedule
              var keySchedule = this._keySchedule = [];
              for (var ksRow = 0; ksRow < ksRows; ksRow++) {
                if (ksRow < keySize) {
                  keySchedule[ksRow] = keyWords[ksRow];
                } else {
                  var t = keySchedule[ksRow - 1];

                  if (!(ksRow % keySize)) {
                    // Rot word
                    t = (t << 8) | (t >>> 24);

                    // Sub word
                    t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];

                    // Mix Rcon
                    t ^= RCON[(ksRow / keySize) | 0] << 24;
                  } else if (keySize > 6 && ksRow % keySize == 4) {
                    // Sub word
                    t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];
                  }

                  keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;
                }
              }

              // Compute inv key schedule
              var invKeySchedule = this._invKeySchedule = [];
              for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {
                var ksRow = ksRows - invKsRow;

                if (invKsRow % 4) {
                  var t = keySchedule[ksRow];
                } else {
                  var t = keySchedule[ksRow - 4];
                }

                if (invKsRow < 4 || ksRow <= 4) {
                  invKeySchedule[invKsRow] = t;
                } else {
                  invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^
                    INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];
                }
              }
            },

            encryptBlock: function (M, offset) {
              this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);
            },

            decryptBlock: function (M, offset) {
              // Swap 2nd and 4th rows
              var t = M[offset + 1];
              M[offset + 1] = M[offset + 3];
              M[offset + 3] = t;

              this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);

              // Inv swap 2nd and 4th rows
              var t = M[offset + 1];
              M[offset + 1] = M[offset + 3];
              M[offset + 3] = t;
            },

            _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {
              // Shortcut
              var nRounds = this._nRounds;

              // Get input, add round key
              var s0 = M[offset]     ^ keySchedule[0];
              var s1 = M[offset + 1] ^ keySchedule[1];
              var s2 = M[offset + 2] ^ keySchedule[2];
              var s3 = M[offset + 3] ^ keySchedule[3];

              // Key schedule row counter
              var ksRow = 4;

              // Rounds
              for (var round = 1; round < nRounds; round++) {
                // Shift rows, sub bytes, mix columns, add round key
                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];
                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];
                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];
                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];

                // Update state
                s0 = t0;
                s1 = t1;
                s2 = t2;
                s3 = t3;
              }

              // Shift rows, sub bytes, add round key
              var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];
              var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];
              var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];
              var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];

              // Set output
              M[offset]     = t0;
              M[offset + 1] = t1;
              M[offset + 2] = t2;
              M[offset + 3] = t3;
            },

            keySize: 256/32
          });

          /**
           * Shortcut functions to the cipher's object interface.
           *
           * @example
           *
           *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);
           *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);
           */
          C.AES = BlockCipher._createHelper(AES);
        }());


        return CryptoJS.AES;

      }));

      /***/ }),
    /* 44 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(5), __webpack_require__(6), __webpack_require__(4), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var WordArray = C_lib.WordArray;
          var BlockCipher = C_lib.BlockCipher;
          var C_algo = C.algo;

          // Permuted Choice 1 constants
          var PC1 = [
            57, 49, 41, 33, 25, 17, 9,  1,
            58, 50, 42, 34, 26, 18, 10, 2,
            59, 51, 43, 35, 27, 19, 11, 3,
            60, 52, 44, 36, 63, 55, 47, 39,
            31, 23, 15, 7,  62, 54, 46, 38,
            30, 22, 14, 6,  61, 53, 45, 37,
            29, 21, 13, 5,  28, 20, 12, 4
          ];

          // Permuted Choice 2 constants
          var PC2 = [
            14, 17, 11, 24, 1,  5,
            3,  28, 15, 6,  21, 10,
            23, 19, 12, 4,  26, 8,
            16, 7,  27, 20, 13, 2,
            41, 52, 31, 37, 47, 55,
            30, 40, 51, 45, 33, 48,
            44, 49, 39, 56, 34, 53,
            46, 42, 50, 36, 29, 32
          ];

          // Cumulative bit shift constants
          var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];

          // SBOXes and round permutation constants
          var SBOX_P = [
            {
              0x0: 0x808200,
              0x10000000: 0x8000,
              0x20000000: 0x808002,
              0x30000000: 0x2,
              0x40000000: 0x200,
              0x50000000: 0x808202,
              0x60000000: 0x800202,
              0x70000000: 0x800000,
              0x80000000: 0x202,
              0x90000000: 0x800200,
              0xa0000000: 0x8200,
              0xb0000000: 0x808000,
              0xc0000000: 0x8002,
              0xd0000000: 0x800002,
              0xe0000000: 0x0,
              0xf0000000: 0x8202,
              0x8000000: 0x0,
              0x18000000: 0x808202,
              0x28000000: 0x8202,
              0x38000000: 0x8000,
              0x48000000: 0x808200,
              0x58000000: 0x200,
              0x68000000: 0x808002,
              0x78000000: 0x2,
              0x88000000: 0x800200,
              0x98000000: 0x8200,
              0xa8000000: 0x808000,
              0xb8000000: 0x800202,
              0xc8000000: 0x800002,
              0xd8000000: 0x8002,
              0xe8000000: 0x202,
              0xf8000000: 0x800000,
              0x1: 0x8000,
              0x10000001: 0x2,
              0x20000001: 0x808200,
              0x30000001: 0x800000,
              0x40000001: 0x808002,
              0x50000001: 0x8200,
              0x60000001: 0x200,
              0x70000001: 0x800202,
              0x80000001: 0x808202,
              0x90000001: 0x808000,
              0xa0000001: 0x800002,
              0xb0000001: 0x8202,
              0xc0000001: 0x202,
              0xd0000001: 0x800200,
              0xe0000001: 0x8002,
              0xf0000001: 0x0,
              0x8000001: 0x808202,
              0x18000001: 0x808000,
              0x28000001: 0x800000,
              0x38000001: 0x200,
              0x48000001: 0x8000,
              0x58000001: 0x800002,
              0x68000001: 0x2,
              0x78000001: 0x8202,
              0x88000001: 0x8002,
              0x98000001: 0x800202,
              0xa8000001: 0x202,
              0xb8000001: 0x808200,
              0xc8000001: 0x800200,
              0xd8000001: 0x0,
              0xe8000001: 0x8200,
              0xf8000001: 0x808002
            },
            {
              0x0: 0x40084010,
              0x1000000: 0x4000,
              0x2000000: 0x80000,
              0x3000000: 0x40080010,
              0x4000000: 0x40000010,
              0x5000000: 0x40084000,
              0x6000000: 0x40004000,
              0x7000000: 0x10,
              0x8000000: 0x84000,
              0x9000000: 0x40004010,
              0xa000000: 0x40000000,
              0xb000000: 0x84010,
              0xc000000: 0x80010,
              0xd000000: 0x0,
              0xe000000: 0x4010,
              0xf000000: 0x40080000,
              0x800000: 0x40004000,
              0x1800000: 0x84010,
              0x2800000: 0x10,
              0x3800000: 0x40004010,
              0x4800000: 0x40084010,
              0x5800000: 0x40000000,
              0x6800000: 0x80000,
              0x7800000: 0x40080010,
              0x8800000: 0x80010,
              0x9800000: 0x0,
              0xa800000: 0x4000,
              0xb800000: 0x40080000,
              0xc800000: 0x40000010,
              0xd800000: 0x84000,
              0xe800000: 0x40084000,
              0xf800000: 0x4010,
              0x10000000: 0x0,
              0x11000000: 0x40080010,
              0x12000000: 0x40004010,
              0x13000000: 0x40084000,
              0x14000000: 0x40080000,
              0x15000000: 0x10,
              0x16000000: 0x84010,
              0x17000000: 0x4000,
              0x18000000: 0x4010,
              0x19000000: 0x80000,
              0x1a000000: 0x80010,
              0x1b000000: 0x40000010,
              0x1c000000: 0x84000,
              0x1d000000: 0x40004000,
              0x1e000000: 0x40000000,
              0x1f000000: 0x40084010,
              0x10800000: 0x84010,
              0x11800000: 0x80000,
              0x12800000: 0x40080000,
              0x13800000: 0x4000,
              0x14800000: 0x40004000,
              0x15800000: 0x40084010,
              0x16800000: 0x10,
              0x17800000: 0x40000000,
              0x18800000: 0x40084000,
              0x19800000: 0x40000010,
              0x1a800000: 0x40004010,
              0x1b800000: 0x80010,
              0x1c800000: 0x0,
              0x1d800000: 0x4010,
              0x1e800000: 0x40080010,
              0x1f800000: 0x84000
            },
            {
              0x0: 0x104,
              0x100000: 0x0,
              0x200000: 0x4000100,
              0x300000: 0x10104,
              0x400000: 0x10004,
              0x500000: 0x4000004,
              0x600000: 0x4010104,
              0x700000: 0x4010000,
              0x800000: 0x4000000,
              0x900000: 0x4010100,
              0xa00000: 0x10100,
              0xb00000: 0x4010004,
              0xc00000: 0x4000104,
              0xd00000: 0x10000,
              0xe00000: 0x4,
              0xf00000: 0x100,
              0x80000: 0x4010100,
              0x180000: 0x4010004,
              0x280000: 0x0,
              0x380000: 0x4000100,
              0x480000: 0x4000004,
              0x580000: 0x10000,
              0x680000: 0x10004,
              0x780000: 0x104,
              0x880000: 0x4,
              0x980000: 0x100,
              0xa80000: 0x4010000,
              0xb80000: 0x10104,
              0xc80000: 0x10100,
              0xd80000: 0x4000104,
              0xe80000: 0x4010104,
              0xf80000: 0x4000000,
              0x1000000: 0x4010100,
              0x1100000: 0x10004,
              0x1200000: 0x10000,
              0x1300000: 0x4000100,
              0x1400000: 0x100,
              0x1500000: 0x4010104,
              0x1600000: 0x4000004,
              0x1700000: 0x0,
              0x1800000: 0x4000104,
              0x1900000: 0x4000000,
              0x1a00000: 0x4,
              0x1b00000: 0x10100,
              0x1c00000: 0x4010000,
              0x1d00000: 0x104,
              0x1e00000: 0x10104,
              0x1f00000: 0x4010004,
              0x1080000: 0x4000000,
              0x1180000: 0x104,
              0x1280000: 0x4010100,
              0x1380000: 0x0,
              0x1480000: 0x10004,
              0x1580000: 0x4000100,
              0x1680000: 0x100,
              0x1780000: 0x4010004,
              0x1880000: 0x10000,
              0x1980000: 0x4010104,
              0x1a80000: 0x10104,
              0x1b80000: 0x4000004,
              0x1c80000: 0x4000104,
              0x1d80000: 0x4010000,
              0x1e80000: 0x4,
              0x1f80000: 0x10100
            },
            {
              0x0: 0x80401000,
              0x10000: 0x80001040,
              0x20000: 0x401040,
              0x30000: 0x80400000,
              0x40000: 0x0,
              0x50000: 0x401000,
              0x60000: 0x80000040,
              0x70000: 0x400040,
              0x80000: 0x80000000,
              0x90000: 0x400000,
              0xa0000: 0x40,
              0xb0000: 0x80001000,
              0xc0000: 0x80400040,
              0xd0000: 0x1040,
              0xe0000: 0x1000,
              0xf0000: 0x80401040,
              0x8000: 0x80001040,
              0x18000: 0x40,
              0x28000: 0x80400040,
              0x38000: 0x80001000,
              0x48000: 0x401000,
              0x58000: 0x80401040,
              0x68000: 0x0,
              0x78000: 0x80400000,
              0x88000: 0x1000,
              0x98000: 0x80401000,
              0xa8000: 0x400000,
              0xb8000: 0x1040,
              0xc8000: 0x80000000,
              0xd8000: 0x400040,
              0xe8000: 0x401040,
              0xf8000: 0x80000040,
              0x100000: 0x400040,
              0x110000: 0x401000,
              0x120000: 0x80000040,
              0x130000: 0x0,
              0x140000: 0x1040,
              0x150000: 0x80400040,
              0x160000: 0x80401000,
              0x170000: 0x80001040,
              0x180000: 0x80401040,
              0x190000: 0x80000000,
              0x1a0000: 0x80400000,
              0x1b0000: 0x401040,
              0x1c0000: 0x80001000,
              0x1d0000: 0x400000,
              0x1e0000: 0x40,
              0x1f0000: 0x1000,
              0x108000: 0x80400000,
              0x118000: 0x80401040,
              0x128000: 0x0,
              0x138000: 0x401000,
              0x148000: 0x400040,
              0x158000: 0x80000000,
              0x168000: 0x80001040,
              0x178000: 0x40,
              0x188000: 0x80000040,
              0x198000: 0x1000,
              0x1a8000: 0x80001000,
              0x1b8000: 0x80400040,
              0x1c8000: 0x1040,
              0x1d8000: 0x80401000,
              0x1e8000: 0x400000,
              0x1f8000: 0x401040
            },
            {
              0x0: 0x80,
              0x1000: 0x1040000,
              0x2000: 0x40000,
              0x3000: 0x20000000,
              0x4000: 0x20040080,
              0x5000: 0x1000080,
              0x6000: 0x21000080,
              0x7000: 0x40080,
              0x8000: 0x1000000,
              0x9000: 0x20040000,
              0xa000: 0x20000080,
              0xb000: 0x21040080,
              0xc000: 0x21040000,
              0xd000: 0x0,
              0xe000: 0x1040080,
              0xf000: 0x21000000,
              0x800: 0x1040080,
              0x1800: 0x21000080,
              0x2800: 0x80,
              0x3800: 0x1040000,
              0x4800: 0x40000,
              0x5800: 0x20040080,
              0x6800: 0x21040000,
              0x7800: 0x20000000,
              0x8800: 0x20040000,
              0x9800: 0x0,
              0xa800: 0x21040080,
              0xb800: 0x1000080,
              0xc800: 0x20000080,
              0xd800: 0x21000000,
              0xe800: 0x1000000,
              0xf800: 0x40080,
              0x10000: 0x40000,
              0x11000: 0x80,
              0x12000: 0x20000000,
              0x13000: 0x21000080,
              0x14000: 0x1000080,
              0x15000: 0x21040000,
              0x16000: 0x20040080,
              0x17000: 0x1000000,
              0x18000: 0x21040080,
              0x19000: 0x21000000,
              0x1a000: 0x1040000,
              0x1b000: 0x20040000,
              0x1c000: 0x40080,
              0x1d000: 0x20000080,
              0x1e000: 0x0,
              0x1f000: 0x1040080,
              0x10800: 0x21000080,
              0x11800: 0x1000000,
              0x12800: 0x1040000,
              0x13800: 0x20040080,
              0x14800: 0x20000000,
              0x15800: 0x1040080,
              0x16800: 0x80,
              0x17800: 0x21040000,
              0x18800: 0x40080,
              0x19800: 0x21040080,
              0x1a800: 0x0,
              0x1b800: 0x21000000,
              0x1c800: 0x1000080,
              0x1d800: 0x40000,
              0x1e800: 0x20040000,
              0x1f800: 0x20000080
            },
            {
              0x0: 0x10000008,
              0x100: 0x2000,
              0x200: 0x10200000,
              0x300: 0x10202008,
              0x400: 0x10002000,
              0x500: 0x200000,
              0x600: 0x200008,
              0x700: 0x10000000,
              0x800: 0x0,
              0x900: 0x10002008,
              0xa00: 0x202000,
              0xb00: 0x8,
              0xc00: 0x10200008,
              0xd00: 0x202008,
              0xe00: 0x2008,
              0xf00: 0x10202000,
              0x80: 0x10200000,
              0x180: 0x10202008,
              0x280: 0x8,
              0x380: 0x200000,
              0x480: 0x202008,
              0x580: 0x10000008,
              0x680: 0x10002000,
              0x780: 0x2008,
              0x880: 0x200008,
              0x980: 0x2000,
              0xa80: 0x10002008,
              0xb80: 0x10200008,
              0xc80: 0x0,
              0xd80: 0x10202000,
              0xe80: 0x202000,
              0xf80: 0x10000000,
              0x1000: 0x10002000,
              0x1100: 0x10200008,
              0x1200: 0x10202008,
              0x1300: 0x2008,
              0x1400: 0x200000,
              0x1500: 0x10000000,
              0x1600: 0x10000008,
              0x1700: 0x202000,
              0x1800: 0x202008,
              0x1900: 0x0,
              0x1a00: 0x8,
              0x1b00: 0x10200000,
              0x1c00: 0x2000,
              0x1d00: 0x10002008,
              0x1e00: 0x10202000,
              0x1f00: 0x200008,
              0x1080: 0x8,
              0x1180: 0x202000,
              0x1280: 0x200000,
              0x1380: 0x10000008,
              0x1480: 0x10002000,
              0x1580: 0x2008,
              0x1680: 0x10202008,
              0x1780: 0x10200000,
              0x1880: 0x10202000,
              0x1980: 0x10200008,
              0x1a80: 0x2000,
              0x1b80: 0x202008,
              0x1c80: 0x200008,
              0x1d80: 0x0,
              0x1e80: 0x10000000,
              0x1f80: 0x10002008
            },
            {
              0x0: 0x100000,
              0x10: 0x2000401,
              0x20: 0x400,
              0x30: 0x100401,
              0x40: 0x2100401,
              0x50: 0x0,
              0x60: 0x1,
              0x70: 0x2100001,
              0x80: 0x2000400,
              0x90: 0x100001,
              0xa0: 0x2000001,
              0xb0: 0x2100400,
              0xc0: 0x2100000,
              0xd0: 0x401,
              0xe0: 0x100400,
              0xf0: 0x2000000,
              0x8: 0x2100001,
              0x18: 0x0,
              0x28: 0x2000401,
              0x38: 0x2100400,
              0x48: 0x100000,
              0x58: 0x2000001,
              0x68: 0x2000000,
              0x78: 0x401,
              0x88: 0x100401,
              0x98: 0x2000400,
              0xa8: 0x2100000,
              0xb8: 0x100001,
              0xc8: 0x400,
              0xd8: 0x2100401,
              0xe8: 0x1,
              0xf8: 0x100400,
              0x100: 0x2000000,
              0x110: 0x100000,
              0x120: 0x2000401,
              0x130: 0x2100001,
              0x140: 0x100001,
              0x150: 0x2000400,
              0x160: 0x2100400,
              0x170: 0x100401,
              0x180: 0x401,
              0x190: 0x2100401,
              0x1a0: 0x100400,
              0x1b0: 0x1,
              0x1c0: 0x0,
              0x1d0: 0x2100000,
              0x1e0: 0x2000001,
              0x1f0: 0x400,
              0x108: 0x100400,
              0x118: 0x2000401,
              0x128: 0x2100001,
              0x138: 0x1,
              0x148: 0x2000000,
              0x158: 0x100000,
              0x168: 0x401,
              0x178: 0x2100400,
              0x188: 0x2000001,
              0x198: 0x2100000,
              0x1a8: 0x0,
              0x1b8: 0x2100401,
              0x1c8: 0x100401,
              0x1d8: 0x400,
              0x1e8: 0x2000400,
              0x1f8: 0x100001
            },
            {
              0x0: 0x8000820,
              0x1: 0x20000,
              0x2: 0x8000000,
              0x3: 0x20,
              0x4: 0x20020,
              0x5: 0x8020820,
              0x6: 0x8020800,
              0x7: 0x800,
              0x8: 0x8020000,
              0x9: 0x8000800,
              0xa: 0x20800,
              0xb: 0x8020020,
              0xc: 0x820,
              0xd: 0x0,
              0xe: 0x8000020,
              0xf: 0x20820,
              0x80000000: 0x800,
              0x80000001: 0x8020820,
              0x80000002: 0x8000820,
              0x80000003: 0x8000000,
              0x80000004: 0x8020000,
              0x80000005: 0x20800,
              0x80000006: 0x20820,
              0x80000007: 0x20,
              0x80000008: 0x8000020,
              0x80000009: 0x820,
              0x8000000a: 0x20020,
              0x8000000b: 0x8020800,
              0x8000000c: 0x0,
              0x8000000d: 0x8020020,
              0x8000000e: 0x8000800,
              0x8000000f: 0x20000,
              0x10: 0x20820,
              0x11: 0x8020800,
              0x12: 0x20,
              0x13: 0x800,
              0x14: 0x8000800,
              0x15: 0x8000020,
              0x16: 0x8020020,
              0x17: 0x20000,
              0x18: 0x0,
              0x19: 0x20020,
              0x1a: 0x8020000,
              0x1b: 0x8000820,
              0x1c: 0x8020820,
              0x1d: 0x20800,
              0x1e: 0x820,
              0x1f: 0x8000000,
              0x80000010: 0x20000,
              0x80000011: 0x800,
              0x80000012: 0x8020020,
              0x80000013: 0x20820,
              0x80000014: 0x20,
              0x80000015: 0x8020000,
              0x80000016: 0x8000000,
              0x80000017: 0x8000820,
              0x80000018: 0x8020820,
              0x80000019: 0x8000020,
              0x8000001a: 0x8000800,
              0x8000001b: 0x0,
              0x8000001c: 0x20800,
              0x8000001d: 0x820,
              0x8000001e: 0x20020,
              0x8000001f: 0x8020800
            }
          ];

          // Masks that select the SBOX input
          var SBOX_MASK = [
            0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,
            0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f
          ];

          /**
           * DES block cipher algorithm.
           */
          var DES = C_algo.DES = BlockCipher.extend({
            _doReset: function () {
              // Shortcuts
              var key = this._key;
              var keyWords = key.words;

              // Select 56 bits according to PC1
              var keyBits = [];
              for (var i = 0; i < 56; i++) {
                var keyBitPos = PC1[i] - 1;
                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;
              }

              // Assemble 16 subkeys
              var subKeys = this._subKeys = [];
              for (var nSubKey = 0; nSubKey < 16; nSubKey++) {
                // Create subkey
                var subKey = subKeys[nSubKey] = [];

                // Shortcut
                var bitShift = BIT_SHIFTS[nSubKey];

                // Select 48 bits according to PC2
                for (var i = 0; i < 24; i++) {
                  // Select from the left 28 key bits
                  subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);

                  // Select from the right 28 key bits
                  subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);
                }

                // Since each subkey is applied to an expanded 32-bit input,
                // the subkey can be broken into 8 values scaled to 32-bits,
                // which allows the key to be used without expansion
                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);
                for (var i = 1; i < 7; i++) {
                  subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);
                }
                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);
              }

              // Compute inverse subkeys
              var invSubKeys = this._invSubKeys = [];
              for (var i = 0; i < 16; i++) {
                invSubKeys[i] = subKeys[15 - i];
              }
            },

            encryptBlock: function (M, offset) {
              this._doCryptBlock(M, offset, this._subKeys);
            },

            decryptBlock: function (M, offset) {
              this._doCryptBlock(M, offset, this._invSubKeys);
            },

            _doCryptBlock: function (M, offset, subKeys) {
              // Get input
              this._lBlock = M[offset];
              this._rBlock = M[offset + 1];

              // Initial permutation
              exchangeLR.call(this, 4,  0x0f0f0f0f);
              exchangeLR.call(this, 16, 0x0000ffff);
              exchangeRL.call(this, 2,  0x33333333);
              exchangeRL.call(this, 8,  0x00ff00ff);
              exchangeLR.call(this, 1,  0x55555555);

              // Rounds
              for (var round = 0; round < 16; round++) {
                // Shortcuts
                var subKey = subKeys[round];
                var lBlock = this._lBlock;
                var rBlock = this._rBlock;

                // Feistel function
                var f = 0;
                for (var i = 0; i < 8; i++) {
                  f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];
                }
                this._lBlock = rBlock;
                this._rBlock = lBlock ^ f;
              }

              // Undo swap from last round
              var t = this._lBlock;
              this._lBlock = this._rBlock;
              this._rBlock = t;

              // Final permutation
              exchangeLR.call(this, 1,  0x55555555);
              exchangeRL.call(this, 8,  0x00ff00ff);
              exchangeRL.call(this, 2,  0x33333333);
              exchangeLR.call(this, 16, 0x0000ffff);
              exchangeLR.call(this, 4,  0x0f0f0f0f);

              // Set output
              M[offset] = this._lBlock;
              M[offset + 1] = this._rBlock;
            },

            keySize: 64/32,

            ivSize: 64/32,

            blockSize: 64/32
          });

          // Swap bits across the left and right words
          function exchangeLR(offset, mask) {
            var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;
            this._rBlock ^= t;
            this._lBlock ^= t << offset;
          }

          function exchangeRL(offset, mask) {
            var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;
            this._lBlock ^= t;
            this._rBlock ^= t << offset;
          }

          /**
           * Shortcut functions to the cipher's object interface.
           *
           * @example
           *
           *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);
           *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);
           */
          C.DES = BlockCipher._createHelper(DES);

          /**
           * Triple-DES block cipher algorithm.
           */
          var TripleDES = C_algo.TripleDES = BlockCipher.extend({
            _doReset: function () {
              // Shortcuts
              var key = this._key;
              var keyWords = key.words;

              // Create DES instances
              this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));
              this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));
              this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));
            },

            encryptBlock: function (M, offset) {
              this._des1.encryptBlock(M, offset);
              this._des2.decryptBlock(M, offset);
              this._des3.encryptBlock(M, offset);
            },

            decryptBlock: function (M, offset) {
              this._des3.decryptBlock(M, offset);
              this._des2.encryptBlock(M, offset);
              this._des1.decryptBlock(M, offset);
            },

            keySize: 192/32,

            ivSize: 64/32,

            blockSize: 64/32
          });

          /**
           * Shortcut functions to the cipher's object interface.
           *
           * @example
           *
           *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);
           *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);
           */
          C.TripleDES = BlockCipher._createHelper(TripleDES);
        }());


        return CryptoJS.TripleDES;

      }));

      /***/ }),
    /* 45 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(5), __webpack_require__(6), __webpack_require__(4), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var StreamCipher = C_lib.StreamCipher;
          var C_algo = C.algo;

          /**
           * RC4 stream cipher algorithm.
           */
          var RC4 = C_algo.RC4 = StreamCipher.extend({
            _doReset: function () {
              // Shortcuts
              var key = this._key;
              var keyWords = key.words;
              var keySigBytes = key.sigBytes;

              // Init sbox
              var S = this._S = [];
              for (var i = 0; i < 256; i++) {
                S[i] = i;
              }

              // Key setup
              for (var i = 0, j = 0; i < 256; i++) {
                var keyByteIndex = i % keySigBytes;
                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;

                j = (j + S[i] + keyByte) % 256;

                // Swap
                var t = S[i];
                S[i] = S[j];
                S[j] = t;
              }

              // Counters
              this._i = this._j = 0;
            },

            _doProcessBlock: function (M, offset) {
              M[offset] ^= generateKeystreamWord.call(this);
            },

            keySize: 256/32,

            ivSize: 0
          });

          function generateKeystreamWord() {
            // Shortcuts
            var S = this._S;
            var i = this._i;
            var j = this._j;

            // Generate keystream word
            var keystreamWord = 0;
            for (var n = 0; n < 4; n++) {
              i = (i + 1) % 256;
              j = (j + S[i]) % 256;

              // Swap
              var t = S[i];
              S[i] = S[j];
              S[j] = t;

              keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);
            }

            // Update counters
            this._i = i;
            this._j = j;

            return keystreamWord;
          }

          /**
           * Shortcut functions to the cipher's object interface.
           *
           * @example
           *
           *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);
           *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);
           */
          C.RC4 = StreamCipher._createHelper(RC4);

          /**
           * Modified RC4 stream cipher algorithm.
           */
          var RC4Drop = C_algo.RC4Drop = RC4.extend({
            /**
             * Configuration options.
             *
             * @property {number} drop The number of keystream words to drop. Default 192
             */
            cfg: RC4.cfg.extend({
              drop: 192
            }),

            _doReset: function () {
              RC4._doReset.call(this);

              // Drop
              for (var i = this.cfg.drop; i > 0; i--) {
                generateKeystreamWord.call(this);
              }
            }
          });

          /**
           * Shortcut functions to the cipher's object interface.
           *
           * @example
           *
           *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);
           *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);
           */
          C.RC4Drop = StreamCipher._createHelper(RC4Drop);
        }());


        return CryptoJS.RC4;

      }));

      /***/ }),
    /* 46 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(5), __webpack_require__(6), __webpack_require__(4), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var StreamCipher = C_lib.StreamCipher;
          var C_algo = C.algo;

          // Reusable objects
          var S  = [];
          var C_ = [];
          var G  = [];

          /**
           * Rabbit stream cipher algorithm
           */
          var Rabbit = C_algo.Rabbit = StreamCipher.extend({
            _doReset: function () {
              // Shortcuts
              var K = this._key.words;
              var iv = this.cfg.iv;

              // Swap endian
              for (var i = 0; i < 4; i++) {
                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |
                  (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);
              }

              // Generate initial state values
              var X = this._X = [
                K[0], (K[3] << 16) | (K[2] >>> 16),
                K[1], (K[0] << 16) | (K[3] >>> 16),
                K[2], (K[1] << 16) | (K[0] >>> 16),
                K[3], (K[2] << 16) | (K[1] >>> 16)
              ];

              // Generate initial counter values
              var C = this._C = [
                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),
                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),
                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),
                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)
              ];

              // Carry bit
              this._b = 0;

              // Iterate the system four times
              for (var i = 0; i < 4; i++) {
                nextState.call(this);
              }

              // Modify the counters
              for (var i = 0; i < 8; i++) {
                C[i] ^= X[(i + 4) & 7];
              }

              // IV setup
              if (iv) {
                // Shortcuts
                var IV = iv.words;
                var IV_0 = IV[0];
                var IV_1 = IV[1];

                // Generate four subvectors
                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);
                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);
                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);
                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);

                // Modify counter values
                C[0] ^= i0;
                C[1] ^= i1;
                C[2] ^= i2;
                C[3] ^= i3;
                C[4] ^= i0;
                C[5] ^= i1;
                C[6] ^= i2;
                C[7] ^= i3;

                // Iterate the system four times
                for (var i = 0; i < 4; i++) {
                  nextState.call(this);
                }
              }
            },

            _doProcessBlock: function (M, offset) {
              // Shortcut
              var X = this._X;

              // Iterate the system
              nextState.call(this);

              // Generate four keystream words
              S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);
              S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);
              S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);
              S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);

              for (var i = 0; i < 4; i++) {
                // Swap endian
                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |
                  (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);

                // Encrypt
                M[offset + i] ^= S[i];
              }
            },

            blockSize: 128/32,

            ivSize: 64/32
          });

          function nextState() {
            // Shortcuts
            var X = this._X;
            var C = this._C;

            // Save old counter values
            for (var i = 0; i < 8; i++) {
              C_[i] = C[i];
            }

            // Calculate new counter values
            C[0] = (C[0] + 0x4d34d34d + this._b) | 0;
            C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;
            C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;
            C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;
            C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;
            C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;
            C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;
            C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;
            this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;

            // Calculate the g-values
            for (var i = 0; i < 8; i++) {
              var gx = X[i] + C[i];

              // Construct high and low argument for squaring
              var ga = gx & 0xffff;
              var gb = gx >>> 16;

              // Calculate high and low result of squaring
              var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;
              var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);

              // High XOR low
              G[i] = gh ^ gl;
            }

            // Calculate new state values
            X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;
            X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;
            X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;
            X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;
            X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;
            X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;
            X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;
            X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;
          }

          /**
           * Shortcut functions to the cipher's object interface.
           *
           * @example
           *
           *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);
           *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);
           */
          C.Rabbit = StreamCipher._createHelper(Rabbit);
        }());


        return CryptoJS.Rabbit;

      }));

      /***/ }),
    /* 47 */
    /***/ (function(module, exports, __webpack_require__) {

      ;(function (root, factory, undef) {
        if (true) {
          // CommonJS
          module.exports = exports = factory(__webpack_require__(0), __webpack_require__(5), __webpack_require__(6), __webpack_require__(4), __webpack_require__(1));
        }
        else if (typeof define === "function" && define.amd) {
          // AMD
          define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], factory);
        }
        else {
          // Global (browser)
          factory(root.CryptoJS);
        }
      }(this, function (CryptoJS) {

        (function () {
          // Shortcuts
          var C = CryptoJS;
          var C_lib = C.lib;
          var StreamCipher = C_lib.StreamCipher;
          var C_algo = C.algo;

          // Reusable objects
          var S  = [];
          var C_ = [];
          var G  = [];

          /**
           * Rabbit stream cipher algorithm.
           *
           * This is a legacy version that neglected to convert the key to little-endian.
           * This error doesn't affect the cipher's security,
           * but it does affect its compatibility with other implementations.
           */
          var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({
            _doReset: function () {
              // Shortcuts
              var K = this._key.words;
              var iv = this.cfg.iv;

              // Generate initial state values
              var X = this._X = [
                K[0], (K[3] << 16) | (K[2] >>> 16),
                K[1], (K[0] << 16) | (K[3] >>> 16),
                K[2], (K[1] << 16) | (K[0] >>> 16),
                K[3], (K[2] << 16) | (K[1] >>> 16)
              ];

              // Generate initial counter values
              var C = this._C = [
                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),
                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),
                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),
                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)
              ];

              // Carry bit
              this._b = 0;

              // Iterate the system four times
              for (var i = 0; i < 4; i++) {
                nextState.call(this);
              }

              // Modify the counters
              for (var i = 0; i < 8; i++) {
                C[i] ^= X[(i + 4) & 7];
              }

              // IV setup
              if (iv) {
                // Shortcuts
                var IV = iv.words;
                var IV_0 = IV[0];
                var IV_1 = IV[1];

                // Generate four subvectors
                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);
                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);
                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);
                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);

                // Modify counter values
                C[0] ^= i0;
                C[1] ^= i1;
                C[2] ^= i2;
                C[3] ^= i3;
                C[4] ^= i0;
                C[5] ^= i1;
                C[6] ^= i2;
                C[7] ^= i3;

                // Iterate the system four times
                for (var i = 0; i < 4; i++) {
                  nextState.call(this);
                }
              }
            },

            _doProcessBlock: function (M, offset) {
              // Shortcut
              var X = this._X;

              // Iterate the system
              nextState.call(this);

              // Generate four keystream words
              S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);
              S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);
              S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);
              S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);

              for (var i = 0; i < 4; i++) {
                // Swap endian
                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |
                  (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);

                // Encrypt
                M[offset + i] ^= S[i];
              }
            },

            blockSize: 128/32,

            ivSize: 64/32
          });

          function nextState() {
            // Shortcuts
            var X = this._X;
            var C = this._C;

            // Save old counter values
            for (var i = 0; i < 8; i++) {
              C_[i] = C[i];
            }

            // Calculate new counter values
            C[0] = (C[0] + 0x4d34d34d + this._b) | 0;
            C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;
            C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;
            C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;
            C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;
            C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;
            C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;
            C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;
            this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;

            // Calculate the g-values
            for (var i = 0; i < 8; i++) {
              var gx = X[i] + C[i];

              // Construct high and low argument for squaring
              var ga = gx & 0xffff;
              var gb = gx >>> 16;

              // Calculate high and low result of squaring
              var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;
              var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);

              // High XOR low
              G[i] = gh ^ gl;
            }

            // Calculate new state values
            X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;
            X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;
            X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;
            X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;
            X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;
            X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;
            X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;
            X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;
          }

          /**
           * Shortcut functions to the cipher's object interface.
           *
           * @example
           *
           *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);
           *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);
           */
          C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);
        }());


        return CryptoJS.RabbitLegacy;

      }));

      /***/ }),
    /* 48 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__models_User__ = __webpack_require__(49);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Client__ = __webpack_require__(3);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src__ = __webpack_require__(2);




      /**
       * Helper class representing a user MobileUser.
       */
// class User extends aggregate(UserModel, Helper) {
      class User extends __WEBPACK_IMPORTED_MODULE_0__models_User__["a" /* default */] {

        /**
         * Constructor for helper class representing a MobileUser
         *
         * @param {Object} json - response from server
         */
        constructor(json = {}) {
          super(json);

          this.updateAuthenticatedUser();
        }

        /**
         * Sets the accountName
         *
         * @param {string} name
         */
        set accountName(name) {
          super.accountName = name;

          this.updateCredentials();
        }

        /**
         * Sets the password
         *
         * @param {string} pwd
         */
        set password(pwd) {
          super.password = pwd;

          this.updateAuthenticatedUser();
        }

        /**
         * User Authentication based on client configuration
         */
        updateAuthenticatedUser() {
          if (__WEBPACK_IMPORTED_MODULE_1__Client__["a" /* client */].enableOauth)
            this.resetToken();
          else
            this.updateCredentials();
        }

        updateCredentials() {
          if (this._accountName && this._password) {
            __WEBPACK_IMPORTED_MODULE_1__Client__["a" /* client */].basicCredentials = window.btoa(this._accountName + ':' + this._password);
          }
        }

        /**
         * reset token if user has new credentials
         */
        resetToken(){
          if (this._accountName && this._password) {
            __WEBPACK_IMPORTED_MODULE_1__Client__["a" /* client */].tokenObj = null;
          }
        }

        /**
         * Sets the personalId
         *
         * @param {string} personalId
         */
        set personalId(personalId) {
          super.personalId = personalId;

          __WEBPACK_IMPORTED_MODULE_1__Client__["a" /* client */].personalId = personalId;
        }
      }
      /* harmony default export */ __webpack_exports__["a"] = (User);

      /***/ }),
    /* 49 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Base__ = __webpack_require__(8);


      /**
       * Model representing a user profile.
       */
      class UserModel extends __WEBPACK_IMPORTED_MODULE_0__Base__["a" /* default */]{

        /**
         * @param {Object}  response                        - JSON formatted response of a user profile.
         *                  response.account_name           - Account name (usually a number)
         *                  response.password               - Account password
         *                  response.email                  - The email address
         *                  response.personal_id            - The email address
         */
        constructor(response) {
          super(response);

          /** @type {String} */
          this._accountName = this._response['account_name'];

          /** @type {String} */
          this._password = this._response['password'];

          /** @type {String} */
          this._email = this._response['email'];

          /** @type {String} */
          this._email = this._response['personal_id'];
        }

        /**
         * Gets the accountName
         *
         * @type {string}
         */
        get accountName() {
          return this._accountName;
        }

        /**
         * Sets the accountName
         *
         * @param {string} name
         */
        set accountName(name) {
          this._accountName = name;
        }

        /**
         * Gets the email
         *
         * @type {string}
         */
        get personalId() {
          return this._personalId;
        }

        /**
         * Sets the personalId
         *
         * @param {string} personalId
         */
        set personalId(personalId) {
          this._personalId = personalId;
        }

        /**
         * Sets the password
         *
         * @param {string} pwd
         */
        set password(pwd) {
          this._password = pwd;
        }

        /**
         * Gets the email
         *
         * @type {string}
         */
        get email() {
          return this._email;
        }

        /**
         * Sets the password
         *
         * @param {string} email
         */
        set email(email) {
          this._email = email;
        }
      }

      /* harmony default export */ __webpack_exports__["a"] = (UserModel);


      /***/ }),
    /* 50 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Client__ = __webpack_require__(3);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__index__ = __webpack_require__(2);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__ = __webpack_require__(7);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_ProcessDefinition__ = __webpack_require__(51);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__models_ProcessInstance__ = __webpack_require__(52);






      /**
       * Service handling Process specific endpoints.
       *
       */
      class ProcessService {

        constructor() {}

        /**
         * Gets the Latest Process Definition with the give Process Definition key
         *
         * @param  {String} processDefKey           - Process Definition key
         * @throws {Error}                          - If missing credential or missing required parameters
         * @return {Promise<ProcessDefinition>}     - Promise returning a ProcessDefinition object
         *
         * @example
         * import { processService } from 'snapClinical';
         * processService.getLastProcessDefinition('SnapClinicalDemo3')
         *
         */
        async getLastProcessDefinition(processDefKey) {
          Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.getLastProcessDefinition',
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["e" /* isRequired */])({processDefKey})
            // isA(processDefKey, 'string')
          );

          const params = {
            key : processDefKey,
            size : 5,
            sort : 'version',
            order : 'desc'
          };

          return __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/process-api/repository/process-definitions`, 'GET', params)
            .then( resp => resp.json() )
            .then( response => {
              // Return the top most project definition process definition
              if (response.data && Array.isArray(response.data))
                if ( response.data.length > 0 )
                  return new __WEBPACK_IMPORTED_MODULE_3__models_ProcessDefinition__["a" /* default */](response.data[0]);
                else
                  return null;
              else throw new Error ( 'getLastProcessDefinition failed', response );
            });
        }

        /**
         * Gets the Last Process Instance with the given Process Definition Id
         *
         * @param  {String} procDefID               - Process Definition Id
         * @throws {Error}                          - If missing credential or missing required parameters
         * @return {Promise<ProcessInstance>}       - Promise returning a ProcessInstance object
         *
         */
        async queryLastProcessInstance(procDefID) {
          Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.queryLastProcessInstance',
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["e" /* isRequired */])({procDefID}),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["c" /* hasPersonalId */])()
          );

          const body = JSON.stringify({
            'processDefinitionId': procDefID,
            'includeProcessVariables': 'true',
            'variables':
              [
                {
                  'name': 'initiator',
                  'value': __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].personalId,
                  'operation': 'equals'
                }
              ]
          });

          return __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/process-api/query/process-instances`, 'POST', null, body)
            .then( resp => resp.json() )
            .then( response => {
              if (response.data && Array.isArray(response.data))
                if ( response.data.length > 0 )
                  return new __WEBPACK_IMPORTED_MODULE_4__models_ProcessInstance__["a" /* default */](response.data[0]);
                else
                  return null;
              else throw new Error ( 'queryLastProcessInstance returned empty data', response );
            });
        }

        /**
         * Starts a New Process Instance with the given Process Definition Id
         *
         * @param  {String} procDefID               - Process Definition Id
         * @throws {Error}                          - If missing credential or missing required parameters
         * @return {Promise<ProcessInstance>}       - Promise returning a ProcessInstance object
         *
         */
        async startNewProcessInstance(procDefID) {
          Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.startNewProcessInstance',
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["e" /* isRequired */])({procDefID}),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["c" /* hasPersonalId */])()
          );

          const body = JSON.stringify({
            'processDefinitionId':procDefID,
            'businessKey':'myBusinessKey',
            'returnVariables': 'true',
            'variables': [
              {
                'name': 'initiator',
                'type': 'string',
                'value': __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].personalId,
                'scope': 'local'
              },
              {
                'name': 'frontEndKey',
                'type': 'string',
                'value': __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].frontEndKey,
                'scope': 'local'
              }
            ]
          });

          return __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/process-api/runtime/process-instances`, 'POST', null, body)
            .then( resp => resp.json() )
            .then( response => {
              // console.log('startNewProcessInstance - response:', response);
              if (response.id) {
                return new __WEBPACK_IMPORTED_MODULE_4__models_ProcessInstance__["a" /* default */](response);
              } else if (response.errorCode) {
                throw new Error(response.errorCode.toString());
              } else {
                return null;
              }
            });
        }

        /**
         * Queries Historic Process Instances with the given Process Definition Id and returns the most recent one
         *
         * @param  {String} procDefID               - Process Definition Id
         * @param  {Object} query                   - Query data
         * @throws {Error}                          - If missing credential or missing required parameters
         * @return {Promise<ProcessInstance>}       - Promise returning a ProcessInstance object
         *
         */
        async queryHistoricProcessInstances(procDefID, query) {
          Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.queryHistoricProcessInstances',
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["e" /* isRequired */])({procDefID}),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["c" /* hasPersonalId */])(),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["d" /* isA */])({query}, Array)
          );
          for (let queryElement of query) {
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.queryHistoricProcessInstances',
              Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["a" /* hasAttribute */])({queryElement}, 'name'),
              Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["a" /* hasAttribute */])({queryElement}, 'value'),
              Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["a" /* hasAttribute */])({queryElement}, 'operation')
            );
          }

          const params = {
            size : 50,
            order : 'asc'
          };

          let variables = [
            {
              'name': 'initiator',
              'value': __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].personalId,
              'operation': 'equals'
            }
          ];
          // add query to variables
          if (query) variables = variables.concat(query);

          const body = JSON.stringify({
            'processDefinitionId': procDefID,
            'includeProcessVariables': 'true',
            'variables': variables
          });

          return __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/process-api/query/historic-process-instances`, 'POST', params, body)
            .then( resp => resp.json() )
            .then( response => {
              if (response.data && Array.isArray(response.data) && response.data.length > 0){

                // here return the list of variables
                let historicProcessInstances = [];
                for (let instance of response.data) {
                  historicProcessInstances.push(new __WEBPACK_IMPORTED_MODULE_4__models_ProcessInstance__["a" /* default */](instance));
                }
                return historicProcessInstances;
              }
              else throw new Error ( 'queryHistoricProcessInstances returned empty data', response );
            });
        }

        /**
         * Save Process variables for a given Process Instance
         *
         * @param  {String} procInstID          - Process Instance Id
         * @param  {Array} variables            - Array of variables
         * @throws {Error}                      - If missing credential or missing required parameters
         * @return {Promise<Boolean>}           - Promise returning a Boolean
         *
         * @example
         * The array of Variables needs to be in the following format:
         * [
         *  {
     *    'name': 'variablename',
     *    'type': 'variabletype',
     *    'value': 'variablevalue',
     *    'scope': 'local'
     *  }
         * ]
         *
         */
        async saveProcessVariables(procInstID, variables) {
          Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.startNewProcessInstance',
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["e" /* isRequired */])({procInstID}),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["d" /* isA */])({variables}, Array)
          );
          for (let variable of variables) {
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.saveFormProperties',
              Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["a" /* hasAttribute */])({variable}, 'name'),
              Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["a" /* hasAttribute */])({variable}, 'type'),
              Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["a" /* hasAttribute */])({variable}, 'value'),
              Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["a" /* hasAttribute */])({variable}, 'scope')
            );
          }
          const body = JSON.stringify(variables);

          return __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/process-api/runtime/process-instances/${procInstID}/variables`, 'PUT', null, body)
            .then( response => {
              if (response.status === 201) { // 201 Created
                return response.json();
              }
              else throw new Error ('Save Process Variable failed', response );
            });
        }

        async getAllFormFieldsValues(procInstID) {
          Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.startNewProcessInstance',
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["e" /* isRequired */])({procInstID})
          );
          const formInstances = await __WEBPACK_IMPORTED_MODULE_1__index__["formService"].getFormInstances(procInstID);
          let formFields = [];

          for (let form of formInstances) {
            let instanceFields = await __WEBPACK_IMPORTED_MODULE_1__index__["formService"].getFormInstanceFieldsByInstanceId(form.id);
            if (form !== null) formFields = formFields.concat(instanceFields.fields);
          }

          return formFields;

        }
      }

      /* harmony default export */ __webpack_exports__["a"] = (ProcessService);

      /***/ }),
    /* 51 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Base__ = __webpack_require__(8);


      /**
       * Model representing a process definition.
       */
      class ProcessDefinition extends __WEBPACK_IMPORTED_MODULE_0__Base__["a" /* default */]{
        /**
         * @param {Object}  response                        - JSON formatted response of process definition.
         * @param {String}  response.id                     - The process definition ID value
         */
        constructor(response = {}) {
          super(response);
        }
      }

      /* harmony default export */ __webpack_exports__["a"] = (ProcessDefinition);

      /***/ }),
    /* 52 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Base__ = __webpack_require__(8);


      /**
       * Model representing a process definition.
       */
      class ProcessInstanceModel extends __WEBPACK_IMPORTED_MODULE_0__Base__["a" /* default */] {
        /**
         * @param {Object}  response                        - JSON formatted response of process definition.
         * @param {String}  response.id                     - The process definition ID value
         */
        constructor(response = {}) {
          super(response);
        }
      }

      /* harmony default export */ __webpack_exports__["a"] = (ProcessInstanceModel);

      /***/ }),
    /* 53 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Client__ = __webpack_require__(3);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__ = __webpack_require__(7);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__models_Task__ = __webpack_require__(54);




      /**
       * Service handling Task specific endpoints.
       *
       */
      class TaskService {

        constructor() {
        }

        /**
         * Gets the Taskf from the given Process Definition Id
         *
         * @param  {Number} procInstID          - Process Definition Id
         * @throws {Error}                      - If missing credential or missing required parameters
         * @return {Promise<Task>}              - Promise returning a Task object
         *
         */
        async getTask(procInstID) {
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.getTask', Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["b" /* hasCredentials */])(), Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({procInstID}));

          const params = {
            processInstanceId : procInstID,
            includeProcessVariables : true
          };

          return __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/process-api/runtime/tasks`, 'GET', params)
            .then( resp => resp.json() )
            .then( response => {
              if (response.data && Array.isArray(response.data))
                if (response.data.length > 0 )
                  return new __WEBPACK_IMPORTED_MODULE_2__models_Task__["a" /* default */](response.data[0]);
                else
                  return null;
              else throw new Error ( 'getTask returned empty data', response );
            });
        }

        /**
         * Performs a specific action on a Task
         *
         * @param  {Number} taskId          - Task Id
         * @param  {String} action          - action identifier to be perfomed on the task, like 'claim'
         * @throws {Error}                  - If missing credential or missing required parameters
         * @return {Promise<Boolean>}       - Promise returning true when action completes successfully
         *
         */
        async action(taskId, action) {
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.action', Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["b" /* hasCredentials */])(), Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["c" /* hasPersonalId */])(), Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({taskId, action}));

          const body = JSON.stringify({
            'action' : action,
            'assignee' : __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].personalId
          });


          return __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/process-api/runtime/tasks/` + taskId.toString(), 'POST', null, body)
            .then( response => {
              if (response.status === 200) {
                return true;
              }
              else throw new Error ('Task action failed', response );
            });
        }

      }

      /* harmony default export */ __webpack_exports__["a"] = (TaskService);

      /***/ }),
    /* 54 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Base__ = __webpack_require__(8);



      /**
       * Model representing a task.
       */
      class TaskModel extends __WEBPACK_IMPORTED_MODULE_0__Base__["a" /* default */] {
        /**
         * @param {Object} response                   - JSON formatted response of a task instance.
         * @param {Number} response.id                - The profile ID value

         */
        constructor(response = {}) {
          super(response);
        }

        /**
         * Gets the name
         *
         * @type {String}
         */
        get name() {
          return this._response['name'];
        }

        /**
         * Gets the taskDefinitionKey
         *
         * @type {String}
         */
        get taskDefinitionKey() {
          return this._response['taskDefinitionKey'];
        }

        /**
         * Gets the formKey
         *
         * @type {String}
         */
        get formKey() {
          return this._response['formKey'];
        }

        /**
         * Gets the process Instance Variables
         *
         * @type {Array}
         */
        get procInstVars() {
          return this._response['variables'];
        }
      }

      /* harmony default export */ __webpack_exports__["a"] = (TaskModel);


      /***/ }),
    /* 55 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Client__ = __webpack_require__(3);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__ = __webpack_require__(7);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__models_Form__ = __webpack_require__(20);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_FormModel__ = __webpack_require__(21);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__models_Base__ = __webpack_require__(8);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__index__ = __webpack_require__(2);







      /**
       * Service handling the Form endpoints
       */
      class FormService {

        constructor() {
        }

        /**
         * Gets the Form data, including the variables, from the given Task Id
         *
         * @param  {Number} taskId          - Task Id
         * @throws {Error}                  - If missing credential or missing required parameters
         * @return {Promise<Form>}          - Promise returning a Form object
         *
         */
        getFormProperties(taskId) {
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.getFormProperties',
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({taskId})
          );

          const params = {
            taskId : taskId
          };

          return __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/process-api/form/form-data`, 'GET', params)
            .then( resp => resp.json() )
            .then( response => {
              // Return the top most project definition process definition
              return new __WEBPACK_IMPORTED_MODULE_2__models_Form__["a" /* default */](response);
            });
        }

        /**
         * Gets the Form data, including the fields, from the given Deployment Id and Form Key
         *
         * @param  {String} deploymentId    - Deployment Id
         * @param  {String} formKey         - Form Key
         * @throws {Error}                  - If missing credential or missing required parameters
         * @return {Promise<FormModel>}     - Promise returning a Form object
         *
         */
        getFormFields(deploymentId, formKey) {
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.getFormFields',
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({deploymentId, formKey})
          );

          return __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/process-api/repository/deployments/${deploymentId}/resourcedata/form-${formKey}.form`, 'GET')
            .then( resp => resp.json() )
            .then( response => {
              // Return the top most project definition process definition
              return new __WEBPACK_IMPORTED_MODULE_3__models_FormModel__["a" /* default */](response);
            });
        }


        /**
         * Gets the Form Instance data, including the fields, from the given Task Id, Process Instance Id and Form Key
         *
         * @param  {Number|String} taskId               - Task Id
         * @param  {Number|String} processInstanceId    - Process Instance Id
         * @param  {String} formKey                     - Form Definition Key
         * @throws {Error}                              - If missing credential or missing required parameters
         * @return {Promise<FormModel>}                 - Promise returning a Form object
         *
         */
        getFormInstanceFields(taskId, processInstanceId, formKey) {
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.getFormInstanceFields',
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({taskId, processInstanceId, formKey})
          );

          const body = JSON.stringify({
            'taskId': taskId,
            'processInstanceId': processInstanceId,
            'formDefinitionKey': formKey
          });

          return __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/form-api/form/form-instance-model`, 'POST', null, body)
            .then( resp => resp.json() )
            .then( response => {
              // Return the form model
              return new __WEBPACK_IMPORTED_MODULE_3__models_FormModel__["a" /* default */](response);
            });
        }


        /**
         * Gets the Form Instance data, including the fields, from the given Form Instance Id
         *
         * @param  {Number|String} formInstanceId       - Form Instance Id
         * @throws {Error}                              - If missing credential or missing required parameters
         * @return {Promise<FormModel>}                 - Promise returning a Form object
         *
         */
        getFormInstanceFieldsByInstanceId(formInstanceId) {
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.getFormInstanceFieldsByInstanceId',
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({formInstanceId})
          );

          const body = JSON.stringify({
            'formInstanceId': formInstanceId
          });

          return __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/form-api/form/form-instance-model`, 'POST', null, body)
            .then( resp => resp.json() )
            .then( response => {
              // Return the form model
              return new __WEBPACK_IMPORTED_MODULE_3__models_FormModel__["a" /* default */](response);
            });
        }


        /**
         * Gets all Form Instances from the given Process Instance Id
         *
         * @param  {Number|String} processInstanceId    - Process Instance Id
         * @throws {Error}                              - If missing credential or missing required parameters
         * @return {Promise<Array<any>>}                 - Array of instances
         *
         */
        getFormInstances(processInstanceId) {
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.getFormInstancesForProcessInstanceId',
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({processInstanceId})
          );

          const body = JSON.stringify({
            'processInstanceId': processInstanceId
          });

          return __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/form-api/query/form-instances?size=9999`, 'POST', null, body)
            .then( resp => resp.json() )
            .then( response => {
              // Return an array of form instances
              // console.log('getFormInstancesForProcessInstanceId - response:', response);

              // filter out the list to remove duplicates
              var cleaned = new Array ();
              var formIdAdded = {};

              for (var i=0, c=0; i<response.data.length; i++) {
                let el = response.data[i];
                let formId = el['formDefinitionId'];
                if (formIdAdded[formId] == undefined) {
                  cleaned[c] = el;
                  formIdAdded[formId] = {
                    ts: el['submittedDate'],
                    c: c
                  };
                  c++;
                } else if (formIdAdded[formId]['ts'] < el['submittedDate']){
                  cleaned[formIdAdded[formId]['c']] = el;
                  formIdAdded[formId]['ts'] = el['submittedDate'];
                }
              };

              return cleaned.slice(0);
            });
        }


        /**
         * Creates a Form Instance data for a given Task Id, Process Instance Id, Form Key and fields
         *
         * @param  {Number|String} taskId               - Task Id
         * @param  {String} formKey                     - Form Definition Key
         * @param  {Number|String} processInstanceId    - Process Instance Id (optional)
         * @param  {Array} fields                       - fields, an array of objects each with id and value fields, for example
         *                                                [ { id: 'someid', value: 'somevalue' } ]
         * @throws {Error}                              - If missing credential or missing required parameters
         * @return {Promise<Boolean>}                   - Promise returning true if
         *
         */
        createFormInstance(taskId, formKey, processInstanceId, fields) { // , parentDeploymentId) {
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.createFormInstance',
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({taskId, formKey, fields}),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["d" /* isA */])({fields}, Array)
          );
          for (let field of fields) {
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.createFormInstance',
              Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["a" /* hasAttribute */])({field}, 'id'),
              Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["a" /* hasAttribute */])({field}, 'value')
            );
          }

          //remap the fields into an hashmap variables object
          const variables = {};
          fields.forEach(field => (variables[field.id] = field.value));

          let bodyObj = {
            'taskId': taskId,
            'formDefinitionKey': formKey,
            'variables': variables
          };
          if (processInstanceId) bodyObj['processInstanceId'] = processInstanceId;
          const body = JSON.stringify(bodyObj);


          return __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/form-api/form/form-instances`, 'POST', null, body)
            .then( response => {
              if (response.status === 201 || response.status === 200) { // 201 Created
                return true;
              }
              else throw new Error ('Create Instance Fields failed', response );
            });
        }

        /**
         * Updates a Form Instance data for a given Task Id, Process Instance Id, Form Key and fields
         *
         * @param  {Number|String} taskId               - Task Id
         * @param  {String} formKey                     - Form Definition Key
         * @param  {Number|String} processInstanceId    - Process Instance Id (optional)
         * @param  {Array} fields                       - fields, an array of objects each with id and value fields, for example
         *                                                [ { id: 'someid', value: 'somevalue' } ]
         * @throws {Error}                              - If missing credential or missing required parameters
         * @return {Promise<Boolean>}                   - Promise returning true if
         *
         */
        updateFormInstance(taskId, formKey, processInstanceId, fields) {
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.updateFormInstance',
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({taskId, formKey, fields}),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["d" /* isA */])({fields}, Array)
          );
          for (let field of fields) {
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.updateFormInstance',
              Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["a" /* hasAttribute */])({field}, 'id'),
              Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["a" /* hasAttribute */])({field}, 'value')
            );
          }

          //remap the fields into an hashmap variables object
          const variables = {};
          fields.forEach(field => (variables[field.id] = field.value));

          let bodyObj = {
            'taskId': taskId,
            'formDefinitionKey': formKey,
            'variables': variables
          };
          if (processInstanceId) bodyObj['processInstanceId'] = processInstanceId;
          const body = JSON.stringify(bodyObj);

          return __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/form-api/form/form-instances`, 'PUT', null, body)
            .then( response => {
              if (response.status === 200 || response.status === 204) { // 204 No Content
                return true;
              }
              else throw new Error ('Update Instance Fields failed', response );
            });
        }

        /**
         * Save Form Outcome for a given Process Instance and formKey
         *
         * @param  {String} procInstID          - Process Instance Id
         * @param  {String} outcome             - Value of the outcome variable
         *                                        a name selected among the form outcome array
         * @param  {String} formKey             - Form Definition Key
         * @throws {Error}                      - If missing credential or missing required parameters
         * @return {Promise<Boolean>}           - Promise returning a Boolean
         *
         * @example
         * A new Variable will be created:
         * [
         *  {
     *    'name': 'form_formKey_outcome',
     *    'type': 'string',
     *    'value': 'outcome',
     *    'scope': 'local'
     *  }
         * ]
         *
         */
        async saveFormOutcome(procInstID, outcome, formKey) {
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + '.saveFormOutcome',
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({outcome}, {formKey}),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["d" /* isA */])({outcome}, String),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["d" /* isA */])({formKey}, String)
          );

          const variables = [
            {
              'name': `form_${formKey}_outcome`,
              'type': 'string',
              'value': outcome,
              'scope': 'local'
            }];

          return __WEBPACK_IMPORTED_MODULE_5__index__["processService"].saveProcessVariables(procInstID, variables);
        }

      }

      /* harmony default export */ __webpack_exports__["a"] = (FormService);

      /***/ }),
    /* 56 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Client__ = __webpack_require__(3);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__ = __webpack_require__(7);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utility_ArrayUtility__ = __webpack_require__(57);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__models_FormModel__ = __webpack_require__(21);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__index__ = __webpack_require__(2);









      /**
       * Service handling the overal Flow Service
       *
       */
      class FlowService {

        constructor() {
          this._lastProcessDef = undefined;
          this._lastProcessInst = undefined;
          this._task = undefined;
          this._processDefKey = undefined;
        }
        /**
         * Gets the current process Definition Key
         *
         * @type {String}
         */
        get processDefKey() {
          return this._processDefKey;
        }

        /**
         * Sets the current process Definition Key
         *
         * @param {String} defKey
         */
        set processDefKey(defKey) {
          this._processDefKey = defKey;
        }

        /**
         * Gets the current task
         *
         * @type {String|Number}
         */
        get task() {
          return this._task;
        }

        /**
         * Sets the current task
         *
         * @param {String|Number} task
         */
        set task(task) {
          this._task = task;
        }


        /**
         * Gets the next Task for a given Process Definition Key
         *
         * @param  {String} processDefKey       - Process Definition Key
         * @param  {Object} qualifier           - Object used to check if the current user is qualified for the flow
         *                                        This input needs to be in the following format:
         *
         *     {
     *       'name': 'somename',
     *       'value': 'somevalue,
     *       'operation': 'equals'|'notEquals'|'equalsIgnoreCase'|'notEqualsIgnoreCase'|
     *                    'lessThan'|'greaterThan'|'lessThanOrEquals'|'greaterThanOrEquals'|'like'
     *     }
         *
         * @throws {Error}                      - If missing credential or missing required parameters
         * @return {Promise<Object>}            - Promise returning an object with the variables, form fields and outcomes
         *                                        specified for the current task. The output object is as follows:
         *
         *     {
     *       variables: [
     *           {
     *               'id': 'someid',
     *               'name': 'somename',
     *               'type': 'string'|'short'|'integer'|'long'|'double'|'boolean'|'date',
     *               'value': somevalue,
     *               'readable': true|false,
     *               'writable': true|false,
     *               'required': true|false,
     *               'datePattern': 'somedatepattern',
     *               'enumValues': [ some array of enum Values like
     *                    {
     *                       'id': 'someid',
     *                       'name': 'somename'
     *                    },
     *                    ...
     *                ]
     *           },
     *           ...
     *       ],
     *       fields: [
     *           {
     *               'fieldType': 'FormField'|'ExpressionFormField'|'OptionFormField',
     *               'id': 'someid',
     *               'name': 'somename',
     *               'type': 'text'|'multi-line-text'|'integer'|'decimal'|'date'|'boolean'|'hyperlink'|
     *                       'expression'|'radio-buttons'|'dropdown',
     *               'value': 'somevalue',
     *               'required': true|false,
     *               'readOnly': true|false,
     *               'overrideId': true|false,
     *               'placeholder': 'someplaceholder',
     *               'params': {
     *                      'minLength': 'somevalue',
     *                      'maxLength': 'somevalue',
     *                      'regexPattern': 'someregex',
     *                      'mask': 'somemask'
     *                   },
     *               'layout': 'somelayout'
     *           },
     *           ...
     *       ],
     *       outcomes: [
     *           {
     *               'id': 'someid',       can be null
     *               'name': 'somename',   outcome value
     *           },
     *           ...
     *       ]
     *     }
         *
         *
         */
        async getNextTask(processDefKey, qualifier) {
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + ".getNextTask", Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["b" /* hasCredentials */])(), Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["c" /* hasPersonalId */])(), Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({processDefKey}));
          const lastProcessDef = await __WEBPACK_IMPORTED_MODULE_4__index__["processService"].getLastProcessDefinition(processDefKey);
          if (!lastProcessDef)
            throw new Error("Could not find the Process Definition Key");
          this._lastProcessDef = lastProcessDef;
          this.processDefKey = processDefKey;
          // console.log('FlowService, getNextTask latestProcessDef:', latestProcessDef);

          // Check if the user has already started the flow
          let lastProcessInst = await __WEBPACK_IMPORTED_MODULE_4__index__["processService"].queryLastProcessInstance(lastProcessDef.id);
          // console.log('FlowService, getNextTask lastProcessInst:', lastProcessInst);

          if (!lastProcessInst) {
            /* Deprecated
            // Check if the user is qualified for the process
            const qualified = this.checkQualification(qualifier);
            if (qualified) {
                try {
                    lastProcessInst = await processService.startNewProcessInstance(lastProcessDef.id);
                    console.log('FlowService getNextTask BE SURE THAT WE TEST THIS');
                } catch(error) {
                    throw error;
                };
            }
            else
                throw Error ('User not qualified for the flow process');
             **/
            lastProcessInst = await __WEBPACK_IMPORTED_MODULE_4__index__["processService"].startNewProcessInstance(lastProcessDef.id);
          }
          this._lastProcessInst = lastProcessInst;

          return this.getNextTaskAndFormData();
        }

        /**
         * Same as getNextTask, but it doesn't reuse an old session
         * @param processDefKey
         * @param qualifier
         * @return {Promise.<Object>}
         */
        async createNewInstanceAndGetFirstTask(processDefKey, qualifier) {
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + ".createNewInstanceAndGetFirstTask", Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["b" /* hasCredentials */])(), Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["c" /* hasPersonalId */])(), Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({processDefKey}));

          const lastProcessDef = await __WEBPACK_IMPORTED_MODULE_4__index__["processService"].getLastProcessDefinition(processDefKey);
          if (!lastProcessDef)
            throw new Error("Could not find the Process Definition Key");
          this._lastProcessDef = lastProcessDef;
          this.processDefKey = processDefKey;

          /* Deprecated
      // Check if the user is qualified for the process
      const qualified = this.checkQualification(qualifier);

      if (qualified) {
        lastProcessInst = await processService.startNewProcessInstance(lastProcessDef.id);
        console.log('FlowService createNewInstanceAndGetFirstTask BE SURE THAT WE TEST THIS');
      }
      else
        throw Error ('User not qualified for the flow process');
      */

          let lastProcessInst = await __WEBPACK_IMPORTED_MODULE_4__index__["processService"].startNewProcessInstance(lastProcessDef.id);

          this._lastProcessInst = lastProcessInst;

          return this.getNextTaskAndFormData();
        }


        /**
         * Gets the next Task using the stored last Process Instance
         *
         * @throws {Error}                      - If missing credential or missing required parameters
         * @return {Promise<Object>}            - Promise returning an object with three arrays of objects:
         *                                        variables (form properties),
         *                                        fields (form fields)
         *                                        outcomes (form buttons)
         *                                        See getNextTask method for more information on the object format.
         *
         */
        async getNextTaskAndFormData() {
          const lastProcessInst = this._lastProcessInst;
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + ".getTaskAndFormData", Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({lastProcessInst}) );

          const task = await __WEBPACK_IMPORTED_MODULE_4__index__["taskService"].getTask(lastProcessInst.id);
          if (!task) {
            // This process instance has no active tasks, returning null
            // console.log('FlowService ' + client.personalId + ' get last process instance:  returning null values');
            return null;
          }
          this._task = task;

          const procVariables = task.procInstVars;

          await __WEBPACK_IMPORTED_MODULE_4__index__["taskService"].action(task.id, "claim");
          // console.log('FlowService, getTaskAndFormData action claim');
          // console.log('FlowService ' + client.personalId + ' claims task ' + task.name);

          const formVariables = await __WEBPACK_IMPORTED_MODULE_4__index__["formService"].getFormProperties(task.id);

          let formData = new __WEBPACK_IMPORTED_MODULE_3__models_FormModel__["a" /* default */]({ fields:[], outcomes:[] });

          if (task.formKey) {
            formData = await __WEBPACK_IMPORTED_MODULE_4__index__["formService"].getFormInstanceFields(task.id, lastProcessInst.id, task.formKey);
            // console.log('FlowService  formkey: '+ task.formKey + ' - fields: ' + JSON.stringify(formData.fields) + ' - variables: ' + JSON.stringify(procVariables));

            if ( formData.fields && formData.fields.length > 0 && procVariables && procVariables.length > 0) {

              // getting the list of Fields with null value that potentially can be setted by a process variable
              let listOfFieldsIds = formData.fields
                .filter(el => (!el.value && el.type !== "expression" && el.type !== "hyperlink"))
                .map( el => ({id: el.id}) );

              // console.log('FlowService list of fields to be setted:  ' + JSON.stringify(listOfFieldsIds))

              // getting the list of ProcVariables with valid value and matching ids
              let sublistOfProcVariables = procVariables
                .filter( el1 => listOfFieldsIds.find( el2 => el1.name === el2.id ))
                .map(el => FlowService.mapVariablesToFields(el));

              // console.log('FlowService list of variables with matching ids:  ' + JSON.stringify(sublistOfProcVariables))

              // updating the null values of the Fields matchimg with valid variables
              formData.fields.forEach( el => {
                let i = sublistOfProcVariables.findIndex(el2 => el.id === el2.id);
                if (i > -1)
                  el.value = sublistOfProcVariables[i].value;
              });

              // console.log('FlowService list of Fields updated:  ' + JSON.stringify(formData.fields))

            }

          }

          return {
            id: task.id,
            name: task.name,
            processInstanceId: lastProcessInst.id,
            definitionKey: task.taskDefinitionKey,
            formKey: task.formKey,
            variables: formVariables._response["formProperties"],
            fields: formData.fields,
            outcomes: formData.outcomes
          };
        }

        /**
         * *** Deprecated ***
         * Checks if the current user is qualified for executing the process identified by the current Process Definition
         *
         * @param  {Object} qualifier           - Object used to check if the current user is qualified for the flow
         *                                        This input needs to be in the following format:
         *
         *     {
     *       'name': 'somename',
     *       'value': 'somevalue,
     *       'operation': 'equals'|'notEquals'|'equalsIgnoreCase'|'notEqualsIgnoreCase'|
     *                    'lessThan'|'greaterThan'|'lessThanOrEquals'|'greaterThanOrEquals'|'like'
     *     }
         *
         * @return {Promise<Boolean>}            - Promise returning an Boolean indicating if the user is qualified
         *
         */
        async checkQualification (qualifier) {
          const lastProcessDef = this._lastProcessDef;
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + ".getTaskAndFormData", Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({lastProcessDef, qualifier}) );

          const processInstances = await __WEBPACK_IMPORTED_MODULE_4__index__["processService"].queryHistoricProcessInstances(lastProcessDef.id, qualifier);
          // logic to check if the user is qualified
          let qualified = false;
          if (processInstances.length > 0) qualified = true;
          // console.log('FlowService, getNextTask qualified:', qualified);
          return qualified;
        }

        /**
         * Save variables, fields and outcome (single string value) for the current TaskId
         *
         * @param  {Array} variables            - Array of variables (formProperties)
         * @param  {Array} fields               - Array of fields (fields in the Form)
         * @param  {String} outcome             - outcome name selected among the form outcome array
         * @throws {Error}                      - If missing credential or missing required parameters
         *
         * @example
         * The array of Variables needs to be in the following format:
         *
         *   [
         *        {
     *            id: 'variablename',
     *            name: 'something', (optional)
     *            type: 'string',
     *            value: null,
     *            readable: true,
     *            writable: true,
     *            required: false,
     *            datePattern: null,
     *            enumValues: []
     *       },
         *       ...
         *   ]
         */
        async saveVariables(variables, fields, outcome) {
          const lastProcessInst = this._lastProcessInst;
          const task = this._task;
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + ".saveVariables",
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({variables, fields, lastProcessInst, task}),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["d" /* isA */])({variables}, Array),
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["d" /* isA */])({fields}, Array)
          );

          // SAVE fields
          // Note: the /form/form-instance-model does not properly handle the readOnly property, which is always true
          // const filteredFields = fields.filter(el => (el.readOnly !== undefined) ? !el.readOnly && el.value : el.value);
          // const filteredFields = fields.filter(el => el.value && (el.type !== 'expression') && (el.type !== 'hyperlink'));

          // handle also 'false' on booleans
          const filteredFields = fields.filter(el => (el.type == "boolean") || (el.value && (el.type !== "expression") && (el.type !== "hyperlink")));

          if (filteredFields.length > 0)
            await __WEBPACK_IMPORTED_MODULE_4__index__["formService"].updateFormInstance(task.id, task.formKey, lastProcessInst.id,  filteredFields);

          // SAVE variables
          // map input variables and fields in a format like
          // [
          //     {
          //         'name': 'variablename',
          //         'type': 'variabletype',
          //         'value': 'variablevalue',
          //         'scope': 'local'
          //     },
          //     ...
          // ]
          let mappedVariables = variables
            .filter( el => (el.writable !== undefined) ? el.writable && el.value : el.value )
            .map( el => ({name: el.id, type: el.type, value: el.value, scope: "local"}) );

          if (outcome && task.formKey) {
            Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + ".saveVariables",
              Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["d" /* isA */])({outcome}, String)
            );

            mappedVariables.push(
              {
                "name": `form_${task.formKey}_outcome`,
                "type": "string",
                "value": outcome,
                "scope": "local"
              });

          }

          const mappedFields = filteredFields
            .map( el => FlowService.mapFieldsToVariables(el));
          // Remove the common elements, taking the fields elements as
          // Join the two arrays and remove duplicates, the fields elements take the precedence
          const processVariables = Object(__WEBPACK_IMPORTED_MODULE_2__utility_ArrayUtility__["a" /* union */])(mappedVariables, mappedFields, (x, y) => x.name === y.name );

          if (processVariables.length > 0)
            await __WEBPACK_IMPORTED_MODULE_4__index__["processService"].saveProcessVariables(lastProcessInst.id, processVariables);
        }

        /**
         * Moves to the next Task using the stored last Process Instance
         *
         * @throws {Error}                      - If missing credential or missing required parameters
         * @return {Promise<Object>}            - Promise returning an object with three arrays of objects:
         *                                        variables (form properties),
         *                                        fields (form fields)
         *                                        outcomes (form buttons)
         *                                        See getNextTask method for more information on the object format.
         *
         */
        async moveToNextTask() {
          const lastProcessInst = this._lastProcessInst;
          const task = this._task;
          Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["f" /* validate */])( this.constructor.name + ".getTaskAndFormData", Object(__WEBPACK_IMPORTED_MODULE_1__utility_ValidationUtility__["e" /* isRequired */])({lastProcessInst, task}) );

          await __WEBPACK_IMPORTED_MODULE_4__index__["taskService"].action(task.id, "complete");
          // console.log('FlowService, moveToNextTask action complete');
          // console.log('FlowService   ' + client.personalId + ' completes task ' + task.name);

          return this.getNextTaskAndFormData();
        }

        /**
         * Helper method used to map a field object into an object that can be stored as a variable
         *
         * @param  {Object} el          - Field object
         * @return {Object}             - Variable object
         *
         */
        static mapFieldsToVariables(el) {
          let type = el.type;
          if (type === "text") type = "string";
          if (type === "multi-line-text") type = "string";
          if (type === "integer") type = "long";
          if (type === "decimal") type = "double";
          let value = el.value;
          if (type === "boolean") {
            if (value === "true") value = true;
            if (value === "false") value = false;
          }
          return {
            name: el.id,
            type: type,
            value: value,
            scope: "local"
          };
        }

        /**
         * Helper method used to map a variable object into an object that can be stored as a field value
         *
         * @param  {Object} el          - Variable object
         * @return {Object}             - Field object
         *
         */
        static mapVariablesToFields(el) {
          let value = el.value;
          let type = el.type;
          if (type === "boolean") {
            if (value === "true") value = true;
            if (value === "false") value = false;
          }
          return {
            id: el.name,
            value: value,
          };
        }


      }

      /* harmony default export */ __webpack_exports__["a"] = (FlowService);

      /***/ }),
    /* 57 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return union; });
      /* unused harmony export unique */
      /* unused harmony export arrayToObject */
      /**
       * http://stackoverflow.com/a/13319168
       * arr1 and arr2 are arrays of any length; eqFn is a function which
       * can compare two items and return true if they're equal and false otherwise
       * @param {Array} arr1 - Array of any length
       * @param {Array} arr2 - Array of any length
       * @param {Function<Boolean>} eqFn - Function which returns a Boolean
       */
      function union(arr1, arr2, eqFn) {
        return unique(arr1.concat(arr2), eqFn);
      }

      /* // Note, original from http://stackoverflow.com/a/13319168
function union(arr1, arr2, equalityFunc) {
    let union = arr1.concat(arr2);

    for (let i = 0; i < union.length; i++) {
        for (let j = i+1; j < union.length; j++) {
            if (equalityFunc(union[i], union[j])) {
                union.splice(j, 1);
                j--;
            }
        }
    }
    return union;
}
*/

      /**
       * Returns an array with unique values given the Eq Function
       * @param {Array} arr - Array that may contain duplicates
       * @param {Function<Boolean>} eqFn - A function that returns a Boolean
       */
      function unique(arr, eqFn) {
        for (let i = 0; i < arr.length; i++) {
          for (let j = i + 1; j < arr.length; j++) {
            if (eqFn(arr[i], arr[j])) {
              arr.splice(j, 1);
              j--;
            }
          }
        }
        return arr;
      }

      /**
       * Convert the Array to an object
       *
       * @param  {Array}  _array    - The array to convert to an object
       * @param  {Object} [options] - Options on how to conver the array
       * @return {Object}           - The resulting object from the array
       */
      function arrayToObject(_array, options = undefined) {
        const _obj = {};
        let i = 0;
        _array.forEach((obj) => {
          const key = (options && options.key) ? obj[options.key] : obj.id || ++i;
          if (key !== undefined && key !== null) {
            _obj[key] = obj;
          }
        });
        return _obj;
      }




      /***/ }),
    /* 58 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Client__ = __webpack_require__(3);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1____ = __webpack_require__(2);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__ = __webpack_require__(7);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_snapclinical_offline_engine__ = __webpack_require__(59);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_snapclinical_offline_engine___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_snapclinical_offline_engine__);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utility_OfflineUtility__ = __webpack_require__(12);






      /**
       * Service handling Process specific endpoints.
       *
       */

      class SnapClinicalApiService {

        constructor() {
        }

        /**
         * Start a new process or resume my existing tasks (no task claim)
         *
         * @param {Object} processData          - Object containing lookup criteria and initializations
         * @throws {Error}                      - If missing credential or missing required parameters
         * @return {Promise<Object>}            - List of tasks extended with all related information such as form, etc...
         *
         * @example
         * snapClinicalApiService.startNewOrResumeProcess(
         *          {
   *            "forceNewProcessInstance": true | false,
   *            "processDefinitionKey": "processKeyValue",
   *            "processDefinitionId": "processKeyValue:NNN:MMM",
   *            "message": "someMessage",
   *            "businessKey": "someBusinessKeyValue",
   *            "tenantId": "someTenantIdValue",
   *            "processVariables": [
   *                {
   *                "name" : "variableName",
   *                "value" : "variableValue",
   *                "valueUrl" : "http://...",
   *                "type" : "string"
   *                }
   *             ],
   *             "queryVariables": [
   *               {
   *                  "name": "variableName",
   *                  "value": "variableValue",
   *                  "operation": "equals",
   *                  "type" : "string"
   *               }
   *             ]
   *          }
         *        );
         */
        async startNewOrResumeProcess(processData) {
          Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["f" /* validate */])(this.constructor.name + ".startNewOrResumeProcess",
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["e" /* isRequired */])({processData}),
            ( !processData.hasOwnProperty("processDefinitionKey") &&
              !processData.hasOwnProperty("processDefinitionId") &&
              !processData.hasOwnProperty("message")) ? "key value missing" : "");

          const initiator = __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].personalId;

          if (!processData.processVariables) processData.processVariables = [];

          if (! processData.processVariables.find( v => (v.name == "frontEndKey"))) {
            processData.processVariables.push({
              "name" : "frontEndKey",
              "value" : __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].frontEndKey,
              "type" : "string"
            });
          }

          if (__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].isOnlineEnabled()) {
            const body = JSON.stringify(processData);

            let response = await __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/snap-api/get-new-or-resume-process`, "POST", null, body);

            if (response.status === 200) { // 200 OK
              return response.json();
            }
            else {
              let json = await response.json();
              throw new Error(JSON.stringify(json));
            }
          }
          else {
            this.loadFlowIntoBPMN(processData.processDefinitionKey);

            __WEBPACK_IMPORTED_MODULE_3_snapclinical_offline_engine__["bpmnEngine"]._eventListener.on("fetch", async (parms) => {
              const {url, method, body} = parms;

              console.log("fetch:", parms);

              let response = await __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(url, method, null, JSON.stringify(body));
              if (response.status === 200) { // 200 OK
                return response.json();
              }
              else {
                let json = await response.json();
                throw new Error(JSON.stringify(json));
              }
            });

            return __WEBPACK_IMPORTED_MODULE_3_snapclinical_offline_engine__["bpmnEngine"].getNewOrResumeProcess(processData, initiator);
          }
        }

        /**
         * Claim & complete task and get next tasks within the same process instance.
         * This method is to be used to progress within a given process from one user task to the next.
         *
         * @param {Object} taskData           - Object containing all required info to complete task
         * @return {Promise<*|Promise<*>|PromiseLike<T>|Promise<T>>}
         *
         * @example
         * snapClinicalApiService.completeAndGetNext(
         *        {
   *          "taskId": "someId",
   *          "formDefinitionId": "form id",
   *          "processVariables" : [
   *                {
   *                "name" : "variableName",
   *                "value" : "variableValue",
   *                "valueUrl" : "http://...",
   *                "type" : "string"
   *                }
   *            ],
   *          "fields" : [
   *                {
   *                "id" : "fieldId",
   *                "value" : "fieldValue"
   *                }
   *            ],
   *          "outcome" : {
   *                "id":null,
   *                "name":"Next"
   *            }
   *        }
         * );
         */
        async completeAndGetNext(taskData) {
          Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["f" /* validate */])(this.constructor.name + ".completeAndGetNext",
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["e" /* isRequired */])({taskData}),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["a" /* hasAttribute */])({taskData},"taskId")
            // hasAttribute({taskData},"formDefinitionId"),
          );

          if (__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].isOnlineEnabled()) {
            const body = JSON.stringify(taskData);

            let response = await __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/snap-api/complete-and-get-next`, "POST", null, body);

            if (response.status === 200) { // 200 OK
              return response.json();
            }

            else {
              let json = await response.json();
              throw new Error(JSON.stringify(json));
              // throw new Error("completeAndGetNext failed,\nerror message: " + json.message);
            }
          }
          else {
            return __WEBPACK_IMPORTED_MODULE_3_snapclinical_offline_engine__["bpmnEngine"].completeAndGetNext(taskData);
          }
        }


        /**
         * Executes an action on a given task.
         * @param {Object} actionData         - object defining the action to be performed.
         *                                    The object can have the following structure: <code>
         *                                    {
   *                                      "taskId": "someId",
   *                                      "action": "complete" | "claim" | "delegate" | "resolve",
   *                                      "variables": [ {
   *                                          "name" : "variableName",
   *                                          "value" : "variableValue",
   *                                          "valueUrl" : "http://...",
   *                                          "type" : "string"
   *                                          }
   *                                      ],
   *                                      "assignee": "userWhoClaimsOrToDelegateTo"
   *                                    }
         *                                    </code>
         *                                    property taskId and action are mandatory.
         *
         * @return {Promise<any>}
         *
         * @example
         *    import {client} from "snapClinical";
         *
         *    client.apiBaseUrl = "http://test.com";
         *    client.basicCredentials = "basic authentication string";
         *
         *    const actionData = {
   *        "taskId": "someId",
   *        "action":"complete",
   *        "variables": [
   *          {
   *              "name": "VariableName",
   *              "value": "VariableValue",
   *              "type": "string"
   *          }
   *        ]
   *      };
         *
         *    try {
   *      await snapClinicalApiService.taskAction(taskData);
   *    }
         *    catch(e) {
   *      console.error("task Action thown an error:", e);
   *    }
         *
         *
         */
        async taskAction(actionData) {
          Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["f" /* validate */])(this.constructor.name + ".taskAction",
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["e" /* isRequired */])({actionData}),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["a" /* hasAttribute */])({actionData},"action")
          );

          const body = JSON.stringify(actionData);

          let response = await __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/snap-api/task-action`, "POST", null, body);

          if (response.status === 200) { // 200 OK
            return response.json();
          }
          else {
            let json = await response.json();
            throw new Error("taskAction failed,\nerror message: " + json.message);
          }
        }

        /**
         * Get my active tasks. Tasks can be filtered using various lookup criteria.
         * @param {Object} lookupData           - object defining lookup criteria in the form:
         *```
         *          {
   *            "processDefinitionKey": "processKeyValue",
   *            "processDefinitionId": "processKeyValue:NNN:MMM",
   *            "processDefinitionKeyLike": "processKeyLikeValue"
   *            "processVariables": [
   *               {
   *                  "name": "variableName",
   *                  "value": "variableValue",
   *                  "operation": "equals",
   *                  "type" : "string"
   *               }
   *             ]
   *          }
         *          ```
         * @return {Promise<any>}             - list of task items
         * @example
         *    import {client} from "snapClinical";
         *
         *    client.apiBaseUrl = "http://test.com";
         *    client.basicCredentials = "basic authentication string";
         *
         *    const lookupData = {
   *        "processDefinitionKey": "someKey",
   *        "queryVariables": [
   *          {
   *              "name": "VariableName",
   *              "value": "VariableValue",
   *              "operation": "equals",  // not yet implemented
   *              "type": "string"
   *          }
   *        ]
   *      };
         *
         *    try {
   *      var result = await snapClinicalApiService.getActiveTasks(lookupData);
   *    }
         *    catch(e) {
   *      console.error("getActiveTasks thown an error:", e);
   *    }
         *
         *
         */
        async getActiveTasks(lookupData) {
          Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["f" /* validate */])(this.constructor.name + ".getActiveTasks",
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["b" /* hasCredentials */])(),
            Object(__WEBPACK_IMPORTED_MODULE_2__utility_ValidationUtility__["e" /* isRequired */])({lookupData})
          );

          const body = JSON.stringify(lookupData);

          let response = await __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].fetch(`/${__WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].contextPath.flowable}/snap-api/get-tasks`, "POST", null, body);

          if (response.status === 200) { // 200 OK
            return response.json();
          }
          else {
            let json = await response.json();
            throw new Error("getActiveTasks failed,\nerror message: " + json.message);
          }
        }

        async loadFlowIntoBPMN(processKey) {
          try {
            const key = __WEBPACK_IMPORTED_MODULE_4__utility_OfflineUtility__["a" /* default */].decrypt(localStorage.getItem(processKey + "_key"), __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].encryptionKey);
            const xml = __WEBPACK_IMPORTED_MODULE_4__utility_OfflineUtility__["a" /* default */].decrypt(localStorage.getItem(processKey + "_xml"), __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].encryptionKey);
            const forms = __WEBPACK_IMPORTED_MODULE_4__utility_OfflineUtility__["a" /* default */].decrypt(localStorage.getItem(processKey + "_forms"), __WEBPACK_IMPORTED_MODULE_0__Client__["a" /* client */].encryptionKey);
            __WEBPACK_IMPORTED_MODULE_3_snapclinical_offline_engine__["bpmnEngine"].loadFlow(key, xml);
            const _forms = JSON.parse(forms);
            for (const formKey of Object.keys(_forms)) {
              console.log("loading form: ", _forms[formKey].key);
              __WEBPACK_IMPORTED_MODULE_3_snapclinical_offline_engine__["bpmnEngine"].addForm(key, _forms[formKey].key, _forms[formKey]);
            }
            console.log("flow is loaded");
          } catch (err) {
            console.error("Could not initialize the bpmn engine");
          }
        }
      }

      /* harmony default export */ __webpack_exports__["a"] = (SnapClinicalApiService);


      /***/ }),
    /* 59 */
    /***/ (function(module, exports, __webpack_require__) {

      (function webpackUniversalModuleDefinition(root, factory) {
        if(true)
          module.exports = factory();
        else if(typeof define === 'function' && define.amd)
          define("snapclinicalOfflineEngine", [], factory);
        else if(typeof exports === 'object')
          exports["snapclinicalOfflineEngine"] = factory();
        else
          root["snapclinicalOfflineEngine"] = factory();
      })(window, function() {
        return /******/ (function(modules) { // webpackBootstrap
          /******/ 	// The module cache
          /******/ 	var installedModules = {};
          /******/
          /******/ 	// The require function
          /******/ 	function __webpack_require__(moduleId) {
            /******/
            /******/ 		// Check if module is in cache
            /******/ 		if(installedModules[moduleId]) {
              /******/ 			return installedModules[moduleId].exports;
              /******/ 		}
            /******/ 		// Create a new module (and put it into the cache)
            /******/ 		var module = installedModules[moduleId] = {
              /******/ 			i: moduleId,
              /******/ 			l: false,
              /******/ 			exports: {}
              /******/ 		};
            /******/
            /******/ 		// Execute the module function
            /******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
            /******/
            /******/ 		// Flag the module as loaded
            /******/ 		module.l = true;
            /******/
            /******/ 		// Return the exports of the module
            /******/ 		return module.exports;
            /******/ 	}
          /******/
          /******/
          /******/ 	// expose the modules object (__webpack_modules__)
          /******/ 	__webpack_require__.m = modules;
          /******/
          /******/ 	// expose the module cache
          /******/ 	__webpack_require__.c = installedModules;
          /******/
          /******/ 	// define getter function for harmony exports
          /******/ 	__webpack_require__.d = function(exports, name, getter) {
            /******/ 		if(!__webpack_require__.o(exports, name)) {
              /******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
              /******/ 		}
            /******/ 	};
          /******/
          /******/ 	// define __esModule on exports
          /******/ 	__webpack_require__.r = function(exports) {
            /******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
              /******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
              /******/ 		}
            /******/ 		Object.defineProperty(exports, '__esModule', { value: true });
            /******/ 	};
          /******/
          /******/ 	// create a fake namespace object
          /******/ 	// mode & 1: value is a module id, require it
          /******/ 	// mode & 2: merge all properties of value into the ns
          /******/ 	// mode & 4: return value when already ns object
          /******/ 	// mode & 8|1: behave like require
          /******/ 	__webpack_require__.t = function(value, mode) {
            /******/ 		if(mode & 1) value = __webpack_require__(value);
            /******/ 		if(mode & 8) return value;
            /******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
            /******/ 		var ns = Object.create(null);
            /******/ 		__webpack_require__.r(ns);
            /******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
            /******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
            /******/ 		return ns;
            /******/ 	};
          /******/
          /******/ 	// getDefaultExport function for compatibility with non-harmony modules
          /******/ 	__webpack_require__.n = function(module) {
            /******/ 		var getter = module && module.__esModule ?
              /******/ 			function getDefault() { return module['default']; } :
              /******/ 			function getModuleExports() { return module; };
            /******/ 		__webpack_require__.d(getter, 'a', getter);
            /******/ 		return getter;
            /******/ 	};
          /******/
          /******/ 	// Object.prototype.hasOwnProperty.call
          /******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
          /******/
          /******/ 	// __webpack_public_path__
          /******/ 	__webpack_require__.p = "";
          /******/
          /******/
          /******/ 	// Load entry module and return exports
          /******/ 	return __webpack_require__(__webpack_require__.s = 0);
          /******/ })
        /************************************************************************/
        /******/ ({

          /***/ "./modules/flowable-bpmn-moddle/resources/flowable.json":
          /*!**************************************************************!*\
  !*** ./modules/flowable-bpmn-moddle/resources/flowable.json ***!
  \**************************************************************/
          /*! exports provided: name, uri, prefix, xml, associations, types, emumerations, default */
          /***/ (function(module) {

            eval("module.exports = JSON.parse(\"{\\\"name\\\":\\\"Flowable\\\",\\\"uri\\\":\\\"http://flowable.org/bpmn\\\",\\\"prefix\\\":\\\"flowable\\\",\\\"xml\\\":{\\\"tagAlias\\\":\\\"lowerCase\\\"},\\\"associations\\\":[],\\\"types\\\":[{\\\"name\\\":\\\"Process\\\",\\\"isAbstract\\\":true,\\\"extends\\\":[\\\"bpmn:Process\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"candidateStarterGroups\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"candidateStarterUsers\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"isEagerExecutionFetching\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"InOutBinding\\\",\\\"superClass\\\":[\\\"Element\\\"],\\\"isAbstract\\\":true,\\\"properties\\\":[{\\\"name\\\":\\\"source\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"sourceExpression\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"target\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"businessKey\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"local\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"Boolean\\\",\\\"default\\\":false},{\\\"name\\\":\\\"variables\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"In\\\",\\\"superClass\\\":[\\\"InOutBinding\\\"],\\\"meta\\\":{\\\"allowedIn\\\":[\\\"bpmn:CallActivity\\\"]}},{\\\"name\\\":\\\"Out\\\",\\\"superClass\\\":[\\\"InOutBinding\\\"],\\\"meta\\\":{\\\"allowedIn\\\":[\\\"bpmn:CallActivity\\\"]}},{\\\"name\\\":\\\"AsyncCapable\\\",\\\"isAbstract\\\":true,\\\"extends\\\":[\\\"bpmn:Activity\\\",\\\"bpmn:Gateway\\\",\\\"bpmn:Event\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"async\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"Boolean\\\",\\\"default\\\":false},{\\\"name\\\":\\\"asyncBefore\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"Boolean\\\",\\\"default\\\":false},{\\\"name\\\":\\\"asyncAfter\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"Boolean\\\",\\\"default\\\":false},{\\\"name\\\":\\\"exclusive\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"Boolean\\\",\\\"default\\\":true}]},{\\\"name\\\":\\\"JobPriorized\\\",\\\"isAbstract\\\":true,\\\"extends\\\":[\\\"bpmn:Process\\\",\\\"flowable:AsyncCapable\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"jobPriority\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"SignalEventDefinition\\\",\\\"isAbstract\\\":true,\\\"extends\\\":[\\\"bpmn:SignalEventDefinition\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"async\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"Boolean\\\",\\\"default\\\":false}]},{\\\"name\\\":\\\"ErrorEventDefinition\\\",\\\"isAbstract\\\":true,\\\"extends\\\":[\\\"bpmn:ErrorEventDefinition\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"errorCodeVariable\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"errorMessageVariable\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"PotentialStarter\\\",\\\"superClass\\\":[\\\"Element\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"resourceAssignmentExpression\\\",\\\"type\\\":\\\"bpmn:ResourceAssignmentExpression\\\"}]},{\\\"name\\\":\\\"FormSupported\\\",\\\"isAbstract\\\":true,\\\"extends\\\":[\\\"bpmn:StartEvent\\\",\\\"bpmn:UserTask\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"formHandlerClass\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"formKey\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"TemplateSupported\\\",\\\"isAbstract\\\":true,\\\"extends\\\":[\\\"bpmn:Process\\\",\\\"bpmn:FlowElement\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"modelerTemplate\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"Initiator\\\",\\\"isAbstract\\\":true,\\\"extends\\\":[\\\"bpmn:StartEvent\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"initiator\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"ScriptTask\\\",\\\"isAbstract\\\":true,\\\"extends\\\":[\\\"bpmn:ScriptTask\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"resultVariable\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"resource\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"EscalationEventDefinition\\\",\\\"isAbstract\\\":true,\\\"extends\\\":[\\\"bpmn:EscalationEventDefinition\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"escalationCodeVariable\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"FormalExpression\\\",\\\"isAbstract\\\":true,\\\"extends\\\":[\\\"bpmn:FormalExpression\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"resource\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"Assignable\\\",\\\"extends\\\":[\\\"bpmn:UserTask\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"assignee\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"candidateUsers\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"candidateGroups\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"dueDate\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"followUpDate\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"priority\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"CallActivity\\\",\\\"extends\\\":[\\\"bpmn:CallActivity\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"calledElementBinding\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\",\\\"default\\\":\\\"latest\\\"},{\\\"name\\\":\\\"calledElementVersion\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"calledElementVersionTag\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"calledElementTenantId\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"caseRef\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"caseBinding\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\",\\\"default\\\":\\\"latest\\\"},{\\\"name\\\":\\\"caseVersion\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"caseTenantId\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"variableMappingClass\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"variableMappingDelegateExpression\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"ServiceTaskLike\\\",\\\"extends\\\":[\\\"bpmn:ServiceTask\\\",\\\"bpmn:BusinessRuleTask\\\",\\\"bpmn:SendTask\\\",\\\"bpmn:MessageEventDefinition\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"expression\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"class\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"delegateExpression\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"resultVariable\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"DmnCapable\\\",\\\"extends\\\":[\\\"bpmn:BusinessRuleTask\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"decisionRef\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"decisionRefBinding\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\",\\\"default\\\":\\\"latest\\\"},{\\\"name\\\":\\\"decisionRefVersion\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"mapDecisionResult\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\",\\\"default\\\":\\\"resultList\\\"},{\\\"name\\\":\\\"decisionRefTenantId\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"ExternalCapable\\\",\\\"extends\\\":[\\\"flowable:ServiceTaskLike\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"type\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"topic\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"TaskPriorized\\\",\\\"extends\\\":[\\\"bpmn:Process\\\",\\\"flowable:ExternalCapable\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"taskPriority\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"Properties\\\",\\\"superClass\\\":[\\\"Element\\\"],\\\"meta\\\":{\\\"allowedIn\\\":[\\\"*\\\"]},\\\"properties\\\":[{\\\"name\\\":\\\"values\\\",\\\"type\\\":\\\"Property\\\",\\\"isMany\\\":true}]},{\\\"name\\\":\\\"Property\\\",\\\"superClass\\\":[\\\"Element\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"String\\\",\\\"isAttr\\\":true},{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"String\\\",\\\"isAttr\\\":true},{\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"String\\\",\\\"isAttr\\\":true}]},{\\\"name\\\":\\\"Connector\\\",\\\"superClass\\\":[\\\"Element\\\"],\\\"meta\\\":{\\\"allowedIn\\\":[\\\"bpmn:ServiceTask\\\",\\\"bpmn:BusinessRuleTask\\\",\\\"bpmn:SendTask\\\"]},\\\"properties\\\":[{\\\"name\\\":\\\"inputOutput\\\",\\\"type\\\":\\\"InputOutput\\\"},{\\\"name\\\":\\\"connectorId\\\",\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"InputOutput\\\",\\\"superClass\\\":[\\\"Element\\\"],\\\"meta\\\":{\\\"allowedIn\\\":[\\\"bpmn:Task\\\",\\\"bpmn:UserTask\\\",\\\"bpmn:ServiceTask\\\",\\\"bpmn:SendTask\\\",\\\"bpmn:BusinessRuleTask\\\",\\\"bpmn:ReceiveTask\\\",\\\"bpmn:ScriptTask\\\",\\\"bpmn:ManualTask\\\",\\\"bpmn:GlobalUserTask\\\",\\\"bpmn:GlobalScriptTask\\\",\\\"bpmn:GlobalBusinessRuleTask\\\",\\\"bpmn:GlobalTask\\\",\\\"bpmn:GlobalManualTask\\\",\\\"bpmn:SubProcess\\\",\\\"bpmn:Transaction\\\",\\\"bpmn:IntermediateCatchEvent\\\",\\\"bpmn:IntermediateThrowEvent\\\",\\\"bpmn:EndEvent\\\",\\\"bpmn:ThrowEvent\\\",\\\"bpmn:CatchEvent\\\",\\\"bpmn:ImplicitThrowEvent\\\",\\\"bpmn:CallActivity\\\"]},\\\"properties\\\":[{\\\"name\\\":\\\"inputOutput\\\",\\\"type\\\":\\\"InputOutput\\\"},{\\\"name\\\":\\\"connectorId\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"inputParameters\\\",\\\"isMany\\\":true,\\\"type\\\":\\\"InputParameter\\\"},{\\\"name\\\":\\\"outputParameters\\\",\\\"isMany\\\":true,\\\"type\\\":\\\"OutputParameter\\\"}]},{\\\"name\\\":\\\"InputOutputParameter\\\",\\\"properties\\\":[{\\\"name\\\":\\\"name\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"value\\\",\\\"isBody\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"definition\\\",\\\"type\\\":\\\"InputOutputParameterDefinition\\\"}]},{\\\"name\\\":\\\"InputOutputParameterDefinition\\\",\\\"isAbstract\\\":true},{\\\"name\\\":\\\"List\\\",\\\"superClass\\\":[\\\"InputOutputParameterDefinition\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"items\\\",\\\"isMany\\\":true,\\\"type\\\":\\\"InputOutputParameterDefinition\\\"}]},{\\\"name\\\":\\\"Map\\\",\\\"superClass\\\":[\\\"InputOutputParameterDefinition\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"entries\\\",\\\"isMany\\\":true,\\\"type\\\":\\\"Entry\\\"}]},{\\\"name\\\":\\\"Entry\\\",\\\"properties\\\":[{\\\"name\\\":\\\"key\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"value\\\",\\\"isBody\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"definition\\\",\\\"type\\\":\\\"InputOutputParameterDefinition\\\"}]},{\\\"name\\\":\\\"Value\\\",\\\"superClass\\\":[\\\"InputOutputParameterDefinition\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"id\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"name\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"value\\\",\\\"isBody\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"Script\\\",\\\"superClass\\\":[\\\"InputOutputParameterDefinition\\\"],\\\"properties\\\":[{\\\"name\\\":\\\"scriptFormat\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"resource\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"value\\\",\\\"isBody\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"Field\\\",\\\"superClass\\\":[\\\"Element\\\"],\\\"meta\\\":{\\\"allowedIn\\\":[\\\"bpmn:ServiceTask\\\",\\\"bpmn:BusinessRuleTask\\\",\\\"bpmn:SendTask\\\"]},\\\"properties\\\":[{\\\"name\\\":\\\"name\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"expression\\\",\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"stringValue\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"string\\\",\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"InputParameter\\\",\\\"superClass\\\":[\\\"InputOutputParameter\\\"]},{\\\"name\\\":\\\"OutputParameter\\\",\\\"superClass\\\":[\\\"InputOutputParameter\\\"]},{\\\"name\\\":\\\"FailedJobRetryTimeCycle\\\",\\\"superClass\\\":[\\\"Element\\\"],\\\"meta\\\":{\\\"allowedIn\\\":[\\\"bpmn:Task\\\",\\\"bpmn:ServiceTask\\\",\\\"bpmn:SendTask\\\",\\\"bpmn:UserTask\\\",\\\"bpmn:BusinessRuleTask\\\",\\\"bpmn:ScriptTask\\\",\\\"bpmn:ReceiveTask\\\",\\\"bpmn:CallActivity\\\",\\\"bpmn:TimerEventDefinition\\\",\\\"bpmn:SignalEventDefinition\\\",\\\"bpmn:MultiInstanceLoopCharacteristics\\\"]},\\\"properties\\\":[{\\\"name\\\":\\\"body\\\",\\\"isBody\\\":true,\\\"type\\\":\\\"String\\\"}]},{\\\"name\\\":\\\"ExecutionListener\\\",\\\"superClass\\\":[\\\"Element\\\"],\\\"meta\\\":{\\\"allowedIn\\\":[\\\"bpmn:Task\\\",\\\"bpmn:ServiceTask\\\",\\\"bpmn:UserTask\\\",\\\"bpmn:BusinessRuleTask\\\",\\\"bpmn:ScriptTask\\\",\\\"bpmn:ReceiveTask\\\",\\\"bpmn:ManualTask\\\",\\\"bpmn:ExclusiveGateway\\\",\\\"bpmn:SequenceFlow\\\",\\\"bpmn:ParallelGateway\\\",\\\"bpmn:InclusiveGateway\\\",\\\"bpmn:EventBasedGateway\\\",\\\"bpmn:StartEvent\\\",\\\"bpmn:IntermediateCatchEvent\\\",\\\"bpmn:IntermediateThrowEvent\\\",\\\"bpmn:EndEvent\\\",\\\"bpmn:BoundaryEvent\\\",\\\"bpmn:CallActivity\\\",\\\"bpmn:SubProcess\\\"]},\\\"properties\\\":[{\\\"name\\\":\\\"expression\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"class\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"delegateExpression\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"event\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"script\\\",\\\"type\\\":\\\"Script\\\"},{\\\"name\\\":\\\"fields\\\",\\\"type\\\":\\\"Field\\\",\\\"isMany\\\":true}]},{\\\"name\\\":\\\"TaskListener\\\",\\\"superClass\\\":[\\\"Element\\\"],\\\"meta\\\":{\\\"allowedIn\\\":[\\\"bpmn:UserTask\\\"]},\\\"properties\\\":[{\\\"name\\\":\\\"expression\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"class\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"delegateExpression\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"event\\\",\\\"isAttr\\\":true,\\\"type\\\":\\\"String\\\"},{\\\"name\\\":\\\"script\\\",\\\"type\\\":\\\"Script\\\"},{\\\"name\\\":\\\"fields\\\",\\\"type\\\":\\\"Field\\\",\\\"isMany\\\":true}]},{\\\"name\\\":\\\"FormProperty\\\",\\\"superClass\\\":[\\\"Element\\\"],\\\"meta\\\":{\\\"allowedIn\\\":[\\\"bpmn:StartEvent\\\",\\\"bpmn:UserTask\\\"]},\\\"properties\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"String\\\",\\\"isAttr\\\":true},{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"String\\\",\\\"isAttr\\\":true},{\\\"name\\\":\\\"type\\\",\\\"type\\\":\\\"String\\\",\\\"isAttr\\\":true},{\\\"name\\\":\\\"required\\\",\\\"type\\\":\\\"String\\\",\\\"isAttr\\\":true},{\\\"name\\\":\\\"readable\\\",\\\"type\\\":\\\"String\\\",\\\"isAttr\\\":true},{\\\"name\\\":\\\"writable\\\",\\\"type\\\":\\\"String\\\",\\\"isAttr\\\":true},{\\\"name\\\":\\\"variable\\\",\\\"type\\\":\\\"String\\\",\\\"isAttr\\\":true},{\\\"name\\\":\\\"expression\\\",\\\"type\\\":\\\"String\\\",\\\"isAttr\\\":true},{\\\"name\\\":\\\"datePattern\\\",\\\"type\\\":\\\"String\\\",\\\"isAttr\\\":true},{\\\"name\\\":\\\"default\\\",\\\"type\\\":\\\"String\\\",\\\"isAttr\\\":true},{\\\"name\\\":\\\"values\\\",\\\"type\\\":\\\"Value\\\",\\\"isMany\\\":true}]}],\\\"emumerations\\\":[]}\");\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./modules/flowable-bpmn-moddle/resources/flowable.json?");

            /***/ }),

          /***/ "./node_modules/base64-js/index.js":
          /*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            "use strict";
            eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/base64-js/index.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/index.js":
          /*!*********************************************!*\
  !*** ./node_modules/bpmn-elements/index.js ***!
  \*********************************************/
          /*! exports provided: Environment, Context, Definition, Process, Activity, BoundaryEvent, BpmnError, ConditionalEventDefinition, DataObject, Dummy, EndEvent, ErrorEventDefinition, EventBasedGateway, ExclusiveGateway, InclusiveGateway, IntermediateCatchEvent, IntermediateThrowEvent, ManualTask, MessageEventDefinition, MessageFlow, ParallelGateway, ReceiveTask, ScriptTask, SequenceFlow, ServiceImplementation, SendTask, ServiceTask, Signal, SignalEventDefinition, SignalTask, StartEvent, SubProcess, Task, TerminateEventDefinition, TimerEventDefinition, UserTask, MultiInstanceLoopCharacteristics, InputOutputSpecification */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Activity\", function() { return _src_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _src_Environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/Environment */ \"./node_modules/bpmn-elements/src/Environment.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Environment\", function() { return _src_Environment__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var _src_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/Context */ \"./node_modules/bpmn-elements/src/Context.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Context\", function() { return _src_Context__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n/* harmony import */ var _src_definition_Definition__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/definition/Definition */ \"./node_modules/bpmn-elements/src/definition/Definition.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Definition\", function() { return _src_definition_Definition__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n/* harmony import */ var _src_process_Process__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/process/Process */ \"./node_modules/bpmn-elements/src/process/Process.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Process\", function() { return _src_process_Process__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; });\n\n/* harmony import */ var _src_events_BoundaryEvent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/events/BoundaryEvent */ \"./node_modules/bpmn-elements/src/events/BoundaryEvent.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BoundaryEvent\", function() { return _src_events_BoundaryEvent__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; });\n\n/* harmony import */ var _src_error_BpmnError__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/error/BpmnError */ \"./node_modules/bpmn-elements/src/error/BpmnError.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BpmnError\", function() { return _src_error_BpmnError__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; });\n\n/* harmony import */ var _src_eventDefinitions_ConditionalEventDefinition__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/eventDefinitions/ConditionalEventDefinition */ \"./node_modules/bpmn-elements/src/eventDefinitions/ConditionalEventDefinition.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ConditionalEventDefinition\", function() { return _src_eventDefinitions_ConditionalEventDefinition__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; });\n\n/* harmony import */ var _src_io_EnvironmentDataObject__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/io/EnvironmentDataObject */ \"./node_modules/bpmn-elements/src/io/EnvironmentDataObject.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DataObject\", function() { return _src_io_EnvironmentDataObject__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; });\n\n/* harmony import */ var _src_activity_Dummy__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/activity/Dummy */ \"./node_modules/bpmn-elements/src/activity/Dummy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Dummy\", function() { return _src_activity_Dummy__WEBPACK_IMPORTED_MODULE_9__[\"default\"]; });\n\n/* harmony import */ var _src_events_EndEvent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/events/EndEvent */ \"./node_modules/bpmn-elements/src/events/EndEvent.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EndEvent\", function() { return _src_events_EndEvent__WEBPACK_IMPORTED_MODULE_10__[\"default\"]; });\n\n/* harmony import */ var _src_eventDefinitions_ErrorEventDefinition__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/eventDefinitions/ErrorEventDefinition */ \"./node_modules/bpmn-elements/src/eventDefinitions/ErrorEventDefinition.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ErrorEventDefinition\", function() { return _src_eventDefinitions_ErrorEventDefinition__WEBPACK_IMPORTED_MODULE_11__[\"default\"]; });\n\n/* harmony import */ var _src_gateways_EventBasedGateway__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/gateways/EventBasedGateway */ \"./node_modules/bpmn-elements/src/gateways/EventBasedGateway.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EventBasedGateway\", function() { return _src_gateways_EventBasedGateway__WEBPACK_IMPORTED_MODULE_12__[\"default\"]; });\n\n/* harmony import */ var _src_gateways_ExclusiveGateway__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/gateways/ExclusiveGateway */ \"./node_modules/bpmn-elements/src/gateways/ExclusiveGateway.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ExclusiveGateway\", function() { return _src_gateways_ExclusiveGateway__WEBPACK_IMPORTED_MODULE_13__[\"default\"]; });\n\n/* harmony import */ var _src_gateways_InclusiveGateway__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./src/gateways/InclusiveGateway */ \"./node_modules/bpmn-elements/src/gateways/InclusiveGateway.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"InclusiveGateway\", function() { return _src_gateways_InclusiveGateway__WEBPACK_IMPORTED_MODULE_14__[\"default\"]; });\n\n/* harmony import */ var _src_events_IntermediateCatchEvent__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./src/events/IntermediateCatchEvent */ \"./node_modules/bpmn-elements/src/events/IntermediateCatchEvent.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IntermediateCatchEvent\", function() { return _src_events_IntermediateCatchEvent__WEBPACK_IMPORTED_MODULE_15__[\"default\"]; });\n\n/* harmony import */ var _src_events_IntermediateThrowEvent__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/events/IntermediateThrowEvent */ \"./node_modules/bpmn-elements/src/events/IntermediateThrowEvent.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IntermediateThrowEvent\", function() { return _src_events_IntermediateThrowEvent__WEBPACK_IMPORTED_MODULE_16__[\"default\"]; });\n\n/* harmony import */ var _src_io_InputOutputSpecification__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./src/io/InputOutputSpecification */ \"./node_modules/bpmn-elements/src/io/InputOutputSpecification.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"InputOutputSpecification\", function() { return _src_io_InputOutputSpecification__WEBPACK_IMPORTED_MODULE_17__[\"default\"]; });\n\n/* harmony import */ var _src_eventDefinitions_MessageEventDefinition__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./src/eventDefinitions/MessageEventDefinition */ \"./node_modules/bpmn-elements/src/eventDefinitions/MessageEventDefinition.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MessageEventDefinition\", function() { return _src_eventDefinitions_MessageEventDefinition__WEBPACK_IMPORTED_MODULE_18__[\"default\"]; });\n\n/* harmony import */ var _src_flows_MessageFlow__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./src/flows/MessageFlow */ \"./node_modules/bpmn-elements/src/flows/MessageFlow.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MessageFlow\", function() { return _src_flows_MessageFlow__WEBPACK_IMPORTED_MODULE_19__[\"default\"]; });\n\n/* harmony import */ var _src_gateways_ParallelGateway__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./src/gateways/ParallelGateway */ \"./node_modules/bpmn-elements/src/gateways/ParallelGateway.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ParallelGateway\", function() { return _src_gateways_ParallelGateway__WEBPACK_IMPORTED_MODULE_20__[\"default\"]; });\n\n/* harmony import */ var _src_tasks_ScriptTask__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./src/tasks/ScriptTask */ \"./node_modules/bpmn-elements/src/tasks/ScriptTask.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ScriptTask\", function() { return _src_tasks_ScriptTask__WEBPACK_IMPORTED_MODULE_21__[\"default\"]; });\n\n/* harmony import */ var _src_flows_SequenceFlow__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./src/flows/SequenceFlow */ \"./node_modules/bpmn-elements/src/flows/SequenceFlow.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SequenceFlow\", function() { return _src_flows_SequenceFlow__WEBPACK_IMPORTED_MODULE_22__[\"default\"]; });\n\n/* harmony import */ var _src_tasks_ServiceImplementation__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./src/tasks/ServiceImplementation */ \"./node_modules/bpmn-elements/src/tasks/ServiceImplementation.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ServiceImplementation\", function() { return _src_tasks_ServiceImplementation__WEBPACK_IMPORTED_MODULE_23__[\"default\"]; });\n\n/* harmony import */ var _src_tasks_ServiceTask__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./src/tasks/ServiceTask */ \"./node_modules/bpmn-elements/src/tasks/ServiceTask.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SendTask\", function() { return _src_tasks_ServiceTask__WEBPACK_IMPORTED_MODULE_24__[\"default\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ServiceTask\", function() { return _src_tasks_ServiceTask__WEBPACK_IMPORTED_MODULE_24__[\"default\"]; });\n\n/* harmony import */ var _src_activity_Signal__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./src/activity/Signal */ \"./node_modules/bpmn-elements/src/activity/Signal.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Signal\", function() { return _src_activity_Signal__WEBPACK_IMPORTED_MODULE_25__[\"default\"]; });\n\n/* harmony import */ var _src_eventDefinitions_SignalEventDefinition__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./src/eventDefinitions/SignalEventDefinition */ \"./node_modules/bpmn-elements/src/eventDefinitions/SignalEventDefinition.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SignalEventDefinition\", function() { return _src_eventDefinitions_SignalEventDefinition__WEBPACK_IMPORTED_MODULE_26__[\"default\"]; });\n\n/* harmony import */ var _src_tasks_SignalTask__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./src/tasks/SignalTask */ \"./node_modules/bpmn-elements/src/tasks/SignalTask.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ManualTask\", function() { return _src_tasks_SignalTask__WEBPACK_IMPORTED_MODULE_27__[\"default\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ReceiveTask\", function() { return _src_tasks_SignalTask__WEBPACK_IMPORTED_MODULE_27__[\"default\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SignalTask\", function() { return _src_tasks_SignalTask__WEBPACK_IMPORTED_MODULE_27__[\"default\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UserTask\", function() { return _src_tasks_SignalTask__WEBPACK_IMPORTED_MODULE_27__[\"default\"]; });\n\n/* harmony import */ var _src_events_StartEvent__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./src/events/StartEvent */ \"./node_modules/bpmn-elements/src/events/StartEvent.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"StartEvent\", function() { return _src_events_StartEvent__WEBPACK_IMPORTED_MODULE_28__[\"default\"]; });\n\n/* harmony import */ var _src_tasks_SubProcess__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./src/tasks/SubProcess */ \"./node_modules/bpmn-elements/src/tasks/SubProcess.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SubProcess\", function() { return _src_tasks_SubProcess__WEBPACK_IMPORTED_MODULE_29__[\"default\"]; });\n\n/* harmony import */ var _src_tasks_Task__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./src/tasks/Task */ \"./node_modules/bpmn-elements/src/tasks/Task.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Task\", function() { return _src_tasks_Task__WEBPACK_IMPORTED_MODULE_30__[\"default\"]; });\n\n/* harmony import */ var _src_eventDefinitions_TerminateEventDefinition__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./src/eventDefinitions/TerminateEventDefinition */ \"./node_modules/bpmn-elements/src/eventDefinitions/TerminateEventDefinition.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TerminateEventDefinition\", function() { return _src_eventDefinitions_TerminateEventDefinition__WEBPACK_IMPORTED_MODULE_31__[\"default\"]; });\n\n/* harmony import */ var _src_eventDefinitions_TimerEventDefinition__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./src/eventDefinitions/TimerEventDefinition */ \"./node_modules/bpmn-elements/src/eventDefinitions/TimerEventDefinition.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TimerEventDefinition\", function() { return _src_eventDefinitions_TimerEventDefinition__WEBPACK_IMPORTED_MODULE_32__[\"default\"]; });\n\n/* harmony import */ var _src_tasks_MultiInstanceLoopCharacteristics__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./src/tasks/MultiInstanceLoopCharacteristics */ \"./node_modules/bpmn-elements/src/tasks/MultiInstanceLoopCharacteristics.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MultiInstanceLoopCharacteristics\", function() { return _src_tasks_MultiInstanceLoopCharacteristics__WEBPACK_IMPORTED_MODULE_33__[\"default\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/index.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/Api.js":
          /*!***********************************************!*\
  !*** ./node_modules/bpmn-elements/src/Api.js ***!
  \***********************************************/
          /*! exports provided: ActivityApi, DefinitionApi, ProcessApi, FlowApi */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivityApi\", function() { return ActivityApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefinitionApi\", function() { return DefinitionApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProcessApi\", function() { return ProcessApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FlowApi\", function() { return FlowApi; });\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\n\nfunction ActivityApi(broker, apiMessage, environment) {\n  return Api('activity', broker, apiMessage, environment);\n}\n\nfunction DefinitionApi(broker, apiMessage, environment) {\n  return Api('definition', broker, apiMessage, environment);\n}\n\nfunction ProcessApi(broker, apiMessage, environment) {\n  return Api('process', broker, apiMessage, environment);\n}\n\nfunction FlowApi(broker, apiMessage, environment) {\n  return Api('flow', broker, apiMessage, environment);\n}\n\nfunction Api(pfx, broker, sourceMessage, environment) {\n  if (!sourceMessage) throw new Error('Api requires message');\n\n  const apiMessage = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneMessage\"])(sourceMessage);\n  const apiContent = apiMessage.content;\n  const executionId = apiContent.executionId;\n  environment = environment || broker.owner.environment;\n\n  return {\n    id: apiContent.id,\n    type: apiContent.type,\n    executionId,\n    environment,\n    fields: apiMessage.fields,\n    content: apiContent,\n    messageProperties: apiMessage.properties,\n    get owner() {\n      return broker.owner;\n    },\n    cancel() {\n      sendApiMessage('cancel');\n    },\n    discard() {\n      sendApiMessage('discard');\n    },\n    signal(message, options) {\n      sendApiMessage('signal', {message}, options);\n    },\n    stop() {\n      sendApiMessage('stop');\n    },\n    resolveExpression(expression) {\n      return environment.resolveExpression(expression, apiMessage, broker.owner);\n    },\n    createMessage,\n  };\n\n  function sendApiMessage(action, content, options = {}) {\n    let key = `${pfx}.${action}`;\n    if (executionId) key += `.${executionId}`;\n\n    broker.publish('api', key, createMessage(content), {...options, type: action});\n  }\n\n  function createMessage(content = {}) {\n    return {\n      ...apiContent,\n      ...content,\n    };\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/Api.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/Context.js":
          /*!***************************************************!*\
  !*** ./node_modules/bpmn-elements/src/Context.js ***!
  \***************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Context; });\n/* harmony import */ var _Environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Environment */ \"./node_modules/bpmn-elements/src/Environment.js\");\n/* harmony import */ var _ExtensionsMapper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ExtensionsMapper */ \"./node_modules/bpmn-elements/src/ExtensionsMapper.js\");\n/* harmony import */ var _flows_SequenceFlow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./flows/SequenceFlow */ \"./node_modules/bpmn-elements/src/flows/SequenceFlow.js\");\n/* harmony import */ var _flows_MessageFlow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./flows/MessageFlow */ \"./node_modules/bpmn-elements/src/flows/MessageFlow.js\");\n/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shared */ \"./node_modules/bpmn-elements/src/shared.js\");\n\n\n\n\n\n\nfunction Context(definitionContext, environment) {\n  environment = environment ? environment.clone() : Object(_Environment__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n  return ContextInstance(definitionContext, environment);\n}\n\nfunction ContextInstance(definitionContext, environment) {\n  const {id = 'Def', name, type = 'context'} = definitionContext;\n  const sid = Object(_shared__WEBPACK_IMPORTED_MODULE_4__[\"getUniqueId\"])(id);\n\n  const activityRefs = {}, dataObjectRefs = {}, messageFlows = [], processes = [], processRefs = {}, sequenceFlowRefs = {}, sequenceFlows = [];\n\n  const context = {\n    id,\n    name,\n    type,\n    sid,\n    definitionContext,\n    environment,\n    clone,\n    getActivities,\n    getActivityById,\n    getErrorById,\n    getExecutableProcesses,\n    getDataObjectById,\n    getMessageFlows,\n    getProcessById,\n    getProcesses,\n    getSequenceFlowById,\n    getSequenceFlows,\n    getInboundSequenceFlows,\n    getOutboundSequenceFlows,\n    loadExtensions,\n  };\n\n  const extensionsMapper = Object(_ExtensionsMapper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(context);\n\n  return context;\n\n  function getActivityById(activityId) {\n    const activityInstance = activityRefs[activityId];\n    if (activityInstance) return activityInstance;\n\n    const activity = definitionContext.getActivityById(activityId);\n    if (!activity) return null;\n    return upsertActivity(activity);\n  }\n\n  function upsertActivity(activityDef) {\n    let activityInstance = activityRefs[activityDef.id];\n    if (activityInstance) return activityInstance;\n\n    activityInstance = activityRefs[activityDef.id] = activityDef.Behaviour(activityDef, context);\n\n    return activityInstance;\n  }\n\n  function getErrorById(errorId) {\n    const error = definitionContext.getErrorById(errorId);\n    if (!error) return;\n\n    return error.Behaviour(error, context);\n  }\n\n  function getSequenceFlowById(sequenceFlowId) {\n    let flowInstance = sequenceFlowRefs[sequenceFlowId];\n    if (flowInstance) return flowInstance;\n\n    const flow = definitionContext.getSequenceFlowById(sequenceFlowId);\n    if (!flow) return null;\n    flowInstance = sequenceFlowRefs[sequenceFlowId] = Object(_flows_SequenceFlow__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(flow, context);\n    sequenceFlows.push(flow);\n\n    return flowInstance;\n  }\n\n  function getInboundSequenceFlows(activityId) {\n    return definitionContext.getInboundSequenceFlows(activityId).map((flow) => upsertSequenceFlow(flow));\n  }\n\n  function getOutboundSequenceFlows(activityId) {\n    return definitionContext.getOutboundSequenceFlows(activityId).map((flow) => upsertSequenceFlow(flow));\n  }\n\n  function getActivities(scopeId) {\n    const activities = definitionContext.getActivities(scopeId);\n    return activities.map((activityDef) => upsertActivity(activityDef));\n  }\n\n  function getSequenceFlows(scopeId) {\n    return definitionContext.getSequenceFlows(scopeId).map((flow) => upsertSequenceFlow(flow));\n  }\n\n  function upsertSequenceFlow(flowDefinition) {\n    let flowInstance = sequenceFlowRefs[flowDefinition.id];\n    if (flowInstance) return flowInstance;\n\n    flowInstance = sequenceFlowRefs[flowDefinition.id] = flowDefinition.Behaviour(flowDefinition, context);\n    sequenceFlows.push(flowInstance);\n\n    return flowInstance;\n  }\n\n  function clone(newEnvironment) {\n    return ContextInstance(definitionContext, newEnvironment || environment);\n  }\n\n  function getProcessById(processId) {\n    let processInstance = processRefs[processId];\n    if (processInstance) return processInstance;\n\n    const processDefinition = definitionContext.getProcessById(processId);\n    if (!processDefinition) return null;\n    processInstance = processRefs[processId] = processDefinition.Behaviour(processDefinition, context);\n    processes.push(processInstance);\n\n    return processInstance;\n  }\n\n  function getProcesses() {\n    return definitionContext.getProcesses().map(({id: processId}) => getProcessById(processId));\n  }\n\n  function getExecutableProcesses() {\n    return definitionContext.getExecutableProcesses().map(({id: processId}) => getProcessById(processId));\n  }\n\n  function getMessageFlows(sourceId) {\n    if (!messageFlows.length) {\n      const flows = definitionContext.getMessageFlows();\n      messageFlows.push(...flows.map((flow) => Object(_flows_MessageFlow__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(flow, context)));\n    }\n\n    return messageFlows.filter((flow) => flow.source.processId === sourceId);\n  }\n\n  function getDataObjectById(dataObjectId) {\n    let dataObject;\n    if ((dataObject = dataObjectRefs[dataObjectId])) return dataObject;\n\n    const dataObjectDef = definitionContext.getDataObjectById(dataObjectId);\n    if (!dataObjectDef) return;\n\n    dataObject = dataObjectRefs[dataObjectDef.id] = dataObjectDef.Behaviour(dataObjectDef, context);\n\n    return dataObject;\n  }\n\n  function loadExtensions(activity) {\n    return extensionsMapper.get(activity);\n  }\n}\n\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/Context.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/Environment.js":
          /*!*******************************************************!*\
  !*** ./node_modules/bpmn-elements/src/Environment.js ***!
  \*******************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Environment; });\n/* harmony import */ var _expressions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expressions */ \"./node_modules/bpmn-elements/src/expressions.js\");\n/* harmony import */ var _Scripts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Scripts */ \"./node_modules/bpmn-elements/src/Scripts.js\");\n\n\n\nconst defaultOptions = ['extensions', 'output', 'services', 'scripts', 'settings', 'variables', 'Logger'];\n\nfunction Environment(options = {}) {\n  const initialOptions = validateOptions(options);\n\n  let variables = options.variables || {};\n  const settings = {...(options.settings || {})};\n  const output = options.output || {};\n  const services = options.services || {};\n  const scripts = options.scripts || Object(_Scripts__WEBPACK_IMPORTED_MODULE_1__[\"Scripts\"])();\n  const Logger = options.Logger || DummyLogger;\n  const extensions = options.extensions;\n\n  const environmentApi = {\n    options: initialOptions,\n    extensions,\n    output,\n    scripts,\n    services,\n    settings,\n    get variables() {\n      return variables;\n    },\n    addService,\n    assignVariables,\n    clone,\n    getScript,\n    getServiceByName,\n    getState,\n    registerScript,\n    resolveExpression,\n    recover,\n    Logger,\n  };\n\n  return environmentApi;\n\n  function getState() {\n    return {\n      settings: {...settings},\n      variables: {...variables},\n      output: {...output},\n    };\n  }\n\n  function recover(state) {\n    if (!state) return environmentApi;\n\n    const recoverOptions = {\n      services,\n      scripts,\n      Logger,\n      extensions,\n      settings: {\n        ...state.settings || {},\n        ...settings,\n      },\n      variables: {\n        ...variables,\n        ...state.variables || {},\n      },\n      output: {\n        ...output,\n        ...state.output || {},\n      },\n    };\n\n    return Environment(recoverOptions);\n  }\n\n  function clone(overrideOptions = {}) {\n    const newOptions = {\n      settings: {...settings},\n      variables: {...variables},\n      output: {...output},\n      Logger,\n      extensions,\n      scripts,\n      ...initialOptions,\n      ...overrideOptions,\n      services,\n    };\n\n    if (overrideOptions.services) newOptions.services = {...services, ...overrideOptions.services};\n\n    return Environment(newOptions);\n  }\n\n  function assignVariables(newVars) {\n    if (!newVars || typeof newVars !== 'object') return;\n\n    variables = {\n      ...variables,\n      ...newVars,\n    };\n  }\n\n  function getScript(...args) {\n    return scripts.getScript(...args);\n  }\n\n  function registerScript(...args) {\n    return scripts.register(...args);\n  }\n\n  function getServiceByName(serviceName) {\n    return services[serviceName];\n  }\n\n  function resolveExpression(expression, message = {}, expressionFnContext) {\n    const from = {\n      environment: environmentApi,\n      ...message,\n    };\n\n    return Object(_expressions__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(expression, from, expressionFnContext);\n  }\n\n  function addService(name, fn) {\n    services[name] = fn;\n  }\n}\n\nfunction validateOptions(input) {\n  const options = {};\n  for (const key in input) {\n    if (defaultOptions.indexOf(key) === -1) {\n      options[key] = input[key];\n    }\n  }\n\n  if (input.scripts) {\n    if (typeof input.scripts.register !== 'function') throw new Error('scripts.register is not a function');\n    if (typeof input.scripts.getScript !== 'function') throw new Error('scripts.getScript is not a function');\n  }\n\n  if (input.extensions) {\n    if (typeof input.extensions !== 'object') throw new Error('extensions is not an object');\n    for (const key in input.extensions) {\n      if (typeof input.extensions[key] !== 'function') throw new Error(`extensions[${key}] is not a function`);\n    }\n  }\n\n  return options;\n}\n\nfunction DummyLogger() {\n  return {\n    debug,\n    error,\n    warn,\n  };\n  function debug() {}\n  function error() {}\n  function warn() {}\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/Environment.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/EventBroker.js":
          /*!*******************************************************!*\
  !*** ./node_modules/bpmn-elements/src/EventBroker.js ***!
  \*******************************************************/
          /*! exports provided: ActivityBroker, DefinitionBroker, MessageFlowBroker, ProcessBroker, EventBroker */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivityBroker\", function() { return ActivityBroker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefinitionBroker\", function() { return DefinitionBroker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MessageFlowBroker\", function() { return MessageFlowBroker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProcessBroker\", function() { return ProcessBroker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventBroker\", function() { return EventBroker; });\n/* harmony import */ var smqp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! smqp */ \"./node_modules/smqp/index.js\");\n/* harmony import */ var _error_Errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error/Errors */ \"./node_modules/bpmn-elements/src/error/Errors.js\");\n\n\n\n\n\nfunction ActivityBroker(activity) {\n  const executionBroker = ExecutionBroker(activity, 'activity');\n  executionBroker.broker.assertQueue('messages', {autoDelete: false, durable: true});\n  return executionBroker;\n}\n\nfunction ProcessBroker(owner) {\n  return ExecutionBroker(owner, 'process');\n}\n\nfunction DefinitionBroker(owner, onBrokerReturn) {\n  return ExecutionBroker(owner, 'definition', onBrokerReturn);\n}\n\nfunction MessageFlowBroker(owner) {\n  const eventBroker = EventBroker(owner, {prefix: 'messageflow', autoDelete: false, durable: false});\n  const broker = eventBroker.broker;\n\n  broker.assertExchange('message', 'topic', {durable: true, autoDelete: false});\n  broker.assertQueue('message-q', {durable: true, autoDelete: false});\n  broker.bindQueue('message-q', 'message', 'message.#');\n\n  return eventBroker;\n}\n\nfunction ExecutionBroker(brokerOwner, prefix, onBrokerReturn) {\n  const eventBroker = EventBroker(brokerOwner, {prefix, autoDelete: false, durable: false}, onBrokerReturn);\n  const broker = eventBroker.broker;\n\n  broker.assertExchange('api', 'topic', {autoDelete: false, durable: false});\n  broker.assertExchange('run', 'topic', {autoDelete: false});\n  broker.assertExchange('format', 'topic', {autoDelete: false});\n  broker.assertExchange('execution', 'topic', {autoDelete: false});\n\n  const runQ = broker.assertQueue('run-q', {durable: true, autoDelete: false});\n  const formatRunQ = broker.assertQueue('format-run-q', {durable: true, autoDelete: false});\n  const executionQ = broker.assertQueue('execution-q', {durable: true, autoDelete: false});\n\n  broker.bindQueue(runQ.name, 'run', 'run.#');\n  broker.bindQueue(formatRunQ.name, 'format', 'run.#');\n  broker.bindQueue(executionQ.name, 'execution', 'execution.#');\n\n  return eventBroker;\n}\n\nfunction EventBroker(brokerOwner, options, onBrokerReturn) {\n  const broker = Object(smqp__WEBPACK_IMPORTED_MODULE_0__[\"Broker\"])(brokerOwner);\n  const pfx = options.prefix;\n\n  broker.assertExchange('event', 'topic', options);\n  broker.on('return', onBrokerReturn || onBrokerReturnFn);\n\n  return {\n    eventPrefix: pfx,\n    broker,\n    on,\n    once,\n    waitFor,\n    emit,\n    emitFatal,\n  };\n\n  function on(eventName, callback, eventOptions = { once: false }) {\n    const key = getEventRoutingKey(eventName);\n\n    if (eventOptions.once) return broker.subscribeOnce('event', key, eventCallback, eventOptions);\n    return broker.subscribeTmp('event', key, eventCallback, {...eventOptions, noAck: true});\n\n    function eventCallback(routingKey, message, owner) {\n      if (eventName === 'error') return callback(Object(_error_Errors__WEBPACK_IMPORTED_MODULE_1__[\"makeErrorFromMessage\"])(message));\n      callback(owner.getApi(message));\n    }\n  }\n\n  function once(eventName, callback, eventOptions = {}) {\n    return on(eventName, callback, {...eventOptions, once: true});\n  }\n\n  function waitFor(eventName, onMessage) {\n    const key = getEventRoutingKey(eventName);\n\n    return new Promise((resolve, reject) => {\n      const consumers = [\n        broker.subscribeTmp('event', key, eventCallback, {noAck: true}),\n        broker.subscribeTmp('event', '*.error', errorCallback, {noAck: true})\n      ];\n\n      function eventCallback(routingKey, message, owner) {\n        if (onMessage && !onMessage(routingKey, message, owner)) return;\n        unsubscribe();\n        return resolve(owner.getApi(message));\n      }\n\n      function errorCallback(routingKey, message, owner) {\n        if (!message.properties.mandatory) return;\n        unsubscribe();\n        return reject(Object(_error_Errors__WEBPACK_IMPORTED_MODULE_1__[\"makeErrorFromMessage\"])(message, owner));\n      }\n\n      function unsubscribe() {\n        consumers.forEach((consumer) => consumer.cancel());\n      }\n    });\n  }\n\n  function onBrokerReturnFn(message) {\n    if (message.properties.type === 'error') {\n      const err = Object(_error_Errors__WEBPACK_IMPORTED_MODULE_1__[\"makeErrorFromMessage\"])(message);\n      throw err;\n    }\n  }\n\n  function getEventRoutingKey(eventName) {\n    if (eventName.indexOf('.') > -1) return eventName;\n\n    switch (eventName) {\n      case 'wait': {\n        return `activity.${eventName}`;\n      }\n      case 'error': {\n        return `${pfx}.error`;\n      }\n      default: {\n        return `${pfx}.${eventName}`;\n      }\n    }\n  }\n\n  function emit(eventName, content = {}, props = {}) {\n    broker.publish('event', `${pfx}.${eventName}`, {...content}, {type: eventName, ...props});\n  }\n\n  function emitFatal(error, content = {}) {\n    emit('error', {...content, error}, {mandatory: true});\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/EventBroker.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/ExtensionsMapper.js":
          /*!************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/ExtensionsMapper.js ***!
  \************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ExtensionsMapper; });\nfunction ExtensionsMapper(context) {\n  const {extensions: envExtensions} = context.environment;\n  const extensions = getExtensions();\n\n  return {\n    get,\n  };\n\n  function get(activity) {\n    const activityExtensions = extensions.reduce(applyExtension, []);\n    return {\n      activate,\n      deactivate,\n    };\n\n    function applyExtension(result, Extension) {\n      const extension = Extension(activity, context);\n      if (extension) result.push(extension);\n      return result;\n    }\n\n    function activate() {\n      activityExtensions.forEach((extension) => extension.activate());\n    }\n    function deactivate() {\n      activityExtensions.forEach((extension) => extension.deactivate());\n    }\n  }\n\n  function getExtensions() {\n    const result = [];\n    if (!envExtensions) return result;\n\n    for (const key in envExtensions) {\n      const extension = envExtensions[key];\n      if (extension) {\n        result.push(extension);\n      }\n    }\n    return result;\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/ExtensionsMapper.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/Scripts.js":
          /*!***************************************************!*\
  !*** ./node_modules/bpmn-elements/src/Scripts.js ***!
  \***************************************************/
          /*! exports provided: Scripts */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Scripts\", function() { return Scripts; });\nfunction Scripts() {\n  return {\n    getScript,\n    register,\n  };\n\n  function getScript(/*scriptType, activity*/) {}\n  function register(/*activity*/) {}\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/Scripts.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/activity/Activity.js":
          /*!*************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/activity/Activity.js ***!
  \*************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Activity; });\n/* harmony import */ var _ActivityExecution__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ActivityExecution */ \"./node_modules/bpmn-elements/src/activity/ActivityExecution.js\");\n/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared */ \"./node_modules/bpmn-elements/src/shared.js\");\n/* harmony import */ var _Api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Api */ \"./node_modules/bpmn-elements/src/Api.js\");\n/* harmony import */ var _EventBroker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../EventBroker */ \"./node_modules/bpmn-elements/src/EventBroker.js\");\n/* harmony import */ var smqp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! smqp */ \"./node_modules/smqp/index.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\n\n\n\n\nfunction Activity(Behaviour, activityDef, context) {\n  const {id, type = 'activity', name, parent: originalParent, behaviour = {}, isParallelGateway, isSubProcess, isThrowing} = activityDef;\n  const parent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_5__[\"cloneParent\"])(originalParent);\n  const {environment, getInboundSequenceFlows, getOutboundSequenceFlows} = context;\n\n  const logger = environment.Logger(type.toLowerCase());\n  const {step} = environment.settings;\n\n  const {attachedTo: attachedToRef, ioSpecification: ioSpecificationDef} = behaviour;\n\n  let attachedToActivity, attachedTo;\n\n  if (attachedToRef) {\n    attachedTo = attachedToRef.id;\n    attachedToActivity = context.getActivityById(attachedToRef.id);\n  }\n\n  const inboundSequenceFlows = getInboundSequenceFlows(id) || [];\n  const outboundSequenceFlows = getOutboundSequenceFlows(id) || [];\n\n  const isStart = inboundSequenceFlows.length === 0 && !attachedTo;\n  const isParallelJoin = inboundSequenceFlows.length > 1 && isParallelGateway;\n  const isMultiInstance = !!behaviour.loopCharacteristics;\n\n  let execution, initExecutionId, executionId, stateMessage, status, stopped = false, executeMessage, consumingRunQ;\n\n  const inboundTriggers = attachedToActivity ? [attachedToActivity] : inboundSequenceFlows.slice();\n  const inboundJoinFlows = [];\n\n  let counters = {\n    taken: 0,\n    discarded: 0,\n  };\n\n  const activityApi = {\n    id,\n    type,\n    name,\n    isStart,\n    isSubProcess,\n    isThrowing,\n    parent: Object(_messageHelper__WEBPACK_IMPORTED_MODULE_5__[\"cloneParent\"])(parent),\n    behaviour: {...behaviour},\n    attachedTo: attachedToActivity,\n    environment,\n    inbound: inboundSequenceFlows,\n    outbound: outboundSequenceFlows,\n    get counters() {\n      return {...counters};\n    },\n    get executionId() {\n      return executionId;\n    },\n    get status() {\n      return status;\n    },\n    get stopped() {\n      return stopped;\n    },\n    get isRunning() {\n      if (!consumingRunQ) return false;\n      return !!status;\n    },\n    Behaviour,\n    activate,\n    deactivate,\n    logger,\n    discard,\n    getApi,\n    getErrorById,\n    getState,\n    init,\n    message: inboundMessage,\n    recover,\n    resume,\n    run,\n    stop,\n    next: step && next,\n  };\n\n  const {broker, on, once, waitFor, emitFatal} = Object(_EventBroker__WEBPACK_IMPORTED_MODULE_3__[\"ActivityBroker\"])(activityApi);\n\n  activityApi.on = on;\n  activityApi.once = once;\n  activityApi.waitFor = waitFor;\n  activityApi.emitFatal = emitFatal;\n\n  const runQ = broker.getQueue('run-q');\n  const executionQ = broker.getQueue('execution-q');\n  const formatRunQ = broker.getQueue('format-run-q');\n  const inboundQ = broker.assertQueue('inbound-q', {durable: true, autoDelete: false});\n\n  inboundTriggers.forEach((trigger) => {\n    if (trigger.isSequenceFlow) trigger.broker.subscribeTmp('event', 'flow.#', onInboundEvent, {noAck: true, consumerTag: `_inbound-${id}`});\n    else trigger.broker.subscribeTmp('event', 'activity.#', onInboundEvent, {noAck: true, consumerTag: `_inbound-${id}`});\n  });\n\n  Object.defineProperty(activityApi, 'broker', {\n    enumerable: true,\n    get: () => broker,\n  });\n\n  Object.defineProperty(activityApi, 'execution', {\n    enumerable: true,\n    get: () => execution,\n  });\n\n  const extensions = context.loadExtensions(activityApi);\n  Object.defineProperty(activityApi, 'extensions', {\n    enumerable: true,\n    get: () => extensions,\n  });\n\n  const ioSpecification = ioSpecificationDef && ioSpecificationDef.Behaviour(activityApi, ioSpecificationDef, context);\n\n  return activityApi;\n\n  function init() {\n    initExecutionId = Object(_shared__WEBPACK_IMPORTED_MODULE_1__[\"getUniqueId\"])(id);\n    logger.debug(`<${id}> initialized with executionId <${initExecutionId}>`);\n    publishEvent('init', createMessage({executionId: initExecutionId}));\n  }\n\n  function run(runContent) {\n    if (activityApi.isRunning) throw new Error(`activity <${id}> is already running`);\n\n    executionId = initExecutionId || Object(_shared__WEBPACK_IMPORTED_MODULE_1__[\"getUniqueId\"])(id);\n    initExecutionId = undefined;\n\n    const content = createMessage({...runContent, executionId});\n\n    broker.publish('run', 'run.enter', content);\n    broker.publish('run', 'run.start', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_5__[\"cloneContent\"])(content));\n\n    activateRunConsumers();\n  }\n\n  function createMessage(override = {}) {\n    return {\n      ...override,\n      id,\n      type,\n      attachedTo,\n      parent: Object(_messageHelper__WEBPACK_IMPORTED_MODULE_5__[\"cloneParent\"])(parent),\n      isSubProcess,\n      isMultiInstance,\n    };\n  }\n\n  function recover(state) {\n    if (activityApi.isRunning) throw new Error(`cannot recover running activity <${id}>`);\n    if (!state) return;\n\n    stopped = state.stopped;\n    status = state.status;\n    executionId = state.executionId;\n    counters = state.counters && {...counters, ...state.counters};\n\n    if (state.execution) {\n      execution = Object(_ActivityExecution__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(activityApi, context).recover(state.execution);\n    }\n\n    broker.recover(state.broker);\n  }\n\n  function resume() {\n    if (activityApi.isRunning) {\n      throw new Error(`cannot resume running activity <${id}>`);\n    }\n    if (!status) return activate();\n\n    stopped = false;\n\n    const content = createMessage();\n    broker.publish('run', 'run.resume', content, {persistent: false});\n    activateRunConsumers();\n  }\n\n  function discard(discardContent) {\n    if (!status) return runDiscard(discardContent);\n    if (execution && !execution.completed) return execution.discard();\n\n    deactivateRunConsumers();\n    runQ.purge();\n    broker.publish('run', 'run.discard', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_5__[\"cloneContent\"])(stateMessage.content));\n    activateRunConsumers();\n  }\n\n  function discardRun() {\n    if (!status) return;\n    if (execution && !execution.completed) return;\n\n    deactivateRunConsumers();\n    runQ.purge();\n    broker.publish('run', 'run.discard', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_5__[\"cloneContent\"])(stateMessage.content));\n    activateRunConsumers();\n  }\n\n  function runDiscard(discardContent = {}) {\n    executionId = Object(_shared__WEBPACK_IMPORTED_MODULE_1__[\"getUniqueId\"])(id);\n    const content = createMessage({...discardContent, executionId});\n    broker.publish('run', 'run.discard', content);\n\n    activateRunConsumers();\n  }\n\n  function stop() {\n    if (!activityApi.isRunning) return;\n\n    stopped = true;\n\n    if (!execution || execution.completed) {\n      deactivate();\n      deactivateRunConsumers();\n      broker.cancel('_activity-execution');\n      return publishEvent('stop');\n    }\n\n    execution.stop();\n  }\n\n  function activate() {\n    if (isParallelJoin) {\n      return inboundQ.consume(onJoinInbound, {consumerTag: '_run-on-inbound', prefetch: 1000});\n    }\n\n    return inboundQ.consume(onInbound, {consumerTag: '_run-on-inbound'});\n  }\n\n  function deactivate() {\n    broker.cancel('_run-on-inbound');\n    broker.cancel('_format-consumer');\n  }\n\n  function activateRunConsumers() {\n    broker.subscribeTmp('api', `activity.*.${executionId}`, onApiMessage, {noAck: true, consumerTag: '_activity-api'});\n    consumingRunQ = true;\n    runQ.assertConsumer(onRunMessage, {exclusive: true, consumerTag: '_activity-run'});\n  }\n\n  function deactivateRunConsumers() {\n    broker.cancel('_activity-api');\n    broker.cancel('_activity-run');\n    consumingRunQ = false;\n  }\n\n  function onInboundEvent(routingKey, {fields, content, properties}) {\n    switch (routingKey) {\n      case 'activity.enter':\n      case 'activity.discard': {\n        if (content.id === attachedToActivity.id) {\n          inboundQ.queueMessage(fields, content, properties);\n        }\n        break;\n      }\n      case 'flow.take':\n      case 'flow.discard':\n        inboundQ.queueMessage(fields, content, properties);\n        break;\n    }\n  }\n\n  function onInbound(routingKey, message) {\n    message.ack();\n\n    const content = message.content;\n\n    broker.cancel('_run-on-inbound');\n    const inbound = [Object(_messageHelper__WEBPACK_IMPORTED_MODULE_5__[\"cloneContent\"])(content)];\n\n    switch (routingKey) {\n      case 'flow.take':\n      case 'activity.enter':\n        run({\n          message: content.message,\n          inbound,\n        });\n        break;\n      case 'flow.discard':\n      case 'activity.discard': {\n        let discardSequence;\n        if (content.discardSequence) discardSequence = content.discardSequence.slice();\n        runDiscard({inbound, discardSequence});\n        break;\n      }\n    }\n  }\n\n  function onJoinInbound(routingKey, message) {\n    const touchedIds = inboundJoinFlows.map((msg) => msg.content.id);\n    const idx = touchedIds.indexOf(message.content.id);\n\n    if (idx > -1) return;\n\n    inboundJoinFlows.push(message);\n\n    const allTouched = inboundJoinFlows.length === inboundTriggers.length;\n    const remaining = inboundSequenceFlows.length - inboundJoinFlows.length;\n    logger.debug(`<${id}> inbound ${message.content.action} from <${message.content.id}>, ${remaining} remaining`);\n    if (!allTouched) return;\n\n    const evaluatedInbound = inboundJoinFlows.splice(0);\n\n    let taken;\n    const inbound = evaluatedInbound.map((im) => {\n      if (im.fields.routingKey === 'flow.take') taken = true;\n      im.ack();\n      return Object(_messageHelper__WEBPACK_IMPORTED_MODULE_5__[\"cloneContent\"])(im.content);\n    });\n\n    const discardSequence = !taken && evaluatedInbound.reduce((result, im) => {\n      if (!im.content.discardSequence) return result;\n      im.content.discardSequence.forEach((sourceId) => {\n        if (result.indexOf(sourceId) === -1) result.push(sourceId);\n      });\n      return result;\n    }, []);\n\n    broker.cancel('_run-on-inbound');\n\n    if (!taken) return runDiscard({inbound, discardSequence});\n    return run({inbound});\n  }\n\n  function onRunMessage(routingKey, message, messageProperties) {\n    switch (routingKey) {\n      case 'run.next':\n        return continueRunMessage(routingKey, message, messageProperties);\n      case 'run.resume': {\n        return onResumeMessage();\n      }\n    }\n\n    return formatRunMessage(formatRunQ, message, (err, formattedContent) => {\n      if (err) return broker.publish('run', 'run.error', err);\n      message.content = formattedContent;\n      continueRunMessage(routingKey, message, messageProperties);\n    });\n\n    function onResumeMessage() {\n      message.ack();\n\n      const {fields} = stateMessage;\n      switch (fields.routingKey) {\n        case 'run.enter':\n        case 'run.start':\n        case 'run.discarded':\n        case 'run.end':\n        case 'run.leave':\n          break;\n        default:\n          return;\n      }\n\n      if (!fields.redelivered) return;\n\n      logger.debug(`<${id}> resume from ${status}`);\n\n      return broker.publish('run', fields.routingKey, Object(_messageHelper__WEBPACK_IMPORTED_MODULE_5__[\"cloneContent\"])(stateMessage.content), stateMessage.properties);\n    }\n  }\n\n  function continueRunMessage(routingKey, message) {\n    broker.cancel('_format-consumer');\n\n    const {fields, content: originalContent, ack} = message;\n    const isRedelivered = fields.redelivered;\n    const content = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_5__[\"cloneContent\"])(originalContent);\n\n    stateMessage = message;\n\n    switch (routingKey) {\n      case 'run.enter': {\n        logger.debug(`<${id}> enter`, isRedelivered ? 'redelivered' : '');\n\n        status = 'entered';\n        if (!isRedelivered) {\n          execution = undefined;\n        }\n\n        if (extensions) extensions.activate(message);\n        if (ioSpecification) ioSpecification.activate(message);\n\n        if (!isRedelivered) publishEvent('enter', content);\n        break;\n      }\n      case 'run.discard': {\n        logger.debug(`<${id}> discard`, isRedelivered ? 'redelivered' : '');\n\n        status = 'discard';\n        execution = undefined;\n\n        if (extensions) extensions.activate(message);\n        if (ioSpecification) ioSpecification.activate(message);\n\n        if (!isRedelivered) {\n          broker.publish('run', 'run.discarded', content);\n          publishEvent('discard', content);\n        }\n        break;\n      }\n      case 'run.start': {\n        logger.debug(`<${id}> start`, isRedelivered ? 'redelivered' : '');\n        status = 'started';\n        if (!isRedelivered) {\n          broker.publish('run', 'run.execute', content);\n          publishEvent('start', content);\n        }\n\n        break;\n      }\n      case 'run.execute': {\n        status = 'executing';\n        executeMessage = message;\n\n        if (isRedelivered) {\n          if (extensions) extensions.activate(message);\n          if (ioSpecification) ioSpecification.activate(message);\n        }\n\n        executionQ.assertConsumer(onExecutionMessage, {exclusive: true, consumerTag: '_activity-execution'});\n        execution = execution || Object(_ActivityExecution__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(activityApi, context);\n\n        return execution.execute(message);\n      }\n      case 'run.end': {\n        if (status === 'end') break;\n\n        counters.taken++;\n\n        status = 'end';\n        if (!isRedelivered) {\n          broker.publish('run', 'run.leave', content);\n          publishEvent('end', content);\n        }\n        break;\n      }\n      case 'run.error': {\n        publishEvent('error', content);\n        break;\n      }\n      case 'run.discarded': {\n        logger.debug(`<${executionId} (${id})> discarded`);\n        counters.discarded++;\n\n        status = 'discarded';\n        content.outbound = undefined;\n        if (!isRedelivered) {\n          broker.publish('run', 'run.leave', content);\n        }\n        break;\n      }\n      case 'run.leave': {\n        const isDiscarded = status === 'discarded';\n        status = undefined;\n        broker.cancel('_activity-api');\n\n        if (isRedelivered) break;\n\n        const ignoreOutbound = content.ignoreOutbound;\n        let outbound, leaveContent;\n        if (!ignoreOutbound) {\n          outbound = prepareOutbound(content, isDiscarded);\n          leaveContent = {...content, outbound: outbound.slice()};\n        } else {\n          leaveContent = content;\n        }\n\n        broker.publish('run', 'run.next', content);\n        publishEvent('leave', leaveContent);\n        if (!ignoreOutbound) doOutbound(outbound);\n        break;\n      }\n      case 'run.next':\n        activate();\n        break;\n    }\n\n    if (!step) ack();\n  }\n\n  function onExecutionMessage(routingKey, message) {\n    const content = {...executeMessage.content, ...message.content};\n\n    publishEvent(routingKey, content, message.properties);\n\n    switch (routingKey) {\n      case 'execution.outbound.take': {\n        message.ack();\n        const outbound = prepareOutbound(content);\n        return doOutbound(outbound);\n      }\n      case 'execution.stopped': {\n        message.ack();\n        deactivate();\n        deactivateRunConsumers();\n        broker.cancel('_activity-execution');\n        return publishEvent('stop');\n      }\n      case 'execution.error': {\n        status = 'error';\n        broker.publish('run', 'run.error', content);\n        broker.publish('run', 'run.discarded', content);\n        break;\n      }\n      case 'execution.discard':\n        status = 'discarded';\n        broker.publish('run', 'run.discarded', content);\n        break;\n      default: {\n        if (content.outbound && content.outbound.discarded === outboundSequenceFlows.length) {\n          status = 'discarded';\n          broker.publish('run', 'run.discarded', content);\n          break;\n        }\n\n        status = 'executed';\n        broker.publish('run', 'run.end', content);\n      }\n    }\n\n    message.ack();\n\n    if (!step && executeMessage) {\n      const ackMessage = executeMessage;\n      executeMessage = null;\n      ackMessage.ack();\n    }\n  }\n\n  function onApiMessage(routingKey, message) {\n    const messageType = message.properties.type;\n\n    switch (messageType) {\n      case 'discard': {\n        discardRun();\n        break;\n      }\n      case 'stop': {\n        stop();\n        break;\n      }\n    }\n  }\n\n  function publishEvent(state, content, messageProperties = {}) {\n    if (!state) return;\n    if (!content) content = createMessage();\n    broker.publish('event', `activity.${state}`, {...content, state}, {\n      ...messageProperties,\n      type: state,\n      mandatory: state === 'error',\n      persistent: 'persistent' in messageProperties ? messageProperties.persistent : state !== 'stop',\n    });\n  }\n\n  function prepareOutbound(fromContent, isDiscarded) {\n    if (!outboundSequenceFlows.length) return [];\n\n    const {message, outbound: evaluatedOutbound = []} = fromContent;\n    let discardSequence = fromContent.discardSequence;\n    if (isDiscarded && !discardSequence && attachedTo && fromContent.inbound && fromContent.inbound[0]) {\n      discardSequence = [fromContent.inbound[0].id];\n    }\n\n    return outboundSequenceFlows.map((flow) => {\n      const preparedFlow = getPrepared(flow.id);\n      const sequenceId = flow.preFlight(preparedFlow.action);\n      preparedFlow.sequenceId = sequenceId;\n      return preparedFlow;\n    });\n\n    function getPrepared(flowId) {\n      let evaluatedFlow = evaluatedOutbound.filter((flow) => flow.id === flowId).pop();\n      if (!evaluatedFlow) {\n        evaluatedFlow = {\n          id: flowId,\n          action: isDiscarded ? 'discard' : 'take',\n        };\n        if (message !== undefined) evaluatedFlow.message = message;\n      }\n      evaluatedFlow.discardSequence = discardSequence;\n      if (message !== undefined && !('message' in evaluatedFlow)) evaluatedFlow.message = message;\n      return evaluatedFlow;\n    }\n  }\n\n  function doOutbound(preparedOutbound) {\n    if (!preparedOutbound) return;\n\n    outboundSequenceFlows.forEach((flow, idx) => {\n      const preparedFlow = preparedOutbound[idx];\n      flow[preparedFlow.action](preparedFlow);\n    });\n  }\n\n  function getErrorById(errorId) {\n    return context.getErrorById(errorId);\n  }\n\n  function getState() {\n    const msg = createMessage();\n\n    return {\n      ...msg,\n      status,\n      executionId,\n      stopped,\n      behaviour: {...behaviour},\n      counters: {...counters},\n      broker: broker.getState(),\n      execution: execution && execution.getState(),\n    };\n  }\n\n  function inboundMessage(messageContent) {\n    const messagesQ = broker.assertQueue('messages', {autoDelete: false, durable: true});\n    messagesQ.queueMessage({routingKey: 'message'}, messageContent);\n  }\n\n  function next() {\n    if (!step) return;\n    if (!stateMessage) return;\n    if (status === 'executing') return false;\n    if (status === 'formatting') return false;\n    const current = stateMessage;\n    stateMessage.ack();\n    return current;\n  }\n\n  function getApi(message) {\n    if (execution && !execution.completed) return execution.getApi(message);\n    return Object(_Api__WEBPACK_IMPORTED_MODULE_2__[\"ActivityApi\"])(broker, message || stateMessage);\n  }\n\n  function formatRunMessage(formatQ, runMessage, callback) {\n    const startFormatMsg = formatQ.get();\n    if (!startFormatMsg) return callback(null, runMessage.content);\n\n    const pendingFormats = [];\n    const {fields, content} = runMessage;\n    const fundamentals = {\n      id: content.id,\n      type: content.type,\n      parent: Object(_messageHelper__WEBPACK_IMPORTED_MODULE_5__[\"cloneParent\"])(content.parent),\n      attachedTo: content.attachedTo,\n      executionId: content.executionId,\n      isSubProcess: content.isSubProcess,\n      isMultiInstance: content.isMultiInstance,\n    };\n    if (content.inbound) {\n      fundamentals.inbound = content.inbound.slice();\n    }\n    if (content.outbound) {\n      fundamentals.outbound = content.outbound.slice();\n    }\n\n    let formattedContent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_5__[\"cloneContent\"])(content);\n\n    const depleted = formatQ.on('depleted', () => {\n      if (pendingFormats.length) return;\n      depleted.cancel();\n      logger.debug(`<${id}> completed formatting ${fields.routingKey}`);\n      broker.cancel('_format-consumer');\n      callback(null, Object(_shared__WEBPACK_IMPORTED_MODULE_1__[\"filterUndefined\"])(formattedContent));\n    });\n\n    status = 'formatting';\n\n    onFormatMessage(startFormatMsg.fields.routingKey, startFormatMsg);\n    formatQ.assertConsumer(onFormatMessage, { consumerTag: '_format-consumer', prefetch: 100 });\n\n    function onFormatMessage(routingKey, message) {\n      const isStartFormat = message.content.endRoutingKey;\n\n      if (isStartFormat) {\n        pendingFormats.push(message);\n        return logger.debug(`<${id}> start formatting ${fields.routingKey} message content with formatter ${routingKey}`);\n      }\n\n      popFormattingStart(routingKey, message);\n\n      logger.debug(`<${id}> format ${fields.routingKey} message content`);\n\n      formattedContent = {\n        ...formattedContent,\n        ...message.content,\n        ...fundamentals,\n      };\n\n      message.ack();\n    }\n\n    function popFormattingStart(routingKey) {\n      for (let i = 0; i < pendingFormats.length; i++) {\n        const pendingFormat = pendingFormats[i];\n        if (Object(smqp__WEBPACK_IMPORTED_MODULE_4__[\"getRoutingKeyPattern\"])(pendingFormat.content.endRoutingKey).test(routingKey)) {\n          logger.debug(`<${id}> completed formatting ${fields.routingKey} message content with formatter ${routingKey}`);\n          pendingFormats.splice(i, 1);\n          pendingFormat.ack();\n          break;\n        }\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/activity/Activity.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/activity/ActivityExecution.js":
          /*!**********************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/activity/ActivityExecution.js ***!
  \**********************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ActivityExecution; });\n/* harmony import */ var _Api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Api */ \"./node_modules/bpmn-elements/src/Api.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\nfunction ActivityExecution(activity, context) {\n  const {id, broker, logger, Behaviour} = activity;\n  const postponed = [];\n\n  let source, initMessage, completed = false, executionId;\n\n  const executeQ = broker.assertQueue('execute-q', {durable: true, autoDelete: false});\n\n  const executionApi = {\n    get completed() {\n      return completed;\n    },\n    get source() {\n      return source;\n    },\n    discard,\n    execute,\n    getApi,\n    getPostponed,\n    getState,\n    recover,\n    stop,\n  };\n\n  return executionApi;\n\n  function getPostponed() {\n    return postponed.map((msg) => getApi(msg));\n  }\n\n  function execute(executeMessage) {\n    if (!executeMessage) throw new Error('Execution requires message');\n    if (!executeMessage.content || !executeMessage.content.executionId) throw new Error('Execution requires execution id');\n\n    const isRedelivered = executeMessage.fields.redelivered;\n    executionId = executeMessage.content.executionId;\n\n    initMessage = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneMessage\"])(executeMessage);\n    initMessage.content = {...initMessage.content, executionId, state: 'start', isRootScope: true};\n\n    if (isRedelivered) {\n      logger.debug(`<${executionId} (${id})> resume execution`);\n\n      if (!source) source = Behaviour(activity, context);\n\n      activate();\n      return broker.publish('execution', 'execute.resume.execution', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(initMessage.content), {persistent: false});\n    }\n\n    logger.debug(`<${executionId} (${id})> execute`);\n    activate();\n    source = Behaviour(activity, context);\n    broker.publish('execution', 'execute.start', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(initMessage.content));\n  }\n\n  function discard() {\n    if (completed) return;\n    if (!initMessage) return logger.warn(`<${id}> is not executing`);\n    getApi(initMessage).discard();\n  }\n\n  function stop() {\n    if (!initMessage) return;\n    broker.publish('execution', 'execute.stop', {...initMessage.content}, {persistent: false});\n  }\n\n  function getState() {\n    const result = {completed};\n\n    if (!source || !source.getState) return result;\n    return {...result, ...source.getState()};\n  }\n\n  function recover(state) {\n    postponed.splice(0);\n\n    if (!state) return executionApi;\n    if ('completed' in state) completed = state.completed;\n\n    source = Behaviour(activity, context);\n    if (source.recover) {\n      source.recover(state);\n    }\n\n    return executionApi;\n  }\n\n  function activate() {\n    if (completed) return;\n\n    broker.bindQueue(executeQ.name, 'execution', 'execute.#', {priority: 100});\n    executeQ.assertConsumer(onExecuteMessage, {exclusive: true, prefetch: 100, priority: 100});\n    if (completed) return deactivate();\n\n    broker.subscribeTmp('api', `activity.*.${executionId}`, onParentApiMessage, {noAck: true, consumerTag: '_activity-api-execution', priority: 100});\n  }\n\n  function deactivate() {\n    broker.cancel('_activity-api-execution');\n    broker.unsubscribe(executeQ.name, onExecuteMessage);\n    broker.unbindQueue(executeQ.name, 'execution', 'execute.#');\n  }\n\n  function onParentApiMessage(routingKey, message) {\n    const messageType = message.properties.type;\n    if (messageType === 'discard') {\n      return broker.publish('execution', 'execute.discard', {...message.content, state: 'discard'});\n    }\n  }\n\n  function onExecuteMessage(routingKey, message) {\n    const {fields = {}, content = {}, properties = {}} = message;\n    const isRedelivered = fields.redelivered;\n    const {isRootScope, ignoreIfExecuting, keep, executionId: cexid, error} = content;\n\n    if (routingKey === 'execute.stop' && isRootScope) {\n      message.ack();\n      return onStopped();\n    }\n\n    switch (routingKey) {\n      case 'execute.resume.execution': {\n        if (!postponed.length) return broker.publish('execution', 'execute.start', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(initMessage.content));\n        break;\n      }\n      case 'execute.error':\n      case 'execute.discard':\n        executionDiscard();\n        break;\n      case 'execute.cancel':\n      case 'execute.completed': {\n        if (isRedelivered) {\n          message.ack();\n          return broker.publish('execution', routingKey, getExecuteMessage().content);\n        }\n\n        executionCompleted();\n        break;\n      }\n      case 'execute.start': {\n        if (!stateChangeMessage()) return;\n        return source.execute(getExecuteMessage());\n      }\n      case 'execute.outbound.take': {\n        if (isRedelivered) {\n          message.ack();\n          break;\n        }\n        broker.publish('execution', 'execution.outbound.take', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(content), {type: 'outbound'});\n        break;\n      }\n      default: {\n        if (!stateChangeMessage()) return;\n        if (isRedelivered) {\n          return source.execute(getExecuteMessage());\n        }\n      }\n    }\n\n    function stateChangeMessage() {\n      const idx = postponed.findIndex((msg) => msg.content.executionId === cexid);\n      let previousMsg;\n      if (idx > -1) {\n        if (ignoreIfExecuting) {\n          message.ack();\n          return false;\n        }\n\n        previousMsg = postponed.splice(idx, 1, message)[0];\n        previousMsg.ack();\n        return true;\n      }\n\n      postponed.push(message);\n      return true;\n    }\n\n    function getExecuteMessage() {\n      return {\n        fields: {...fields},\n        content: {...content, ignoreIfExecuting: undefined},\n        properties: {...properties},\n      };\n    }\n\n    function executionCompleted() {\n      const postponedMsg = ackPostponed(message);\n      if (!postponedMsg) return;\n\n      if (!isRootScope) {\n        logger.debug(`<${cexid} (${id})> completed sub execution`);\n        if (!keep) message.ack();\n        if (postponed.length === 1 && postponed[0].content.isRootScope && !postponed[0].content.preventComplete) {\n          return broker.publish('execution', 'execute.completed', {...postponed[0].content});\n        }\n        return;\n      }\n\n      logger.debug(`<${cexid} (${id})> completed execution`);\n      completed = true;\n\n      message.ack(true);\n\n      deactivate();\n\n      const subApis = getPostponed();\n      postponed.splice(0);\n      subApis.forEach((api) => api.discard());\n\n      publishExecutionCompleted('completed', {...postponedMsg.content, ...message.content});\n    }\n\n    function executionDiscard() {\n      const postponedMsg = ackPostponed(message);\n      if (!isRootScope && !postponedMsg) return;\n\n\n      if (!error && !isRootScope) {\n        message.ack();\n        if (postponed.length === 1 && postponed[0].content.isRootScope) {\n          return broker.publish('execution', 'execute.discard', {...postponed[0].content});\n        }\n        return;\n      }\n\n      message.ack(true);\n\n      const subApis = getPostponed();\n      postponed.splice(0);\n      subApis.forEach((api) => api.discard());\n      deactivate();\n\n      publishExecutionCompleted(error ? 'error' : 'discard', {...content});\n    }\n\n    function publishExecutionCompleted(completionType, completeContent) {\n      completed = true;\n      broker.publish('execution', `execution.${completionType}`, {\n        ...completeContent,\n        state: completionType,\n      }, {type: completionType});\n    }\n\n    function onStopped() {\n      deactivate();\n      const running = postponed.slice();\n      running.forEach((msg) => getApi(msg).stop());\n      return broker.publish('execution', 'execution.stopped', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(message.content), {type: 'stopped', persistent: false});\n    }\n  }\n\n  function ackPostponed(completeMessage) {\n    const {executionId: eid} = completeMessage.content;\n\n    const idx = postponed.findIndex(({content}) => content.executionId === eid);\n    if (idx === -1) return;\n    const [msg] = postponed.splice(idx, 1);\n    msg.ack();\n    return msg;\n  }\n\n  function getApi(apiMessage) {\n    if (!apiMessage) apiMessage = initMessage;\n\n    if (source.getApi) {\n      const sourceApi = source.getApi(apiMessage);\n      if (sourceApi) return sourceApi;\n    }\n\n    const api = Object(_Api__WEBPACK_IMPORTED_MODULE_0__[\"ActivityApi\"])(broker, apiMessage);\n\n    api.getExecuting = function getExecuting() {\n      return postponed.reduce((result, msg) => {\n        if (msg.content.executionId === apiMessage.content.executionId) return result;\n        result.push(getApi(msg));\n        return result;\n      }, []);\n    };\n\n    return api;\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/activity/ActivityExecution.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/activity/Dummy.js":
          /*!**********************************************************!*\
  !*** ./node_modules/bpmn-elements/src/activity/Dummy.js ***!
  \**********************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DummyActivity; });\nfunction DummyActivity(activity) {\n  activity.placeholder = true;\n  return activity;\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/activity/Dummy.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/activity/ExecutionScope.js":
          /*!*******************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/activity/ExecutionScope.js ***!
  \*******************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ExecutionScope; });\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n/* harmony import */ var _error_Errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/Errors */ \"./node_modules/bpmn-elements/src/error/Errors.js\");\n\n\n\nfunction ExecutionScope(activity, initMessage = {}) {\n  const {id, type, environment, logger} = activity;\n\n  const {fields, content, properties} = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneMessage\"])(initMessage);\n\n  const scope = {\n    id,\n    type,\n    fields,\n    content,\n    properties,\n    environment,\n    logger,\n    resolveExpression,\n    ActivityError: _error_Errors__WEBPACK_IMPORTED_MODULE_1__[\"ActivityError\"],\n    BpmnError: _error_Errors__WEBPACK_IMPORTED_MODULE_1__[\"BpmnError\"],\n  };\n\n  return scope;\n\n  function resolveExpression(expression) {\n    return environment.resolveExpression(expression, scope);\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/activity/ExecutionScope.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/activity/Signal.js":
          /*!***********************************************************!*\
  !*** ./node_modules/bpmn-elements/src/activity/Signal.js ***!
  \***********************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Signal; });\nfunction Signal(signalDef, context) {\n  const {id, type, name, parent: originalParent} = signalDef;\n  const {environment} = context;\n  const parent = {...originalParent};\n\n  return {\n    id,\n    type,\n    name,\n    parent,\n    resolve,\n  };\n\n  function resolve(executionMessage) {\n    return {\n      id,\n      type,\n      name: name && environment.resolveExpression(name, executionMessage),\n      parent: {...parent},\n    };\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/activity/Signal.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/definition/Definition.js":
          /*!*****************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/definition/Definition.js ***!
  \*****************************************************************/
          /*! exports provided: default, Definition */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Definition\", function() { return Definition; });\n/* harmony import */ var _DefinitionExecution__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DefinitionExecution */ \"./node_modules/bpmn-elements/src/definition/DefinitionExecution.js\");\n/* harmony import */ var _Api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Api */ \"./node_modules/bpmn-elements/src/Api.js\");\n/* harmony import */ var _EventBroker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../EventBroker */ \"./node_modules/bpmn-elements/src/EventBroker.js\");\n/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared */ \"./node_modules/bpmn-elements/src/shared.js\");\n/* harmony import */ var _error_Errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/Errors */ \"./node_modules/bpmn-elements/src/error/Errors.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Definition);\n\nfunction Definition(context, options) {\n  if (!context) throw new Error('No context');\n\n  const {id, name, type = 'definition'} = context;\n  let environment = context.environment;\n\n  if (options) {\n    environment = environment.clone(options);\n    context = context.clone(environment);\n  }\n\n  const logger = environment.Logger(type.toLowerCase());\n\n  let execution, executionId, processes, executableProcesses, postponedMessage, stateMessage, stopped, consumingRunQ;\n  let status;\n\n  let counters = {\n    completed: 0,\n    discarded: 0,\n  };\n\n  const definitionApi = {\n    id,\n    name,\n    type,\n    logger,\n    context,\n    get counters() {\n      return {...counters};\n    },\n    get executionId() {\n      return executionId;\n    },\n    get status() {\n      return status;\n    },\n    get execution() {\n      return execution;\n    },\n    get isRunning() {\n      if (!consumingRunQ) return false;\n      return !!status;\n    },\n    environment,\n    run,\n    getApi,\n    getState,\n    getActivityById,\n    getPostponed,\n    getProcesses,\n    getExecutableProcesses,\n    getProcessById,\n    recover,\n    resume,\n    signal,\n    stop,\n  };\n\n  const {broker, on, once, waitFor, emit, emitFatal} = Object(_EventBroker__WEBPACK_IMPORTED_MODULE_2__[\"DefinitionBroker\"])(definitionApi, onBrokerReturn);\n\n  definitionApi.on = on;\n  definitionApi.once = once;\n  definitionApi.waitFor = waitFor;\n  definitionApi.emit = emit;\n  definitionApi.emitFatal = emitFatal;\n\n  const runQ = broker.getQueue('run-q');\n  const executionQ = broker.getQueue('execution-q');\n\n  Object.defineProperty(definitionApi, 'broker', {\n    enumerable: true,\n    get: () => broker,\n  });\n\n  Object.defineProperty(definitionApi, 'stopped', {\n    enumerable: true,\n    get: () => execution && execution.stopped,\n  });\n\n  return definitionApi;\n\n  function run(callback) {\n    if (definitionApi.isRunning) {\n      const err = new Error('definition is already running');\n      if (callback) return callback(err);\n      throw err;\n    }\n\n    deactivateRunConsumers();\n    addConsumerCallbacks(callback);\n\n    executionId = Object(_shared__WEBPACK_IMPORTED_MODULE_3__[\"getUniqueId\"])(id);\n\n    broker.publish('run', 'run.enter', createMessage({executionId, state: 'enter'}));\n    broker.publish('run', 'run.start', createMessage({executionId, state: 'start'}));\n    broker.publish('run', 'run.execute', createMessage({executionId, state: 'execute'}));\n\n    activateRunConsumers();\n  }\n\n  function resume(callback) {\n    if (definitionApi.isRunning) {\n      const err = new Error('cannot resume running definition');\n      if (callback) return callback(err);\n      throw err;\n    }\n\n    stopped = false;\n    if (!status) return definitionApi;\n\n    addConsumerCallbacks(callback);\n\n    const content = createMessage({executionId});\n    broker.publish('run', 'run.resume', content, {persistent: false});\n    activateRunConsumers();\n    return definitionApi;\n  }\n\n  function addConsumerCallbacks(callback) {\n    if (!callback) return;\n\n    broker.off('return', onBrokerReturn);\n\n    clearConsumers();\n\n    broker.subscribeOnce('event', 'definition.stop', cbLeave, {consumerTag: 'ctag-cb-stop'});\n    broker.subscribeOnce('event', 'definition.leave', cbLeave, {consumerTag: 'ctag-cb-leave'});\n    broker.subscribeOnce('event', 'definition.error', cbError, {consumerTag: 'ctag-cb-error'});\n\n    function cbLeave(_, message) {\n      clearConsumers();\n      return callback(null, getApi(message));\n    }\n    function cbError(_, message) {\n      clearConsumers();\n      reset();\n      const err = Object(_error_Errors__WEBPACK_IMPORTED_MODULE_4__[\"makeErrorFromMessage\"])(message);\n      return callback(err);\n    }\n\n    function clearConsumers() {\n      broker.cancel('ctag-cb-stop');\n      broker.cancel('ctag-cb-leave');\n      broker.cancel('ctag-cb-error');\n      broker.on('return', onBrokerReturn);\n    }\n  }\n\n  function stop() {\n    if (!definitionApi.isRunning) return;\n\n    stopped = true;\n\n    if (!execution || execution.completed) {\n      deactivateRunConsumers();\n      return publishEvent('stop');\n    }\n\n    execution.stop();\n  }\n\n  function createMessage(override = {}) {\n    return {\n      id,\n      type,\n      ...override,\n    };\n  }\n\n  function recover(state) {\n    if (definitionApi.isRunning) throw new Error('cannot recover running definition');\n    if (!state) return definitionApi;\n\n    stopped = state.stopped;\n    status = state.status;\n    executionId = state.executionId;\n    if (state.counters) {\n      counters = {...counters, ...state.counters};\n    }\n\n    if (state.execution) {\n      execution = Object(_DefinitionExecution__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(definitionApi, context).recover(state.execution);\n    }\n\n    broker.recover(state.broker);\n\n    return definitionApi;\n  }\n\n  function onBrokerReturn(message) {\n    if (message.properties.type === 'error') {\n      deactivateRunConsumers();\n      const err = Object(_error_Errors__WEBPACK_IMPORTED_MODULE_4__[\"makeErrorFromMessage\"])(message);\n      throw err;\n    }\n  }\n\n  function onRunMessage(routingKey, message) {\n    const {content, ack, fields} = message;\n    if (routingKey === 'run.resume') {\n      return onResumeMessage();\n    }\n\n    stateMessage = message;\n\n    switch (routingKey) {\n      case 'run.enter': {\n        logger.debug(`<${id}> enter`);\n\n        status = 'entered';\n        if (fields.redelivered) break;\n\n        execution = undefined;\n        publishEvent('enter', content);\n        break;\n      }\n      case 'run.start': {\n        logger.debug(`<${id}> start`);\n        status = 'start';\n        publishEvent('start', content);\n        break;\n      }\n      case 'run.execute': {\n        status = 'executing';\n        const executeMessage = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_5__[\"cloneMessage\"])(message);\n        if (fields.redelivered && !execution) {\n          executeMessage.fields.redelivered = undefined;\n        }\n        postponedMessage = message;\n        executionQ.assertConsumer(onExecutionMessage, {exclusive: true, consumerTag: '_definition-execution'});\n        execution = execution || Object(_DefinitionExecution__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(definitionApi, context);\n        return execution.execute(executeMessage);\n      }\n      case 'run.error': {\n        publishEvent('error', content);\n        break;\n      }\n      case 'run.end': {\n        if (status === 'end') break;\n\n        counters.completed++;\n\n        logger.debug(`<${id}>`, 'completed');\n        status = 'end';\n        broker.publish('run', 'run.leave', content);\n        publishEvent('end', content);\n        break;\n      }\n      case 'run.discarded': {\n        if (status === 'discarded') break;\n\n        counters.discarded++;\n\n        status = 'discarded';\n        broker.publish('run', 'run.leave', content);\n        break;\n      }\n      case 'run.leave': {\n        status = undefined;\n        ack();\n        publishEvent('leave');\n        break;\n      }\n    }\n\n    ack();\n\n    function onResumeMessage() {\n      message.ack();\n\n      switch (stateMessage.fields.routingKey) {\n        case 'run.enter':\n        case 'run.start':\n        case 'run.discarded':\n        case 'run.end':\n        case 'run.leave':\n          break;\n        default:\n          return;\n      }\n\n      if (!stateMessage.fields.redelivered) return;\n\n      logger.debug(`<${id}> resume from ${status}`);\n\n      return broker.publish('run', stateMessage.fields.routingKey, Object(_messageHelper__WEBPACK_IMPORTED_MODULE_5__[\"cloneContent\"])(stateMessage.content), stateMessage.properties);\n    }\n  }\n\n  function onExecutionMessage(routingKey, message) {\n    const content = message.content;\n    const messageType = message.properties.type;\n\n    message.ack();\n\n    switch (messageType) {\n      case 'stopped': {\n        deactivateRunConsumers();\n        return publishEvent('stop');\n      }\n      case 'error': {\n        broker.publish('run', 'run.error', content);\n        broker.publish('run', 'run.discarded', content);\n        break;\n      }\n      default: {\n        broker.publish('run', 'run.end', content);\n      }\n    }\n\n    if (postponedMessage) {\n      const ackMessage = postponedMessage;\n      postponedMessage = null;\n      ackMessage.ack();\n    }\n  }\n\n  function publishEvent(action, content = {}) {\n    if (!action) return;\n    const msgOpts = { type: action, mandatory: action === 'error' };\n\n    broker.publish('event', `definition.${action}`, execution ? execution.createMessage(content) : content, msgOpts);\n  }\n\n  function getState() {\n    return createMessage({\n      executionId,\n      status,\n      stopped,\n      counters: {...counters},\n      environment: environment.getState(),\n      execution: execution && execution.getState(),\n      broker: broker.getState(),\n    });\n  }\n\n  function getProcesses() {\n    if (!processes) loadProcesses();\n    return processes;\n  }\n\n  function getExecutableProcesses() {\n    if (!processes) loadProcesses();\n    return executableProcesses;\n  }\n\n  function getProcessById(processId) {\n    return getProcesses().find((p) => p.id === processId);\n  }\n\n  function loadProcesses() {\n    if (processes) return processes;\n    executableProcesses = context.getExecutableProcesses() || [];\n    processes = context.getProcesses() || [];\n    logger.debug(`<${id}> found ${processes.length} processes`);\n  }\n\n  function getActivityById(childId) {\n    let child;\n    const siblings = getProcesses();\n    for (let i = 0; i < siblings.length; i++) {\n      child = siblings[i].getActivityById(childId);\n      if (child) return child;\n    }\n    return child;\n  }\n\n  function getPostponed(...args) {\n    if (!execution) return [];\n    return execution.getPostponed(...args);\n  }\n\n  function getApi(message) {\n    if (execution) return execution.getApi(message);\n    return Object(_Api__WEBPACK_IMPORTED_MODULE_1__[\"DefinitionApi\"])(broker, message);\n  }\n\n  function signal(message) {\n    return getApi().signal(message, {delegate: true});\n  }\n\n  function activateRunConsumers() {\n    consumingRunQ = true;\n    broker.subscribeTmp('api', `definition.*.${executionId}`, onApiMessage, {noAck: true, consumerTag: '_definition-api'});\n    runQ.assertConsumer(onRunMessage, {exclusive: true, consumerTag: '_definition-run'});\n  }\n\n  function deactivateRunConsumers() {\n    broker.cancel('_definition-api');\n    broker.cancel('_definition-run');\n    broker.cancel('_definition-execution');\n    consumingRunQ = false;\n  }\n\n  function onApiMessage(routingKey, message) {\n    const messageType = message.properties.type;\n\n    switch (messageType) {\n      case 'stop': {\n        stop();\n        break;\n      }\n    }\n  }\n\n  function reset() {\n    executionId = undefined;\n    deactivateRunConsumers();\n    runQ.purge();\n    executionQ.purge();\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/definition/Definition.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/definition/DefinitionExecution.js":
          /*!**************************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/definition/DefinitionExecution.js ***!
  \**************************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DefinitionExecution; });\n/* harmony import */ var _Api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Api */ \"./node_modules/bpmn-elements/src/Api.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n/* harmony import */ var _getPropertyValue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../getPropertyValue */ \"./node_modules/bpmn-elements/src/getPropertyValue.js\");\n\n\n\n\nfunction DefinitionExecution(definition) {\n  const {id, type, broker, logger, environment} = definition;\n\n  const processes = definition.getProcesses();\n  const processIds = processes.map(({id: childId}) => childId);\n  const executableProcesses = definition.getExecutableProcesses();\n\n  const postponed = [];\n  let activityQ, executionId, initMessage, stopped, status = 'init', completed = false;\n\n  broker.assertExchange('execution', 'topic', {autoDelete: false, durable: true});\n\n  const definitionExecution = {\n    id,\n    type,\n    broker,\n    get environment() {\n      return environment;\n    },\n    get executionId() {\n      return executionId;\n    },\n    get completed() {\n      return completed;\n    },\n    get status() {\n      return status;\n    },\n    get stopped() {\n      return stopped;\n    },\n    get postponedCount() {\n      return postponed.length;\n    },\n    processes,\n    createMessage,\n    getApi,\n    getState,\n    getPostponed,\n    execute,\n    resume,\n    recover,\n    stop,\n  };\n\n  Object.defineProperty(definitionExecution, 'stopped', {\n    enumerable: true,\n    get: () => stopped,\n  });\n\n  return definitionExecution;\n\n  function execute(executeMessage) {\n    if (!executeMessage) throw new Error('Definition execution requires message');\n\n    const content = executeMessage.content;\n    executionId = content.executionId;\n    if (!executionId) throw new Error('Definition execution requires execution id');\n\n    stopped = false;\n\n    const executeContent = {...content, executionId, state: 'start'};\n    initMessage = {...executeMessage, content: executeContent};\n\n    activityQ = broker.assertQueue(`execute-${executionId}-q`, {durable: true, autoDelete: false});\n\n    if (executeMessage.fields.redelivered) return resume(executeMessage);\n\n    start();\n    return true;\n  }\n\n  function resume() {\n    logger.debug(`<${executionId} (${id})> resume definition execution`);\n\n    if (completed) return complete('completed');\n    activate();\n\n    postponed.splice(0);\n\n    activityQ.consume(onChildEvent, {prefetch: 1000});\n\n    processes.forEach((p) => p.resume());\n  }\n\n  function start() {\n    if (!processes.length) {\n      return publishCompletionMessage('completed');\n    }\n    if (!executableProcesses.length) return definition.emitFatal(new Error('No executable process'));\n\n    status = 'start';\n    activate();\n\n    executableProcesses.forEach(prepareProcess);\n    executableProcesses.forEach((p) => p.run());\n\n    activityQ.consume(onChildEvent, {prefetch: 1000});\n  }\n\n  function prepareProcess(process) {\n    activityQ.queueMessage({routingKey: 'process.init'}, {id: process.id, type: process.type, parent: {id, executionId, type}});\n  }\n\n  function stop() {\n    status = 'stop';\n    return activityQ.queueMessage({routingKey: 'execution.stop'}, {\n      id,\n      type,\n      executionId,\n    }, {type: 'stop', persistent: false});\n  }\n\n  function getState() {\n    return {\n      executionId,\n      stopped,\n      completed,\n      processes: processes.map((p) => p.getState()),\n    };\n  }\n\n  function recover(state) {\n    if (!state) return definitionExecution;\n    executionId = state.executionId;\n\n    stopped = state.stopped;\n    completed = state.completed;\n\n    logger.debug(`<${executionId} (${id})> recover definition execution`);\n\n    state.processes.forEach((processState) => {\n      const instance = definition.getProcessById(processState.id);\n      if (!instance) return;\n\n      instance.recover(processState);\n    });\n\n    return definitionExecution;\n  }\n\n  function getPostponed(...args) {\n    return processes.reduce((result, p) => {\n      result = result.concat(p.getPostponed(...args));\n      return result;\n    }, []);\n  }\n\n  function activate() {\n    processes.forEach((p) => {\n      p.broker.subscribeTmp('message', 'message.outbound', onMessageOutbound, {noAck: true, consumerTag: '_definition-message-consumer'});\n      p.broker.subscribeTmp('event', 'activity.signal', onThrowSignal, {noAck: true, consumerTag: '_definition-signal-consumer', priority: 200});\n      p.broker.subscribeTmp('event', '#', onEvent, {noAck: true, consumerTag: '_definition-activity-consumer', priority: 100});\n    });\n\n    broker.subscribeTmp('api', '#', onApiMessage, {noAck: true, consumerTag: '_definition-api-consumer'});\n\n    function onEvent(routingKey, originalMessage) {\n      const message = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneMessage\"])(originalMessage);\n      const content = message.content;\n      const parent = content.parent = content.parent || {};\n\n      const isDirectChild = processIds.indexOf(content.id) > -1;\n      if (isDirectChild) {\n        parent.executionId = executionId;\n      } else {\n        content.parent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"pushParent\"])(parent, {id, type, executionId});\n      }\n\n      broker.publish('event', routingKey, content, {...message.properties, mandatory: false});\n      if (!isDirectChild) return;\n\n      activityQ.queueMessage(message.fields, Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(content), message.properties);\n    }\n  }\n\n  function deactivate() {\n    broker.cancel('_definition-api-consumer');\n\n    processes.forEach((p) => {\n      p.broker.cancel('_definition-message-consumer');\n      p.broker.cancel('_definition-activity-consumer');\n      p.broker.cancel('_definition-signal-consumer');\n    });\n  }\n\n  function complete(completionType, content = {}) {\n    deactivate();\n    logger.debug(`<${executionId} (${id})> definition execution ${completionType}`);\n    if (!content) content = createMessage();\n    completed = true;\n    if (status !== 'terminated') status = completionType;\n    broker.deleteQueue(activityQ.name);\n\n    return broker.publish('execution', `execution.${completionType}.${executionId}`, {\n      ...initMessage.content,\n      output: environment.output,\n      ...content,\n      state: completionType,\n    }, {type: completionType, mandatory: completionType === 'error'});\n  }\n\n  function onChildEvent(routingKey, message) {\n    const content = message.content;\n    const isRedelivered = message.fields.redelivered;\n    const {id: childId, type: activityType, executionId: childExecutionId} = content;\n\n    if (routingKey === 'execution.stop' && childExecutionId === executionId) {\n      message.ack();\n      return onStopped();\n    }\n\n    if (routingKey === 'process.leave') {\n      return onChildCompleted();\n    }\n\n    stateChangeMessage(true);\n\n    switch (routingKey) {\n      case 'process.error': {\n        processes.slice().forEach((p) => {\n          if (p.id !== childId) p.stop();\n        });\n        complete('error', {error: content.error});\n        break;\n      }\n    }\n\n    function stateChangeMessage(postponeMessage = true) {\n      const previousMsg = popPostponed(childId);\n      if (previousMsg) previousMsg.ack();\n      if (postponeMessage) postponed.push(message);\n    }\n\n    function popPostponed(postponedId) {\n      const idx = postponed.findIndex((msg) => msg.content.id === postponedId);\n      if (idx > -1) {\n        return postponed.splice(idx, 1)[0];\n      }\n    }\n\n    function onChildCompleted() {\n      stateChangeMessage(false);\n      if (isRedelivered) return message.ack();\n\n      logger.debug(`<${executionId} (${id})> left <${childId}> (${activityType}), pending runs ${postponed.length}`);\n\n      if (!postponed.length) {\n        message.ack();\n        complete('completed');\n      }\n    }\n\n    function onStopped() {\n      logger.debug(`<${executionId} (${id})> stop definition execution (stop process executions ${postponed.length})`);\n      activityQ.close();\n      deactivate();\n      processes.slice().forEach((p) => {\n        p.stop();\n      });\n      stopped = true;\n      return broker.publish('execution', `execution.stopped.${executionId}`, {\n        ...initMessage.content,\n        ...content,\n      }, {type: 'stopped', persistent: false});\n    }\n  }\n\n  function onMessageOutbound(routingKey, message) {\n    const content = message.content;\n    const {target, source} = content;\n\n    logger.debug(`<${executionId} (${id})> conveying message from <${source.processId}.${source.id}> to <${target.processId}.${target.id}>`);\n\n    const targetProcess = getProcessById(target.processId);\n\n    targetProcess.sendMessage(content);\n  }\n\n  function onThrowSignal(routingKey, message) {\n    const content = message.content;\n    const signalMessage = message.content.message;\n    logger.debug(`<${executionId} (${id})> signal <${signalMessage.id}> received from <${content.parent.id}.${content.id}>. Delegating.`);\n\n    getApi().signal({...signalMessage}, {delegate: true});\n  }\n\n  function onApiMessage(routingKey, message) {\n    const messageType = message.properties.type;\n    if (id === message.content.id && messageType === 'signal') {\n      const signalId = Object(_getPropertyValue__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(message, 'content.message.id');\n      for (const bp of processes) {\n        if (bp.isRunning) continue;\n        if (bp.getStartActivities(signalId).length) {\n          logger.debug(`<${executionId} (${id})> start <${bp.id}>`);\n          bp.run();\n        }\n      }\n    }\n\n    if (message.properties.delegate) {\n      for (const bp of processes) {\n        bp.broker.publish('api', routingKey, Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(message.content), message.properties);\n      }\n    }\n  }\n\n  function getProcessById(processId) {\n    return processes.find((p) => p.id === processId);\n  }\n\n  function publishCompletionMessage(completionType, content) {\n    deactivate();\n    logger.debug(`<${executionId} (${id})> ${completionType}`);\n    if (!content) content = createMessage();\n    return broker.publish('execution', `execution.${completionType}.${executionId}`, content, { type: completionType });\n  }\n\n  function createMessage(content = {}) {\n    return {\n      id,\n      type,\n      executionId,\n      status,\n      ...content,\n    };\n  }\n\n  function getApi(apiMessage) {\n    if (!apiMessage) apiMessage = initMessage;\n\n    const content = apiMessage.content;\n    if (content.executionId !== executionId) {\n      return getProcessApi(apiMessage);\n    }\n\n    const api = Object(_Api__WEBPACK_IMPORTED_MODULE_0__[\"DefinitionApi\"])(broker, apiMessage);\n\n    api.getExecuting = function getExecuting() {\n      return postponed.reduce((result, msg) => {\n        if (msg.content.executionId === content.executionId) return result;\n        result.push(getApi(msg));\n        return result;\n      }, []);\n    };\n\n    return api;\n  }\n\n  function getProcessApi(message) {\n    const content = message.content;\n    let api = getApiByProcessId(content.id);\n    if (api) return api;\n\n    if (!content.parent) return;\n\n    api = getApiByProcessId(content.parent.id);\n    if (api) return api;\n\n    if (!content.parent.path) return;\n\n    for (let i = 0; i < content.parent.path.length; i++) {\n      api = getApiByProcessId(content.parent.path[i].id);\n      if (api) return api;\n    }\n\n    function getApiByProcessId(parentId) {\n      const processInstance = getProcessById(parentId);\n      if (!processInstance) return;\n      return processInstance.getApi(message);\n    }\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/definition/DefinitionExecution.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/error/BpmnError.js":
          /*!***********************************************************!*\
  !*** ./node_modules/bpmn-elements/src/error/BpmnError.js ***!
  \***********************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BpmnErrorActivity; });\nfunction BpmnErrorActivity(errorDef, context) {\n  const {id, type, name} = errorDef;\n  const {environment} = context;\n  const {errorCode} = errorDef.behaviour || {};\n\n  return {\n    id,\n    errorCode,\n    type,\n    name,\n    resolve,\n  };\n\n  function resolve(executionMessage, error) {\n    return {\n      id,\n      type,\n      name,\n      errorCode: errorCode && environment.resolveExpression(errorCode, {...executionMessage, error}),\n    };\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/error/BpmnError.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/error/Errors.js":
          /*!********************************************************!*\
  !*** ./node_modules/bpmn-elements/src/error/Errors.js ***!
  \********************************************************/
          /*! exports provided: ActivityError, BpmnError, createMessageFromError, makeErrorFromMessage */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActivityError\", function() { return ActivityError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BpmnError\", function() { return BpmnError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMessageFromError\", function() { return createMessageFromError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeErrorFromMessage\", function() { return makeErrorFromMessage; });\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\nclass ActivityError extends Error {\n  constructor(message, sourceMessage, inner) {\n    super(message);\n    this.name = this.constructor.name;\n    if (sourceMessage) {\n      const clone = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneMessage\"])(sourceMessage);\n      this.fields = clone.fields && {...clone.fields};\n      this.content = {...clone.content, error: undefined};\n      this.properties = clone.properties;\n    }\n    if (!inner) return;\n\n    this.inner = inner;\n    if ('name' in inner) this.name = inner.name;\n    if ('code' in inner) this.code = inner.code;\n    if ('id' in inner) this.id = inner.id;\n  }\n}\n\nclass BpmnError extends Error {\n  constructor(message, behaviour = {}, sourceMessage, inner) {\n    const {errorCode} = behaviour;\n\n    super(message);\n    this.name = behaviour.name || this.constructor.name;\n    this.code = 'errorCode' in behaviour && errorCode && errorCode.toString();\n    this.id = behaviour.id;\n    if (sourceMessage) {\n      const clone = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneMessage\"])(sourceMessage);\n      this.fields = clone.fields && {...clone.fields};\n      this.content = {...clone.content, error: undefined};\n      this.properties = clone.properties;\n    }\n    if (inner) this.inner = inner;\n  }\n}\n\n\n\nfunction createMessageFromError(error) {\n  if (error instanceof BpmnError) return Object.assign({}, error);\n\n  return {\n    message: error.message,\n    name: error.name,\n    source: createSource(),\n    inner: error,\n  };\n\n  function createSource() {\n    if (!error.source) return;\n    const {id, type, executionId} = error.source;\n    return {\n      id,\n      type,\n      executionId,\n    };\n  }\n}\n\nfunction makeErrorFromMessage({content}, caller) {\n  if (content instanceof Error) return content;\n  const {error} = content;\n\n  if (error instanceof Error) return error;\n  if (error instanceof ActivityError) return error;\n  if (error instanceof BpmnError) return error;\n  if (error.type === 'BpmnError') return new BpmnError(error.id, error.name, error.code, error.source, error.inner);\n\n  const {message, name, source} = error;\n  return new ActivityError(message, source || caller, name);\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/error/Errors.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/eventDefinitions/ConditionalEventDefinition.js":
          /*!***************************************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/eventDefinitions/ConditionalEventDefinition.js ***!
  \***************************************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ConditionalEventDefinition; });\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\nfunction ConditionalEventDefinition(activity, eventDefinition) {\n  const {id, broker, environment, attachedTo} = activity;\n  const {type = 'ConditionalEventDefinition', behaviour = {}} = eventDefinition;\n  const {debug} = environment.Logger(type.toLowerCase());\n  const condition = behaviour.expression;\n  const isWaiting = !attachedTo;\n\n  const source = {\n    type,\n    condition,\n    execute,\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    return isWaiting ? executeWait(executeMessage) : executeCatch(executeMessage);\n  }\n\n  function executeCatch(executeMessage) {\n    const attachedToBroker = attachedTo.broker;\n    const messageContent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(executeMessage.content);\n\n    const {executionId, index} = messageContent;\n    messageContent.condition = condition;\n\n    const apiConsumerTag = `_api-${executionId}_${index}`;\n    const endConsumerTag = `_onend-${executionId}_${index}`;\n\n    broker.subscribeTmp('api', `activity.#.${executionId}`, onApiMessage, {noAck: true, consumerTag: apiConsumerTag});\n\n    debug(`<${executionId} (${id})> listen for execute completed from <${attachedTo.id}>`);\n    attachedToBroker.subscribeOnce('execution', 'execute.completed', onAttachedCompleted, {priority: 200, consumerTag: endConsumerTag});\n\n    function onAttachedCompleted(routingKey, endMessage) {\n      stop();\n\n      const output = environment.resolveExpression(condition, endMessage);\n      debug(`<${executionId} (${id})> condition from <${endMessage.content.executionId}> evaluated to`, !!output);\n\n      broker.publish('event', 'activity.condition', {\n        ...Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(messageContent),\n        conditionResult: output,\n      });\n\n      if (output) {\n        broker.publish('execution', 'execute.completed', {\n          ...messageContent,\n          output,\n        });\n      }\n    }\n\n    function onApiMessage(routingKey, message) {\n      const messageType = message.properties.type;\n      switch (messageType) {\n        case 'discard': {\n          stop();\n          debug(`<${executionId} (${id})> discarded`);\n          return broker.publish('execution', 'execute.discard', {...messageContent, state: 'discard'});\n        }\n        case 'stop': {\n          stop();\n          return debug(`<${executionId} (${id})> stopped`);\n        }\n      }\n    }\n\n    function stop() {\n      attachedToBroker.cancel(endConsumerTag);\n      broker.cancel(apiConsumerTag);\n    }\n  }\n\n  function executeWait(executeMessage) {\n    const messageContent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(executeMessage.content);\n    messageContent.condition = condition;\n    const {executionId, parent} = messageContent;\n    const parentExecutionId = parent && parent.executionId;\n\n    if (evaluate(executeMessage)) return;\n\n    broker.subscribeTmp('api', `activity.#.${executionId}`, onApiMessage, {noAck: true, consumerTag: `_api-${executionId}`});\n    broker.subscribeTmp('api', `activity.signal.${parentExecutionId}`, onApiMessage, {noAck: true, consumerTag: `_parent-signal-${executionId}`});\n\n    broker.publish('event', 'activity.wait', {...Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(messageContent), executionId: parentExecutionId, parent: Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"shiftParent\"])(parent)});\n\n    function onApiMessage(routingKey, message) {\n      const messageType = message.properties.type;\n\n      switch (messageType) {\n        case 'signal': {\n          return evaluate(message);\n        }\n        case 'discard': {\n          stop();\n          return broker.publish('execution', 'execute.discard', {...messageContent, state: 'discard'});\n        }\n        case 'stop': {\n          stop();\n          break;\n        }\n      }\n    }\n\n    function evaluate(message) {\n      const output = environment.resolveExpression(condition, message);\n      debug(`<${executionId} (${id})> condition evaluated to`, !!output);\n\n      broker.publish('event', 'activity.condition', {\n        ...Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(messageContent),\n        conditionResult: output,\n      });\n\n      if (!output) return;\n      stop();\n      return broker.publish('execution', 'execute.completed', {...messageContent, output});\n    }\n\n    function stop() {\n      broker.cancel(`_api-${executionId}`);\n      broker.cancel(`_parent-signal-${executionId}`);\n    }\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/eventDefinitions/ConditionalEventDefinition.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/eventDefinitions/ErrorEventDefinition.js":
          /*!*********************************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/eventDefinitions/ErrorEventDefinition.js ***!
  \*********************************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ErrorEventDefinition; });\n/* harmony import */ var _error_Errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/Errors */ \"./node_modules/bpmn-elements/src/error/Errors.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\nfunction ErrorEventDefinition(activity, eventDefinition) {\n  const {id, broker, environment, attachedTo, getErrorById, isThrowing} = activity;\n  const {type = 'ErrorEventDefinition', behaviour = {}} = eventDefinition;\n  const {debug} = environment.Logger(type.toLowerCase());\n  const errorRef = behaviour.errorRef;\n\n  let errorListener;\n\n  const source = {\n    type,\n    errorRef,\n    execute,\n    get expect() {\n      return errorRef;\n    },\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    return isThrowing ? executeThrow(executeMessage) : executeCatch(executeMessage);\n  }\n\n  function executeCatch(executeMessage) {\n    const attachedToBroker = attachedTo.broker;\n    const messageContent = executeMessage.content;\n\n    const {executionId, index, parent} = messageContent;\n    const parentExecutionId = parent.executionId;\n\n    const apiConsumerTag = `_api-${executionId}_${index}`;\n    const errorConsumerTag = `_onerror-${executionId}_${index}`;\n\n    let expect;\n    if (executeMessage.fields.redelivered) {\n      if (messageContent.expect) {\n        expect = {...messageContent.expect};\n      }\n    } else {\n      expect = getErrorBehaviour(executeMessage);\n    }\n\n    broker.publish('execution', 'execute.try', {\n      ...messageContent,\n      expect: expect && {...expect},\n    });\n\n    broker.subscribeTmp('api', `activity.#.${executionId}`, onApiMessage, {noAck: true, consumerTag: apiConsumerTag});\n\n    debug(`<${executionId} (${id})> listen for ${(expect && expect.errorCode) || 'any'} error from <${attachedTo.id}>`);\n    attachedToBroker.subscribeTmp('execution', 'execute.error', onError, {priority: 200, consumerTag: errorConsumerTag});\n\n    function onError(routingKey, {content}) {\n      const {error} = content;\n      if (expect && error.code !== expect.errorCode) return;\n\n      stop();\n\n      debug(`<${executionId} (${id})> caught ${(expect && expect.errorCode) || 'any'} error from <${content.executionId}>:`, error.message);\n\n      broker.publish('event', 'activity.catch', {\n        ...messageContent,\n        executionId: parentExecutionId,\n        parent: Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"shiftParent\"])(executeMessage.content.parent),\n        error,\n      });\n      broker.publish('execution', 'execute.completed', {\n        ...messageContent,\n        expect: {...expect},\n        message: {\n          error: {...error},\n        },\n        output: {...error},\n      });\n    }\n\n    function onApiMessage(routingKey, message) {\n      const apiMessageType = message.properties.type;\n\n      if (apiMessageType === 'stop') {\n        stop();\n        if (errorListener) errorListener = errorListener.cancel();\n        return debug(`<${executionId} (${id})> stopped`);\n      }\n      if (message.properties.type === 'discard') {\n        stop();\n        if (errorListener) errorListener = errorListener.cancel();\n        debug(`<${executionId} (${id})> discarded`);\n\n        return broker.publish('execution', 'execute.discard', {...messageContent, state: 'discard'});\n      }\n    }\n\n    function stop() {\n      attachedToBroker.cancel(errorConsumerTag);\n      broker.cancel(apiConsumerTag);\n    }\n  }\n\n  function executeThrow(executeMessage) {\n    const messageContent = executeMessage.content;\n\n    const {executionId} = messageContent;\n    const errorBehaviour = getErrorBehaviour(executeMessage);\n    const error = createError();\n\n    debug(`<${id}> throwing error <${error.code || 'unknown'}>`);\n    broker.publish('execution', 'execute.error', {...executeMessage.content, error}, {mandatory: true});\n\n    function createError() {\n      const message = `<${executionId} (${id})> ${type}`;\n      if (errorBehaviour) return new _error_Errors__WEBPACK_IMPORTED_MODULE_0__[\"BpmnError\"](message, errorBehaviour, executeMessage);\n      return new _error_Errors__WEBPACK_IMPORTED_MODULE_0__[\"ActivityError\"](message, executeMessage);\n    }\n  }\n\n  function getErrorBehaviour(message, inner) {\n    if (!errorRef) return;\n    const errorInstance = errorRef && getErrorById(errorRef.id);\n    if (!errorInstance) return;\n    return errorInstance.resolve(message, inner);\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/eventDefinitions/ErrorEventDefinition.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/eventDefinitions/EventDefinitionExecution.js":
          /*!*************************************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/eventDefinitions/EventDefinitionExecution.js ***!
  \*************************************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return EventDefinitionExecution; });\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\nfunction EventDefinitionExecution(activity, eventDefinitions, completedRoutingKey = 'execute.completed') {\n  const {id, broker, logger} = activity;\n  const consumerTag = '_execute-event-definition-tag';\n  const apiConsumerTag = '_api-event-definition-tag';\n\n  let rootExecutionContent, parent, completed = false, stopped = false;\n\n  return {\n    execute,\n    discard,\n    get completed() {\n      return completed;\n    },\n  };\n\n  function execute(executeMessage) {\n    const executeContent = executeMessage.content;\n    const isRedelivered = executeMessage.fields.redelivered;\n    const {isRootScope, isDefinitionScope, executionId: messageExecutionId} = executeContent;\n\n    if (isDefinitionScope) return executeDefinition();\n\n    if (isRootScope) {\n      broker.subscribeOnce('api', `activity.stop.${messageExecutionId}`, stop, {noAck: true, consumerTag: apiConsumerTag});\n      broker.subscribeTmp('execution', 'execute.completed', onExecuteCompleted, {noAck: true, consumerTag, priority: 200});\n      rootExecutionContent = executeContent;\n\n      parent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"unshiftParent\"])(rootExecutionContent.parent, rootExecutionContent);\n      broker.publish('execution', 'execute.update', {...Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(rootExecutionContent), preventComplete: true});\n    }\n    if (isRedelivered) return;\n\n    for (let index = 0; index < eventDefinitions.length; ++index) {\n      if (completed) break;\n      if (stopped) break;\n\n      const ed = eventDefinitions[index];\n      const executionId = `${messageExecutionId}_${index}`;\n\n      logger.debug(`<${messageExecutionId} (${id})> start event definition ${ed.type}, index ${index}`);\n\n      broker.publish('execution', 'execute.start', {\n        ...Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(rootExecutionContent),\n        isRootScope: undefined,\n        type: ed.type,\n        executionId,\n        isDefinitionScope: true,\n        index,\n        parent,\n      });\n    }\n\n    function onExecuteCompleted(_, {content}) {\n      if (!content.isDefinitionScope) return;\n\n      completed = true;\n      stop();\n\n      logger.debug(`<${messageExecutionId} (${id})> event definition ${content.type} completed, index ${content.index}`);\n\n      broker.publish('execution', completedRoutingKey, {\n        ...Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(content),\n        executionId: rootExecutionContent.executionId,\n        isRootScope: true,\n        parent: Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"shiftParent\"])(content.parent),\n      });\n    }\n\n    function executeDefinition() {\n      const ed = eventDefinitions[executeContent.index];\n      if (!ed) return logger.warn(`<${messageExecutionId} (${id})> found no event definition on index ${executeContent.index}`);\n\n      const behaviour = ed.Behaviour(activity, ed);\n\n      logger.debug(`<${messageExecutionId} (${id})> execute event definition ${ed.type}, index ${executeContent.index}`);\n\n      behaviour.execute(executeMessage);\n    }\n  }\n\n  function discard() {\n    stop();\n  }\n\n  function stop() {\n    stopped = true;\n    broker.cancel(consumerTag);\n    broker.cancel(apiConsumerTag);\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/eventDefinitions/EventDefinitionExecution.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/eventDefinitions/MessageEventDefinition.js":
          /*!***********************************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/eventDefinitions/MessageEventDefinition.js ***!
  \***********************************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MessageEventDefinition; });\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\nfunction MessageEventDefinition(activity, eventDefinition) {\n  const {id, broker} = activity;\n  const {type} = eventDefinition;\n\n  const source = {\n    id,\n    type,\n    execute,\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    let completed;\n\n    const messageContent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(executeMessage.content);\n    const {executionId, parent} = messageContent;\n    const parentExecutionId = parent && parent.executionId;\n\n    const messagesQ = broker.assertQueue('messages', {autoDelete: false, durable: true});\n    messagesQ.consume(onMessage, {noAck: true, consumerTag: `_message-${executionId}`});\n    if (completed) return;\n\n    broker.subscribeTmp('api', `activity.#.${executionId}`, onApiMessage, {noAck: true, consumerTag: `_api-${executionId}`});\n    broker.subscribeOnce('api', `activity.signal.${parentExecutionId}`, onApiMessage, {consumerTag: `_parent-signal-${executionId}`});\n\n    broker.publish('event', 'activity.wait', {...messageContent, executionId: parentExecutionId, parent: Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"shiftParent\"])(parent)});\n\n    function onApiMessage(routingKey, message) {\n      const messageType = message.properties.type;\n      switch (messageType) {\n        case 'signal': {\n          completed = true;\n          stop();\n          return signal(routingKey, {message: message.content.message});\n        }\n        case 'discard': {\n          completed = true;\n          stop();\n          return broker.publish('execution', 'execute.discard', {...messageContent});\n        }\n        case 'stop': {\n          stop();\n        }\n      }\n    }\n\n    function signal(_, {message}) {\n      completed = true;\n      return broker.publish('execution', 'execute.completed', {...messageContent, output: message, state: 'signal'});\n    }\n\n    function stop() {\n      broker.cancel(`_message-${executionId}`);\n      broker.cancel(`_api-${executionId}`);\n      broker.cancel(`_parent-signal-${executionId}`);\n    }\n\n    function onMessage(routingKey, {content}) {\n      stop();\n      signal(routingKey, {\n        message: content,\n      });\n    }\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/eventDefinitions/MessageEventDefinition.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/eventDefinitions/SignalEventDefinition.js":
          /*!**********************************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/eventDefinitions/SignalEventDefinition.js ***!
  \**********************************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SignalEventDefinition; });\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n/* harmony import */ var _getPropertyValue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../getPropertyValue */ \"./node_modules/bpmn-elements/src/getPropertyValue.js\");\n\n\n\nfunction SignalEventDefinition(activity, eventDefinition) {\n  const {id, broker, environment, isThrowing} = activity;\n  const {type, behaviour = {}} = eventDefinition;\n  const {debug} = environment.Logger(type.toLowerCase());\n  const signalRef = behaviour.signalRef || {};\n\n  const source = {\n    id,\n    type,\n    signalRef: {...signalRef},\n    execute: isThrowing ? executeThrow : executeCatch,\n  };\n\n  return source;\n\n  function executeCatch(executeMessage) {\n    let completed;\n\n    const messageContent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(executeMessage.content);\n    const {executionId, parent} = messageContent;\n    const parentExecutionId = parent && parent.executionId;\n\n    if (completed) return;\n\n    broker.subscribeTmp('api', '*.signal.#', onSignalApiMessage, {noAck: true, consumerTag: `_api-signal-${executionId}`});\n    broker.subscribeTmp('api', `activity.#.${executionId}`, onApiMessage, {noAck: true, consumerTag: `_api-${executionId}`});\n\n    const signalMessage = getSignal(executeMessage);\n\n    debug(`<${executionId} (${id})> waiting for signal <${signalMessage.id}> named ${signalMessage.name}`);\n\n    broker.publish('event', 'activity.wait', {\n      ...messageContent,\n      executionId: parentExecutionId,\n      parent: Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"shiftParent\"])(parent),\n      signal: {...signalMessage},\n    });\n\n    function onSignalApiMessage(routingKey, message) {\n      if (Object(_getPropertyValue__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(message, 'content.message.id') !== signalMessage.id) return;\n      completed = true;\n      stop();\n      return signal(routingKey, {message: message.content.message});\n    }\n\n    function onApiMessage(routingKey, message) {\n      const messageType = message.properties.type;\n\n      switch (messageType) {\n        case 'signal': {\n          return onSignalApiMessage(routingKey, message);\n        }\n        case 'discard': {\n          completed = true;\n          stop();\n          return broker.publish('execution', 'execute.discard', {...messageContent});\n        }\n        case 'stop': {\n          stop();\n          break;\n        }\n      }\n    }\n\n    function signal(_, {message}) {\n      completed = true;\n      debug(`<${executionId} (${id})> signaled with <${signalRef.id}> named ${message.name}`);\n      return broker.publish('execution', 'execute.completed', {...messageContent, output: message, state: 'signal'});\n    }\n\n    function stop() {\n      broker.cancel(`_api-${executionId}`);\n      broker.cancel(`_api-signal-${executionId}`);\n    }\n  }\n\n  function executeThrow(executeMessage) {\n    const messageContent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(executeMessage.content);\n    const {executionId, parent} = messageContent;\n    const parentExecutionId = parent && parent.executionId;\n\n    const signalMessage = getSignal(executeMessage);\n\n    debug(`<${executionId} (${id})> throw signal <${signalRef.id}> named ${signalMessage.name}`);\n\n    broker.publish('event', 'activity.signal', {\n      ...Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(messageContent),\n      executionId: parentExecutionId,\n      parent: Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"shiftParent\"])(parent),\n      message: {...signalMessage},\n      state: 'throw',\n    }, {type: 'signal', bubbles: true});\n\n    return broker.publish('execution', 'execute.completed', {...messageContent});\n  }\n\n  function getSignal(message) {\n    const result = {...signalRef};\n    if (result.name) result.name = environment.resolveExpression(signalRef.name, message);\n    return result;\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/eventDefinitions/SignalEventDefinition.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/eventDefinitions/TerminateEventDefinition.js":
          /*!*************************************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/eventDefinitions/TerminateEventDefinition.js ***!
  \*************************************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TerminateEventDefinition; });\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\nfunction TerminateEventDefinition(activity, eventDefinition = {}) {\n  const {id, broker, environment} = activity;\n  const {type = 'terminateeventdefinition'} = eventDefinition;\n  const {debug} = environment.Logger(type.toLowerCase());\n\n  const source = {\n    id,\n    type,\n    execute,\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    const content = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(executeMessage.content);\n    const terminateContent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(content);\n    terminateContent.parent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"shiftParent\"])(terminateContent.parent);\n    terminateContent.state = 'terminate';\n\n    debug(`<${content.executionId} (${content.id})> terminate`);\n    broker.publish('event', 'process.terminate', terminateContent, {type: 'terminate'});\n    broker.publish('execution', 'execute.completed', content);\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/eventDefinitions/TerminateEventDefinition.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/eventDefinitions/TimerEventDefinition.js":
          /*!*********************************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/eventDefinitions/TimerEventDefinition.js ***!
  \*********************************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TimerEventDefinition; });\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n/* harmony import */ var iso8601_duration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! iso8601-duration */ \"./node_modules/iso8601-duration/lib/index.js\");\n/* harmony import */ var iso8601_duration__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(iso8601_duration__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nfunction TimerEventDefinition(activity, eventDefinition) {\n  const {id, broker, environment} = activity;\n  const {type = 'TimerEventDefinition', behaviour = {}} = eventDefinition;\n  const {timeDuration} = behaviour;\n  const {debug} = environment.Logger(type.toLowerCase());\n\n  let timer;\n\n  const source = {\n    type,\n    timeDuration,\n    execute,\n    stop() {\n      if (timer) timer = clearTimeout(timer);\n    },\n  };\n\n  Object.defineProperty(source, 'timer', {\n    get() {\n      return timer;\n    },\n  });\n\n  return source;\n\n  function execute(startMessage) {\n    if (timer) timer = clearTimeout(timer);\n\n    const messageContent = startMessage.content;\n    const {executionId} = messageContent;\n    const isResumed = startMessage.fields && startMessage.fields.redelivered;\n\n    if (isResumed && startMessage.fields.routingKey !== 'execute.timer') {\n      return debug(`<${executionId} (${id})> resumed, waiting for timer message`);\n    }\n\n    broker.subscribeTmp('api', `activity.#.${executionId}`, onApiMessage, {noAck: true, consumerTag: `_api-${executionId}`});\n\n    let timerContent;\n\n    return isResumed ? resumeTimer() : executeTimer();\n\n    function executeTimer() {\n      const isoDuration = timeDuration && environment.resolveExpression(timeDuration, startMessage);\n      const timeout = isoDuration ? Object(iso8601_duration__WEBPACK_IMPORTED_MODULE_1__[\"toSeconds\"])(Object(iso8601_duration__WEBPACK_IMPORTED_MODULE_1__[\"parse\"])(isoDuration)) * 1000 : 0;\n\n      const startedAt = new Date();\n      debug(`<${executionId} (${id})> start timer ${timeout}ms, duration ${isoDuration || 'none'}`);\n      timerContent = {...messageContent, isoDuration, timeout, startedAt, state: 'timer'};\n\n      broker.publish('execution', 'execute.timer', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(timerContent));\n      broker.publish('event', 'activity.timer', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(timerContent));\n\n      timer = setTimeout(completed, timeout);\n    }\n\n    function resumeTimer() {\n      timerContent = startMessage.content;\n\n      const {startedAt, isoDuration, timeout: originalTimeout} = timerContent;\n      const startDate = new Date(startedAt);\n      let timeout = originalTimeout - (new Date() - startDate);\n      if (timeout < 0) timeout = 0;\n\n      debug(`<${executionId} (${id})> resume timer ${originalTimeout}ms started at ${startDate.toISOString()}, duration ${isoDuration || 'none'}, remaining ${timeout}ms`);\n\n      broker.publish('execution', 'execute.timer', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(timerContent));\n      broker.publish('event', 'activity.timer', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(timerContent));\n\n      timer = setTimeout(completed, timeout);\n    }\n\n    function completed() {\n      broker.cancel(`_api-${executionId}`);\n      timer = undefined;\n\n      const startedAt = new Date(timerContent.startedAt);\n      const stoppedAt = new Date();\n\n      const runningTime = stoppedAt.getTime() - startedAt.getTime();\n      debug(`<${executionId} (${id})> completed in ${runningTime}ms, duration ${timerContent.isoDuration || 'none'}`);\n\n      const completedContent = {...timerContent, stoppedAt, runningTime, state: 'timeout'};\n\n      broker.publish('event', 'activity.timeout', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(completedContent));\n      broker.publish('execution', 'execute.completed', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_0__[\"cloneContent\"])(completedContent));\n    }\n\n    function onApiMessage(routingKey, message) {\n      const apiMessageType = message.properties.type;\n\n      if (apiMessageType === 'stop') {\n        broker.cancel(`_api-${executionId}`);\n        timer = clearTimeout(timer);\n        return debug(`<${executionId} (${id})> stopped`);\n      }\n      if (message.properties.type === 'discard') {\n        broker.cancel(`_api-${executionId}`);\n        timer = clearTimeout(timer);\n        debug(`<${executionId} (${id})> discarded`);\n\n        return broker.publish('execution', 'execute.discard', {...messageContent, state: 'discard'});\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/eventDefinitions/TimerEventDefinition.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/events/BoundaryEvent.js":
          /*!****************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/events/BoundaryEvent.js ***!
  \****************************************************************/
          /*! exports provided: default, BoundaryEventBehaviour */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BoundaryEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BoundaryEventBehaviour\", function() { return BoundaryEventBehaviour; });\n/* harmony import */ var _activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n/* harmony import */ var _eventDefinitions_EventDefinitionExecution__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../eventDefinitions/EventDefinitionExecution */ \"./node_modules/bpmn-elements/src/eventDefinitions/EventDefinitionExecution.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\n\nfunction BoundaryEvent(activityDef, context) {\n  return Object(_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(BoundaryEventBehaviour, activityDef, context);\n}\n\nfunction BoundaryEventBehaviour(activity) {\n  const {id, type = 'BoundaryEvent', broker, attachedTo, behaviour = {}} = activity;\n  const attachedToId = attachedTo.id;\n\n  const cancelActivity = 'cancelActivity' in behaviour ? behaviour.cancelActivity : true;\n  const {eventDefinitions} = behaviour;\n  const eventDefinitionExecution = eventDefinitions && Object(_eventDefinitions_EventDefinitionExecution__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(activity, eventDefinitions, 'execute.bound.completed');\n\n  return {\n    id,\n    type,\n    attachedTo,\n    cancelActivity,\n    execute,\n  };\n\n  function execute(executeMessage) {\n    const executeContent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_2__[\"cloneContent\"])(executeMessage.content);\n    const {isRootScope, executionId, inbound} = executeContent;\n\n    let completeContent;\n    if (isRootScope) {\n      attachedTo.broker.subscribeTmp('event', 'activity.leave', onAttachedLeave, {noAck: true, consumerTag: `_bound-listener-${executionId}`, priority: 200});\n      broker.subscribeOnce('api', `activity.stop.${executionId}`, stop, {noAck: true, consumerTag: `_api-stop-${executionId}`});\n      broker.subscribeOnce('execution', 'execute.bound.completed', onCompleted, {noAck: true, consumerTag: `_execution-completed-${executionId}`});\n    }\n\n    if (eventDefinitionExecution) eventDefinitionExecution.execute(executeMessage);\n\n    function onCompleted(_, message) {\n      if (!cancelActivity) {\n        stop();\n        return broker.publish('execution', 'execute.completed', {...message.content});\n      }\n\n      completeContent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_2__[\"cloneContent\"])(message.content);\n\n      const attachedToContent = inbound && inbound[0];\n      attachedTo.getApi({content: attachedToContent}).discard();\n    }\n\n    function onAttachedLeave(routingKey, attachMessage) {\n      if (attachMessage.content.id !== attachedToId) return;\n      if (!completeContent) return discard();\n      stop();\n      broker.publish('execution', 'execute.completed', {...completeContent});\n    }\n\n    function discard() {\n      stop();\n      if (eventDefinitionExecution) eventDefinitionExecution.discard();\n      return broker.publish('execution', 'execute.discard', {...executeContent, state: 'discard'});\n    }\n\n    function stop() {\n      attachedTo.broker.cancel(`_bound-listener-${executionId}`);\n      broker.cancel(`_api-stop-${executionId}`);\n      broker.cancel(`_execution-completed-${executionId}`);\n    }\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/events/BoundaryEvent.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/events/EndEvent.js":
          /*!***********************************************************!*\
  !*** ./node_modules/bpmn-elements/src/events/EndEvent.js ***!
  \***********************************************************/
          /*! exports provided: default, EndEventBehaviour */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return EndEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EndEventBehaviour\", function() { return EndEventBehaviour; });\n/* harmony import */ var _activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n/* harmony import */ var _eventDefinitions_EventDefinitionExecution__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../eventDefinitions/EventDefinitionExecution */ \"./node_modules/bpmn-elements/src/eventDefinitions/EventDefinitionExecution.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\n\nfunction EndEvent(activityDef, context) {\n  return Object(_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(EndEventBehaviour, {...activityDef, isThrowing: true}, context);\n}\n\nfunction EndEventBehaviour(activity) {\n  const {id, type, broker, behaviour = {}} = activity;\n  const {eventDefinitions} = behaviour;\n  const eventDefinitionExecution = eventDefinitions && Object(_eventDefinitions_EventDefinitionExecution__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(activity, eventDefinitions);\n\n  const source = {\n    id,\n    type,\n    execute,\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    const content = executeMessage.content;\n\n    if (eventDefinitionExecution) {\n      return eventDefinitionExecution.execute(executeMessage);\n    }\n\n    return broker.publish('execution', 'execute.completed', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_2__[\"cloneContent\"])(content));\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/events/EndEvent.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/events/IntermediateCatchEvent.js":
          /*!*************************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/events/IntermediateCatchEvent.js ***!
  \*************************************************************************/
          /*! exports provided: default, IntermediateCatchEventBehaviour */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IntermediateCatchEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IntermediateCatchEventBehaviour\", function() { return IntermediateCatchEventBehaviour; });\n/* harmony import */ var _activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n/* harmony import */ var _eventDefinitions_EventDefinitionExecution__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../eventDefinitions/EventDefinitionExecution */ \"./node_modules/bpmn-elements/src/eventDefinitions/EventDefinitionExecution.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\n\nfunction IntermediateCatchEvent(activityDef, context) {\n  return Object(_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(IntermediateCatchEventBehaviour, activityDef, context);\n}\n\nfunction IntermediateCatchEventBehaviour(activity) {\n  const {id, type, broker, behaviour = {}} = activity;\n  const {eventDefinitions} = behaviour;\n  const eventDefinitionExecution = eventDefinitions && Object(_eventDefinitions_EventDefinitionExecution__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(activity, eventDefinitions);\n\n  const source = {\n    id,\n    type,\n    execute,\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    const content = executeMessage.content;\n    if (eventDefinitionExecution) {\n      return eventDefinitionExecution.execute(executeMessage);\n    }\n\n    return broker.publish('execution', 'execute.completed', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_2__[\"cloneContent\"])(content));\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/events/IntermediateCatchEvent.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/events/IntermediateThrowEvent.js":
          /*!*************************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/events/IntermediateThrowEvent.js ***!
  \*************************************************************************/
          /*! exports provided: default, IntermediateThrowEventBehaviour */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IntermediateThrowEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IntermediateThrowEventBehaviour\", function() { return IntermediateThrowEventBehaviour; });\n/* harmony import */ var _activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n/* harmony import */ var _eventDefinitions_EventDefinitionExecution__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../eventDefinitions/EventDefinitionExecution */ \"./node_modules/bpmn-elements/src/eventDefinitions/EventDefinitionExecution.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\n\nfunction IntermediateThrowEvent(activityDef, context) {\n  return Object(_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(IntermediateThrowEventBehaviour, {...activityDef, isThrowing: true}, context);\n}\n\nfunction IntermediateThrowEventBehaviour(activity) {\n  const {id, type, broker, behaviour = {}} = activity;\n  const {eventDefinitions} = behaviour;\n  const eventDefinitionExecution = eventDefinitions && Object(_eventDefinitions_EventDefinitionExecution__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(activity, eventDefinitions);\n\n  const source = {\n    id,\n    type,\n    execute,\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    const content = executeMessage.content;\n    if (eventDefinitionExecution) {\n      return eventDefinitionExecution.execute(executeMessage);\n    }\n\n    return broker.publish('execution', 'execute.completed', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_2__[\"cloneContent\"])(content));\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/events/IntermediateThrowEvent.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/events/StartEvent.js":
          /*!*************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/events/StartEvent.js ***!
  \*************************************************************/
          /*! exports provided: default, StartEventBehaviour */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StartEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StartEventBehaviour\", function() { return StartEventBehaviour; });\n/* harmony import */ var _activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n/* harmony import */ var _eventDefinitions_EventDefinitionExecution__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../eventDefinitions/EventDefinitionExecution */ \"./node_modules/bpmn-elements/src/eventDefinitions/EventDefinitionExecution.js\");\n\n\n\nfunction StartEvent(activityDef, context) {\n  return Object(_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(StartEventBehaviour, activityDef, context);\n}\n\nfunction StartEventBehaviour(activity) {\n  const {id, type, broker, behaviour = {}} = activity;\n  const {eventDefinitions} = behaviour;\n  const eventDefinitionExecution = eventDefinitions && Object(_eventDefinitions_EventDefinitionExecution__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(activity, eventDefinitions);\n\n  const event = {\n    id,\n    type,\n    execute,\n  };\n\n  return event;\n\n  function execute(executeMessage) {\n    const content = executeMessage.content;\n    if (eventDefinitionExecution) {\n      return eventDefinitionExecution.execute(executeMessage);\n    }\n\n    if (!content.form) {\n      return broker.publish('execution', 'execute.completed', {...content});\n    }\n\n    const {executionId} = content;\n    broker.subscribeTmp('api', `activity.#.${executionId}`, onApiMessage, {noAck: true, consumerTag: `_api-${executionId}`});\n    broker.publish('event', 'activity.wait', {...content, state: 'wait'});\n\n    function onApiMessage(routingKey, message) {\n      const messageType = message.properties.type;\n      switch (messageType) {\n        case 'stop':\n          return broker.cancel(`_api-${executionId}`);\n        case 'signal':\n          broker.cancel(`_api-${executionId}`);\n          return broker.publish('execution', 'execute.completed', {...content, output: message.content.message, state: 'signal'});\n        case 'discard':\n          broker.cancel(`_api-${executionId}`);\n          return broker.publish('execution', 'execute.discard', {...content});\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/events/StartEvent.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/expressions.js":
          /*!*******************************************************!*\
  !*** ./node_modules/bpmn-elements/src/expressions.js ***!
  \*******************************************************/
          /*! exports provided: default, isExpression, hasExpression */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isExpression\", function() { return isExpression; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasExpression\", function() { return hasExpression; });\n/* harmony import */ var _getPropertyValue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getPropertyValue */ \"./node_modules/bpmn-elements/src/getPropertyValue.js\");\n\n\nconst isExpressionPattern = /^\\${(.+?)}$/;\nconst expressionPattern = /\\${(.+?)}/;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (resolveExpressions);\n\nfunction resolveExpressions(templatedString, context, expressionFnContext) {\n  let result = templatedString;\n\n  while (expressionPattern.test(result)) {\n    const expressionMatch = result.match(expressionPattern);\n    const innerProperty = expressionMatch[1];\n\n    if (innerProperty === 'true') {\n      return true;\n    } else if (innerProperty === 'false') {\n      return false;\n    }\n\n    const contextValue = Object(_getPropertyValue__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(context, innerProperty, expressionFnContext);\n\n    if (expressionMatch.input === expressionMatch[0]) {\n      return contextValue;\n    }\n\n    result = result.replace(expressionMatch[0], contextValue === undefined ? '' : contextValue);\n  }\n  return result;\n}\n\nfunction isExpression(text) {\n  if (!text) return false;\n  return isExpressionPattern.test(text);\n}\n\nfunction hasExpression(text) {\n  if (!text) return false;\n  return expressionPattern.test(text);\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/expressions.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/flows/MessageFlow.js":
          /*!*************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/flows/MessageFlow.js ***!
  \*************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MessageFlow; });\n/* harmony import */ var _EventBroker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../EventBroker */ \"./node_modules/bpmn-elements/src/EventBroker.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\nfunction MessageFlow(flowDef, context) {\n  const {id, type = 'message', target, source, behaviour, parent} = flowDef;\n  const sourceActivity = context.getActivityById(source.id);\n\n  if (!sourceActivity) return;\n\n  const counters = {\n    messages: 0,\n    discard: 0,\n  };\n\n  const flowApi = {\n    id,\n    type,\n    target,\n    source,\n    behaviour,\n    get counters() {\n      return {...counters};\n    },\n    getApi,\n    recover,\n    resume,\n    stop,\n  };\n\n  const {broker, on, once, emit, waitFor} = Object(_EventBroker__WEBPACK_IMPORTED_MODULE_0__[\"MessageFlowBroker\"])(flowApi, {prefix: 'messageflow', durable: true, autoDelete: false});\n\n  flowApi.on = on;\n  flowApi.once = once;\n  flowApi.emit = emit;\n  flowApi.waitFor = waitFor;\n\n  Object.defineProperty(flowApi, 'broker', {\n    enumerable: true,\n    get: () => broker,\n  });\n\n  sourceActivity.broker.subscribeTmp('event', 'activity.end', onSourceEnd, {noAck: true});\n\n  return flowApi;\n\n  function onSourceEnd(routingKey, message) {\n    ++counters.messages;\n    broker.publish('event', 'message.outbound', createMessage(Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(message.content)));\n  }\n\n  function createMessage(message) {\n    return {\n      id,\n      type,\n      source: {...source},\n      target: {...target},\n      parent: parent && Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneParent\"])(parent),\n      message,\n    };\n  }\n\n  function stop() {\n    broker.stop();\n  }\n\n  function recover(state) {\n    Object.assign(counters, state.counters);\n    broker.recover(state.broker);\n  }\n\n  function resume() {\n    broker.resume();\n  }\n\n  function getApi() {\n    return flowApi;\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/flows/MessageFlow.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/flows/SequenceFlow.js":
          /*!**************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/flows/SequenceFlow.js ***!
  \**************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SequenceFlow; });\n/* harmony import */ var _activity_ExecutionScope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/ExecutionScope */ \"./node_modules/bpmn-elements/src/activity/ExecutionScope.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared */ \"./node_modules/bpmn-elements/src/shared.js\");\n/* harmony import */ var _EventBroker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../EventBroker */ \"./node_modules/bpmn-elements/src/EventBroker.js\");\n/* harmony import */ var _Api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Api */ \"./node_modules/bpmn-elements/src/Api.js\");\n\n\n\n\n\n\nfunction SequenceFlow(flowDef, {environment}) {\n  const {id, type = 'sequenceflow', parent: originalParent, targetId, sourceId, isDefault, behaviour = {}} = flowDef;\n  const parent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneParent\"])(originalParent);\n  const logger = environment.Logger(type.toLowerCase());\n\n  environment.registerScript({id, type, behaviour});\n\n  const counters = {\n    looped: 0,\n    take: 0,\n    discard: 0,\n  };\n\n  const flowApi = {\n    id,\n    type,\n    parent,\n    behaviour,\n    sourceId,\n    targetId,\n    isDefault,\n    isSequenceFlow: true,\n    environment,\n    get counters() {\n      return {...counters};\n    },\n    discard,\n    evaluateCondition,\n    getApi,\n    getCondition,\n    getState,\n    preFlight,\n    recover,\n    resume,\n    stop,\n    take,\n  };\n\n  const {broker, on, once, waitFor, emitFatal} = Object(_EventBroker__WEBPACK_IMPORTED_MODULE_3__[\"EventBroker\"])(flowApi, {prefix: 'flow', durable: true, autoDelete: false});\n\n  flowApi.on = on;\n  flowApi.once = once;\n  flowApi.waitFor = waitFor;\n\n  Object.defineProperty(flowApi, 'broker', {\n    enumerable: true,\n    get: () => broker,\n  });\n\n  logger.debug(`<${id}> init, <${sourceId}> -> <${targetId}>`);\n\n  return flowApi;\n\n  function take(content = {}) {\n    flowApi.looped = undefined;\n\n    const {sequenceId} = content;\n\n    logger.debug(`<${sequenceId} (${id})> take, target <${targetId}>`);\n    ++counters.take;\n\n    publishEvent('take', content);\n\n    return true;\n  }\n\n  function discard(content = {}) {\n    const {sequenceId} = content;\n    const discardSequence = content.discardSequence = (content.discardSequence || []).slice();\n    if (discardSequence.indexOf(targetId) > -1) {\n      ++counters.looped;\n      logger.debug(`<${id}> discard loop detected <${sourceId}> -> <${targetId}>. Stop.`);\n      return publishEvent('looped', content);\n    }\n\n    discardSequence.push(sourceId);\n\n    logger.debug(`<${sequenceId} (${id})> discard, target <${targetId}>`);\n    ++counters.discard;\n    publishEvent('discard', content);\n  }\n\n  function publishEvent(action, content) {\n    const eventContent = createMessage({\n      action,\n      ...content,\n    });\n\n    broker.publish('event', `flow.${action}`, eventContent, {type: action});\n  }\n\n  function preFlight(action) {\n    const sequenceId = Object(_shared__WEBPACK_IMPORTED_MODULE_2__[\"getUniqueId\"])(id);\n    broker.publish('event', 'flow.pre-flight', createMessage({action, sequenceId, state: 'pre-flight'}), {type: 'pre-flight'});\n    return sequenceId;\n  }\n\n  function createMessage(override = {}) {\n    return {\n      ...override,\n      id,\n      type,\n      sourceId,\n      targetId,\n      isSequenceFlow: true,\n      isDefault,\n      parent: Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneParent\"])(parent),\n    };\n  }\n\n  function getState() {\n    const result = {\n      id,\n      type,\n      sourceId,\n      targetId,\n      isDefault,\n      counters: {...counters},\n    };\n    result.broker = broker.getState();\n    return result;\n  }\n\n  function recover(state) {\n    Object.assign(counters, state.counters);\n    broker.recover(state.broker);\n  }\n\n  function getApi(message) {\n    return Object(_Api__WEBPACK_IMPORTED_MODULE_4__[\"FlowApi\"])(broker, message || {content: createMessage()});\n  }\n\n  function stop() {\n    broker.stop();\n  }\n\n  function resume() {}\n\n  function evaluateCondition(message, onEvaluateError) {\n    const condition = getCondition(message);\n    if (!condition) return true;\n\n    const result = condition.execute(message, onEvaluateError);\n    logger.debug(`<${id}> condition result evaluated to ${result}`);\n    return result;\n  }\n\n  function getCondition() {\n    const conditionExpression = behaviour.conditionExpression;\n    if (!conditionExpression) return null;\n\n    if (!('language' in conditionExpression)) {\n      return ExpressionCondition(conditionExpression.body);\n    }\n\n    const script = environment.getScript(conditionExpression.language, flowApi);\n    return ScriptCondition(script, conditionExpression.language);\n  }\n\n  function ScriptCondition(script, language) {\n    return {\n      language,\n      execute: (message, onEvaluateError) => {\n        if (!script) {\n          const err = new Error(`Script format ${language} is unsupported or was not registered (<${id}>)`);\n          logger.error(`<${id}>`, err);\n          emitFatal(err, createMessage());\n          return onEvaluateError && onEvaluateError(err);\n        }\n\n        return script.execute(Object(_activity_ExecutionScope__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(flowApi, message));\n      },\n    };\n  }\n\n  function ExpressionCondition(expression) {\n    return {\n      execute: (message) => {\n        return environment.resolveExpression(expression, createMessage(message));\n      },\n    };\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/flows/SequenceFlow.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/gateways/EventBasedGateway.js":
          /*!**********************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/gateways/EventBasedGateway.js ***!
  \**********************************************************************/
          /*! exports provided: default, EventBasedGatewayBehaviour */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return EventBasedGateway; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventBasedGatewayBehaviour\", function() { return EventBasedGatewayBehaviour; });\n/* harmony import */ var _activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\nfunction EventBasedGateway(activityDef, context) {\n  return Object(_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(EventBasedGatewayBehaviour, {...activityDef}, context);\n}\n\nfunction EventBasedGatewayBehaviour(activity, context) {\n  const {id, type, broker, logger, outbound: outboundSequenceFlows = []} = activity;\n\n  const source = {\n    id,\n    type,\n    execute,\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    const isRedelivered = executeMessage.fields.redelivered;\n    const content = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(executeMessage.content);\n    const executionId = content.executionId;\n    const outbound = content.outbound = [];\n\n\n    const targets = [];\n    for (let i = 0; i < outboundSequenceFlows.length; i++) {\n      const flow = outboundSequenceFlows[i];\n      targets.push(context.getActivityById(flow.targetId));\n      outbound.push({id: flow.id, action: 'take'});\n    }\n\n    const targetConsumerTag = `_gateway-listener-${executionId}`;\n\n    targets.forEach((target) => {\n      target.broker.subscribeOnce('event', 'activity.end', onTargetCompleted, {consumerTag: targetConsumerTag});\n    });\n\n    broker.subscribeOnce('api', `activity.stop.${executionId}`, stop, {noAck: true, consumerTag: `_api-stop-${executionId}`});\n\n    if (!isRedelivered) return broker.publish('execution', 'execute.outbound.take', content);\n\n    function onTargetCompleted(_, message, owner) {\n      logger.debug(`<${executionId} (${id})> <${message.content.executionId}> completed run, discarding the rest`);\n      targets.forEach((target) => {\n        if (target === owner) return;\n        target.broker.cancel(targetConsumerTag);\n        target.discard();\n      });\n\n      const completedContent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(executeMessage.content);\n      completedContent.ignoreOutbound = true;\n      broker.publish('execution', 'execute.completed', completedContent);\n    }\n\n    function stop() {\n      targets.forEach((target) => {\n        target.broker.cancel(targetConsumerTag);\n      });\n      broker.cancel(`_api-stop-${executionId}`);\n    }\n  }\n}\n\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/gateways/EventBasedGateway.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/gateways/ExclusiveGateway.js":
          /*!*********************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/gateways/ExclusiveGateway.js ***!
  \*********************************************************************/
          /*! exports provided: default, ExclusiveGatewayBehaviour */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ExclusiveGateway; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ExclusiveGatewayBehaviour\", function() { return ExclusiveGatewayBehaviour; });\n/* harmony import */ var _activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n/* harmony import */ var _error_Errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/Errors */ \"./node_modules/bpmn-elements/src/error/Errors.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\n\nfunction ExclusiveGateway(activityDef, context) {\n  return Object(_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(ExclusiveGatewayBehaviour, activityDef, context);\n}\n\nfunction ExclusiveGatewayBehaviour(activity) {\n  const {id, type, broker, logger, outbound: outboundSequenceFlows = []} = activity;\n\n  const source = {\n    id,\n    type,\n    execute,\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    const content = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_2__[\"cloneContent\"])(executeMessage.content);\n    if (!outboundSequenceFlows.length) return complete();\n\n    let conditionMet, defaultFlow, stop;\n    const outbound = content.outbound = [];\n\n    for (let i = 0; i < outboundSequenceFlows.length; i++) {\n      if (stop) return;\n      const flow = outboundSequenceFlows[i];\n\n      if (conditionMet) {\n        outbound.push({id: flow.id, action: 'discard'});\n        continue;\n      }\n      if (flow.isDefault) {\n        defaultFlow = flow;\n        continue;\n      }\n\n      if (flow.evaluateCondition(executeMessage, onEvaluateError)) {\n        conditionMet = true;\n        outbound.push({id: flow.id, action: 'take'});\n      } else {\n        outbound.push({id: flow.id, action: 'discard'});\n      }\n    }\n\n    if (stop) return;\n\n    if (defaultFlow) {\n      if (conditionMet) {\n        outbound.push({id: defaultFlow.id, action: 'discard'});\n      } else {\n        logger.debug(`<${id}> take default flow <${defaultFlow.id}>`);\n        outbound.push({id: defaultFlow.id, action: 'take'});\n      }\n    } else if (!conditionMet) {\n      const err = new _error_Errors__WEBPACK_IMPORTED_MODULE_1__[\"ActivityError\"](`<${id}> no conditional flow taken`, executeMessage);\n      logger.error(`<${id}>`, err);\n      return broker.publish('execution', 'execute.error', {...content, error: err});\n    }\n\n    return complete();\n\n    function complete() {\n      broker.publish('execution', 'execute.completed', content);\n    }\n\n    function onEvaluateError() {\n      stop = true;\n    }\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/gateways/ExclusiveGateway.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/gateways/InclusiveGateway.js":
          /*!*********************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/gateways/InclusiveGateway.js ***!
  \*********************************************************************/
          /*! exports provided: default, InclusiveGatewayBehaviour */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return InclusiveGateway; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InclusiveGatewayBehaviour\", function() { return InclusiveGatewayBehaviour; });\n/* harmony import */ var _activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n/* harmony import */ var _error_Errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/Errors */ \"./node_modules/bpmn-elements/src/error/Errors.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\n\nfunction InclusiveGateway(activityDef, context) {\n  return Object(_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(InclusiveGatewayBehaviour, activityDef, context);\n}\n\nfunction InclusiveGatewayBehaviour(activity) {\n  const {id, type, broker, logger, outbound: outboundSequenceFlows = []} = activity;\n\n  const source = {\n    id,\n    type,\n    execute,\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    const content = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_2__[\"cloneContent\"])(executeMessage.content);\n    if (!outboundSequenceFlows.length) return complete();\n\n    let conditionMet, defaultFlow, stop;\n    const outbound = content.outbound = [];\n\n    for (let i = 0; i < outboundSequenceFlows.length; i++) {\n      if (stop) return;\n      const flow = outboundSequenceFlows[i];\n\n      if (flow.isDefault) {\n        defaultFlow = flow;\n        continue;\n      }\n\n      if (flow.evaluateCondition(executeMessage, onEvaluateError)) {\n        conditionMet = true;\n        outbound.push({id: flow.id, action: 'take'});\n      } else {\n        outbound.push({id: flow.id, action: 'discard'});\n      }\n    }\n\n    if (stop) return;\n\n    if (defaultFlow) {\n      if (conditionMet) {\n        outbound.push({id: defaultFlow.id, action: 'discard'});\n      } else {\n        logger.debug(`<${id}> take default flow`);\n        outbound.push({id: defaultFlow.id, action: 'take'});\n      }\n    } else if (!conditionMet) {\n      const err = new _error_Errors__WEBPACK_IMPORTED_MODULE_1__[\"ActivityError\"](`<${id}> no conditional flow taken`, executeMessage);\n      logger.error(`<${id}>`, err);\n      return broker.publish('execution', 'execute.error', {...content, error: err});\n    }\n\n    return complete();\n\n    function complete() {\n      broker.publish('execution', 'execute.completed', content);\n    }\n\n    function onEvaluateError() {\n      stop = true;\n    }\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/gateways/InclusiveGateway.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/gateways/ParallelGateway.js":
          /*!********************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/gateways/ParallelGateway.js ***!
  \********************************************************************/
          /*! exports provided: default, ParallelGatewayBehaviour */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ParallelGateway; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParallelGatewayBehaviour\", function() { return ParallelGatewayBehaviour; });\n/* harmony import */ var _activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\nfunction ParallelGateway(activityDef, context) {\n  return Object(_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(ParallelGatewayBehaviour, {...activityDef, isParallelGateway: true}, context);\n}\n\nfunction ParallelGatewayBehaviour(activity) {\n  const {id, type, broker} = activity;\n\n  const source = {\n    id,\n    type,\n    execute,\n  };\n\n  return source;\n\n  function execute({content}) {\n    broker.publish('execution', 'execute.completed', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(content));\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/gateways/ParallelGateway.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/getPropertyValue.js":
          /*!************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/getPropertyValue.js ***!
  \************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\nconst propertyPattern = /(\\w+)\\((.*?)(?:\\))|(\\.|\\[|^)(.+?)(?:\\]|\\[|\\.|$)/;\nconst stringConstantPattern = /^(['\"])(.*)\\1$/;\nconst numberConstantPattern = /^\\W*-?\\d+(.\\d+)?\\W*$/;\nconst negativeIndexPattern = /^-\\d+$/;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (getPropertyValue);\n\nfunction getPropertyValue(inputContext, propertyPath, fnScope) {\n  if (!inputContext) return;\n\n  let resultValue;\n  let next = iterateProps(inputContext, inputContext, propertyPath.trim());\n  while (next) {\n    resultValue = next.getResult();\n    next = next();\n  }\n  return resultValue;\n\n  function iterateProps(base, iterateContext, iteratePropertyPath) {\n    let result;\n    const rest = iteratePropertyPath.replace(propertyPattern, (match, fnName, args, p, prop) => {\n      if (fnName) {\n        result = executeFn(getNamedValue(iterateContext, fnName), args, base);\n      } else {\n        result = getNamedValue(iterateContext, prop);\n      }\n      return '';\n    });\n\n\n    if (rest === iteratePropertyPath) return;\n    if (result === undefined) return;\n\n    const iterateNext = () => iterateProps(base, result, rest);\n    iterateNext.getResult = () => {\n      if (rest !== '') return;\n      return result;\n    };\n\n    return iterateNext;\n  }\n\n  function executeFn(fn, args, base) {\n    if (!fn) return;\n\n    let callArguments = [];\n    if (args) {\n      callArguments = callArguments.concat(args.split(','));\n      callArguments = callArguments.map((argument) => {\n        return getFunctionArgument(base, argument, fnScope);\n      });\n    } else {\n      callArguments.push(base);\n    }\n\n    if (!fnScope) return fn.apply(null, callArguments);\n\n    return (function ScopedIIFE() { // eslint-disable-line no-extra-parens\n      return fn.apply(this, callArguments);\n    }).call(fnScope);\n  }\n}\n\nfunction getFunctionArgument(obj, argument, fnScope) {\n  const stringMatch = argument.match(stringConstantPattern);\n  if (stringMatch) {\n    return stringMatch[2];\n  } else if (numberConstantPattern.test(argument)) {\n    return Number(argument);\n  }\n  return getPropertyValue(obj, argument, fnScope);\n}\n\nfunction getNamedValue(obj, property) {\n  if (Array.isArray(obj)) {\n    return getArrayItem(obj, property);\n  }\n  return obj[property];\n}\n\nfunction getArrayItem(list, idx) {\n  if (negativeIndexPattern.test(idx)) {\n    const nidx = Number(idx);\n    const aidx = nidx === 0 ? 0 : list.length + nidx;\n    return list[aidx];\n  }\n  return list[idx];\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/getPropertyValue.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/io/EnvironmentDataObject.js":
          /*!********************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/io/EnvironmentDataObject.js ***!
  \********************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return EnvironmentDataObject; });\nfunction EnvironmentDataObject(dataObjectDef, {environment}) {\n  const {id, type, name, behaviour, parent} = dataObjectDef;\n\n  const source = {\n    id,\n    name,\n    type,\n    behaviour,\n    parent,\n    read(broker, exchange, routingKeyPrefix, messageProperties) {\n      const value = environment.variables._data && environment.variables._data[id];\n      return broker.publish(exchange, `${routingKeyPrefix}response`, {id, name, type, value}, messageProperties);\n    },\n    write(broker, exchange, routingKeyPrefix, value, messageProperties) {\n      environment.variables._data = environment.variables._data || {};\n      environment.variables._data[id] = value;\n      return broker.publish(exchange, `${routingKeyPrefix}response`, {id, name, type, value}, messageProperties);\n    },\n  };\n\n  return source;\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/io/EnvironmentDataObject.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/io/InputOutputSpecification.js":
          /*!***********************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/io/InputOutputSpecification.js ***!
  \***********************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IoSpecification; });\n/* harmony import */ var _getPropertyValue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../getPropertyValue */ \"./node_modules/bpmn-elements/src/getPropertyValue.js\");\n/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared */ \"./node_modules/bpmn-elements/src/shared.js\");\n\n\n\nfunction IoSpecification(activity, ioSpecificationDef, context) {\n  const {id, type = 'iospecification', behaviour = {}} = ioSpecificationDef;\n  const {broker} = activity;\n\n  const safeType = Object(_shared__WEBPACK_IMPORTED_MODULE_1__[\"brokerSafeId\"])(type).toLowerCase();\n  let activityConsumer;\n\n  const {dataInputs, dataOutputs} = behaviour;\n\n  const ioApi = {\n    id,\n    type,\n    behaviour,\n    activate,\n    deactivate,\n  };\n\n  return ioApi;\n\n  function activate() {\n    if (activityConsumer) return;\n    activityConsumer = broker.subscribeTmp('event', 'activity.#', onActivityEvent, {noAck: true});\n  }\n\n  function deactivate() {\n    if (activityConsumer) activityConsumer = activityConsumer.cancel();\n  }\n\n  function onActivityEvent(routingKey, message) {\n    if ((dataInputs || dataOutputs) && routingKey === 'activity.enter') {\n      return formatOnEnter();\n    }\n\n    if (dataOutputs && routingKey === 'activity.execution.completed') {\n      formatOnComplete(message);\n    }\n  }\n\n  function formatOnEnter() {\n    const startRoutingKey = `run.onstart.${safeType}`;\n    if (!dataInputs) {\n      return broker.publish('format', startRoutingKey, {\n        ioSpecification: {\n          dataOutputs: getDataOutputs(),\n        },\n      });\n    }\n\n    const {dataObjects, sources} = dataInputs.reduce((result, ioSource, index) => {\n      const source = {\n        id: ioSource.id,\n        type: ioSource.type,\n        name: ioSource.name,\n      };\n      result.sources.push(source);\n\n      const dataObjectId = Object(_getPropertyValue__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(ioSource, 'behaviour.association.source.dataObject.id');\n      if (!dataObjectId) return result;\n      const dataObject = context.getDataObjectById(dataObjectId);\n      if (!dataObject) return result;\n      result.dataObjects.push({index, dataObject});\n      return result;\n    }, {\n      dataObjects: [],\n      sources: [],\n    });\n\n    if (!dataObjects.length) {\n      return broker.publish('format', startRoutingKey, {\n        ioSpecification: {\n          dataInputs: sources,\n          dataOutputs: getDataOutputs(),\n        },\n      });\n    }\n\n    const endRoutingKey = `run.onstart.${safeType}.end`;\n    broker.publish('format', `${startRoutingKey}.begin`, {\n      endRoutingKey,\n      ioSpecification: {\n        dataInputs: sources.map((source) => {\n          return {...source};\n        }),\n        dataOutputs: getDataOutputs(),\n      },\n    });\n\n    return read(broker, dataObjects, (_, responses) => {\n      responses.forEach((response) => {\n        sources[response.index].value = response.value;\n      });\n\n      broker.publish('format', endRoutingKey, {\n        ioSpecification: {\n          dataInputs: sources,\n          dataOutputs: getDataOutputs(),\n        },\n      });\n    });\n  }\n\n  function formatOnComplete(message) {\n    const messageInputs = Object(_getPropertyValue__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(message, 'content.ioSpecification.dataInputs');\n    const messageOutputs = Object(_getPropertyValue__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(message, 'content.output.ioSpecification.dataOutputs') || [];\n\n    const {dataObjects, sources} = dataOutputs.reduce((result, ioSource, index) => {\n      const {value} = messageOutputs.find((output) => output.id === ioSource.id) || {};\n      const source = {\n        id: ioSource.id,\n        type: ioSource.type,\n        name: ioSource.name,\n        value,\n      };\n      result.sources.push(source);\n\n      const dataObjectId = Object(_getPropertyValue__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(ioSource, 'behaviour.association.target.dataObject.id');\n      if (!dataObjectId) return result;\n      const dataObject = context.getDataObjectById(dataObjectId);\n      if (!dataObject) return result;\n      result.dataObjects.push({index, dataObject, value});\n      return result;\n    }, {\n      dataObjects: [],\n      sources: [],\n    });\n\n    const startRoutingKey = `run.onend.${safeType}`;\n    if (!dataObjects.length) {\n      return broker.publish('format', startRoutingKey, {\n        ioSpecification: {\n          dataInputs: messageInputs,\n          dataOutputs: sources,\n        },\n      });\n    }\n\n    const endRoutingKey = `run.onend.${safeType}.end`;\n    broker.publish('format', `${startRoutingKey}.begin`, {\n      endRoutingKey,\n      ioSpecification: {\n        dataInputs: sources.map((input) => {\n          return {...input};\n        }),\n        dataOutputs: getDataOutputs(),\n      },\n    });\n\n    return write(broker, dataObjects, (_, responses) => {\n      responses.forEach((response) => {\n        sources[response.index].value = response.value;\n      });\n\n      broker.publish('format', endRoutingKey, {\n        ioSpecification: {\n          dataInputs: sources,\n          dataOutputs: getDataOutputs(),\n        },\n      });\n    });\n  }\n\n  function getDataOutputs() {\n    if (!dataOutputs) return;\n    return dataOutputs.map((dataOutput) => {\n      return {\n        id: dataOutput.id,\n        type: dataOutput.type,\n        name: dataOutput.name,\n      };\n    });\n  }\n}\n\nfunction read(broker, dataObjectRefs, callback) {\n  const responses = [];\n  let count = 0;\n  const dataReadConsumer = broker.subscribeTmp('data', 'data.read.#', onDataObjectResponse, {noAck: true});\n\n  for (let i = 0; i < dataObjectRefs.length; i++) {\n    const {dataObject} = dataObjectRefs[i];\n    dataObject.read(broker, 'data', 'data.read.');\n  }\n\n  function onDataObjectResponse(routingKey, message) {\n    const {index} = dataObjectRefs.find(({dataObject}) => dataObject.id === message.content.id);\n    responses.push({...message.content, index});\n\n    ++count;\n\n    if (count < dataObjectRefs.length) return;\n\n    dataReadConsumer.cancel();\n    return callback(null, responses);\n  }\n}\n\nfunction write(broker, dataObjectRefs, callback) {\n  const responses = [];\n  let count = 0;\n  const dataWriteConsumer = broker.subscribeTmp('data', 'data.write.#', onDataObjectResponse, {noAck: true});\n\n  for (let i = 0; i < dataObjectRefs.length; i++) {\n    const {dataObject, value} = dataObjectRefs[i];\n    dataObject.write(broker, 'data', 'data.write.', value);\n  }\n\n  function onDataObjectResponse(routingKey, message) {\n    const idx = dataObjectRefs.findIndex((dobj) => dobj.id === message.content.id);\n    responses[idx] = message.content;\n\n    ++count;\n\n    if (count < dataObjectRefs.length) return;\n\n    dataWriteConsumer.cancel();\n    return callback(null, responses);\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/io/InputOutputSpecification.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/messageHelper.js":
          /*!*********************************************************!*\
  !*** ./node_modules/bpmn-elements/src/messageHelper.js ***!
  \*********************************************************/
          /*! exports provided: cloneContent, cloneMessage, cloneParent, shiftParent, unshiftParent, pushParent */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cloneContent\", function() { return cloneContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cloneMessage\", function() { return cloneMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cloneParent\", function() { return cloneParent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shiftParent\", function() { return shiftParent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unshiftParent\", function() { return unshiftParent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pushParent\", function() { return pushParent; });\n\n\nfunction cloneContent(content) {\n  const {discardSequence, inbound, outbound, parent} = content;\n\n  const clone = {\n    ...content,\n  };\n\n  if (parent) {\n    clone.parent = cloneParent(parent);\n  }\n  if (discardSequence) {\n    clone.discardSequence = discardSequence.slice();\n  }\n  if (inbound) {\n    clone.inbound = inbound.map((c) => cloneContent(c));\n  }\n  if (outbound) {\n    clone.outbound = outbound.map((c) => cloneContent(c));\n  }\n\n  return clone;\n}\n\nfunction cloneMessage(message) {\n  return {\n    fields: {...message.fields},\n    content: cloneContent(message.content),\n    properties: {...message.properties},\n  };\n}\n\nfunction cloneParent(parent) {\n  const {path} = parent;\n  const clone = {...parent};\n  if (!path) return clone;\n\n  clone.path = path.map((p) => {\n    return {...p};\n  });\n\n  return clone;\n}\n\nfunction unshiftParent(parent, adoptingParent) {\n  const {id, type, executionId} = adoptingParent;\n  if (!parent) {\n    return {\n      id,\n      type,\n      executionId,\n    };\n  }\n\n  const clone = cloneParent(parent);\n  const {id: parentId, type: parentType, executionId: parentExecutionId} = parent;\n  clone.id = id;\n  clone.executionId = executionId;\n  clone.type = type;\n\n  const path = clone.path = clone.path || [];\n  path.unshift({id: parentId, type: parentType, executionId: parentExecutionId});\n\n  return clone;\n}\n\nfunction shiftParent(parent) {\n  if (!parent) return;\n  if (!parent.path || !parent.path.length) return;\n\n  const clone = cloneParent(parent);\n  const {id, executionId, type} = clone.path.shift();\n  clone.id = id;\n  clone.executionId = executionId;\n  clone.type = type;\n  clone.path = clone.path.length ? clone.path : undefined;\n  return clone;\n}\n\nfunction pushParent(parent, ancestor) {\n  const {id, type, executionId} = ancestor;\n  if (!parent) return {id, type, executionId};\n\n  const clone = cloneParent(parent);\n  if (clone.id === id) {\n    if (executionId) clone.executionId = executionId;\n    return clone;\n  }\n  const path = clone.path = clone.path || [];\n\n  for (const p of path) {\n    if (p.id === id) {\n      if (executionId) p.executionId = executionId;\n      return clone;\n    }\n  }\n\n  path.push({id, type, executionId});\n  return clone;\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/messageHelper.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/process/Process.js":
          /*!***********************************************************!*\
  !*** ./node_modules/bpmn-elements/src/process/Process.js ***!
  \***********************************************************/
          /*! exports provided: default, Process */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Process\", function() { return Process; });\n/* harmony import */ var _ProcessExecution__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ProcessExecution */ \"./node_modules/bpmn-elements/src/process/ProcessExecution.js\");\n/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared */ \"./node_modules/bpmn-elements/src/shared.js\");\n/* harmony import */ var _Api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Api */ \"./node_modules/bpmn-elements/src/Api.js\");\n/* harmony import */ var _EventBroker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../EventBroker */ \"./node_modules/bpmn-elements/src/EventBroker.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Process);\n\nfunction Process(processDef, context) {\n  const {id, type = 'process', name, parent, behaviour = {}} = processDef;\n  const environment = context.environment;\n  const {isExecutable} = behaviour;\n\n  const logger = environment.Logger(type.toLowerCase());\n\n  let execution, executionId, status, stopped, postponedMessage, stateMessage, consumingRunQ;\n\n  let counters = {\n    completed: 0,\n    discarded: 0,\n    terminated: 0,\n  };\n\n  const processApi = {\n    id,\n    type,\n    name,\n    isExecutable,\n    behaviour,\n    get counters() {\n      return {...counters};\n    },\n    get executionId() {\n      return executionId;\n    },\n    get status() {\n      return status;\n    },\n    get stopped() {\n      return stopped;\n    },\n    get execution() {\n      return execution;\n    },\n    get isRunning() {\n      if (!consumingRunQ) return false;\n      return !!status;\n    },\n    context,\n    environment,\n    parent: {...parent},\n    logger,\n    getApi,\n    getActivities,\n    getActivityById,\n    getSequenceFlows,\n    getPostponed,\n    getStartActivities,\n    getState,\n    recover,\n    resume,\n    run,\n    sendMessage,\n    signal,\n    stop,\n  };\n\n  const {broker, on, once, waitFor} = Object(_EventBroker__WEBPACK_IMPORTED_MODULE_3__[\"ProcessBroker\"])(processApi);\n\n  processApi.on = on;\n  processApi.once = once;\n  processApi.waitFor = waitFor;\n\n  const runQ = broker.getQueue('run-q');\n  const executionQ = broker.getQueue('execution-q');\n\n  Object.defineProperty(processApi, 'broker', {\n    enumerable: true,\n    get: () => broker,\n  });\n\n  return processApi;\n\n  function run() {\n    if (processApi.isRunning) throw new Error(`process <${id}> is already running`);\n\n    deactivateRunConsumers();\n    executionId = Object(_shared__WEBPACK_IMPORTED_MODULE_1__[\"getUniqueId\"])(id);\n\n    broker.publish('run', 'run.enter', createMessage({executionId, state: 'enter'}));\n    broker.publish('run', 'run.start', createMessage({executionId, state: 'start'}));\n    broker.publish('run', 'run.execute', createMessage({executionId, state: 'execute'}));\n\n    activateRunConsumers();\n  }\n\n  function createMessage(override = {}) {\n    return {\n      id,\n      type,\n      parent: {...parent},\n      ...override,\n    };\n  }\n\n  function getState() {\n    return createMessage({\n      executionId,\n      status,\n      stopped,\n      counters: {...counters},\n      broker: broker.getState(),\n      execution: execution && execution.getState(),\n    });\n  }\n\n  function stop() {\n    if (!status) return;\n\n    stopped = true;\n\n    if (!execution || execution.completed) {\n      deactivateRunConsumers();\n      return publishEvent('stop');\n    }\n\n    execution.stop();\n  }\n\n  function recover(state) {\n    if (processApi.isRunning) throw new Error(`cannot recover running process <${id}>`);\n    if (!state) return processApi;\n\n    stopped = state.stopped;\n    status = state.status;\n    executionId = state.executionId;\n    if (state.counters) {\n      counters = {...counters, ...state.counters};\n    }\n\n    if (state.execution) {\n      execution = Object(_ProcessExecution__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(processApi, context).recover(state.execution);\n    }\n\n    broker.recover(state.broker);\n\n    return processApi;\n  }\n\n  function resume() {\n    if (processApi.isRunning) throw new Error(`cannot resume running process <${id}>`);\n    if (!status) return processApi;\n\n    stopped = false;\n\n    const content = createMessage({executionId});\n    broker.publish('run', 'run.resume', content, {persistent: false});\n    activateRunConsumers();\n    return processApi;\n  }\n\n  function getApi(message) {\n    if (execution) return execution.getApi(message);\n    return Object(_Api__WEBPACK_IMPORTED_MODULE_2__[\"ProcessApi\"])(broker, message);\n  }\n\n  function signal(message) {\n    return getApi().signal(message, {delegate: true});\n  }\n\n  function onRunMessage(routingKey, message) {\n    const {content, ack, fields} = message;\n\n    if (routingKey === 'run.resume') {\n      return onResumeMessage();\n    }\n\n    stateMessage = message;\n\n    switch (routingKey) {\n      case 'run.enter': {\n        logger.debug(`<${id}> enter`);\n\n        status = 'entered';\n        if (fields.redelivered) break;\n\n        execution = undefined;\n        publishEvent('enter', content);\n\n        break;\n      }\n      case 'run.start': {\n        logger.debug(`<${id}> start`);\n        status = 'start';\n        publishEvent('start', content);\n        break;\n      }\n      case 'run.execute': {\n        status = 'executing';\n        const executeMessage = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_4__[\"cloneMessage\"])(message);\n        if (fields.redelivered && !execution) {\n          executeMessage.fields.redelivered = undefined;\n        }\n        postponedMessage = message;\n        executionQ.assertConsumer(onExecutionMessage, {exclusive: true, consumerTag: '_process-execution'});\n        execution = execution || Object(_ProcessExecution__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(processApi, context);\n        return execution.execute(executeMessage);\n      }\n      case 'run.error': {\n        publishEvent('error', content);\n        break;\n      }\n      case 'run.end': {\n        status = 'end';\n\n        if (fields.redelivered) break;\n        logger.debug(`<${id}> completed`);\n\n        counters.completed++;\n\n        broker.publish('run', 'run.leave', content);\n        publishEvent('end', content);\n        break;\n      }\n      case 'run.discarded': {\n        status = 'discarded';\n        if (fields.redelivered) break;\n\n        counters.discarded++;\n\n        broker.publish('run', 'run.leave', content);\n        break;\n      }\n      case 'run.leave': {\n        status = undefined;\n        broker.cancel('_process-api');\n        publishEvent('leave');\n        break;\n      }\n    }\n\n    ack();\n\n    function onResumeMessage() {\n      message.ack();\n\n      switch (stateMessage.fields.routingKey) {\n        case 'run.enter':\n        case 'run.start':\n        case 'run.discarded':\n        case 'run.end':\n        case 'run.leave':\n          break;\n        default:\n          return;\n      }\n\n      if (!stateMessage.fields.redelivered) return;\n\n      logger.debug(`<${id}> resume from ${status}`);\n\n      return broker.publish('run', stateMessage.fields.routingKey, Object(_messageHelper__WEBPACK_IMPORTED_MODULE_4__[\"cloneContent\"])(stateMessage.content), stateMessage.properties);\n    }\n  }\n\n  function onExecutionMessage(routingKey, message) {\n    const content = message.content;\n    const messageType = message.properties.type;\n    message.ack();\n\n    switch (messageType) {\n      case 'stopped': {\n        deactivateRunConsumers();\n        return publishEvent('stop');\n      }\n      case 'error': {\n        broker.publish('run', 'run.error', content);\n        broker.publish('run', 'run.discarded', content);\n        break;\n      }\n      case 'discard':\n        broker.publish('run', 'run.discarded', content);\n        break;\n      default: {\n        broker.publish('run', 'run.end', content);\n      }\n    }\n\n    if (postponedMessage) {\n      const ackMessage = postponedMessage;\n      postponedMessage = null;\n      ackMessage.ack();\n    }\n  }\n\n  function publishEvent(state, content) {\n    if (!content) content = createMessage();\n    broker.publish('event', `process.${state}`, {...content, state}, {type: state, mandatory: state === 'error'});\n  }\n\n  function sendMessage(messageContent) {\n    const activity = getActivityById(messageContent.target.id);\n    if (!activity) return logger.debug(`<${id}> message delivery canceled, <${messageContent.target.id}> not found`);\n\n    if (!status) run();\n\n    logger.debug(`<${id}> got message to <${messageContent.target.id}>`);\n    activity.message(messageContent);\n  }\n\n  function getActivityById(childId) {\n    if (execution) return execution.getActivityById(childId);\n    return context.getActivityById(childId);\n  }\n\n  function getActivities() {\n    if (execution) return execution.getActivities();\n    return context.getActivities(id);\n  }\n\n  function getStartActivities(withSignalRefId) {\n    return getActivities().filter((activity) => {\n      if (!activity.isStart) return false;\n      if (!withSignalRefId) return true;\n\n      if (!activity.behaviour.eventDefinitions && !activity.behaviour.eventDefinitions) return false;\n      return activity.behaviour.eventDefinitions.some((ed) => {\n        return ed.behaviour && ed.behaviour.signalRef && ed.behaviour.signalRef.id === withSignalRefId;\n      });\n    });\n  }\n\n  function getSequenceFlows() {\n    if (execution) return execution.getSequenceFlows();\n    return context.getSequenceFlows();\n  }\n\n  function getPostponed(...args) {\n    if (execution) return execution.getPostponed(...args);\n    return [];\n  }\n\n  function activateRunConsumers() {\n    consumingRunQ = true;\n    broker.subscribeTmp('api', `process.*.${executionId}`, onApiMessage, {noAck: true, consumerTag: '_process-api'});\n    runQ.assertConsumer(onRunMessage, {exclusive: true, consumerTag: '_process-run'});\n  }\n\n  function deactivateRunConsumers() {\n    broker.cancel('_process-api');\n    broker.cancel('_process-run');\n    broker.cancel('_process-execution');\n    consumingRunQ = false;\n  }\n\n  function onApiMessage(routingKey, message) {\n    const messageType = message.properties.type;\n\n    switch (messageType) {\n      case 'stop': {\n        stop();\n        break;\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/process/Process.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/process/ProcessExecution.js":
          /*!********************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/process/ProcessExecution.js ***!
  \********************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ProcessExecution; });\n/* harmony import */ var _Api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Api */ \"./node_modules/bpmn-elements/src/Api.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\nfunction ProcessExecution(parentActivity, context) {\n  const {id, type, broker, logger, isSubProcess} = parentActivity;\n  const {environment} = context;\n\n  const children = context.getActivities(id) || [];\n  const flows = context.getSequenceFlows(id) || [];\n  const outboundMessageFlows = context.getMessageFlows(id) || [];\n\n  const startActivities = [];\n\n  const postponed = [];\n  const exchangeName = isSubProcess ? 'subprocess-execution' : 'execution';\n  broker.assertExchange(exchangeName, 'topic', {autoDelete: false, durable: true});\n\n  let activityQ, status = 'init', executionId, stopped, activated, initMessage, completed = false;\n\n  const processExecution = {\n    id,\n    type,\n    broker,\n    get environment() {\n      return environment;\n    },\n    get executionId() {\n      return executionId;\n    },\n    get completed() {\n      return completed;\n    },\n    get status() {\n      return status;\n    },\n    get stopped() {\n      return stopped;\n    },\n    get postponedCount() {\n      return postponed.length;\n    },\n    get isRunning() {\n      if (activated) return true;\n      return false;\n    },\n    discard,\n    execute,\n    getApi,\n    getActivityById,\n    getActivities,\n    getPostponed,\n    getSequenceFlows,\n    getState,\n    recover,\n    stop,\n  };\n\n  return processExecution;\n\n  function execute(executeMessage) {\n    if (!executeMessage) throw new Error('Process execution requires message');\n    if (!executeMessage.content || !executeMessage.content.executionId) throw new Error('Process execution requires execution id');\n\n    const isRedelivered = executeMessage.fields.redelivered;\n    executionId = executeMessage.content.executionId;\n\n    initMessage = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneMessage\"])(executeMessage);\n    initMessage.content = {...initMessage.content, executionId, state: 'start'};\n\n    stopped = false;\n\n    environment.assignVariables(executeMessage);\n    activityQ = broker.assertQueue(`execute-${executionId}-q`, {durable: true, autoDelete: false});\n\n    if (isRedelivered) {\n      return resume();\n    }\n\n    logger.debug(`<${executionId} (${id})> execute`, isSubProcess ? 'sub process' : 'process');\n    start();\n    return true;\n  }\n\n  function recover(state) {\n    if (!state) return processExecution;\n    executionId = state.executionId;\n\n    stopped = state.stopped;\n    completed = state.completed;\n\n    logger.debug(`<${executionId} (${id})> recover process execution`);\n\n    if (state.flows) {\n      state.flows.forEach((flowState) => {\n        const flow = getFlowById(flowState.id);\n        if (!flow) return;\n        flow.recover(flowState);\n      });\n    }\n    if (state.children) {\n      state.children.forEach((childState) => {\n        const child = getActivityById(childState.id);\n        if (!child) return;\n\n        child.recover(childState);\n      });\n    }\n\n    return processExecution;\n  }\n\n  function resume() {\n    logger.debug(`<${executionId} (${id})> resume process execution`);\n\n    if (completed) return complete('completed');\n    activate();\n\n    postponed.splice(0);\n    activityQ.consume(onChildMessage, {prefetch: 1000});\n    if (completed) return complete('completed');\n\n    flows.forEach((flow) => flow.resume());\n    postponed.slice().forEach(({content}) => getActivityById(content.id).resume());\n  }\n\n  function start() {\n    if (children.length === 0) {\n      return complete('completed');\n    }\n\n    status = 'start';\n    activate();\n\n    const executeContent = {...initMessage.content, state: status};\n\n    broker.publish(exchangeName, 'execute.start', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(executeContent));\n\n    startActivities.forEach((activity) => activity.init());\n    startActivities.forEach((activity) => activity.run());\n\n    postponed.splice(0);\n    activityQ.consume(onChildMessage, {prefetch: 1000});\n  }\n\n  function stop() {\n    status = 'stop';\n    return activityQ.queueMessage({routingKey: 'execution.stop'}, {\n      id,\n      type,\n      executionId,\n    }, {type: 'stop', persistent: false});\n  }\n\n  function activate() {\n    broker.subscribeTmp('api', '#', onApiMessage, {noAck: true, consumerTag: `_process-api-consumer-${executionId}`});\n\n    outboundMessageFlows.forEach((flow) => {\n      flow.broker.subscribeTmp('event', '#', onMessageFlowEvent, {consumerTag: '_process-message-controller', noAck: true, priority: 100});\n    });\n\n    flows.forEach((flow) => {\n      flow.broker.subscribeTmp('event', '#', onActivityEvent, {consumerTag: '_process-flight-controller', noAck: true, priority: 100});\n    });\n\n    children.forEach((activity) => {\n      activity.activate();\n      activity.broker.subscribeTmp('event', '#', onActivityEvent, {noAck: true, consumerTag: '_process-activity-consumer', priority: 100});\n      if (activity.isStart) startActivities.push(activity);\n    });\n\n    activated = true;\n\n    function onActivityEvent(routingKey, activityMessage) {\n      const message = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneMessage\"])(activityMessage);\n      const content = message.content;\n      const parent = content.parent = content.parent || {};\n      if (message.fields.redelivered && message.properties.persistent === false) return;\n\n      const isDirectChild = content.parent.id === id;\n      if (isDirectChild) {\n        parent.executionId = executionId;\n      } else {\n        content.parent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"pushParent\"])(parent, {id, type, executionId});\n      }\n\n      broker.publish('event', routingKey, content, {...message.properties, mandatory: false});\n      if (!isDirectChild) return;\n\n      if (routingKey === 'process.terminate') {\n        return activityQ.queueMessage({routingKey: 'execution.terminate'}, Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(content), {type: 'terminate', persistent: true});\n      }\n\n      activityQ.queueMessage(message.fields, Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(content), {persistent: true, ...message.properties});\n    }\n  }\n\n  function onMessageFlowEvent(routingKey, message) {\n    broker.publish('message', routingKey, Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(message.content), message.properties);\n  }\n\n  function onChildMessage(routingKey, message) {\n    const content = message.content;\n    const isRedelivered = message.fields.redelivered;\n    const {id: childId, type: activityType} = content;\n    if (message.fields.redelivered && message.properties.persistent === false) return;\n\n    switch (routingKey) {\n      case 'execution.stop':\n        message.ack();\n        return stopExecution();\n      case 'execution.terminate':\n        message.ack();\n        return terminate(message);\n      case 'activity.stop':\n        return onChildStopped();\n      case 'flow.looped':\n      case 'activity.leave':\n        return onChildCompleted();\n      default:\n        if (!message.properties.persistent) {\n          return message.ack();\n        }\n    }\n\n    stateChangeMessage(true);\n\n    switch (routingKey) {\n      case 'activity.discard':\n      case 'activity.enter': {\n        if (content.inbound) {\n          content.inbound.forEach((trigger) => {\n            if (!trigger.isSequenceFlow) return;\n            const msg = popPostponed(trigger);\n            if (msg) msg.ack();\n          });\n        }\n        break;\n      }\n      case 'flow.error':\n      case 'activity.error': {\n        if (isErrorCaught()) {\n          logger.debug(`<${executionId} (${id})> error was caught`);\n          break;\n        }\n\n        complete('error', {error: content.error});\n        break;\n      }\n    }\n\n    function stateChangeMessage(postponeMessage = true) {\n      const previousMsg = popPostponed(content);\n      if (previousMsg) previousMsg.ack();\n      if (postponeMessage) postponed.push(message);\n    }\n\n    function popPostponed(byContent) {\n      const idx = postponed.findIndex((msg) => {\n        if (msg.content.isSequenceFlow) return msg.content.sequenceId === byContent.sequenceId;\n        return msg.content.executionId === byContent.executionId;\n      });\n\n      if (idx > -1) {\n        return postponed.splice(idx, 1)[0];\n      }\n    }\n\n    function onChildCompleted() {\n      stateChangeMessage(false);\n      if (isRedelivered) return message.ack();\n\n      logger.debug(`<${executionId} (${id})> left <${childId}> (${activityType}), pending runs ${postponed.length}`, postponed.map((a) => a.content.id));\n\n      if (!postponed.length) {\n        message.ack();\n        complete('completed');\n      }\n    }\n\n    function stopExecution() {\n      if (stopped) return;\n      logger.debug(`<${executionId} (${id})> stop process execution (stop child executions ${postponed.length})`);\n      postponed.slice().forEach((msg) => {\n        getApi(msg).stop();\n      });\n      stopped = true;\n    }\n\n    function onChildStopped() {\n      message.ack();\n\n      for (const activityApi of postponed.slice()) {\n        const activity = getActivityById(activityApi.content.id);\n        if (!activity) continue;\n        if (activity.isRunning) return;\n      }\n      onStopped();\n    }\n\n    function onStopped() {\n      activityQ.close();\n      deactivate();\n      return broker.publish(exchangeName, `execution.stopped.${executionId}`, {\n        ...initMessage.content,\n        ...content,\n      }, {type: 'stopped', persistent: false});\n    }\n\n    function isErrorCaught() {\n      return postponed.find((msg) => {\n        if (msg.fields.routingKey !== 'activity.catch') return;\n        return content.error.properties && content.error.properties.messageId === msg.content.error.properties.messageId;\n      });\n    }\n  }\n\n  function onApiMessage(routingKey, message) {\n    if (message.properties.delegate) {\n      for (const child of children) {\n        child.broker.publish('api', routingKey, Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(message.content), message.properties);\n      }\n      return;\n    }\n\n    if (message.content.id !== id) {\n      const child = getActivityById(message.content.id);\n      if (!child) return null;\n      return child.broker.publish('api', routingKey, message.content, message.properties);\n    }\n  }\n\n  function deactivate() {\n    activated = false;\n    broker.cancel(`_process-api-consumer-${executionId}`);\n\n    children.forEach((activity) => {\n      activity.broker.cancel('_process-activity-consumer');\n      activity.deactivate();\n    });\n\n    flows.forEach((flow) => {\n      flow.broker.cancel('_process-flight-controller');\n    });\n\n    outboundMessageFlows.forEach((flow) => {\n      flow.broker.cancel('_process-message-controller');\n    });\n  }\n\n  function getPostponed(filterFn) {\n    return postponed.slice().reduce((result, p) => {\n      const api = getApi(p);\n      if (api) {\n        if (filterFn && !filterFn(api)) return result;\n        result.push(api);\n      }\n      return result;\n    }, []);\n  }\n\n  function complete(completionType, content = {}) {\n    deactivate();\n    logger.debug(`<${executionId} (${id})> process execution ${completionType}`);\n    completed = true;\n    if (status !== 'terminated') status = completionType;\n    broker.deleteQueue(activityQ.name);\n\n    return broker.publish(exchangeName, `execution.${completionType}.${executionId}`, {\n      ...initMessage.content,\n      output: environment.output,\n      ...content,\n      state: completionType,\n    }, {type: completionType, mandatory: completionType === 'error'});\n  }\n\n  function terminate(message) {\n    status = 'terminated';\n    logger.debug(`<${executionId} (${id})> terminating process execution`);\n\n    const running = postponed.splice(0);\n    getSequenceFlows().forEach((flow) => {\n      flow.stop();\n    });\n\n    running.forEach((msg) => {\n      const {id: postponedId, isSequenceFlow} = msg.content;\n      if (postponedId === message.content.id) return;\n      if (isSequenceFlow) return;\n      getApi(msg).stop();\n      msg.ack();\n    });\n\n    activityQ.purge();\n  }\n\n  function discard() {\n    logger.debug(`<${executionId} (${id})> discard process execution (discard child executions ${postponed.length})`);\n    postponed.slice().forEach((msg) => {\n      getApi(msg).discard();\n    });\n  }\n\n  function getState() {\n    return {\n      executionId,\n      stopped,\n      completed,\n      children: children.map((activity) => activity.getState()),\n      flows: flows.map((f) => f.getState()),\n    };\n  }\n\n  function getActivities() {\n    return children.slice();\n  }\n\n  function getActivityById(activityId) {\n    return children.find((child) => child.id === activityId);\n  }\n\n  function getFlowById(flowId) {\n    return flows.find((f) => f.id === flowId);\n  }\n\n  function getChildById(childId) {\n    return getActivityById(childId) || getFlowById(childId);\n  }\n\n  function getSequenceFlows() {\n    return flows.slice();\n  }\n\n  function getApi(message) {\n    if (!message) message = initMessage;\n\n    const content = message.content;\n    if (content.executionId !== executionId) {\n      return getChildApi(message);\n    }\n\n    const api = Object(_Api__WEBPACK_IMPORTED_MODULE_0__[\"ProcessApi\"])(broker, message);\n\n    api.getExecuting = function getExecuting() {\n      return postponed.reduce((result, msg) => {\n        if (msg.content.executionId === content.executionId) return result;\n        result.push(getApi(msg));\n        return result;\n      }, []);\n    };\n\n    return api;\n  }\n\n  function getChildApi(message) {\n    const content = message.content;\n\n    let api = getApiByChildId(content.id);\n    if (api) return api;\n\n    if (!content.parent) return;\n\n    api = getApiByChildId(content.parent.id);\n    if (api) return api;\n\n    if (!content.parent.path) return;\n\n    for (let i = 0; i < content.parent.path.length; i++) {\n      api = getApiByChildId(content.parent.path[i].id);\n      if (api) return api;\n    }\n\n    function getApiByChildId(childId) {\n      const child = getChildById(childId);\n      if (!child) return;\n      return child.getApi(message);\n    }\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/process/ProcessExecution.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/shared.js":
          /*!**************************************************!*\
  !*** ./node_modules/bpmn-elements/src/shared.js ***!
  \**************************************************/
          /*! exports provided: generateId, brokerSafeId, getUniqueId, filterUndefined */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateId\", function() { return generateId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"brokerSafeId\", function() { return brokerSafeId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUniqueId\", function() { return getUniqueId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filterUndefined\", function() { return filterUndefined; });\nconst safePattern = /[./\\\\#*:\\s]/g;\n\nfunction generateId() {\n  const min = 100000000;\n  const max = 999999999;\n  const rand = Math.floor(Math.random() * (max - min)) + min;\n\n  return rand.toString(16);\n}\n\nfunction brokerSafeId(id) {\n  return id.replace(safePattern, '_');\n}\n\nfunction getUniqueId(prefix) {\n  return `${brokerSafeId(prefix)}_${generateId()}`;\n}\n\nfunction filterUndefined(obj) {\n  return Object.keys(obj).reduce((filtered, key) => {\n    const objValue = obj[key];\n    if (objValue !== undefined) filtered[key] = objValue;\n    return filtered;\n  }, {});\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/shared.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/tasks/MultiInstanceLoopCharacteristics.js":
          /*!**********************************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/tasks/MultiInstanceLoopCharacteristics.js ***!
  \**********************************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MultiInstanceLoopCharacteristics; });\n/* harmony import */ var _error_Errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/Errors */ \"./node_modules/bpmn-elements/src/error/Errors.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\nfunction MultiInstanceLoopCharacteristics(activity, loopCharacteristics) {\n  const {id, broker, environment} = activity;\n  const {type = 'MultiInstanceLoopCharacteristics', behaviour = {}} = loopCharacteristics;\n  const {isSequential = false, collection: collectionExpression, completionCondition, elementVariable = 'item', loopCardinality} = behaviour;\n  const loopType = getLoopType();\n\n  if (!loopType) return;\n\n  const {debug} = environment.Logger(type.toLowerCase());\n  const consumerTag = '_execute-q-multi-instance-tag';\n  broker.cancel(consumerTag);\n\n  const apiConsumerTag = '_api-multi-instance-tag';\n  broker.cancel(apiConsumerTag);\n\n  let loopSettings;\n\n  const characteristics = {\n    type,\n    loopType,\n    collection: collectionExpression,\n    elementVariable,\n    isSequential,\n    loopCardinality,\n    execute,\n  };\n\n  return characteristics;\n\n  function getLoopType() {\n    if (collectionExpression) return 'collection';\n    if (loopCardinality) return 'cardinality';\n  }\n\n  function execute(executeMessage) {\n    if (!executeMessage) throw new Error('MultiInstanceLoop execution requires message');\n    const {routingKey: executeRoutingKey, redelivered: isRedelivered} = executeMessage.fields || {};\n    const {executionId: parentExecutionId} = executeMessage.content;\n    getCharacteristics();\n\n    return isSequential ? executeSequential() : executeParallel();\n\n    function executeSequential() {\n      let startIndex = 0;\n      if (isRedelivered && executeRoutingKey === 'execute.iteration.next') {\n        startIndex = executeMessage.content.index;\n        debug(`<${parentExecutionId} (${id})> resume sequential loop from`, startIndex);\n      }\n      subscribe(onCompleteMessage);\n      return startNext(startIndex, startIndex > 0);\n\n      function startNext(index, ignoreIfExecuting) {\n        const content = next(index);\n        if (!content) return;\n\n        debug(`<${content.executionId} (${id})> start sequential iteration index ${content.index}`);\n        broker.publish('execution', 'execute.iteration.next', {\n          ...content,\n          ...getCharacteristics().getContent(),\n          index,\n          preventComplete: true,\n          output: getCharacteristics().output.slice(),\n          state: 'iteration.next',\n        });\n\n        broker.publish('execution', 'execute.start', {...content, ignoreIfExecuting});\n        return content;\n      }\n\n      function onCompleteMessage(_, message) {\n        const {content} = message;\n\n        if (content.isRootScope) return;\n        if (!content.isMultiInstance) return;\n\n        const loopOutput = getCharacteristics().output;\n        if (content.output !== undefined) loopOutput[content.index] = content.output;\n\n        broker.publish('execution', 'execute.iteration.completed', {\n          ...message.content,\n          ...getCharacteristics().getContent(),\n          preventComplete: true,\n          output: loopOutput.slice(),\n          state: 'iteration.completed',\n        });\n\n        if (completionCondition && environment.resolveExpression(completionCondition, message)) {\n          debug(`<${parentExecutionId} (${id})> complete condition met`);\n        } else if (startNext(content.index + 1)) return;\n\n        debug(`<${parentExecutionId} (${id})> sequential loop completed`);\n\n        broker.cancel(consumerTag);\n        broker.cancel(apiConsumerTag);\n        return broker.publish('execution', 'execute.completed', {\n          ...message.content,\n          ...getCharacteristics().getContent(),\n          output: loopOutput,\n        });\n      }\n    }\n\n    function executeParallel() {\n      subscribe(onCompleteMessage);\n      if (isRedelivered) return;\n\n      let index = 0, startContent;\n      while ((startContent = next(index))) {\n        debug(`<${parentExecutionId} (${id})> start parallel iteration index ${index}`);\n        broker.publish('execution', 'execute.start', {...startContent, keep: true});\n        index++;\n      }\n\n      function onCompleteMessage(_, message) {\n        const {content} = message;\n        if (content.isRootScope) return broker.cancel(consumerTag);\n        if (!content.isMultiInstance) return;\n\n        const loopOutput = getCharacteristics().output;\n        if (content.output !== undefined) loopOutput[content.index] = content.output;\n\n        broker.publish('execution', 'execute.iteration.completed', {\n          ...content,\n          ...getCharacteristics().getContent(),\n          index: content.index,\n          output: loopOutput,\n          state: 'iteration.completed',\n        });\n\n        if (environment.resolveExpression(completionCondition, message)) {\n          stop();\n\n          return broker.publish('execution', 'execute.completed', {\n            ...content,\n            ...getCharacteristics().getContent(),\n            output: getCharacteristics().output,\n          });\n        }\n      }\n    }\n\n    function next(index) {\n      const executionId = `${parentExecutionId}_${index}`;\n\n      const {cardinality, collection, parent, getContent} = getCharacteristics();\n      const content = {\n        ...getContent(),\n        isRootScope: undefined,\n        executionId,\n        isMultiInstance: true,\n        index,\n        parent,\n      };\n\n      if (isComplete(content)) return;\n\n      if (collection) {\n        content[elementVariable] = collection[index];\n      }\n\n      return content;\n\n      function isComplete() {\n        if (cardinality > 0 && index >= cardinality) return true;\n        if (collection && index >= collection.length) return true;\n      }\n    }\n\n    function getCharacteristics() {\n      if (loopSettings) return loopSettings;\n\n      const cardinality = getCardinality();\n      const collection = getCollection();\n\n      const messageContent = {\n        ...Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(executeMessage.content),\n        loopCardinality: cardinality,\n        isSequential,\n        output: undefined,\n      };\n\n      const output = executeMessage.content.output || [];\n\n      const parent = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"unshiftParent\"])(executeMessage.content.parent, executeMessage.content);\n\n      loopSettings = {\n        cardinality,\n        collection,\n        messageContent,\n        output,\n        parent,\n        getContent() {\n          return Object(_messageHelper__WEBPACK_IMPORTED_MODULE_1__[\"cloneContent\"])(messageContent);\n        },\n      };\n\n      return loopSettings;\n    }\n\n    function getCardinality() {\n      if (!loopCardinality) return;\n      let value = loopCardinality;\n      if (!value) return;\n\n      value = environment.resolveExpression(value, executeMessage);\n\n      const nValue = Number(value);\n      if (isNaN(nValue)) return activity.emitFatal(new _error_Errors__WEBPACK_IMPORTED_MODULE_0__[\"ActivityError\"](`<${id}> loopCardinality is not a Number >${value}<`, executeMessage));\n\n      return nValue;\n    }\n\n    function getCollection() {\n      if (!collectionExpression) return;\n      debug(`<${id}> has collection`);\n      return environment.resolveExpression(collectionExpression, executeMessage);\n    }\n\n    function subscribe(onCompleteMessage) {\n      broker.subscribeOnce('api', `activity.stop.${parentExecutionId}`, stop, {consumerTag: apiConsumerTag});\n      broker.subscribeTmp('execution', 'execute.completed', onCompleteMessage, {noAck: true, consumerTag, priority: 200});\n    }\n  }\n\n  function stop() {\n    debug(`<${id}> stop loop`);\n    broker.cancel(consumerTag);\n    broker.cancel(apiConsumerTag);\n  }\n}\n\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/tasks/MultiInstanceLoopCharacteristics.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/tasks/ScriptTask.js":
          /*!************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/tasks/ScriptTask.js ***!
  \************************************************************/
          /*! exports provided: default, ScriptTaskBehaviour */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ScriptTask; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScriptTaskBehaviour\", function() { return ScriptTaskBehaviour; });\n/* harmony import */ var _activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n/* harmony import */ var _activity_ExecutionScope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../activity/ExecutionScope */ \"./node_modules/bpmn-elements/src/activity/ExecutionScope.js\");\n/* harmony import */ var _error_Errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/Errors */ \"./node_modules/bpmn-elements/src/error/Errors.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\n\n\nfunction ScriptTask(activityDef, context) {\n  return Object(_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(ScriptTaskBehaviour, activityDef, context);\n}\n\nfunction ScriptTaskBehaviour(activity) {\n  const {id, type, behaviour, broker, logger, environment, emitFatal} = activity;\n\n  const {scriptFormat, script: scriptBody} = activity.behaviour;\n\n  const loopCharacteristics = behaviour.loopCharacteristics && behaviour.loopCharacteristics.Behaviour(activity, behaviour.loopCharacteristics);\n\n  environment.registerScript(activity);\n\n  const source = {\n    id,\n    type,\n    loopCharacteristics,\n    execute,\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    const content = Object(_messageHelper__WEBPACK_IMPORTED_MODULE_3__[\"cloneContent\"])(executeMessage.content);\n    if (loopCharacteristics && content.isRootScope) {\n      return loopCharacteristics.execute(executeMessage);\n    }\n\n    if (!scriptBody) return broker.publish('execution', 'execute.completed', content);\n\n    const script = environment.getScript(scriptFormat, activity);\n    if (!script) {\n      return emitFatal(new _error_Errors__WEBPACK_IMPORTED_MODULE_2__[\"ActivityError\"](`Script format ${scriptFormat} is unsupported or was not registered for <${activity.id}>`, executeMessage), content);\n    }\n\n    return script.execute(Object(_activity_ExecutionScope__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(activity, executeMessage), scriptCallback);\n\n    function scriptCallback(err, output) {\n      if (err) {\n        logger.error(`<${content.executionId} (${id})>`, err);\n        return broker.publish('execution', 'execute.error', {...content, error: new _error_Errors__WEBPACK_IMPORTED_MODULE_2__[\"ActivityError\"](err.message, executeMessage, err)}, {mandatory: true});\n      }\n      return broker.publish('execution', 'execute.completed', {...content, output});\n    }\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/tasks/ScriptTask.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/tasks/ServiceImplementation.js":
          /*!***********************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/tasks/ServiceImplementation.js ***!
  \***********************************************************************/
          /*! exports provided: default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ServiceImplementation; });\n/* harmony import */ var _activity_ExecutionScope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/ExecutionScope */ \"./node_modules/bpmn-elements/src/activity/ExecutionScope.js\");\n\n\nfunction ServiceImplementation(activity) {\n  const {type: atype, behaviour, environment} = activity;\n  const implementation = behaviour.implementation;\n\n  const type = `${atype}:implementation`;\n\n  return {\n    type,\n    implementation,\n    execute,\n  };\n\n  function execute(executionMessage, callback) {\n    const serviceFn = environment.resolveExpression(implementation, executionMessage);\n\n    if (typeof serviceFn !== 'function') return callback(new Error(`Implementation ${implementation} did not resolve to a function`));\n\n    serviceFn.call(activity, Object(_activity_ExecutionScope__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(activity, executionMessage), (err, ...args) => {\n      callback(err, args);\n    });\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/tasks/ServiceImplementation.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/tasks/ServiceTask.js":
          /*!*************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/tasks/ServiceTask.js ***!
  \*************************************************************/
          /*! exports provided: default, ServiceTaskBehaviour */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ServiceTask; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServiceTaskBehaviour\", function() { return ServiceTaskBehaviour; });\n/* harmony import */ var _activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n/* harmony import */ var _error_Errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/Errors */ \"./node_modules/bpmn-elements/src/error/Errors.js\");\n\n\n\nfunction ServiceTask(activityDef, context) {\n  return Object(_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(ServiceTaskBehaviour, activityDef, context);\n}\n\nfunction ServiceTaskBehaviour(activity) {\n  const {id, type, broker, logger, behaviour, environment, emitFatal} = activity;\n  const loopCharacteristics = behaviour.loopCharacteristics && behaviour.loopCharacteristics.Behaviour(activity, behaviour.loopCharacteristics);\n\n  const source = {\n    id,\n    type,\n    loopCharacteristics,\n    execute,\n    getService,\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    const content = executeMessage.content;\n    if (loopCharacteristics && content.isRootScope) {\n      return loopCharacteristics.execute(executeMessage);\n    }\n\n    const {executionId} = content;\n    const service = getService(executeMessage);\n    if (!service) return emitFatal(new _error_Errors__WEBPACK_IMPORTED_MODULE_1__[\"ActivityError\"](`<${id}> service not defined`, executeMessage), content);\n\n    broker.subscribeTmp('api', `activity.#.${content.executionId}`, onApiMessage, {consumerTag: `_api-${executionId}`});\n\n    return service.execute(executeMessage, (err, output) => {\n      broker.cancel(`_api-${executionId}`);\n      if (err) {\n        logger.error(`<${content.executionId} (${id})>`, err);\n        return broker.publish('execution', 'execute.error', {...executeMessage.content, error: new _error_Errors__WEBPACK_IMPORTED_MODULE_1__[\"ActivityError\"](err.message, executeMessage, err)}, {mandatory: true});\n      }\n      return broker.publish('execution', 'execute.completed', {...executeMessage.content, output});\n    });\n\n    function onApiMessage(_, message) {\n      if (message.properties.type === 'discard') {\n        broker.cancel(`_api-${executionId}`);\n        if (service && service.discard) service.discard(message);\n        logger.debug(`<${content.executionId} (${id})> discarded`);\n        return broker.publish('execution', 'execute.discard', {...executeMessage.content, state: 'discard'});\n      }\n      if (message.properties.type === 'stop') {\n        broker.cancel(`_api-${executionId}`);\n        if (service && service.stop) service.stop(message);\n        return logger.debug(`<${content.executionId} (${id})> stopped`);\n      }\n    }\n  }\n\n  function getService() {\n    const Service = behaviour.Service;\n    if (!Service) {\n      return environment.settings.enableDummyService ? DummyService(activity) : null;\n    }\n    return Service(activity);\n  }\n\n  function DummyService() {\n    logger.debug(`<${id}> returning dummy service`);\n\n    return {\n      type: 'dummyservice',\n      execute: executeDummyService,\n    };\n\n    function executeDummyService(...args) {\n      logger.debug(`<${id}> executing dummy service`);\n      const next = args.pop();\n      next();\n    }\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/tasks/ServiceTask.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/tasks/SignalTask.js":
          /*!************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/tasks/SignalTask.js ***!
  \************************************************************/
          /*! exports provided: default, SignalTaskBehaviour */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SignalTask; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SignalTaskBehaviour\", function() { return SignalTaskBehaviour; });\n/* harmony import */ var _activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n\n\nfunction SignalTask(activityDef, context) {\n  return Object(_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(SignalTaskBehaviour, activityDef, context);\n}\n\nfunction SignalTaskBehaviour(activity) {\n  const {id, type, behaviour, broker} = activity;\n  const loopCharacteristics = behaviour.loopCharacteristics && behaviour.loopCharacteristics.Behaviour(activity, behaviour.loopCharacteristics);\n\n  const source = {\n    id,\n    type,\n    loopCharacteristics,\n    execute,\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    const content = executeMessage.content;\n    if (loopCharacteristics && content.isRootScope) {\n      return loopCharacteristics.execute(executeMessage);\n    }\n\n    const {executionId} = content;\n\n    broker.subscribeTmp('api', `activity.#.${executionId}`, onApiMessage, {noAck: true, consumerTag: `_api-${executionId}`});\n    broker.publish('event', 'activity.wait', {...content, state: 'wait'});\n\n    function onApiMessage(routingKey, message) {\n      const messageType = message.properties.type;\n\n      switch (messageType) {\n        case 'stop':\n          return broker.cancel(`_api-${executionId}`);\n        case 'signal':\n          broker.cancel(`_api-${executionId}`);\n          return broker.publish('execution', 'execute.completed', {...content, output: message.content.message, state: 'signal'});\n        case 'discard':\n          broker.cancel(`_api-${executionId}`);\n          return broker.publish('execution', 'execute.discard', {...content});\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/tasks/SignalTask.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/tasks/SubProcess.js":
          /*!************************************************************!*\
  !*** ./node_modules/bpmn-elements/src/tasks/SubProcess.js ***!
  \************************************************************/
          /*! exports provided: default, SubProcessBehaviour */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SubProcess; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SubProcessBehaviour\", function() { return SubProcessBehaviour; });\n/* harmony import */ var _activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n/* harmony import */ var _process_ProcessExecution__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../process/ProcessExecution */ \"./node_modules/bpmn-elements/src/process/ProcessExecution.js\");\n/* harmony import */ var _messageHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../messageHelper */ \"./node_modules/bpmn-elements/src/messageHelper.js\");\n\n\n\n\nfunction SubProcess(activityDef, context) {\n  return Object(_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(SubProcessBehaviour, {...activityDef, isSubProcess: true}, context);\n}\n\nfunction SubProcessBehaviour(activity, context) {\n  const {id, type, broker, behaviour, environment, logger} = activity;\n  const loopCharacteristics = behaviour.loopCharacteristics && behaviour.loopCharacteristics.Behaviour(activity, behaviour.loopCharacteristics);\n\n  const processExecutions = [];\n  let rootExecutionId;\n\n  const source = {\n    id,\n    type,\n    loopCharacteristics,\n    get execution() {\n      return processExecutions[0];\n    },\n    get executions() {\n      return processExecutions;\n    },\n    execute,\n    getApi,\n    getState,\n    getPostponed() {\n      return this.executions.reduce((result, pe) => {\n        result = result.concat(pe.getPostponed());\n        return result;\n      }, []);\n    },\n    recover,\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    const content = executeMessage.content;\n\n    if (content.isRootScope) {\n      rootExecutionId = content.executionId;\n    }\n    if (loopCharacteristics && content.isRootScope) {\n      if (executeMessage.fields.routingKey === 'execute.resume') {\n        return;\n      } else {\n        broker.subscribeTmp('api', `activity.#.${rootExecutionId}`, onApiRootMessage, {noAck: true, consumerTag: `_api-${rootExecutionId}`});\n      }\n      return loopCharacteristics.execute(executeMessage);\n    }\n\n    const processExecution = upsertExecution(executeMessage);\n    if (!processExecution) return;\n\n    return processExecution.execute(executeMessage);\n\n    function onApiRootMessage(routingKey, message) {\n      const apiMessageType = message.properties.type;\n\n      if (apiMessageType === 'stop') {\n        broker.cancel(`_api-${rootExecutionId}`);\n        return stop();\n      } else if (message.properties.type === 'discard') {\n        broker.cancel(`_api-${rootExecutionId}`);\n        return discard();\n      }\n    }\n  }\n\n  function stop() {\n    return processExecutions.forEach((pe) => {\n      broker.cancel(`_sub-process-execution-${pe.executionId}`);\n      broker.cancel(`_sub-process-api-${pe.executionId}`);\n      pe.stop();\n    });\n  }\n\n  function discard() {\n    return processExecutions.forEach((pe) => {\n      broker.cancel(`_sub-process-execution-${pe.executionId}`);\n      broker.cancel(`_sub-process-api-${pe.executionId}`);\n      pe.discard();\n    });\n  }\n\n  function getState() {\n    if (loopCharacteristics) {\n      return {\n        executions: processExecutions.map(getExecutionState),\n      };\n    }\n\n    if (processExecutions.length) {\n      return getExecutionState(processExecutions[0]);\n    }\n\n    function getExecutionState(pe) {\n      const state = pe.getState();\n      state.environment = pe.environment.getState();\n      return state;\n    }\n  }\n\n  function recover(state) {\n    if (!state) return;\n\n    if (loopCharacteristics && state.executions) {\n      processExecutions.splice(0);\n      return state.executions.forEach(recover);\n    } else if (!loopCharacteristics) {\n      processExecutions.splice(0);\n    }\n\n    const subEnvironment = environment.recover(state.environment);\n    const subContext = context.clone(subEnvironment);\n\n    const execution = Object(_process_ProcessExecution__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(activity, subContext).recover(state);\n    processExecutions.push(execution);\n    return execution;\n  }\n\n  function upsertExecution(executeMessage) {\n    const content = executeMessage.content;\n    const executionId = content.executionId;\n\n    let execution = getExecutionById(executionId);\n    if (execution) {\n      if (executeMessage.fields.redelivered) addListeners(execution, executionId);\n      return execution;\n    }\n\n    const subEnvironment = environment.clone({ output: {} });\n    const subContext = context.clone(subEnvironment);\n\n    execution = Object(_process_ProcessExecution__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(activity, subContext);\n    processExecutions.push(execution);\n\n    addListeners(execution, executionId);\n\n    return execution;\n  }\n\n  function addListeners(processExecution, executionId) {\n    const executionConsumerTag = `_sub-process-execution-${executionId}`;\n    const apiConsumerTag = `_sub-process-api-${executionId}`;\n\n    broker.subscribeTmp('subprocess-execution', `execution.#.${executionId}`, onExecutionCompleted, {noAck: true, consumerTag: executionConsumerTag});\n    broker.subscribeTmp('api', `activity.#.${executionId}`, onApiMessage, {noAck: true, consumerTag: apiConsumerTag});\n\n    function onExecutionCompleted(_, message) {\n      const content = message.content;\n      const messageType = message.properties.type;\n\n      switch (messageType) {\n        case 'stopped': {\n          broker.cancel(executionConsumerTag);\n          broker.publish('execution', 'execute.stopped', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_2__[\"cloneContent\"])(content));\n          break;\n        }\n        case 'completed': {\n          broker.cancel(executionConsumerTag);\n          broker.cancel(apiConsumerTag);\n          broker.publish('execution', 'execute.completed', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_2__[\"cloneContent\"])(content));\n          break;\n        }\n        case 'error': {\n          broker.cancel(executionConsumerTag);\n          broker.cancel(apiConsumerTag);\n\n          const {error} = content;\n          logger.error(`<${id}>`, error);\n          broker.publish('execution', 'execute.error', Object(_messageHelper__WEBPACK_IMPORTED_MODULE_2__[\"cloneContent\"])(content));\n          break;\n        }\n      }\n    }\n\n    function onApiMessage(routingKey, message) {\n      const apiMessageType = message.properties.type;\n      const content = message.content;\n\n      if (apiMessageType === 'stop') {\n        broker.cancel(apiConsumerTag);\n        return processExecution.stop();\n      } else if (message.properties.type === 'discard') {\n        broker.cancel(apiConsumerTag);\n        broker.cancel(executionConsumerTag);\n\n        processExecution.discard();\n\n        return broker.publish('execution', 'execute.discard', {...content, state: 'discard'});\n      }\n    }\n  }\n\n  function getApi(apiMessage) {\n    const content = apiMessage.content;\n\n    if (content.id === id) return;\n\n    let execution;\n    if ((execution = getExecutionById(content.parent.executionId))) {\n      return execution.getApi(apiMessage);\n    }\n\n    const parentPath = content.parent.path;\n\n    for (let i = 0; i < parentPath.length; i++) {\n      if ((execution = getExecutionById(parentPath[i].executionId))) return execution.getApi(apiMessage);\n    }\n  }\n\n  function getExecutionById(executionId) {\n    return processExecutions.find((pe) => pe.executionId === executionId);\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/tasks/SubProcess.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-elements/src/tasks/Task.js":
          /*!******************************************************!*\
  !*** ./node_modules/bpmn-elements/src/tasks/Task.js ***!
  \******************************************************/
          /*! exports provided: default, TaskBehaviour */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Task; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TaskBehaviour\", function() { return TaskBehaviour; });\n/* harmony import */ var _activity_Activity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../activity/Activity */ \"./node_modules/bpmn-elements/src/activity/Activity.js\");\n\n\nfunction Task(activityDef, context) {\n  return Object(_activity_Activity__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(TaskBehaviour, activityDef, context);\n}\n\nfunction TaskBehaviour(activity) {\n  const {id, type, behaviour, broker} = activity;\n  const loopCharacteristics = behaviour.loopCharacteristics && behaviour.loopCharacteristics.Behaviour(activity, behaviour.loopCharacteristics);\n\n  const source = {\n    id,\n    type,\n    loopCharacteristics,\n    execute,\n  };\n\n  return source;\n\n  function execute(executeMessage) {\n    const content = executeMessage.content;\n    if (loopCharacteristics && content.isRootScope) {\n      return loopCharacteristics.execute(executeMessage);\n    }\n\n    return broker.publish('execution', 'execute.completed', {...content});\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-elements/src/tasks/Task.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-engine/dist/bpmn-moddle.js":
          /*!******************************************************!*\
  !*** ./node_modules/bpmn-engine/dist/bpmn-moddle.js ***!
  \******************************************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            "use strict";
            eval("/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 camunda Services GmbH\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n/**\n * Flatten array, one level deep.\n *\n * @param {Array<?>} arr\n *\n * @return {Array<?>}\n */\n\nvar nativeToString = Object.prototype.toString;\nvar nativeHasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isUndefined(obj) {\n  return obj === undefined;\n}\n\nfunction isArray(obj) {\n  return nativeToString.call(obj) === '[object Array]';\n}\n\nfunction isObject(obj) {\n  return nativeToString.call(obj) === '[object Object]';\n}\n\nfunction isFunction(obj) {\n  var tag = nativeToString.call(obj);\n  return tag === '[object Function]' || tag === '[object AsyncFunction]' || tag === '[object GeneratorFunction]' || tag === '[object AsyncGeneratorFunction]' || tag === '[object Proxy]';\n}\n\nfunction isString(obj) {\n  return nativeToString.call(obj) === '[object String]';\n}\n/**\n * Return true, if target owns a property with the given key.\n *\n * @param {Object} target\n * @param {String} key\n *\n * @return {Boolean}\n */\n\n\nfunction has(target, key) {\n  return nativeHasOwnProperty.call(target, key);\n}\n/**\n * Find element in collection.\n *\n * @param  {Array|Object} collection\n * @param  {Function|Object} matcher\n *\n * @return {Object}\n */\n\n\nfunction find(collection, matcher) {\n  matcher = toMatcher(matcher);\n  var match;\n  forEach(collection, function (val, key) {\n    if (matcher(val, key)) {\n      match = val;\n      return false;\n    }\n  });\n  return match;\n}\n/**\n * Find element in collection.\n *\n * @param  {Array|Object} collection\n * @param  {Function} matcher\n *\n * @return {Array} result\n */\n\n\nfunction filter(collection, matcher) {\n  var result = [];\n  forEach(collection, function (val, key) {\n    if (matcher(val, key)) {\n      result.push(val);\n    }\n  });\n  return result;\n}\n/**\n * Iterate over collection; returning something\n * (non-undefined) will stop iteration.\n *\n * @param  {Array|Object} collection\n * @param  {Function} iterator\n *\n * @return {Object} return result that stopped the iteration\n */\n\n\nfunction forEach(collection, iterator) {\n  var val, result;\n\n  if (isUndefined(collection)) {\n    return;\n  }\n\n  var convertKey = isArray(collection) ? toNum : identity;\n\n  for (var key in collection) {\n    if (has(collection, key)) {\n      val = collection[key];\n      result = iterator(val, convertKey(key));\n\n      if (result === false) {\n        return val;\n      }\n    }\n  }\n}\n/**\n * Transform a collection into another collection\n * by piping each member through the given fn.\n *\n * @param  {Object|Array}   collection\n * @param  {Function} fn\n *\n * @return {Array} transformed collection\n */\n\n\nfunction map(collection, fn) {\n  var result = [];\n  forEach(collection, function (val, key) {\n    result.push(fn(val, key));\n  });\n  return result;\n}\n\nfunction toMatcher(matcher) {\n  return isFunction(matcher) ? matcher : function (e) {\n    return e === matcher;\n  };\n}\n\nfunction identity(arg) {\n  return arg;\n}\n\nfunction toNum(arg) {\n  return Number(arg);\n}\n/**\n * Bind function against target <this>.\n *\n * @param  {Function} fn\n * @param  {Object}   target\n *\n * @return {Function} bound function\n */\n\n\nfunction bind(fn, target) {\n  return fn.bind(target);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n/**\n * Convenience wrapper for `Object.assign`.\n *\n * @param {Object} target\n * @param {...Object} others\n *\n * @return {Object} the target\n */\n\n\nfunction assign(target) {\n  for (var _len = arguments.length, others = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    others[_key - 1] = arguments[_key];\n  }\n\n  return _extends.apply(void 0, [target].concat(others));\n}\n/**\n * Pick given properties from the target object.\n *\n * @param {Object} target\n * @param {Array} properties\n *\n * @return {Object} target\n */\n\n\nfunction pick(target, properties) {\n  var result = {};\n  var obj = Object(target);\n  forEach(properties, function (prop) {\n    if (prop in obj) {\n      result[prop] = target[prop];\n    }\n  });\n  return result;\n}\n\n/**\n * Moddle base element.\n */\nfunction Base() {}\n\nBase.prototype.get = function (name) {\n  return this.$model.properties.get(this, name);\n};\n\nBase.prototype.set = function (name, value) {\n  this.$model.properties.set(this, name, value);\n};\n\n/**\n * A model element factory.\n *\n * @param {Moddle} model\n * @param {Properties} properties\n */\n\nfunction Factory(model, properties) {\n  this.model = model;\n  this.properties = properties;\n}\n\nFactory.prototype.createType = function (descriptor) {\n  var model = this.model;\n  var props = this.properties,\n      prototype = Object.create(Base.prototype); // initialize default values\n\n  forEach(descriptor.properties, function (p) {\n    if (!p.isMany && p[\"default\"] !== undefined) {\n      prototype[p.name] = p[\"default\"];\n    }\n  });\n  props.defineModel(prototype, model);\n  props.defineDescriptor(prototype, descriptor);\n  var name = descriptor.ns.name;\n  /**\n   * The new type constructor\n   */\n\n  function ModdleElement(attrs) {\n    props.define(this, '$type', {\n      value: name,\n      enumerable: true\n    });\n    props.define(this, '$attrs', {\n      value: {}\n    });\n    props.define(this, '$parent', {\n      writable: true\n    });\n    forEach(attrs, bind(function (val, key) {\n      this.set(key, val);\n    }, this));\n  }\n\n  ModdleElement.prototype = prototype;\n  ModdleElement.hasType = prototype.$instanceOf = this.model.hasType; // static links\n\n  props.defineModel(ModdleElement, model);\n  props.defineDescriptor(ModdleElement, descriptor);\n  return ModdleElement;\n};\n\n/**\n * Built-in moddle types\n */\nvar BUILTINS = {\n  String: true,\n  Boolean: true,\n  Integer: true,\n  Real: true,\n  Element: true\n};\n/**\n * Converters for built in types from string representations\n */\n\nvar TYPE_CONVERTERS = {\n  String: function String(s) {\n    return s;\n  },\n  Boolean: function Boolean(s) {\n    return s === 'true';\n  },\n  Integer: function Integer(s) {\n    return parseInt(s, 10);\n  },\n  Real: function Real(s) {\n    return parseFloat(s, 10);\n  }\n};\n/**\n * Convert a type to its real representation\n */\n\nfunction coerceType(type, value) {\n  var converter = TYPE_CONVERTERS[type];\n\n  if (converter) {\n    return converter(value);\n  } else {\n    return value;\n  }\n}\n/**\n * Return whether the given type is built-in\n */\n\nfunction isBuiltIn(type) {\n  return !!BUILTINS[type];\n}\n/**\n * Return whether the given type is simple\n */\n\nfunction isSimple(type) {\n  return !!TYPE_CONVERTERS[type];\n}\n\n/**\n * Parses a namespaced attribute name of the form (ns:)localName to an object,\n * given a default prefix to assume in case no explicit namespace is given.\n *\n * @param {String} name\n * @param {String} [defaultPrefix] the default prefix to take, if none is present.\n *\n * @return {Object} the parsed name\n */\nfunction parseName(name, defaultPrefix) {\n  var parts = name.split(/:/),\n      localName,\n      prefix; // no prefix (i.e. only local name)\n\n  if (parts.length === 1) {\n    localName = name;\n    prefix = defaultPrefix;\n  } else // prefix + local name\n    if (parts.length === 2) {\n      localName = parts[1];\n      prefix = parts[0];\n    } else {\n      throw new Error('expected <prefix:localName> or <localName>, got ' + name);\n    }\n\n  name = (prefix ? prefix + ':' : '') + localName;\n  return {\n    name: name,\n    prefix: prefix,\n    localName: localName\n  };\n}\n\n/**\n * A utility to build element descriptors.\n */\n\nfunction DescriptorBuilder(nameNs) {\n  this.ns = nameNs;\n  this.name = nameNs.name;\n  this.allTypes = [];\n  this.allTypesByName = {};\n  this.properties = [];\n  this.propertiesByName = {};\n}\n\nDescriptorBuilder.prototype.build = function () {\n  return pick(this, ['ns', 'name', 'allTypes', 'allTypesByName', 'properties', 'propertiesByName', 'bodyProperty', 'idProperty']);\n};\n/**\n * Add property at given index.\n *\n * @param {Object} p\n * @param {Number} [idx]\n * @param {Boolean} [validate=true]\n */\n\n\nDescriptorBuilder.prototype.addProperty = function (p, idx, validate) {\n  if (typeof idx === 'boolean') {\n    validate = idx;\n    idx = undefined;\n  }\n\n  this.addNamedProperty(p, validate !== false);\n  var properties = this.properties;\n\n  if (idx !== undefined) {\n    properties.splice(idx, 0, p);\n  } else {\n    properties.push(p);\n  }\n};\n\nDescriptorBuilder.prototype.replaceProperty = function (oldProperty, newProperty, replace) {\n  var oldNameNs = oldProperty.ns;\n  var props = this.properties,\n      propertiesByName = this.propertiesByName,\n      rename = oldProperty.name !== newProperty.name;\n\n  if (oldProperty.isId) {\n    if (!newProperty.isId) {\n      throw new Error('property <' + newProperty.ns.name + '> must be id property ' + 'to refine <' + oldProperty.ns.name + '>');\n    }\n\n    this.setIdProperty(newProperty, false);\n  }\n\n  if (oldProperty.isBody) {\n    if (!newProperty.isBody) {\n      throw new Error('property <' + newProperty.ns.name + '> must be body property ' + 'to refine <' + oldProperty.ns.name + '>');\n    } // TODO: Check compatibility\n\n\n    this.setBodyProperty(newProperty, false);\n  } // validate existence and get location of old property\n\n\n  var idx = props.indexOf(oldProperty);\n\n  if (idx === -1) {\n    throw new Error('property <' + oldNameNs.name + '> not found in property list');\n  } // remove old property\n\n\n  props.splice(idx, 1); // replacing the named property is intentional\n  //\n  //  * validate only if this is a \"rename\" operation\n  //  * add at specific index unless we \"replace\"\n  //\n\n  this.addProperty(newProperty, replace ? undefined : idx, rename); // make new property available under old name\n\n  propertiesByName[oldNameNs.name] = propertiesByName[oldNameNs.localName] = newProperty;\n};\n\nDescriptorBuilder.prototype.redefineProperty = function (p, targetPropertyName, replace) {\n  var nsPrefix = p.ns.prefix;\n  var parts = targetPropertyName.split('#');\n  var name = parseName(parts[0], nsPrefix);\n  var attrName = parseName(parts[1], name.prefix).name;\n  var redefinedProperty = this.propertiesByName[attrName];\n\n  if (!redefinedProperty) {\n    throw new Error('refined property <' + attrName + '> not found');\n  } else {\n    this.replaceProperty(redefinedProperty, p, replace);\n  }\n\n  delete p.redefines;\n};\n\nDescriptorBuilder.prototype.addNamedProperty = function (p, validate) {\n  var ns = p.ns,\n      propsByName = this.propertiesByName;\n\n  if (validate) {\n    this.assertNotDefined(p, ns.name);\n    this.assertNotDefined(p, ns.localName);\n  }\n\n  propsByName[ns.name] = propsByName[ns.localName] = p;\n};\n\nDescriptorBuilder.prototype.removeNamedProperty = function (p) {\n  var ns = p.ns,\n      propsByName = this.propertiesByName;\n  delete propsByName[ns.name];\n  delete propsByName[ns.localName];\n};\n\nDescriptorBuilder.prototype.setBodyProperty = function (p, validate) {\n  if (validate && this.bodyProperty) {\n    throw new Error('body property defined multiple times ' + '(<' + this.bodyProperty.ns.name + '>, <' + p.ns.name + '>)');\n  }\n\n  this.bodyProperty = p;\n};\n\nDescriptorBuilder.prototype.setIdProperty = function (p, validate) {\n  if (validate && this.idProperty) {\n    throw new Error('id property defined multiple times ' + '(<' + this.idProperty.ns.name + '>, <' + p.ns.name + '>)');\n  }\n\n  this.idProperty = p;\n};\n\nDescriptorBuilder.prototype.assertNotDefined = function (p, name) {\n  var propertyName = p.name,\n      definedProperty = this.propertiesByName[propertyName];\n\n  if (definedProperty) {\n    throw new Error('property <' + propertyName + '> already defined; ' + 'override of <' + definedProperty.definedBy.ns.name + '#' + definedProperty.ns.name + '> by ' + '<' + p.definedBy.ns.name + '#' + p.ns.name + '> not allowed without redefines');\n  }\n};\n\nDescriptorBuilder.prototype.hasProperty = function (name) {\n  return this.propertiesByName[name];\n};\n\nDescriptorBuilder.prototype.addTrait = function (t, inherited) {\n  var typesByName = this.allTypesByName,\n      types = this.allTypes;\n  var typeName = t.name;\n\n  if (typeName in typesByName) {\n    return;\n  }\n\n  forEach(t.properties, bind(function (p) {\n    // clone property to allow extensions\n    p = assign({}, p, {\n      name: p.ns.localName,\n      inherited: inherited\n    });\n    Object.defineProperty(p, 'definedBy', {\n      value: t\n    });\n    var replaces = p.replaces,\n        redefines = p.redefines; // add replace/redefine support\n\n    if (replaces || redefines) {\n      this.redefineProperty(p, replaces || redefines, replaces);\n    } else {\n      if (p.isBody) {\n        this.setBodyProperty(p);\n      }\n\n      if (p.isId) {\n        this.setIdProperty(p);\n      }\n\n      this.addProperty(p);\n    }\n  }, this));\n  types.push(t);\n  typesByName[typeName] = t;\n};\n\n/**\n * A registry of Moddle packages.\n *\n * @param {Array<Package>} packages\n * @param {Properties} properties\n */\n\nfunction Registry(packages, properties) {\n  this.packageMap = {};\n  this.typeMap = {};\n  this.packages = [];\n  this.properties = properties;\n  forEach(packages, bind(this.registerPackage, this));\n}\n\nRegistry.prototype.getPackage = function (uriOrPrefix) {\n  return this.packageMap[uriOrPrefix];\n};\n\nRegistry.prototype.getPackages = function () {\n  return this.packages;\n};\n\nRegistry.prototype.registerPackage = function (pkg) {\n  // copy package\n  pkg = assign({}, pkg);\n  var pkgMap = this.packageMap;\n  ensureAvailable(pkgMap, pkg, 'prefix');\n  ensureAvailable(pkgMap, pkg, 'uri'); // register types\n\n  forEach(pkg.types, bind(function (descriptor) {\n    this.registerType(descriptor, pkg);\n  }, this));\n  pkgMap[pkg.uri] = pkgMap[pkg.prefix] = pkg;\n  this.packages.push(pkg);\n};\n/**\n * Register a type from a specific package with us\n */\n\n\nRegistry.prototype.registerType = function (type, pkg) {\n  type = assign({}, type, {\n    superClass: (type.superClass || []).slice(),\n    \"extends\": (type[\"extends\"] || []).slice(),\n    properties: (type.properties || []).slice(),\n    meta: assign((type.meta || {}))\n  });\n  var ns = parseName(type.name, pkg.prefix),\n      name = ns.name,\n      propertiesByName = {}; // parse properties\n\n  forEach(type.properties, bind(function (p) {\n    // namespace property names\n    var propertyNs = parseName(p.name, ns.prefix),\n        propertyName = propertyNs.name; // namespace property types\n\n    if (!isBuiltIn(p.type)) {\n      p.type = parseName(p.type, propertyNs.prefix).name;\n    }\n\n    assign(p, {\n      ns: propertyNs,\n      name: propertyName\n    });\n    propertiesByName[propertyName] = p;\n  }, this)); // update ns + name\n\n  assign(type, {\n    ns: ns,\n    name: name,\n    propertiesByName: propertiesByName\n  });\n  forEach(type[\"extends\"], bind(function (extendsName) {\n    var extended = this.typeMap[extendsName];\n    extended.traits = extended.traits || [];\n    extended.traits.push(name);\n  }, this)); // link to package\n\n  this.definePackage(type, pkg); // register\n\n  this.typeMap[name] = type;\n};\n/**\n * Traverse the type hierarchy from bottom to top,\n * calling iterator with (type, inherited) for all elements in\n * the inheritance chain.\n *\n * @param {Object} nsName\n * @param {Function} iterator\n * @param {Boolean} [trait=false]\n */\n\n\nRegistry.prototype.mapTypes = function (nsName, iterator, trait) {\n  var type = isBuiltIn(nsName.name) ? {\n    name: nsName.name\n  } : this.typeMap[nsName.name];\n  var self = this;\n  /**\n   * Traverse the selected trait.\n   *\n   * @param {String} cls\n   */\n\n  function traverseTrait(cls) {\n    return traverseSuper(cls, true);\n  }\n  /**\n   * Traverse the selected super type or trait\n   *\n   * @param {String} cls\n   * @param {Boolean} [trait=false]\n   */\n\n\n  function traverseSuper(cls, trait) {\n    var parentNs = parseName(cls, isBuiltIn(cls) ? '' : nsName.prefix);\n    self.mapTypes(parentNs, iterator, trait);\n  }\n\n  if (!type) {\n    throw new Error('unknown type <' + nsName.name + '>');\n  }\n\n  forEach(type.superClass, trait ? traverseTrait : traverseSuper); // call iterator with (type, inherited=!trait)\n\n  iterator(type, !trait);\n  forEach(type.traits, traverseTrait);\n};\n/**\n * Returns the effective descriptor for a type.\n *\n * @param  {String} type the namespaced name (ns:localName) of the type\n *\n * @return {Descriptor} the resulting effective descriptor\n */\n\n\nRegistry.prototype.getEffectiveDescriptor = function (name) {\n  var nsName = parseName(name);\n  var builder = new DescriptorBuilder(nsName);\n  this.mapTypes(nsName, function (type, inherited) {\n    builder.addTrait(type, inherited);\n  });\n  var descriptor = builder.build(); // define package link\n\n  this.definePackage(descriptor, descriptor.allTypes[descriptor.allTypes.length - 1].$pkg);\n  return descriptor;\n};\n\nRegistry.prototype.definePackage = function (target, pkg) {\n  this.properties.define(target, '$pkg', {\n    value: pkg\n  });\n}; ///////// helpers ////////////////////////////\n\n\nfunction ensureAvailable(packageMap, pkg, identifierKey) {\n  var value = pkg[identifierKey];\n\n  if (value in packageMap) {\n    throw new Error('package with ' + identifierKey + ' <' + value + '> already defined');\n  }\n}\n\n/**\n * A utility that gets and sets properties of model elements.\n *\n * @param {Model} model\n */\nfunction Properties(model) {\n  this.model = model;\n}\n/**\n * Sets a named property on the target element.\n * If the value is undefined, the property gets deleted.\n *\n * @param {Object} target\n * @param {String} name\n * @param {Object} value\n */\n\nProperties.prototype.set = function (target, name, value) {\n  var property = this.model.getPropertyDescriptor(target, name);\n  var propertyName = property && property.name;\n\n  if (isUndefined$1(value)) {\n    // unset the property, if the specified value is undefined;\n    // delete from $attrs (for extensions) or the target itself\n    if (property) {\n      delete target[propertyName];\n    } else {\n      delete target.$attrs[name];\n    }\n  } else {\n    // set the property, defining well defined properties on the fly\n    // or simply updating them in target.$attrs (for extensions)\n    if (property) {\n      if (propertyName in target) {\n        target[propertyName] = value;\n      } else {\n        defineProperty(target, property, value);\n      }\n    } else {\n      target.$attrs[name] = value;\n    }\n  }\n};\n/**\n * Returns the named property of the given element\n *\n * @param  {Object} target\n * @param  {String} name\n *\n * @return {Object}\n */\n\n\nProperties.prototype.get = function (target, name) {\n  var property = this.model.getPropertyDescriptor(target, name);\n\n  if (!property) {\n    return target.$attrs[name];\n  }\n\n  var propertyName = property.name; // check if access to collection property and lazily initialize it\n\n  if (!target[propertyName] && property.isMany) {\n    defineProperty(target, property, []);\n  }\n\n  return target[propertyName];\n};\n/**\n * Define a property on the target element\n *\n * @param  {Object} target\n * @param  {String} name\n * @param  {Object} options\n */\n\n\nProperties.prototype.define = function (target, name, options) {\n  Object.defineProperty(target, name, options);\n};\n/**\n * Define the descriptor for an element\n */\n\n\nProperties.prototype.defineDescriptor = function (target, descriptor) {\n  this.define(target, '$descriptor', {\n    value: descriptor\n  });\n};\n/**\n * Define the model for an element\n */\n\n\nProperties.prototype.defineModel = function (target, model) {\n  this.define(target, '$model', {\n    value: model\n  });\n};\n\nfunction isUndefined$1(val) {\n  return typeof val === 'undefined';\n}\n\nfunction defineProperty(target, property, value) {\n  Object.defineProperty(target, property.name, {\n    enumerable: !property.isReference,\n    writable: true,\n    value: value,\n    configurable: true\n  });\n}\n\n/**\n * @class Moddle\n *\n * A model that can be used to create elements of a specific type.\n *\n * @example\n *\n * var Moddle = require('moddle');\n *\n * var pkg = {\n *   name: 'mypackage',\n *   prefix: 'my',\n *   types: [\n *     { name: 'Root' }\n *   ]\n * };\n *\n * var moddle = new Moddle([pkg]);\n *\n * @param {Array<Package>} packages the packages to contain\n */\n\nfunction Moddle(packages) {\n  this.properties = new Properties(this);\n  this.factory = new Factory(this, this.properties);\n  this.registry = new Registry(packages, this.properties);\n  this.typeCache = {};\n}\n/**\n * Create an instance of the specified type.\n *\n * @method Moddle#create\n *\n * @example\n *\n * var foo = moddle.create('my:Foo');\n * var bar = moddle.create('my:Bar', { id: 'BAR_1' });\n *\n * @param  {String|Object} descriptor the type descriptor or name know to the model\n * @param  {Object} attrs   a number of attributes to initialize the model instance with\n * @return {Object}         model instance\n */\n\nModdle.prototype.create = function (descriptor, attrs) {\n  var Type = this.getType(descriptor);\n\n  if (!Type) {\n    throw new Error('unknown type <' + descriptor + '>');\n  }\n\n  return new Type(attrs);\n};\n/**\n * Returns the type representing a given descriptor\n *\n * @method Moddle#getType\n *\n * @example\n *\n * var Foo = moddle.getType('my:Foo');\n * var foo = new Foo({ 'id' : 'FOO_1' });\n *\n * @param  {String|Object} descriptor the type descriptor or name know to the model\n * @return {Object}         the type representing the descriptor\n */\n\n\nModdle.prototype.getType = function (descriptor) {\n  var cache = this.typeCache;\n  var name = isString(descriptor) ? descriptor : descriptor.ns.name;\n  var type = cache[name];\n\n  if (!type) {\n    descriptor = this.registry.getEffectiveDescriptor(name);\n    type = cache[name] = this.factory.createType(descriptor);\n  }\n\n  return type;\n};\n/**\n * Creates an any-element type to be used within model instances.\n *\n * This can be used to create custom elements that lie outside the meta-model.\n * The created element contains all the meta-data required to serialize it\n * as part of meta-model elements.\n *\n * @method Moddle#createAny\n *\n * @example\n *\n * var foo = moddle.createAny('vendor:Foo', 'http://vendor', {\n *   value: 'bar'\n * });\n *\n * var container = moddle.create('my:Container', 'http://my', {\n *   any: [ foo ]\n * });\n *\n * // go ahead and serialize the stuff\n *\n *\n * @param  {String} name  the name of the element\n * @param  {String} nsUri the namespace uri of the element\n * @param  {Object} [properties] a map of properties to initialize the instance with\n * @return {Object} the any type instance\n */\n\n\nModdle.prototype.createAny = function (name, nsUri, properties) {\n  var nameNs = parseName(name);\n  var element = {\n    $type: name,\n    $instanceOf: function $instanceOf(type) {\n      return type === this.$type;\n    }\n  };\n  var descriptor = {\n    name: name,\n    isGeneric: true,\n    ns: {\n      prefix: nameNs.prefix,\n      localName: nameNs.localName,\n      uri: nsUri\n    }\n  };\n  this.properties.defineDescriptor(element, descriptor);\n  this.properties.defineModel(element, this);\n  this.properties.define(element, '$parent', {\n    enumerable: false,\n    writable: true\n  });\n  forEach(properties, function (a, key) {\n    if (isObject(a) && a.value !== undefined) {\n      element[a.name] = a.value;\n    } else {\n      element[key] = a;\n    }\n  });\n  return element;\n};\n/**\n * Returns a registered package by uri or prefix\n *\n * @return {Object} the package\n */\n\n\nModdle.prototype.getPackage = function (uriOrPrefix) {\n  return this.registry.getPackage(uriOrPrefix);\n};\n/**\n * Returns a snapshot of all known packages\n *\n * @return {Object} the package\n */\n\n\nModdle.prototype.getPackages = function () {\n  return this.registry.getPackages();\n};\n/**\n * Returns the descriptor for an element\n */\n\n\nModdle.prototype.getElementDescriptor = function (element) {\n  return element.$descriptor;\n};\n/**\n * Returns true if the given descriptor or instance\n * represents the given type.\n *\n * May be applied to this, if element is omitted.\n */\n\n\nModdle.prototype.hasType = function (element, type) {\n  if (type === undefined) {\n    type = element;\n    element = this;\n  }\n\n  var descriptor = element.$model.getElementDescriptor(element);\n  return type in descriptor.allTypesByName;\n};\n/**\n * Returns the descriptor of an elements named property\n */\n\n\nModdle.prototype.getPropertyDescriptor = function (element, property) {\n  return this.getElementDescriptor(element).propertiesByName[property];\n};\n/**\n * Returns a mapped type's descriptor\n */\n\n\nModdle.prototype.getTypeDescriptor = function (type) {\n  return this.registry.typeMap[type];\n};\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar fromCharCode = String.fromCharCode;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar ENTITY_PATTERN = /&#(\\d+);|&#x([0-9a-f]+);|&(\\w+);/ig;\nvar ENTITY_MAPPING = {\n  'amp': '&',\n  'apos': '\\'',\n  'gt': '>',\n  'lt': '<',\n  'quot': '\"'\n}; // map UPPERCASE variants of supported special chars\n\nObject.keys(ENTITY_MAPPING).forEach(function (k) {\n  ENTITY_MAPPING[k.toUpperCase()] = ENTITY_MAPPING[k];\n});\n\nfunction replaceEntities(_, d, x, z) {\n  // reserved names, i.e. &nbsp;\n  if (z) {\n    if (hasOwnProperty.call(ENTITY_MAPPING, z)) {\n      return ENTITY_MAPPING[z];\n    } else {\n      // fall back to original value\n      return '&' + z + ';';\n    }\n  } // decimal encoded char\n\n\n  if (d) {\n    return fromCharCode(d);\n  } // hex encoded char\n\n\n  return fromCharCode(parseInt(x, 16));\n}\n/**\n * A basic entity decoder that can decode a minimal\n * sub-set of reserved names (&amp;) as well as\n * hex (&#xaaf;) and decimal (&#1231;) encoded characters.\n *\n * @param {string} str\n *\n * @return {string} decoded string\n */\n\n\nfunction decodeEntities(s) {\n  if (s.length > 3 && s.indexOf('&') !== -1) {\n    return s.replace(ENTITY_PATTERN, replaceEntities);\n  }\n\n  return s;\n}\n\nvar XSI_URI = 'http://www.w3.org/2001/XMLSchema-instance';\nvar XSI_PREFIX = 'xsi';\nvar XSI_TYPE = 'xsi:type';\nvar NON_WHITESPACE_OUTSIDE_ROOT_NODE = 'non-whitespace outside of root node';\n\nfunction error(msg) {\n  return new Error(msg);\n}\n\nfunction missingNamespaceForPrefix(prefix) {\n  return 'missing namespace for prefix <' + prefix + '>';\n}\n\nfunction getter(getFn) {\n  return {\n    'get': getFn,\n    'enumerable': true\n  };\n}\n\nfunction cloneNsMatrix(nsMatrix) {\n  var clone = {},\n      key;\n\n  for (key in nsMatrix) {\n    clone[key] = nsMatrix[key];\n  }\n\n  return clone;\n}\n\nfunction uriPrefix(prefix) {\n  return prefix + '$uri';\n}\n\nfunction buildNsMatrix(nsUriToPrefix) {\n  var nsMatrix = {},\n      uri,\n      prefix;\n\n  for (uri in nsUriToPrefix) {\n    prefix = nsUriToPrefix[uri];\n    nsMatrix[prefix] = prefix;\n    nsMatrix[uriPrefix(prefix)] = uri;\n  }\n\n  return nsMatrix;\n}\n\nfunction noopGetContext() {\n  return {\n    'line': 0,\n    'column': 0\n  };\n}\n\nfunction throwFunc(err) {\n  throw err;\n}\n/**\n * Creates a new parser with the given options.\n *\n * @constructor\n *\n * @param  {!Object<string, ?>=} options\n */\n\n\nfunction Parser(options) {\n  if (!this) {\n    return new Parser(options);\n  }\n\n  var proxy = options && options['proxy'];\n  var onText,\n      onOpenTag,\n      onCloseTag,\n      onCDATA,\n      onError = throwFunc,\n      onWarning,\n      onComment,\n      onQuestion,\n      onAttention;\n  var getContext = noopGetContext;\n  /**\n   * Do we need to parse the current elements attributes for namespaces?\n   *\n   * @type {boolean}\n   */\n\n  var maybeNS = false;\n  /**\n   * Do we process namespaces at all?\n   *\n   * @type {boolean}\n   */\n\n  var isNamespace = false;\n  /**\n   * The caught error returned on parse end\n   *\n   * @type {Error}\n   */\n\n  var returnError = null;\n  /**\n   * Should we stop parsing?\n   *\n   * @type {boolean}\n   */\n\n  var parseStop = false;\n  /**\n   * A map of { uri: prefix } used by the parser.\n   *\n   * This map will ensure we can normalize prefixes during processing;\n   * for each uri, only one prefix will be exposed to the handlers.\n   *\n   * @type {!Object<string, string>}}\n   */\n\n  var nsUriToPrefix;\n  /**\n   * Handle parse error.\n   *\n   * @param  {string|Error} err\n   */\n\n  function handleError(err) {\n    if (!(err instanceof Error)) {\n      err = error(err);\n    }\n\n    returnError = err;\n    onError(err, getContext);\n  }\n  /**\n   * Handle parse error.\n   *\n   * @param  {string|Error} err\n   */\n\n\n  function handleWarning(err) {\n    if (!onWarning) {\n      return;\n    }\n\n    if (!(err instanceof Error)) {\n      err = error(err);\n    }\n\n    onWarning(err, getContext);\n  }\n  /**\n   * Register parse listener.\n   *\n   * @param  {string}   name\n   * @param  {Function} cb\n   *\n   * @return {Parser}\n   */\n\n\n  this['on'] = function (name, cb) {\n    if (typeof cb !== 'function') {\n      throw error('required args <name, cb>');\n    }\n\n    switch (name) {\n      case 'openTag':\n        onOpenTag = cb;\n        break;\n\n      case 'text':\n        onText = cb;\n        break;\n\n      case 'closeTag':\n        onCloseTag = cb;\n        break;\n\n      case 'error':\n        onError = cb;\n        break;\n\n      case 'warn':\n        onWarning = cb;\n        break;\n\n      case 'cdata':\n        onCDATA = cb;\n        break;\n\n      case 'attention':\n        onAttention = cb;\n        break;\n      // <!XXXXX zzzz=\"eeee\">\n\n      case 'question':\n        onQuestion = cb;\n        break;\n      // <? ....  ?>\n\n      case 'comment':\n        onComment = cb;\n        break;\n\n      default:\n        throw error('unsupported event: ' + name);\n    }\n\n    return this;\n  };\n  /**\n   * Set the namespace to prefix mapping.\n   *\n   * @example\n   *\n   * parser.ns({\n   *   'http://foo': 'foo',\n   *   'http://bar': 'bar'\n   * });\n   *\n   * @param  {!Object<string, string>} nsMap\n   *\n   * @return {Parser}\n   */\n\n\n  this['ns'] = function (nsMap) {\n    if (typeof nsMap === 'undefined') {\n      nsMap = {};\n    }\n\n    if (_typeof(nsMap) !== 'object') {\n      throw error('required args <nsMap={}>');\n    }\n\n    var _nsUriToPrefix = {},\n        k;\n\n    for (k in nsMap) {\n      _nsUriToPrefix[k] = nsMap[k];\n    } // FORCE default mapping for schema instance\n\n\n    _nsUriToPrefix[XSI_URI] = XSI_PREFIX;\n    isNamespace = true;\n    nsUriToPrefix = _nsUriToPrefix;\n    return this;\n  };\n  /**\n   * Parse xml string.\n   *\n   * @param  {string} xml\n   *\n   * @return {Error} returnError, if not thrown\n   */\n\n\n  this['parse'] = function (xml) {\n    if (typeof xml !== 'string') {\n      throw error('required args <xml=string>');\n    }\n\n    returnError = null;\n    parse(xml);\n    getContext = noopGetContext;\n    parseStop = false;\n    return returnError;\n  };\n  /**\n   * Stop parsing.\n   */\n\n\n  this['stop'] = function () {\n    parseStop = true;\n  };\n  /**\n   * Parse string, invoking configured listeners on element.\n   *\n   * @param  {string} xml\n   */\n\n\n  function parse(xml) {\n    var nsMatrixStack = isNamespace ? [] : null,\n        nsMatrix = isNamespace ? buildNsMatrix(nsUriToPrefix) : null,\n        _nsMatrix,\n        nodeStack = [],\n        anonymousNsCount = 0,\n        tagStart = false,\n        tagEnd = false,\n        i = 0,\n        j = 0,\n        x,\n        y,\n        q,\n        w,\n        xmlns,\n        elementName,\n        _elementName,\n        elementProxy;\n\n    var attrsString = '',\n        attrsStart = 0,\n        cachedAttrs // false = parsed with errors, null = needs parsing\n    ;\n    /**\n     * Parse attributes on demand and returns the parsed attributes.\n     *\n     * Return semantics: (1) `false` on attribute parse error,\n     * (2) object hash on extracted attrs.\n     *\n     * @return {boolean|Object}\n     */\n\n    function getAttrs() {\n      if (cachedAttrs !== null) {\n        return cachedAttrs;\n      }\n\n      var nsUri,\n          nsUriPrefix,\n          nsName,\n          defaultAlias = isNamespace && nsMatrix['xmlns'],\n          attrList = isNamespace && maybeNS ? [] : null,\n          i = attrsStart,\n          s = attrsString,\n          l = s.length,\n          hasNewMatrix,\n          newalias,\n          value,\n          alias,\n          name,\n          attrs = {},\n          seenAttrs = {},\n          skipAttr,\n          w,\n          j;\n\n      parseAttr: for (; i < l; i++) {\n        skipAttr = false;\n        w = s.charCodeAt(i);\n\n        if (w === 32 || w < 14 && w > 8) {\n          // WHITESPACE={ \\f\\n\\r\\t\\v}\n          continue;\n        } // wait for non whitespace character\n\n\n        if (w < 65 || w > 122 || w > 90 && w < 97) {\n          if (w !== 95 && w !== 58) {\n            // char 95\"_\" 58\":\"\n            handleWarning('illegal first char attribute name');\n            skipAttr = true;\n          }\n        } // parse attribute name\n\n\n        for (j = i + 1; j < l; j++) {\n          w = s.charCodeAt(j);\n\n          if (w > 96 && w < 123 || w > 64 && w < 91 || w > 47 && w < 59 || w === 46 || // '.'\n          w === 45 || // '-'\n          w === 95 // '_'\n          ) {\n              continue;\n            } // unexpected whitespace\n\n\n          if (w === 32 || w < 14 && w > 8) {\n            // WHITESPACE\n            handleWarning('missing attribute value');\n            i = j;\n            continue parseAttr;\n          } // expected \"=\"\n\n\n          if (w === 61) {\n            // \"=\" == 61\n            break;\n          }\n\n          handleWarning('illegal attribute name char');\n          skipAttr = true;\n        }\n\n        name = s.substring(i, j);\n\n        if (name === 'xmlns:xmlns') {\n          handleWarning('illegal declaration of xmlns');\n          skipAttr = true;\n        }\n\n        w = s.charCodeAt(j + 1);\n\n        if (w === 34) {\n          // '\"'\n          j = s.indexOf('\"', i = j + 2);\n\n          if (j === -1) {\n            j = s.indexOf('\\'', i);\n\n            if (j !== -1) {\n              handleWarning('attribute value quote missmatch');\n              skipAttr = true;\n            }\n          }\n        } else if (w === 39) {\n          // \"'\"\n          j = s.indexOf('\\'', i = j + 2);\n\n          if (j === -1) {\n            j = s.indexOf('\"', i);\n\n            if (j !== -1) {\n              handleWarning('attribute value quote missmatch');\n              skipAttr = true;\n            }\n          }\n        } else {\n          handleWarning('missing attribute value quotes');\n          skipAttr = true; // skip to next space\n\n          for (j = j + 1; j < l; j++) {\n            w = s.charCodeAt(j + 1);\n\n            if (w === 32 || w < 14 && w > 8) {\n              // WHITESPACE\n              break;\n            }\n          }\n        }\n\n        if (j === -1) {\n          handleWarning('missing closing quotes');\n          j = l;\n          skipAttr = true;\n        }\n\n        if (!skipAttr) {\n          value = s.substring(i, j);\n        }\n\n        i = j; // ensure SPACE follows attribute\n        // skip illegal content otherwise\n        // example a=\"b\"c\n\n        for (; j + 1 < l; j++) {\n          w = s.charCodeAt(j + 1);\n\n          if (w === 32 || w < 14 && w > 8) {\n            // WHITESPACE\n            break;\n          } // FIRST ILLEGAL CHAR\n\n\n          if (i === j) {\n            handleWarning('illegal character after attribute end');\n            skipAttr = true;\n          }\n        } // advance cursor to next attribute\n\n\n        i = j + 1;\n\n        if (skipAttr) {\n          continue parseAttr;\n        } // check attribute re-declaration\n\n\n        if (name in seenAttrs) {\n          handleWarning('attribute <' + name + '> already defined');\n          continue;\n        }\n\n        seenAttrs[name] = true;\n\n        if (!isNamespace) {\n          attrs[name] = value;\n          continue;\n        } // try to extract namespace information\n\n\n        if (maybeNS) {\n          newalias = name === 'xmlns' ? 'xmlns' : name.charCodeAt(0) === 120 && name.substr(0, 6) === 'xmlns:' ? name.substr(6) : null; // handle xmlns(:alias) assignment\n\n          if (newalias !== null) {\n            nsUri = decodeEntities(value);\n            nsUriPrefix = uriPrefix(newalias);\n            alias = nsUriToPrefix[nsUri];\n\n            if (!alias) {\n              // no prefix defined or prefix collision\n              if (newalias === 'xmlns' || nsUriPrefix in nsMatrix && nsMatrix[nsUriPrefix] !== nsUri) {\n                // alocate free ns prefix\n                do {\n                  alias = 'ns' + anonymousNsCount++;\n                } while (typeof nsMatrix[alias] !== 'undefined');\n              } else {\n                alias = newalias;\n              }\n\n              nsUriToPrefix[nsUri] = alias;\n            }\n\n            if (nsMatrix[newalias] !== alias) {\n              if (!hasNewMatrix) {\n                nsMatrix = cloneNsMatrix(nsMatrix);\n                hasNewMatrix = true;\n              }\n\n              nsMatrix[newalias] = alias;\n\n              if (newalias === 'xmlns') {\n                nsMatrix[uriPrefix(alias)] = nsUri;\n                defaultAlias = alias;\n              }\n\n              nsMatrix[nsUriPrefix] = nsUri;\n            } // expose xmlns(:asd)=\"...\" in attributes\n\n\n            attrs[name] = value;\n            continue;\n          } // collect attributes until all namespace\n          // declarations are processed\n\n\n          attrList.push(name, value);\n          continue;\n        }\n        /** end if (maybeNs) */\n        // handle attributes on element without\n        // namespace declarations\n\n\n        w = name.indexOf(':');\n\n        if (w === -1) {\n          attrs[name] = value;\n          continue;\n        } // normalize ns attribute name\n\n\n        if (!(nsName = nsMatrix[name.substring(0, w)])) {\n          handleWarning(missingNamespaceForPrefix(name.substring(0, w)));\n          continue;\n        }\n\n        name = defaultAlias === nsName ? name.substr(w + 1) : nsName + name.substr(w); // end: normalize ns attribute name\n        // normalize xsi:type ns attribute value\n\n        if (name === XSI_TYPE) {\n          w = value.indexOf(':');\n\n          if (w !== -1) {\n            nsName = value.substring(0, w); // handle default prefixes, i.e. xs:String gracefully\n\n            nsName = nsMatrix[nsName] || nsName;\n            value = nsName + value.substring(w);\n          } else {\n            value = defaultAlias + ':' + value;\n          }\n        } // end: normalize xsi:type ns attribute value\n\n\n        attrs[name] = value;\n      } // handle deferred, possibly namespaced attributes\n\n\n      if (maybeNS) {\n        // normalize captured attributes\n        for (i = 0, l = attrList.length; i < l; i++) {\n          name = attrList[i++];\n          value = attrList[i];\n          w = name.indexOf(':');\n\n          if (w !== -1) {\n            // normalize ns attribute name\n            if (!(nsName = nsMatrix[name.substring(0, w)])) {\n              handleWarning(missingNamespaceForPrefix(name.substring(0, w)));\n              continue;\n            }\n\n            name = defaultAlias === nsName ? name.substr(w + 1) : nsName + name.substr(w); // end: normalize ns attribute name\n            // normalize xsi:type ns attribute value\n\n            if (name === XSI_TYPE) {\n              w = value.indexOf(':');\n\n              if (w !== -1) {\n                nsName = value.substring(0, w); // handle default prefixes, i.e. xs:String gracefully\n\n                nsName = nsMatrix[nsName] || nsName;\n                value = nsName + value.substring(w);\n              } else {\n                value = defaultAlias + ':' + value;\n              }\n            } // end: normalize xsi:type ns attribute value\n\n          }\n\n          attrs[name] = value;\n        } // end: normalize captured attributes\n\n      }\n\n      return cachedAttrs = attrs;\n    }\n    /**\n     * Extract the parse context { line, column, part }\n     * from the current parser position.\n     *\n     * @return {Object} parse context\n     */\n\n\n    function getParseContext() {\n      var splitsRe = /(\\r\\n|\\r|\\n)/g;\n      var line = 0;\n      var column = 0;\n      var startOfLine = 0;\n      var endOfLine = j;\n      var match;\n      var data;\n\n      while (i >= startOfLine) {\n        match = splitsRe.exec(xml);\n\n        if (!match) {\n          break;\n        } // end of line = (break idx + break chars)\n\n\n        endOfLine = match[0].length + match.index;\n\n        if (endOfLine > i) {\n          break;\n        } // advance to next line\n\n\n        line += 1;\n        startOfLine = endOfLine;\n      } // EOF errors\n\n\n      if (i == -1) {\n        column = endOfLine;\n        data = xml.substring(j);\n      } else // start errors\n        if (j === 0) {\n          console.log(i - startOfLine);\n          data = xml.substring(j, i);\n        } // other errors\n        else {\n            column = i - startOfLine;\n            data = j == -1 ? xml.substring(i) : xml.substring(i, j + 1);\n          }\n\n      return {\n        'data': data,\n        'line': line,\n        'column': column\n      };\n    }\n\n    getContext = getParseContext;\n\n    if (proxy) {\n      elementProxy = Object.create({}, {\n        'name': getter(function () {\n          return elementName;\n        }),\n        'originalName': getter(function () {\n          return _elementName;\n        }),\n        'attrs': getter(getAttrs),\n        'ns': getter(function () {\n          return nsMatrix;\n        })\n      });\n    } // actual parse logic\n\n\n    while (j !== -1) {\n      if (xml.charCodeAt(j) === 60) {\n        // \"<\"\n        i = j;\n      } else {\n        i = xml.indexOf('<', j);\n      } // parse end\n\n\n      if (i === -1) {\n        if (nodeStack.length) {\n          return handleError('unexpected end of file');\n        }\n\n        if (j === 0) {\n          return handleError('missing start tag');\n        }\n\n        if (j < xml.length) {\n          if (xml.substring(j).trim()) {\n            handleWarning(NON_WHITESPACE_OUTSIDE_ROOT_NODE);\n          }\n        }\n\n        return;\n      } // parse text\n\n\n      if (j !== i) {\n        if (nodeStack.length) {\n          if (onText) {\n            onText(xml.substring(j, i), decodeEntities, getContext);\n\n            if (parseStop) {\n              return;\n            }\n          }\n        } else {\n          if (xml.substring(j, i).trim()) {\n            handleWarning(NON_WHITESPACE_OUTSIDE_ROOT_NODE);\n\n            if (parseStop) {\n              return;\n            }\n          }\n        }\n      }\n\n      w = xml.charCodeAt(i + 1); // parse comments + CDATA\n\n      if (w === 33) {\n        // \"!\"\n        w = xml.charCodeAt(i + 2);\n\n        if (w === 91 && xml.substr(i + 3, 6) === 'CDATA[') {\n          // 91 == \"[\"\n          j = xml.indexOf(']]>', i);\n\n          if (j === -1) {\n            return handleError('unclosed cdata');\n          }\n\n          if (onCDATA) {\n            onCDATA(xml.substring(i + 9, j), getContext);\n\n            if (parseStop) {\n              return;\n            }\n          }\n\n          j += 3;\n          continue;\n        }\n\n        if (w === 45 && xml.charCodeAt(i + 3) === 45) {\n          // 45 == \"-\"\n          j = xml.indexOf('-->', i);\n\n          if (j === -1) {\n            return handleError('unclosed comment');\n          }\n\n          if (onComment) {\n            onComment(xml.substring(i + 4, j), decodeEntities, getContext);\n\n            if (parseStop) {\n              return;\n            }\n          }\n\n          j += 3;\n          continue;\n        }\n\n        j = xml.indexOf('>', i + 1);\n\n        if (j === -1) {\n          return handleError('unclosed tag');\n        }\n\n        if (onAttention) {\n          onAttention(xml.substring(i, j + 1), decodeEntities, getContext);\n\n          if (parseStop) {\n            return;\n          }\n        }\n\n        j += 1;\n        continue;\n      }\n\n      if (w === 63) {\n        // \"?\"\n        j = xml.indexOf('?>', i);\n\n        if (j === -1) {\n          return handleError('unclosed question');\n        }\n\n        if (onQuestion) {\n          onQuestion(xml.substring(i, j + 2), getContext);\n\n          if (parseStop) {\n            return;\n          }\n        }\n\n        j += 2;\n        continue;\n      }\n\n      j = xml.indexOf('>', i + 1);\n\n      if (j == -1) {\n        return handleError('unclosed tag');\n      } // don't process attributes;\n      // there are none\n\n\n      cachedAttrs = {}; // if (xml.charCodeAt(i+1) === 47) { // </...\n\n      if (w === 47) {\n        // </...\n        tagStart = false;\n        tagEnd = true;\n\n        if (!nodeStack.length) {\n          return handleError('missing open tag');\n        } // verify open <-> close tag match\n\n\n        x = elementName = nodeStack.pop();\n        q = i + 2 + x.length;\n\n        if (xml.substring(i + 2, q) !== x) {\n          return handleError('closing tag mismatch');\n        } // verify chars in close tag\n\n\n        for (; q < j; q++) {\n          w = xml.charCodeAt(q);\n\n          if (w === 32 || w > 8 && w < 14) {\n            // \\f\\n\\r\\t\\v space\n            continue;\n          }\n\n          return handleError('close tag');\n        }\n      } else {\n        if (xml.charCodeAt(j - 1) === 47) {\n          // .../>\n          x = elementName = xml.substring(i + 1, j - 1);\n          tagStart = true;\n          tagEnd = true;\n        } else {\n          x = elementName = xml.substring(i + 1, j);\n          tagStart = true;\n          tagEnd = false;\n        }\n\n        if (!(w > 96 && w < 123 || w > 64 && w < 91 || w === 95 || w === 58)) {\n          // char 95\"_\" 58\":\"\n          return handleError('illegal first char nodeName');\n        }\n\n        for (q = 1, y = x.length; q < y; q++) {\n          w = x.charCodeAt(q);\n\n          if (w > 96 && w < 123 || w > 64 && w < 91 || w > 47 && w < 59 || w === 45 || w === 95 || w == 46) {\n            continue;\n          }\n\n          if (w === 32 || w < 14 && w > 8) {\n            // \\f\\n\\r\\t\\v space\n            elementName = x.substring(0, q); // maybe there are attributes\n\n            cachedAttrs = null;\n            break;\n          }\n\n          return handleError('invalid nodeName');\n        }\n\n        if (!tagEnd) {\n          nodeStack.push(elementName);\n        }\n      }\n\n      if (isNamespace) {\n        _nsMatrix = nsMatrix;\n\n        if (tagStart) {\n          // remember old namespace\n          // unless we're self-closing\n          if (!tagEnd) {\n            nsMatrixStack.push(_nsMatrix);\n          }\n\n          if (cachedAttrs === null) {\n            // quick check, whether there may be namespace\n            // declarations on the node; if that is the case\n            // we need to eagerly parse the node attributes\n            if (maybeNS = x.indexOf('xmlns', q) !== -1) {\n              attrsStart = q;\n              attrsString = x;\n              getAttrs();\n              maybeNS = false;\n            }\n          }\n        }\n\n        _elementName = elementName;\n        w = elementName.indexOf(':');\n\n        if (w !== -1) {\n          xmlns = nsMatrix[elementName.substring(0, w)]; // prefix given; namespace must exist\n\n          if (!xmlns) {\n            return handleError('missing namespace on <' + _elementName + '>');\n          }\n\n          elementName = elementName.substr(w + 1);\n        } else {\n          xmlns = nsMatrix['xmlns']; // if no default namespace is defined,\n          // we'll import the element as anonymous.\n          //\n          // it is up to users to correct that to the document defined\n          // targetNamespace, or whatever their undersanding of the\n          // XML spec mandates.\n        } // adjust namespace prefixs as configured\n\n\n        if (xmlns) {\n          elementName = xmlns + ':' + elementName;\n        }\n      }\n\n      if (tagStart) {\n        attrsStart = q;\n        attrsString = x;\n\n        if (onOpenTag) {\n          if (proxy) {\n            onOpenTag(elementProxy, decodeEntities, tagEnd, getContext);\n          } else {\n            onOpenTag(elementName, getAttrs, decodeEntities, tagEnd, getContext);\n          }\n\n          if (parseStop) {\n            return;\n          }\n        }\n      }\n\n      if (tagEnd) {\n        if (onCloseTag) {\n          onCloseTag(proxy ? elementProxy : elementName, decodeEntities, tagStart, getContext);\n\n          if (parseStop) {\n            return;\n          }\n        } // restore old namespace\n\n\n        if (isNamespace) {\n          if (!tagStart) {\n            nsMatrix = nsMatrixStack.pop();\n          } else {\n            nsMatrix = _nsMatrix;\n          }\n        }\n      }\n\n      j += 1;\n    }\n  }\n  /** end parse */\n\n}\n\nfunction hasLowerCaseAlias(pkg) {\n  return pkg.xml && pkg.xml.tagAlias === 'lowerCase';\n}\nvar DEFAULT_NS_MAP = {\n  'xsi': 'http://www.w3.org/2001/XMLSchema-instance'\n};\nvar XSI_TYPE$1 = 'xsi:type';\n\nfunction serializeFormat(element) {\n  return element.xml && element.xml.serialize;\n}\n\nfunction serializeAsType(element) {\n  return serializeFormat(element) === XSI_TYPE$1;\n}\nfunction serializeAsProperty(element) {\n  return serializeFormat(element) === 'property';\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nfunction aliasToName(aliasNs, pkg) {\n  if (!hasLowerCaseAlias(pkg)) {\n    return aliasNs.name;\n  }\n\n  return aliasNs.prefix + ':' + capitalize(aliasNs.localName);\n}\n\nfunction prefixedToName(nameNs, pkg) {\n  var name = nameNs.name,\n      localName = nameNs.localName;\n  var typePrefix = pkg.xml && pkg.xml.typePrefix;\n\n  if (typePrefix && localName.indexOf(typePrefix) === 0) {\n    return nameNs.prefix + ':' + localName.slice(typePrefix.length);\n  } else {\n    return name;\n  }\n}\n\nfunction normalizeXsiTypeName(name, model) {\n  var nameNs = parseName(name);\n  var pkg = model.getPackage(nameNs.prefix);\n  return prefixedToName(nameNs, pkg);\n}\n\nfunction error$1(message) {\n  return new Error(message);\n}\n/**\n * Get the moddle descriptor for a given instance or type.\n *\n * @param  {ModdleElement|Function} element\n *\n * @return {Object} the moddle descriptor\n */\n\n\nfunction getModdleDescriptor(element) {\n  return element.$descriptor;\n}\n\nfunction defer(fn) {\n  setTimeout(fn, 0);\n}\n/**\n * A parse context.\n *\n * @class\n *\n * @param {Object} options\n * @param {ElementHandler} options.rootHandler the root handler for parsing a document\n * @param {boolean} [options.lax=false] whether or not to ignore invalid elements\n */\n\n\nfunction Context(options) {\n  /**\n   * @property {ElementHandler} rootHandler\n   */\n\n  /**\n   * @property {Boolean} lax\n   */\n  assign(this, options);\n  this.elementsById = {};\n  this.references = [];\n  this.warnings = [];\n  /**\n   * Add an unresolved reference.\n   *\n   * @param {Object} reference\n   */\n\n  this.addReference = function (reference) {\n    this.references.push(reference);\n  };\n  /**\n   * Add a processed element.\n   *\n   * @param {ModdleElement} element\n   */\n\n\n  this.addElement = function (element) {\n    if (!element) {\n      throw error$1('expected element');\n    }\n\n    var elementsById = this.elementsById;\n    var descriptor = getModdleDescriptor(element);\n    var idProperty = descriptor.idProperty,\n        id;\n\n    if (idProperty) {\n      id = element.get(idProperty.name);\n\n      if (id) {\n        // for QName validation as per http://www.w3.org/TR/REC-xml/#NT-NameChar\n        if (!/^([a-z][\\w-.]*:)?[a-z_][\\w-.]*$/i.test(id)) {\n          throw new Error('illegal ID <' + id + '>');\n        }\n\n        if (elementsById[id]) {\n          throw error$1('duplicate ID <' + id + '>');\n        }\n\n        elementsById[id] = element;\n      }\n    }\n  };\n  /**\n   * Add an import warning.\n   *\n   * @param {Object} warning\n   * @param {String} warning.message\n   * @param {Error} [warning.error]\n   */\n\n\n  this.addWarning = function (warning) {\n    this.warnings.push(warning);\n  };\n}\n\nfunction BaseHandler() {}\n\nBaseHandler.prototype.handleEnd = function () {};\n\nBaseHandler.prototype.handleText = function () {};\n\nBaseHandler.prototype.handleNode = function () {};\n/**\n * A simple pass through handler that does nothing except for\n * ignoring all input it receives.\n *\n * This is used to ignore unknown elements and\n * attributes.\n */\n\n\nfunction NoopHandler() {}\n\nNoopHandler.prototype = Object.create(BaseHandler.prototype);\n\nNoopHandler.prototype.handleNode = function () {\n  return this;\n};\n\nfunction BodyHandler() {}\n\nBodyHandler.prototype = Object.create(BaseHandler.prototype);\n\nBodyHandler.prototype.handleText = function (text) {\n  this.body = (this.body || '') + text;\n};\n\nfunction ReferenceHandler(property, context) {\n  this.property = property;\n  this.context = context;\n}\n\nReferenceHandler.prototype = Object.create(BodyHandler.prototype);\n\nReferenceHandler.prototype.handleNode = function (node) {\n  if (this.element) {\n    throw error$1('expected no sub nodes');\n  } else {\n    this.element = this.createReference(node);\n  }\n\n  return this;\n};\n\nReferenceHandler.prototype.handleEnd = function () {\n  this.element.id = this.body;\n};\n\nReferenceHandler.prototype.createReference = function (node) {\n  return {\n    property: this.property.ns.name,\n    id: ''\n  };\n};\n\nfunction ValueHandler(propertyDesc, element) {\n  this.element = element;\n  this.propertyDesc = propertyDesc;\n}\n\nValueHandler.prototype = Object.create(BodyHandler.prototype);\n\nValueHandler.prototype.handleEnd = function () {\n  var value = this.body || '',\n      element = this.element,\n      propertyDesc = this.propertyDesc;\n  value = coerceType(propertyDesc.type, value);\n\n  if (propertyDesc.isMany) {\n    element.get(propertyDesc.name).push(value);\n  } else {\n    element.set(propertyDesc.name, value);\n  }\n};\n\nfunction BaseElementHandler() {}\n\nBaseElementHandler.prototype = Object.create(BodyHandler.prototype);\n\nBaseElementHandler.prototype.handleNode = function (node) {\n  var parser = this,\n      element = this.element;\n\n  if (!element) {\n    element = this.element = this.createElement(node);\n    this.context.addElement(element);\n  } else {\n    parser = this.handleChild(node);\n  }\n\n  return parser;\n};\n/**\n * @class Reader.ElementHandler\n *\n */\n\n\nfunction ElementHandler(model, typeName, context) {\n  this.model = model;\n  this.type = model.getType(typeName);\n  this.context = context;\n}\nElementHandler.prototype = Object.create(BaseElementHandler.prototype);\n\nElementHandler.prototype.addReference = function (reference) {\n  this.context.addReference(reference);\n};\n\nElementHandler.prototype.handleText = function (text) {\n  var element = this.element,\n      descriptor = getModdleDescriptor(element),\n      bodyProperty = descriptor.bodyProperty;\n\n  if (!bodyProperty) {\n    throw error$1('unexpected body text <' + text + '>');\n  }\n\n  BodyHandler.prototype.handleText.call(this, text);\n};\n\nElementHandler.prototype.handleEnd = function () {\n  var value = this.body,\n      element = this.element,\n      descriptor = getModdleDescriptor(element),\n      bodyProperty = descriptor.bodyProperty;\n\n  if (bodyProperty && value !== undefined) {\n    value = coerceType(bodyProperty.type, value);\n    element.set(bodyProperty.name, value);\n  }\n};\n/**\n * Create an instance of the model from the given node.\n *\n * @param  {Element} node the xml node\n */\n\n\nElementHandler.prototype.createElement = function (node) {\n  var attributes = node.attributes,\n      Type = this.type,\n      descriptor = getModdleDescriptor(Type),\n      context = this.context,\n      instance = new Type({}),\n      model = this.model,\n      propNameNs;\n  forEach(attributes, function (value, name) {\n    var prop = descriptor.propertiesByName[name],\n        values;\n\n    if (prop && prop.isReference) {\n      if (!prop.isMany) {\n        context.addReference({\n          element: instance,\n          property: prop.ns.name,\n          id: value\n        });\n      } else {\n        // IDREFS: parse references as whitespace-separated list\n        values = value.split(' ');\n        forEach(values, function (v) {\n          context.addReference({\n            element: instance,\n            property: prop.ns.name,\n            id: v\n          });\n        });\n      }\n    } else {\n      if (prop) {\n        value = coerceType(prop.type, value);\n      } else if (name !== 'xmlns') {\n        propNameNs = parseName(name, descriptor.ns.prefix); // check whether attribute is defined in a well-known namespace\n        // if that is the case we emit a warning to indicate potential misuse\n\n        if (model.getPackage(propNameNs.prefix)) {\n          context.addWarning({\n            message: 'unknown attribute <' + name + '>',\n            element: instance,\n            property: name,\n            value: value\n          });\n        }\n      }\n\n      instance.set(name, value);\n    }\n  });\n  return instance;\n};\n\nElementHandler.prototype.getPropertyForNode = function (node) {\n  var name = node.name;\n  var nameNs = parseName(name);\n  var type = this.type,\n      model = this.model,\n      descriptor = getModdleDescriptor(type);\n  var propertyName = nameNs.name,\n      property = descriptor.propertiesByName[propertyName],\n      elementTypeName,\n      elementType; // search for properties by name first\n\n  if (property) {\n    if (serializeAsType(property)) {\n      elementTypeName = node.attributes[XSI_TYPE$1]; // xsi type is optional, if it does not exists the\n      // default type is assumed\n\n      if (elementTypeName) {\n        // take possible type prefixes from XML\n        // into account, i.e.: xsi:type=\"t{ActualType}\"\n        elementTypeName = normalizeXsiTypeName(elementTypeName, model);\n        elementType = model.getType(elementTypeName);\n        return assign({}, property, {\n          effectiveType: getModdleDescriptor(elementType).name\n        });\n      }\n    } // search for properties by name first\n\n\n    return property;\n  }\n\n  var pkg = model.getPackage(nameNs.prefix);\n\n  if (pkg) {\n    elementTypeName = aliasToName(nameNs, pkg);\n    elementType = model.getType(elementTypeName); // search for collection members later\n\n    property = find(descriptor.properties, function (p) {\n      return !p.isVirtual && !p.isReference && !p.isAttribute && elementType.hasType(p.type);\n    });\n\n    if (property) {\n      return assign({}, property, {\n        effectiveType: getModdleDescriptor(elementType).name\n      });\n    }\n  } else {\n    // parse unknown element (maybe extension)\n    property = find(descriptor.properties, function (p) {\n      return !p.isReference && !p.isAttribute && p.type === 'Element';\n    });\n\n    if (property) {\n      return property;\n    }\n  }\n\n  throw error$1('unrecognized element <' + nameNs.name + '>');\n};\n\nElementHandler.prototype.toString = function () {\n  return 'ElementDescriptor[' + getModdleDescriptor(this.type).name + ']';\n};\n\nElementHandler.prototype.valueHandler = function (propertyDesc, element) {\n  return new ValueHandler(propertyDesc, element);\n};\n\nElementHandler.prototype.referenceHandler = function (propertyDesc) {\n  return new ReferenceHandler(propertyDesc, this.context);\n};\n\nElementHandler.prototype.handler = function (type) {\n  if (type === 'Element') {\n    return new GenericElementHandler(this.model, type, this.context);\n  } else {\n    return new ElementHandler(this.model, type, this.context);\n  }\n};\n/**\n * Handle the child element parsing\n *\n * @param  {Element} node the xml node\n */\n\n\nElementHandler.prototype.handleChild = function (node) {\n  var propertyDesc, type, element, childHandler;\n  propertyDesc = this.getPropertyForNode(node);\n  element = this.element;\n  type = propertyDesc.effectiveType || propertyDesc.type;\n\n  if (isSimple(type)) {\n    return this.valueHandler(propertyDesc, element);\n  }\n\n  if (propertyDesc.isReference) {\n    childHandler = this.referenceHandler(propertyDesc).handleNode(node);\n  } else {\n    childHandler = this.handler(type).handleNode(node);\n  }\n\n  var newElement = childHandler.element; // child handles may decide to skip elements\n  // by not returning anything\n\n  if (newElement !== undefined) {\n    if (propertyDesc.isMany) {\n      element.get(propertyDesc.name).push(newElement);\n    } else {\n      element.set(propertyDesc.name, newElement);\n    }\n\n    if (propertyDesc.isReference) {\n      assign(newElement, {\n        element: element\n      });\n      this.context.addReference(newElement);\n    } else {\n      // establish child -> parent relationship\n      newElement.$parent = element;\n    }\n  }\n\n  return childHandler;\n};\n/**\n * An element handler that performs special validation\n * to ensure the node it gets initialized with matches\n * the handlers type (namespace wise).\n *\n * @param {Moddle} model\n * @param {String} typeName\n * @param {Context} context\n */\n\n\nfunction RootElementHandler(model, typeName, context) {\n  ElementHandler.call(this, model, typeName, context);\n}\n\nRootElementHandler.prototype = Object.create(ElementHandler.prototype);\n\nRootElementHandler.prototype.createElement = function (node) {\n  var name = node.name,\n      nameNs = parseName(name),\n      model = this.model,\n      type = this.type,\n      pkg = model.getPackage(nameNs.prefix),\n      typeName = pkg && aliasToName(nameNs, pkg) || name; // verify the correct namespace if we parse\n  // the first element in the handler tree\n  //\n  // this ensures we don't mistakenly import wrong namespace elements\n\n  if (!type.hasType(typeName)) {\n    throw error$1('unexpected element <' + node.originalName + '>');\n  }\n\n  return ElementHandler.prototype.createElement.call(this, node);\n};\n\nfunction GenericElementHandler(model, typeName, context) {\n  this.model = model;\n  this.context = context;\n}\n\nGenericElementHandler.prototype = Object.create(BaseElementHandler.prototype);\n\nGenericElementHandler.prototype.createElement = function (node) {\n  var name = node.name,\n      ns = parseName(name),\n      prefix = ns.prefix,\n      uri = node.ns[prefix + '$uri'],\n      attributes = node.attributes;\n  return this.model.createAny(name, uri, attributes);\n};\n\nGenericElementHandler.prototype.handleChild = function (node) {\n  var handler = new GenericElementHandler(this.model, 'Element', this.context).handleNode(node),\n      element = this.element;\n  var newElement = handler.element,\n      children;\n\n  if (newElement !== undefined) {\n    children = element.$children = element.$children || [];\n    children.push(newElement); // establish child -> parent relationship\n\n    newElement.$parent = element;\n  }\n\n  return handler;\n};\n\nGenericElementHandler.prototype.handleEnd = function () {\n  if (this.body) {\n    this.element.$body = this.body;\n  }\n};\n/**\n * A reader for a meta-model\n *\n * @param {Object} options\n * @param {Model} options.model used to read xml files\n * @param {Boolean} options.lax whether to make parse errors warnings\n */\n\n\nfunction Reader(options) {\n  if (options instanceof Moddle) {\n    options = {\n      model: options\n    };\n  }\n\n  assign(this, {\n    lax: false\n  }, options);\n}\n/**\n * Parse the given XML into a moddle document tree.\n *\n * @param {String} xml\n * @param {ElementHandler|Object} options or rootHandler\n * @param  {Function} done\n */\n\nReader.prototype.fromXML = function (xml, options, done) {\n  var rootHandler = options.rootHandler;\n\n  if (options instanceof ElementHandler) {\n    // root handler passed via (xml, { rootHandler: ElementHandler }, ...)\n    rootHandler = options;\n    options = {};\n  } else {\n    if (typeof options === 'string') {\n      // rootHandler passed via (xml, 'someString', ...)\n      rootHandler = this.handler(options);\n      options = {};\n    } else if (typeof rootHandler === 'string') {\n      // rootHandler passed via (xml, { rootHandler: 'someString' }, ...)\n      rootHandler = this.handler(rootHandler);\n    }\n  }\n\n  var model = this.model,\n      lax = this.lax;\n  var context = new Context(assign({}, options, {\n    rootHandler: rootHandler\n  })),\n      parser = new Parser({\n    proxy: true\n  }),\n      stack = createStack();\n  rootHandler.context = context; // push root handler\n\n  stack.push(rootHandler);\n  /**\n   * Handle error.\n   *\n   * @param  {Error} err\n   * @param  {Function} getContext\n   * @param  {boolean} lax\n   *\n   * @return {boolean} true if handled\n   */\n\n  function handleError(err, getContext, lax) {\n    var ctx = getContext();\n    var line = ctx.line,\n        column = ctx.column,\n        data = ctx.data; // we receive the full context data here,\n    // for elements trim down the information\n    // to the tag name, only\n\n    if (data.charAt(0) === '<' && data.indexOf(' ') !== -1) {\n      data = data.slice(0, data.indexOf(' ')) + '>';\n    }\n\n    var message = 'unparsable content ' + (data ? data + ' ' : '') + 'detected\\n\\t' + 'line: ' + line + '\\n\\t' + 'column: ' + column + '\\n\\t' + 'nested error: ' + err.message;\n\n    if (lax) {\n      context.addWarning({\n        message: message,\n        error: err\n      });\n      return true;\n    } else {\n      throw error$1(message);\n    }\n  }\n\n  function handleWarning(err, getContext) {\n    // just like handling errors in <lax=true> mode\n    return handleError(err, getContext, true);\n  }\n  /**\n   * Resolve collected references on parse end.\n   */\n\n\n  function resolveReferences() {\n    var elementsById = context.elementsById;\n    var references = context.references;\n    var i, r;\n\n    for (i = 0; r = references[i]; i++) {\n      var element = r.element;\n      var reference = elementsById[r.id];\n      var property = getModdleDescriptor(element).propertiesByName[r.property];\n\n      if (!reference) {\n        context.addWarning({\n          message: 'unresolved reference <' + r.id + '>',\n          element: r.element,\n          property: r.property,\n          value: r.id\n        });\n      }\n\n      if (property.isMany) {\n        var collection = element.get(property.name),\n            idx = collection.indexOf(r); // we replace an existing place holder (idx != -1) or\n        // append to the collection instead\n\n        if (idx === -1) {\n          idx = collection.length;\n        }\n\n        if (!reference) {\n          // remove unresolvable reference\n          collection.splice(idx, 1);\n        } else {\n          // add or update reference in collection\n          collection[idx] = reference;\n        }\n      } else {\n        element.set(property.name, reference);\n      }\n    }\n  }\n\n  function handleClose() {\n    stack.pop().handleEnd();\n  }\n\n  var PREAMBLE_START_PATTERN = /^<\\?xml /i;\n  var ENCODING_PATTERN = / encoding=\"([^\"]+)\"/i;\n  var UTF_8_PATTERN = /^utf-8$/i;\n\n  function handleQuestion(question) {\n    if (!PREAMBLE_START_PATTERN.test(question)) {\n      return;\n    }\n\n    var match = ENCODING_PATTERN.exec(question);\n    var encoding = match && match[1];\n\n    if (!encoding || UTF_8_PATTERN.test(encoding)) {\n      return;\n    }\n\n    context.addWarning({\n      message: 'unsupported document encoding <' + encoding + '>, ' + 'falling back to UTF-8'\n    });\n  }\n\n  function handleOpen(node, getContext) {\n    var handler = stack.peek();\n\n    try {\n      stack.push(handler.handleNode(node));\n    } catch (err) {\n      if (handleError(err, getContext, lax)) {\n        stack.push(new NoopHandler());\n      }\n    }\n  }\n\n  function handleCData(text, getContext) {\n    try {\n      stack.peek().handleText(text);\n    } catch (err) {\n      handleWarning(err, getContext);\n    }\n  }\n\n  function handleText(text, getContext) {\n    // strip whitespace only nodes, i.e. before\n    // <!CDATA[ ... ]> sections and in between tags\n    text = text.trim();\n\n    if (!text) {\n      return;\n    }\n\n    handleCData(text, getContext);\n  }\n\n  var uriMap = model.getPackages().reduce(function (uriMap, p) {\n    uriMap[p.uri] = p.prefix;\n    return uriMap;\n  }, {});\n  parser.ns(uriMap).on('openTag', function (obj, decodeStr, selfClosing, getContext) {\n    // gracefully handle unparsable attributes (attrs=false)\n    var attrs = obj.attrs || {};\n    var decodedAttrs = Object.keys(attrs).reduce(function (d, key) {\n      var value = decodeStr(attrs[key]);\n      d[key] = value;\n      return d;\n    }, {});\n    var node = {\n      name: obj.name,\n      originalName: obj.originalName,\n      attributes: decodedAttrs,\n      ns: obj.ns\n    };\n    handleOpen(node, getContext);\n  }).on('question', handleQuestion).on('closeTag', handleClose).on('cdata', handleCData).on('text', function (text, decodeEntities, getContext) {\n    handleText(decodeEntities(text), getContext);\n  }).on('error', handleError).on('warn', handleWarning); // deferred parse XML to make loading really ascnchronous\n  // this ensures the execution environment (node or browser)\n  // is kept responsive and that certain optimization strategies\n  // can kick in\n\n  defer(function () {\n    var err;\n\n    try {\n      parser.parse(xml);\n      resolveReferences();\n    } catch (e) {\n      err = e;\n    }\n\n    var element = rootHandler.element; // handle the situation that we could not extract\n    // the desired root element from the document\n\n    if (!err && !element) {\n      err = error$1('failed to parse document as <' + rootHandler.type.$descriptor.name + '>');\n    }\n\n    done(err, err ? undefined : element, context);\n  });\n};\n\nReader.prototype.handler = function (name) {\n  return new RootElementHandler(this.model, name);\n}; // helpers //////////////////////////\n\n\nfunction createStack() {\n  var stack = [];\n  Object.defineProperty(stack, 'peek', {\n    value: function value() {\n      return this[this.length - 1];\n    }\n  });\n  return stack;\n}\n\nvar XML_PREAMBLE = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\nvar ESCAPE_ATTR_CHARS = /<|>|'|\"|&|\\n\\r|\\n/g;\nvar ESCAPE_CHARS = /<|>|&/g;\nfunction Namespaces(parent) {\n  var prefixMap = {};\n  var uriMap = {};\n  var used = {};\n  var wellknown = [];\n  var custom = []; // API\n\n  this.byUri = function (uri) {\n    return uriMap[uri] || parent && parent.byUri(uri);\n  };\n\n  this.add = function (ns, isWellknown) {\n    uriMap[ns.uri] = ns;\n\n    if (isWellknown) {\n      wellknown.push(ns);\n    } else {\n      custom.push(ns);\n    }\n\n    this.mapPrefix(ns.prefix, ns.uri);\n  };\n\n  this.uriByPrefix = function (prefix) {\n    return prefixMap[prefix || 'xmlns'];\n  };\n\n  this.mapPrefix = function (prefix, uri) {\n    prefixMap[prefix || 'xmlns'] = uri;\n  };\n\n  this.logUsed = function (ns) {\n    var uri = ns.uri;\n    used[uri] = this.byUri(uri);\n  };\n\n  this.getUsed = function (ns) {\n    function isUsed(ns) {\n      return used[ns.uri];\n    }\n\n    var allNs = [].concat(wellknown, custom);\n    return allNs.filter(isUsed);\n  };\n}\n\nfunction lower(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\nfunction nameToAlias(name, pkg) {\n  if (hasLowerCaseAlias(pkg)) {\n    return lower(name);\n  } else {\n    return name;\n  }\n}\n\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nfunction nsName(ns) {\n  if (isString(ns)) {\n    return ns;\n  } else {\n    return (ns.prefix ? ns.prefix + ':' : '') + ns.localName;\n  }\n}\n\nfunction getNsAttrs(namespaces) {\n  return map(namespaces.getUsed(), function (ns) {\n    var name = 'xmlns' + (ns.prefix ? ':' + ns.prefix : '');\n    return {\n      name: name,\n      value: ns.uri\n    };\n  });\n}\n\nfunction getElementNs(ns, descriptor) {\n  if (descriptor.isGeneric) {\n    return assign({\n      localName: descriptor.ns.localName\n    }, ns);\n  } else {\n    return assign({\n      localName: nameToAlias(descriptor.ns.localName, descriptor.$pkg)\n    }, ns);\n  }\n}\n\nfunction getPropertyNs(ns, descriptor) {\n  return assign({\n    localName: descriptor.ns.localName\n  }, ns);\n}\n\nfunction getSerializableProperties(element) {\n  var descriptor = element.$descriptor;\n  return filter(descriptor.properties, function (p) {\n    var name = p.name;\n\n    if (p.isVirtual) {\n      return false;\n    } // do not serialize defaults\n\n\n    if (!element.hasOwnProperty(name)) {\n      return false;\n    }\n\n    var value = element[name]; // do not serialize default equals\n\n    if (value === p[\"default\"]) {\n      return false;\n    } // do not serialize null properties\n\n\n    if (value === null) {\n      return false;\n    }\n\n    return p.isMany ? value.length : true;\n  });\n}\n\nvar ESCAPE_ATTR_MAP = {\n  '\\n': '#10',\n  '\\n\\r': '#10',\n  '\"': '#34',\n  '\\'': '#39',\n  '<': '#60',\n  '>': '#62',\n  '&': '#38'\n};\nvar ESCAPE_MAP = {\n  '<': 'lt',\n  '>': 'gt',\n  '&': 'amp'\n};\n\nfunction escape(str, charPattern, replaceMap) {\n  // ensure we are handling strings here\n  str = isString(str) ? str : '' + str;\n  return str.replace(charPattern, function (s) {\n    return '&' + replaceMap[s] + ';';\n  });\n}\n/**\n * Escape a string attribute to not contain any bad values (line breaks, '\"', ...)\n *\n * @param {String} str the string to escape\n * @return {String} the escaped string\n */\n\n\nfunction escapeAttr(str) {\n  return escape(str, ESCAPE_ATTR_CHARS, ESCAPE_ATTR_MAP);\n}\n\nfunction escapeBody(str) {\n  return escape(str, ESCAPE_CHARS, ESCAPE_MAP);\n}\n\nfunction filterAttributes(props) {\n  return filter(props, function (p) {\n    return p.isAttr;\n  });\n}\n\nfunction filterContained(props) {\n  return filter(props, function (p) {\n    return !p.isAttr;\n  });\n}\n\nfunction ReferenceSerializer(tagName) {\n  this.tagName = tagName;\n}\n\nReferenceSerializer.prototype.build = function (element) {\n  this.element = element;\n  return this;\n};\n\nReferenceSerializer.prototype.serializeTo = function (writer) {\n  writer.appendIndent().append('<' + this.tagName + '>' + this.element.id + '</' + this.tagName + '>').appendNewLine();\n};\n\nfunction BodySerializer() {}\n\nBodySerializer.prototype.serializeValue = BodySerializer.prototype.serializeTo = function (writer) {\n  writer.append(this.escape ? escapeBody(this.value) : this.value);\n};\n\nBodySerializer.prototype.build = function (prop, value) {\n  this.value = value;\n\n  if (prop.type === 'String' && value.search(ESCAPE_CHARS) !== -1) {\n    this.escape = true;\n  }\n\n  return this;\n};\n\nfunction ValueSerializer(tagName) {\n  this.tagName = tagName;\n}\n\ninherits(ValueSerializer, BodySerializer);\n\nValueSerializer.prototype.serializeTo = function (writer) {\n  writer.appendIndent().append('<' + this.tagName + '>');\n  this.serializeValue(writer);\n  writer.append('</' + this.tagName + '>').appendNewLine();\n};\n\nfunction ElementSerializer(parent, propertyDescriptor) {\n  this.body = [];\n  this.attrs = [];\n  this.parent = parent;\n  this.propertyDescriptor = propertyDescriptor;\n}\n\nElementSerializer.prototype.build = function (element) {\n  this.element = element;\n  var elementDescriptor = element.$descriptor,\n      propertyDescriptor = this.propertyDescriptor;\n  var otherAttrs, properties;\n  var isGeneric = elementDescriptor.isGeneric;\n\n  if (isGeneric) {\n    otherAttrs = this.parseGeneric(element);\n  } else {\n    otherAttrs = this.parseNsAttributes(element);\n  }\n\n  if (propertyDescriptor) {\n    this.ns = this.nsPropertyTagName(propertyDescriptor);\n  } else {\n    this.ns = this.nsTagName(elementDescriptor);\n  } // compute tag name\n\n\n  this.tagName = this.addTagName(this.ns);\n\n  if (!isGeneric) {\n    properties = getSerializableProperties(element);\n    this.parseAttributes(filterAttributes(properties));\n    this.parseContainments(filterContained(properties));\n  }\n\n  this.parseGenericAttributes(element, otherAttrs);\n  return this;\n};\n\nElementSerializer.prototype.nsTagName = function (descriptor) {\n  var effectiveNs = this.logNamespaceUsed(descriptor.ns);\n  return getElementNs(effectiveNs, descriptor);\n};\n\nElementSerializer.prototype.nsPropertyTagName = function (descriptor) {\n  var effectiveNs = this.logNamespaceUsed(descriptor.ns);\n  return getPropertyNs(effectiveNs, descriptor);\n};\n\nElementSerializer.prototype.isLocalNs = function (ns) {\n  return ns.uri === this.ns.uri;\n};\n/**\n * Get the actual ns attribute name for the given element.\n *\n * @param {Object} element\n * @param {Boolean} [element.inherited=false]\n *\n * @return {Object} nsName\n */\n\n\nElementSerializer.prototype.nsAttributeName = function (element) {\n  var ns;\n\n  if (isString(element)) {\n    ns = parseName(element);\n  } else {\n    ns = element.ns;\n  } // return just local name for inherited attributes\n\n\n  if (element.inherited) {\n    return {\n      localName: ns.localName\n    };\n  } // parse + log effective ns\n\n\n  var effectiveNs = this.logNamespaceUsed(ns); // LOG ACTUAL namespace use\n\n  this.getNamespaces().logUsed(effectiveNs); // strip prefix if same namespace like parent\n\n  if (this.isLocalNs(effectiveNs)) {\n    return {\n      localName: ns.localName\n    };\n  } else {\n    return assign({\n      localName: ns.localName\n    }, effectiveNs);\n  }\n};\n\nElementSerializer.prototype.parseGeneric = function (element) {\n  var self = this,\n      body = this.body;\n  var attributes = [];\n  forEach(element, function (val, key) {\n    var nonNsAttr;\n\n    if (key === '$body') {\n      body.push(new BodySerializer().build({\n        type: 'String'\n      }, val));\n    } else if (key === '$children') {\n      forEach(val, function (child) {\n        body.push(new ElementSerializer(self).build(child));\n      });\n    } else if (key.indexOf('$') !== 0) {\n      nonNsAttr = self.parseNsAttribute(element, key, val);\n\n      if (nonNsAttr) {\n        attributes.push({\n          name: key,\n          value: val\n        });\n      }\n    }\n  });\n  return attributes;\n};\n\nElementSerializer.prototype.parseNsAttribute = function (element, name, value) {\n  var model = element.$model;\n  var nameNs = parseName(name);\n  var ns; // parse xmlns:foo=\"http://foo.bar\"\n\n  if (nameNs.prefix === 'xmlns') {\n    ns = {\n      prefix: nameNs.localName,\n      uri: value\n    };\n  } // parse xmlns=\"http://foo.bar\"\n\n\n  if (!nameNs.prefix && nameNs.localName === 'xmlns') {\n    ns = {\n      uri: value\n    };\n  }\n\n  if (!ns) {\n    return {\n      name: name,\n      value: value\n    };\n  }\n\n  if (model && model.getPackage(value)) {\n    // register well known namespace\n    this.logNamespace(ns, true, true);\n  } else {\n    // log custom namespace directly as used\n    var actualNs = this.logNamespaceUsed(ns, true);\n    this.getNamespaces().logUsed(actualNs);\n  }\n};\n/**\n * Parse namespaces and return a list of left over generic attributes\n *\n * @param  {Object} element\n * @return {Array<Object>}\n */\n\n\nElementSerializer.prototype.parseNsAttributes = function (element, attrs) {\n  var self = this;\n  var genericAttrs = element.$attrs;\n  var attributes = []; // parse namespace attributes first\n  // and log them. push non namespace attributes to a list\n  // and process them later\n\n  forEach(genericAttrs, function (value, name) {\n    var nonNsAttr = self.parseNsAttribute(element, name, value);\n\n    if (nonNsAttr) {\n      attributes.push(nonNsAttr);\n    }\n  });\n  return attributes;\n};\n\nElementSerializer.prototype.parseGenericAttributes = function (element, attributes) {\n  var self = this;\n  forEach(attributes, function (attr) {\n    // do not serialize xsi:type attribute\n    // it is set manually based on the actual implementation type\n    if (attr.name === XSI_TYPE$1) {\n      return;\n    }\n\n    try {\n      self.addAttribute(self.nsAttributeName(attr.name), attr.value);\n    } catch (e) {\n      console.warn('missing namespace information for ', attr.name, '=', attr.value, 'on', element, e);\n    }\n  });\n};\n\nElementSerializer.prototype.parseContainments = function (properties) {\n  var self = this,\n      body = this.body,\n      element = this.element;\n  forEach(properties, function (p) {\n    var value = element.get(p.name),\n        isReference = p.isReference,\n        isMany = p.isMany;\n\n    if (!isMany) {\n      value = [value];\n    }\n\n    if (p.isBody) {\n      body.push(new BodySerializer().build(p, value[0]));\n    } else if (isSimple(p.type)) {\n      forEach(value, function (v) {\n        body.push(new ValueSerializer(self.addTagName(self.nsPropertyTagName(p))).build(p, v));\n      });\n    } else if (isReference) {\n      forEach(value, function (v) {\n        body.push(new ReferenceSerializer(self.addTagName(self.nsPropertyTagName(p))).build(v));\n      });\n    } else {\n      // allow serialization via type\n      // rather than element name\n      var asType = serializeAsType(p),\n          asProperty = serializeAsProperty(p);\n      forEach(value, function (v) {\n        var serializer;\n\n        if (asType) {\n          serializer = new TypeSerializer(self, p);\n        } else if (asProperty) {\n          serializer = new ElementSerializer(self, p);\n        } else {\n          serializer = new ElementSerializer(self);\n        }\n\n        body.push(serializer.build(v));\n      });\n    }\n  });\n};\n\nElementSerializer.prototype.getNamespaces = function (local) {\n  var namespaces = this.namespaces,\n      parent = this.parent,\n      parentNamespaces;\n\n  if (!namespaces) {\n    parentNamespaces = parent && parent.getNamespaces();\n\n    if (local || !parentNamespaces) {\n      this.namespaces = namespaces = new Namespaces(parentNamespaces);\n    } else {\n      namespaces = parentNamespaces;\n    }\n  }\n\n  return namespaces;\n};\n\nElementSerializer.prototype.logNamespace = function (ns, wellknown, local) {\n  var namespaces = this.getNamespaces(local);\n  var nsUri = ns.uri,\n      nsPrefix = ns.prefix;\n  var existing = namespaces.byUri(nsUri);\n\n  if (!existing) {\n    namespaces.add(ns, wellknown);\n  }\n\n  namespaces.mapPrefix(nsPrefix, nsUri);\n  return ns;\n};\n\nElementSerializer.prototype.logNamespaceUsed = function (ns, local) {\n  var element = this.element,\n      model = element.$model,\n      namespaces = this.getNamespaces(local); // ns may be\n  //\n  //   * prefix only\n  //   * prefix:uri\n  //   * localName only\n\n  var prefix = ns.prefix,\n      uri = ns.uri,\n      newPrefix,\n      idx,\n      wellknownUri; // handle anonymous namespaces (elementForm=unqualified), cf. #23\n\n  if (!prefix && !uri) {\n    return {\n      localName: ns.localName\n    };\n  }\n\n  wellknownUri = DEFAULT_NS_MAP[prefix] || model && (model.getPackage(prefix) || {}).uri;\n  uri = uri || wellknownUri || namespaces.uriByPrefix(prefix);\n\n  if (!uri) {\n    throw new Error('no namespace uri given for prefix <' + prefix + '>');\n  }\n\n  ns = namespaces.byUri(uri);\n\n  if (!ns) {\n    newPrefix = prefix;\n    idx = 1; // find a prefix that is not mapped yet\n\n    while (namespaces.uriByPrefix(newPrefix)) {\n      newPrefix = prefix + '_' + idx++;\n    }\n\n    ns = this.logNamespace({\n      prefix: newPrefix,\n      uri: uri\n    }, wellknownUri === uri);\n  }\n\n  if (prefix) {\n    namespaces.mapPrefix(prefix, uri);\n  }\n\n  return ns;\n};\n\nElementSerializer.prototype.parseAttributes = function (properties) {\n  var self = this,\n      element = this.element;\n  forEach(properties, function (p) {\n    var value = element.get(p.name);\n\n    if (p.isReference) {\n      if (!p.isMany) {\n        value = value.id;\n      } else {\n        var values = [];\n        forEach(value, function (v) {\n          values.push(v.id);\n        }); // IDREFS is a whitespace-separated list of references.\n\n        value = values.join(' ');\n      }\n    }\n\n    self.addAttribute(self.nsAttributeName(p), value);\n  });\n};\n\nElementSerializer.prototype.addTagName = function (nsTagName) {\n  var actualNs = this.logNamespaceUsed(nsTagName);\n  this.getNamespaces().logUsed(actualNs);\n  return nsName(nsTagName);\n};\n\nElementSerializer.prototype.addAttribute = function (name, value) {\n  var attrs = this.attrs;\n\n  if (isString(value)) {\n    value = escapeAttr(value);\n  }\n\n  attrs.push({\n    name: name,\n    value: value\n  });\n};\n\nElementSerializer.prototype.serializeAttributes = function (writer) {\n  var attrs = this.attrs,\n      namespaces = this.namespaces;\n\n  if (namespaces) {\n    attrs = getNsAttrs(namespaces).concat(attrs);\n  }\n\n  forEach(attrs, function (a) {\n    writer.append(' ').append(nsName(a.name)).append('=\"').append(a.value).append('\"');\n  });\n};\n\nElementSerializer.prototype.serializeTo = function (writer) {\n  var firstBody = this.body[0],\n      indent = firstBody && firstBody.constructor !== BodySerializer;\n  writer.appendIndent().append('<' + this.tagName);\n  this.serializeAttributes(writer);\n  writer.append(firstBody ? '>' : ' />');\n\n  if (firstBody) {\n    if (indent) {\n      writer.appendNewLine().indent();\n    }\n\n    forEach(this.body, function (b) {\n      b.serializeTo(writer);\n    });\n\n    if (indent) {\n      writer.unindent().appendIndent();\n    }\n\n    writer.append('</' + this.tagName + '>');\n  }\n\n  writer.appendNewLine();\n};\n/**\n * A serializer for types that handles serialization of data types\n */\n\n\nfunction TypeSerializer(parent, propertyDescriptor) {\n  ElementSerializer.call(this, parent, propertyDescriptor);\n}\n\ninherits(TypeSerializer, ElementSerializer);\n\nTypeSerializer.prototype.parseNsAttributes = function (element) {\n  // extracted attributes\n  var attributes = ElementSerializer.prototype.parseNsAttributes.call(this, element);\n  var descriptor = element.$descriptor; // only serialize xsi:type if necessary\n\n  if (descriptor.name === this.propertyDescriptor.type) {\n    return attributes;\n  }\n\n  var typeNs = this.typeNs = this.nsTagName(descriptor);\n  this.getNamespaces().logUsed(this.typeNs); // add xsi:type attribute to represent the elements\n  // actual type\n\n  var pkg = element.$model.getPackage(typeNs.uri),\n      typePrefix = pkg.xml && pkg.xml.typePrefix || '';\n  this.addAttribute(this.nsAttributeName(XSI_TYPE$1), (typeNs.prefix ? typeNs.prefix + ':' : '') + typePrefix + descriptor.ns.localName);\n  return attributes;\n};\n\nTypeSerializer.prototype.isLocalNs = function (ns) {\n  return ns.uri === (this.typeNs || this.ns).uri;\n};\n\nfunction SavingWriter() {\n  this.value = '';\n\n  this.write = function (str) {\n    this.value += str;\n  };\n}\n\nfunction FormatingWriter(out, format) {\n  var indent = [''];\n\n  this.append = function (str) {\n    out.write(str);\n    return this;\n  };\n\n  this.appendNewLine = function () {\n    if (format) {\n      out.write('\\n');\n    }\n\n    return this;\n  };\n\n  this.appendIndent = function () {\n    if (format) {\n      out.write(indent.join('  '));\n    }\n\n    return this;\n  };\n\n  this.indent = function () {\n    indent.push('');\n    return this;\n  };\n\n  this.unindent = function () {\n    indent.pop();\n    return this;\n  };\n}\n/**\n * A writer for meta-model backed document trees\n *\n * @param {Object} options output options to pass into the writer\n */\n\n\nfunction Writer(options) {\n  options = assign({\n    format: false,\n    preamble: true\n  }, options || {});\n\n  function toXML(tree, writer) {\n    var internalWriter = writer || new SavingWriter();\n    var formatingWriter = new FormatingWriter(internalWriter, options.format);\n\n    if (options.preamble) {\n      formatingWriter.append(XML_PREAMBLE);\n    }\n\n    new ElementSerializer().build(tree).serializeTo(formatingWriter);\n\n    if (!writer) {\n      return internalWriter.value;\n    }\n  }\n\n  return {\n    toXML: toXML\n  };\n}\n\n/**\n * A sub class of {@link Moddle} with support for import and export of BPMN 2.0 xml files.\n *\n * @class BpmnModdle\n * @extends Moddle\n *\n * @param {Object|Array} packages to use for instantiating the model\n * @param {Object} [options] additional options to pass over\n */\n\nfunction BpmnModdle(packages, options) {\n  Moddle.call(this, packages, options);\n}\nBpmnModdle.prototype = Object.create(Moddle.prototype);\n/**\n * Instantiates a BPMN model tree from a given xml string.\n *\n * @param {String}   xmlStr\n * @param {String}   [typeName='bpmn:Definitions'] name of the root element\n * @param {Object}   [options]  options to pass to the underlying reader\n * @param {Function} done       callback that is invoked with (err, result, parseContext)\n *                              once the import completes\n */\n\nBpmnModdle.prototype.fromXML = function (xmlStr, typeName, options, done) {\n  if (!isString(typeName)) {\n    done = options;\n    options = typeName;\n    typeName = 'bpmn:Definitions';\n  }\n\n  if (isFunction(options)) {\n    done = options;\n    options = {};\n  }\n\n  var reader = new Reader(assign({\n    model: this,\n    lax: true\n  }, options));\n  var rootHandler = reader.handler(typeName);\n  reader.fromXML(xmlStr, rootHandler, done);\n};\n/**\n * Serializes a BPMN 2.0 object tree to XML.\n *\n * @param {String}   element    the root element, typically an instance of `bpmn:Definitions`\n * @param {Object}   [options]  to pass to the underlying writer\n * @param {Function} done       callback invoked with (err, xmlStr) once the import completes\n */\n\n\nBpmnModdle.prototype.toXML = function (element, options, done) {\n  if (isFunction(options)) {\n    done = options;\n    options = {};\n  }\n\n  var writer = new Writer(options);\n  var result;\n  var err;\n\n  try {\n    result = writer.toXML(element);\n  } catch (e) {\n    err = e;\n  }\n\n  return done(err, result);\n};\n\nvar name = \"BPMN20\";\nvar uri = \"http://www.omg.org/spec/BPMN/20100524/MODEL\";\nvar associations = [\n];\nvar types = [\n\t{\n\t\tname: \"Interface\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"operations\",\n\t\t\t\ttype: \"Operation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"implementationRef\",\n\t\t\t\ttype: \"String\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Operation\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inMessageRef\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outMessageRef\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"errorRef\",\n\t\t\t\ttype: \"Error\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"implementationRef\",\n\t\t\t\ttype: \"String\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"EndPoint\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"Auditing\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"GlobalTask\",\n\t\tsuperClass: [\n\t\t\t\"CallableElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"resources\",\n\t\t\t\ttype: \"ResourceRole\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Monitoring\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"Performer\",\n\t\tsuperClass: [\n\t\t\t\"ResourceRole\"\n\t\t]\n\t},\n\t{\n\t\tname: \"Process\",\n\t\tsuperClass: [\n\t\t\t\"FlowElementsContainer\",\n\t\t\t\"CallableElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"processType\",\n\t\t\t\ttype: \"ProcessType\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isClosed\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"auditing\",\n\t\t\t\ttype: \"Auditing\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"monitoring\",\n\t\t\t\ttype: \"Monitoring\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"properties\",\n\t\t\t\ttype: \"Property\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"laneSets\",\n\t\t\t\ttype: \"LaneSet\",\n\t\t\t\tisMany: true,\n\t\t\t\treplaces: \"FlowElementsContainer#laneSets\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"flowElements\",\n\t\t\t\ttype: \"FlowElement\",\n\t\t\t\tisMany: true,\n\t\t\t\treplaces: \"FlowElementsContainer#flowElements\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"artifacts\",\n\t\t\t\ttype: \"Artifact\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"resources\",\n\t\t\t\ttype: \"ResourceRole\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"correlationSubscriptions\",\n\t\t\t\ttype: \"CorrelationSubscription\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"supports\",\n\t\t\t\ttype: \"Process\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"definitionalCollaborationRef\",\n\t\t\t\ttype: \"Collaboration\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isExecutable\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"LaneSet\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"lanes\",\n\t\t\t\ttype: \"Lane\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Lane\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"partitionElementRef\",\n\t\t\t\ttype: \"BaseElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"partitionElement\",\n\t\t\t\ttype: \"BaseElement\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"flowNodeRef\",\n\t\t\t\ttype: \"FlowNode\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"childLaneSet\",\n\t\t\t\ttype: \"LaneSet\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"GlobalManualTask\",\n\t\tsuperClass: [\n\t\t\t\"GlobalTask\"\n\t\t]\n\t},\n\t{\n\t\tname: \"ManualTask\",\n\t\tsuperClass: [\n\t\t\t\"Task\"\n\t\t]\n\t},\n\t{\n\t\tname: \"UserTask\",\n\t\tsuperClass: [\n\t\t\t\"Task\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"renderings\",\n\t\t\t\ttype: \"Rendering\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"implementation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Rendering\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"HumanPerformer\",\n\t\tsuperClass: [\n\t\t\t\"Performer\"\n\t\t]\n\t},\n\t{\n\t\tname: \"PotentialOwner\",\n\t\tsuperClass: [\n\t\t\t\"HumanPerformer\"\n\t\t]\n\t},\n\t{\n\t\tname: \"GlobalUserTask\",\n\t\tsuperClass: [\n\t\t\t\"GlobalTask\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"implementation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"renderings\",\n\t\t\t\ttype: \"Rendering\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Gateway\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"FlowNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"gatewayDirection\",\n\t\t\t\ttype: \"GatewayDirection\",\n\t\t\t\t\"default\": \"Unspecified\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"EventBasedGateway\",\n\t\tsuperClass: [\n\t\t\t\"Gateway\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"instantiate\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"eventGatewayType\",\n\t\t\t\ttype: \"EventBasedGatewayType\",\n\t\t\t\tisAttr: true,\n\t\t\t\t\"default\": \"Exclusive\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ComplexGateway\",\n\t\tsuperClass: [\n\t\t\t\"Gateway\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"activationCondition\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"default\",\n\t\t\t\ttype: \"SequenceFlow\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ExclusiveGateway\",\n\t\tsuperClass: [\n\t\t\t\"Gateway\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"default\",\n\t\t\t\ttype: \"SequenceFlow\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"InclusiveGateway\",\n\t\tsuperClass: [\n\t\t\t\"Gateway\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"default\",\n\t\t\t\ttype: \"SequenceFlow\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ParallelGateway\",\n\t\tsuperClass: [\n\t\t\t\"Gateway\"\n\t\t]\n\t},\n\t{\n\t\tname: \"RootElement\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"Relationship\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"type\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"direction\",\n\t\t\t\ttype: \"RelationshipDirection\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"source\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"Element\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"target\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"Element\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"BaseElement\",\n\t\tisAbstract: true,\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"id\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\",\n\t\t\t\tisId: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"documentation\",\n\t\t\t\ttype: \"Documentation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"extensionDefinitions\",\n\t\t\t\ttype: \"ExtensionDefinition\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"extensionElements\",\n\t\t\t\ttype: \"ExtensionElements\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Extension\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"mustUnderstand\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"definition\",\n\t\t\t\ttype: \"ExtensionDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ExtensionDefinition\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"extensionAttributeDefinitions\",\n\t\t\t\ttype: \"ExtensionAttributeDefinition\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ExtensionAttributeDefinition\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"type\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isReference\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"extensionDefinition\",\n\t\t\t\ttype: \"ExtensionDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ExtensionElements\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"valueRef\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"Element\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"values\",\n\t\t\t\ttype: \"Element\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"extensionAttributeDefinition\",\n\t\t\t\ttype: \"ExtensionAttributeDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Documentation\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"text\",\n\t\t\t\ttype: \"String\",\n\t\t\t\tisBody: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"textFormat\",\n\t\t\t\t\"default\": \"text/plain\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Event\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"FlowNode\",\n\t\t\t\"InteractionNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"properties\",\n\t\t\t\ttype: \"Property\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"IntermediateCatchEvent\",\n\t\tsuperClass: [\n\t\t\t\"CatchEvent\"\n\t\t]\n\t},\n\t{\n\t\tname: \"IntermediateThrowEvent\",\n\t\tsuperClass: [\n\t\t\t\"ThrowEvent\"\n\t\t]\n\t},\n\t{\n\t\tname: \"EndEvent\",\n\t\tsuperClass: [\n\t\t\t\"ThrowEvent\"\n\t\t]\n\t},\n\t{\n\t\tname: \"StartEvent\",\n\t\tsuperClass: [\n\t\t\t\"CatchEvent\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"isInterrupting\",\n\t\t\t\t\"default\": true,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ThrowEvent\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"Event\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"dataInputs\",\n\t\t\t\ttype: \"DataInput\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataInputAssociations\",\n\t\t\t\ttype: \"DataInputAssociation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inputSet\",\n\t\t\t\ttype: \"InputSet\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"eventDefinitions\",\n\t\t\t\ttype: \"EventDefinition\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"eventDefinitionRef\",\n\t\t\t\ttype: \"EventDefinition\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CatchEvent\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"Event\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"parallelMultiple\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\",\n\t\t\t\t\"default\": false\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataOutputs\",\n\t\t\t\ttype: \"DataOutput\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataOutputAssociations\",\n\t\t\t\ttype: \"DataOutputAssociation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputSet\",\n\t\t\t\ttype: \"OutputSet\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"eventDefinitions\",\n\t\t\t\ttype: \"EventDefinition\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"eventDefinitionRef\",\n\t\t\t\ttype: \"EventDefinition\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"BoundaryEvent\",\n\t\tsuperClass: [\n\t\t\t\"CatchEvent\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"cancelActivity\",\n\t\t\t\t\"default\": true,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"attachedToRef\",\n\t\t\t\ttype: \"Activity\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"EventDefinition\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"CancelEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t]\n\t},\n\t{\n\t\tname: \"ErrorEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"errorRef\",\n\t\t\t\ttype: \"Error\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"TerminateEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t]\n\t},\n\t{\n\t\tname: \"EscalationEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"escalationRef\",\n\t\t\t\ttype: \"Escalation\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Escalation\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"structureRef\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"escalationCode\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"CompensateEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"waitForCompletion\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\",\n\t\t\t\t\"default\": true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"activityRef\",\n\t\t\t\ttype: \"Activity\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"TimerEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"timeDate\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"timeCycle\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"timeDuration\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"LinkEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"target\",\n\t\t\t\ttype: \"LinkEventDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"source\",\n\t\t\t\ttype: \"LinkEventDefinition\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"MessageEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"messageRef\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"operationRef\",\n\t\t\t\ttype: \"Operation\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ConditionalEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"condition\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"SignalEventDefinition\",\n\t\tsuperClass: [\n\t\t\t\"EventDefinition\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"signalRef\",\n\t\t\t\ttype: \"Signal\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Signal\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"structureRef\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ImplicitThrowEvent\",\n\t\tsuperClass: [\n\t\t\t\"ThrowEvent\"\n\t\t]\n\t},\n\t{\n\t\tname: \"DataState\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ItemAwareElement\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"itemSubjectRef\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataState\",\n\t\t\t\ttype: \"DataState\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataAssociation\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"assignment\",\n\t\t\t\ttype: \"Assignment\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"sourceRef\",\n\t\t\t\ttype: \"ItemAwareElement\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"targetRef\",\n\t\t\t\ttype: \"ItemAwareElement\",\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"transformation\",\n\t\t\t\ttype: \"FormalExpression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"property\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataInput\",\n\t\tsuperClass: [\n\t\t\t\"ItemAwareElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isCollection\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inputSetRef\",\n\t\t\t\ttype: \"InputSet\",\n\t\t\t\tisVirtual: true,\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inputSetWithOptional\",\n\t\t\t\ttype: \"InputSet\",\n\t\t\t\tisVirtual: true,\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inputSetWithWhileExecuting\",\n\t\t\t\ttype: \"InputSet\",\n\t\t\t\tisVirtual: true,\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataOutput\",\n\t\tsuperClass: [\n\t\t\t\"ItemAwareElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isCollection\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputSetRef\",\n\t\t\t\ttype: \"OutputSet\",\n\t\t\t\tisVirtual: true,\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputSetWithOptional\",\n\t\t\t\ttype: \"OutputSet\",\n\t\t\t\tisVirtual: true,\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputSetWithWhileExecuting\",\n\t\t\t\ttype: \"OutputSet\",\n\t\t\t\tisVirtual: true,\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"InputSet\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataInputRefs\",\n\t\t\t\ttype: \"DataInput\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"optionalInputRefs\",\n\t\t\t\ttype: \"DataInput\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"whileExecutingInputRefs\",\n\t\t\t\ttype: \"DataInput\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputSetRefs\",\n\t\t\t\ttype: \"OutputSet\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"OutputSet\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"dataOutputRefs\",\n\t\t\t\ttype: \"DataOutput\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inputSetRefs\",\n\t\t\t\ttype: \"InputSet\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"optionalOutputRefs\",\n\t\t\t\ttype: \"DataOutput\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"whileExecutingOutputRefs\",\n\t\t\t\ttype: \"DataOutput\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Property\",\n\t\tsuperClass: [\n\t\t\t\"ItemAwareElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataInputAssociation\",\n\t\tsuperClass: [\n\t\t\t\"DataAssociation\"\n\t\t]\n\t},\n\t{\n\t\tname: \"DataOutputAssociation\",\n\t\tsuperClass: [\n\t\t\t\"DataAssociation\"\n\t\t]\n\t},\n\t{\n\t\tname: \"InputOutputSpecification\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"dataInputs\",\n\t\t\t\ttype: \"DataInput\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataOutputs\",\n\t\t\t\ttype: \"DataOutput\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inputSets\",\n\t\t\t\ttype: \"InputSet\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputSets\",\n\t\t\t\ttype: \"OutputSet\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataObject\",\n\t\tsuperClass: [\n\t\t\t\"FlowElement\",\n\t\t\t\"ItemAwareElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"isCollection\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"InputOutputBinding\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"inputDataRef\",\n\t\t\t\ttype: \"InputSet\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputDataRef\",\n\t\t\t\ttype: \"OutputSet\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"operationRef\",\n\t\t\t\ttype: \"Operation\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Assignment\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"from\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"to\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataStore\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\",\n\t\t\t\"ItemAwareElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"capacity\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Integer\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isUnlimited\",\n\t\t\t\t\"default\": true,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataStoreReference\",\n\t\tsuperClass: [\n\t\t\t\"ItemAwareElement\",\n\t\t\t\"FlowElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"dataStoreRef\",\n\t\t\t\ttype: \"DataStore\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"DataObjectReference\",\n\t\tsuperClass: [\n\t\t\t\"ItemAwareElement\",\n\t\t\t\"FlowElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"dataObjectRef\",\n\t\t\t\ttype: \"DataObject\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ConversationLink\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"sourceRef\",\n\t\t\t\ttype: \"InteractionNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"targetRef\",\n\t\t\t\ttype: \"InteractionNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ConversationAssociation\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"innerConversationNodeRef\",\n\t\t\t\ttype: \"ConversationNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outerConversationNodeRef\",\n\t\t\t\ttype: \"ConversationNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CallConversation\",\n\t\tsuperClass: [\n\t\t\t\"ConversationNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"calledCollaborationRef\",\n\t\t\t\ttype: \"Collaboration\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantAssociations\",\n\t\t\t\ttype: \"ParticipantAssociation\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Conversation\",\n\t\tsuperClass: [\n\t\t\t\"ConversationNode\"\n\t\t]\n\t},\n\t{\n\t\tname: \"SubConversation\",\n\t\tsuperClass: [\n\t\t\t\"ConversationNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"conversationNodes\",\n\t\t\t\ttype: \"ConversationNode\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ConversationNode\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"InteractionNode\",\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageFlowRefs\",\n\t\t\t\ttype: \"MessageFlow\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"correlationKeys\",\n\t\t\t\ttype: \"CorrelationKey\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"GlobalConversation\",\n\t\tsuperClass: [\n\t\t\t\"Collaboration\"\n\t\t]\n\t},\n\t{\n\t\tname: \"PartnerEntity\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"PartnerRole\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CorrelationProperty\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"correlationPropertyRetrievalExpression\",\n\t\t\t\ttype: \"CorrelationPropertyRetrievalExpression\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"type\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Error\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"structureRef\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"errorCode\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CorrelationKey\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"correlationPropertyRef\",\n\t\t\t\ttype: \"CorrelationProperty\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Expression\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tisAbstract: false,\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"body\",\n\t\t\t\ttype: \"String\",\n\t\t\t\tisBody: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"FormalExpression\",\n\t\tsuperClass: [\n\t\t\t\"Expression\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"language\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"evaluatesToTypeRef\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Message\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"itemRef\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ItemDefinition\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"itemKind\",\n\t\t\t\ttype: \"ItemKind\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"structureRef\",\n\t\t\t\ttype: \"String\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isCollection\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"import\",\n\t\t\t\ttype: \"Import\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"FlowElement\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"auditing\",\n\t\t\t\ttype: \"Auditing\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"monitoring\",\n\t\t\t\ttype: \"Monitoring\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"categoryValueRef\",\n\t\t\t\ttype: \"CategoryValue\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"SequenceFlow\",\n\t\tsuperClass: [\n\t\t\t\"FlowElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"isImmediate\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"conditionExpression\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"sourceRef\",\n\t\t\t\ttype: \"FlowNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"targetRef\",\n\t\t\t\ttype: \"FlowNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"FlowElementsContainer\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"laneSets\",\n\t\t\t\ttype: \"LaneSet\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"flowElements\",\n\t\t\t\ttype: \"FlowElement\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CallableElement\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ioSpecification\",\n\t\t\t\ttype: \"InputOutputSpecification\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"property\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"supportedInterfaceRef\",\n\t\t\t\ttype: \"Interface\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ioBinding\",\n\t\t\t\ttype: \"InputOutputBinding\",\n\t\t\t\tisMany: true,\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"property\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"FlowNode\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"FlowElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"incoming\",\n\t\t\t\ttype: \"SequenceFlow\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outgoing\",\n\t\t\t\ttype: \"SequenceFlow\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"lanes\",\n\t\t\t\ttype: \"Lane\",\n\t\t\t\tisVirtual: true,\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CorrelationPropertyRetrievalExpression\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"messagePath\",\n\t\t\t\ttype: \"FormalExpression\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageRef\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CorrelationPropertyBinding\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"dataPath\",\n\t\t\t\ttype: \"FormalExpression\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"correlationPropertyRef\",\n\t\t\t\ttype: \"CorrelationProperty\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Resource\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"resourceParameters\",\n\t\t\t\ttype: \"ResourceParameter\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ResourceParameter\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isRequired\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"type\",\n\t\t\t\ttype: \"ItemDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CorrelationSubscription\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"correlationKeyRef\",\n\t\t\t\ttype: \"CorrelationKey\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"correlationPropertyBinding\",\n\t\t\t\ttype: \"CorrelationPropertyBinding\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"MessageFlow\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"sourceRef\",\n\t\t\t\ttype: \"InteractionNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"targetRef\",\n\t\t\t\ttype: \"InteractionNode\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageRef\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"MessageFlowAssociation\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"innerMessageFlowRef\",\n\t\t\t\ttype: \"MessageFlow\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outerMessageFlowRef\",\n\t\t\t\ttype: \"MessageFlow\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"InteractionNode\",\n\t\tisAbstract: true,\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"incomingConversationLinks\",\n\t\t\t\ttype: \"ConversationLink\",\n\t\t\t\tisVirtual: true,\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outgoingConversationLinks\",\n\t\t\t\ttype: \"ConversationLink\",\n\t\t\t\tisVirtual: true,\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Participant\",\n\t\tsuperClass: [\n\t\t\t\"InteractionNode\",\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"interfaceRef\",\n\t\t\t\ttype: \"Interface\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantMultiplicity\",\n\t\t\t\ttype: \"ParticipantMultiplicity\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"endPointRefs\",\n\t\t\t\ttype: \"EndPoint\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"processRef\",\n\t\t\t\ttype: \"Process\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ParticipantAssociation\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"innerParticipantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outerParticipantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ParticipantMultiplicity\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"minimum\",\n\t\t\t\t\"default\": 0,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Integer\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"maximum\",\n\t\t\t\t\"default\": 1,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Integer\"\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"Collaboration\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isClosed\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participants\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageFlows\",\n\t\t\t\ttype: \"MessageFlow\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"artifacts\",\n\t\t\t\ttype: \"Artifact\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"conversations\",\n\t\t\t\ttype: \"ConversationNode\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"conversationAssociations\",\n\t\t\t\ttype: \"ConversationAssociation\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantAssociations\",\n\t\t\t\ttype: \"ParticipantAssociation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageFlowAssociations\",\n\t\t\t\ttype: \"MessageFlowAssociation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"correlationKeys\",\n\t\t\t\ttype: \"CorrelationKey\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"choreographyRef\",\n\t\t\t\ttype: \"Choreography\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"conversationLinks\",\n\t\t\t\ttype: \"ConversationLink\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ChoreographyActivity\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"FlowNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"participantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"initiatingParticipantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"correlationKeys\",\n\t\t\t\ttype: \"CorrelationKey\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"loopType\",\n\t\t\t\ttype: \"ChoreographyLoopType\",\n\t\t\t\t\"default\": \"None\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CallChoreography\",\n\t\tsuperClass: [\n\t\t\t\"ChoreographyActivity\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"calledChoreographyRef\",\n\t\t\t\ttype: \"Choreography\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantAssociations\",\n\t\t\t\ttype: \"ParticipantAssociation\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"SubChoreography\",\n\t\tsuperClass: [\n\t\t\t\"ChoreographyActivity\",\n\t\t\t\"FlowElementsContainer\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"artifacts\",\n\t\t\t\ttype: \"Artifact\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ChoreographyTask\",\n\t\tsuperClass: [\n\t\t\t\"ChoreographyActivity\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"messageFlowRef\",\n\t\t\t\ttype: \"MessageFlow\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Choreography\",\n\t\tsuperClass: [\n\t\t\t\"Collaboration\",\n\t\t\t\"FlowElementsContainer\"\n\t\t]\n\t},\n\t{\n\t\tname: \"GlobalChoreographyTask\",\n\t\tsuperClass: [\n\t\t\t\"Choreography\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"initiatingParticipantRef\",\n\t\t\t\ttype: \"Participant\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"TextAnnotation\",\n\t\tsuperClass: [\n\t\t\t\"Artifact\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"text\",\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"textFormat\",\n\t\t\t\t\"default\": \"text/plain\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Group\",\n\t\tsuperClass: [\n\t\t\t\"Artifact\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"categoryValueRef\",\n\t\t\t\ttype: \"CategoryValue\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Association\",\n\t\tsuperClass: [\n\t\t\t\"Artifact\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"associationDirection\",\n\t\t\t\ttype: \"AssociationDirection\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"sourceRef\",\n\t\t\t\ttype: \"BaseElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"targetRef\",\n\t\t\t\ttype: \"BaseElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Category\",\n\t\tsuperClass: [\n\t\t\t\"RootElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"categoryValue\",\n\t\t\t\ttype: \"CategoryValue\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Artifact\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"CategoryValue\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"categorizedFlowElements\",\n\t\t\t\ttype: \"FlowElement\",\n\t\t\t\tisVirtual: true,\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"value\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Activity\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"FlowNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"isForCompensation\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"default\",\n\t\t\t\ttype: \"SequenceFlow\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ioSpecification\",\n\t\t\t\ttype: \"InputOutputSpecification\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"property\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"boundaryEventRefs\",\n\t\t\t\ttype: \"BoundaryEvent\",\n\t\t\t\tisMany: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"properties\",\n\t\t\t\ttype: \"Property\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataInputAssociations\",\n\t\t\t\ttype: \"DataInputAssociation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"dataOutputAssociations\",\n\t\t\t\ttype: \"DataOutputAssociation\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"startQuantity\",\n\t\t\t\t\"default\": 1,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Integer\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"resources\",\n\t\t\t\ttype: \"ResourceRole\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"completionQuantity\",\n\t\t\t\t\"default\": 1,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Integer\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"loopCharacteristics\",\n\t\t\t\ttype: \"LoopCharacteristics\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ServiceTask\",\n\t\tsuperClass: [\n\t\t\t\"Task\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"implementation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"operationRef\",\n\t\t\t\ttype: \"Operation\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"SubProcess\",\n\t\tsuperClass: [\n\t\t\t\"Activity\",\n\t\t\t\"FlowElementsContainer\",\n\t\t\t\"InteractionNode\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"triggeredByEvent\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"artifacts\",\n\t\t\t\ttype: \"Artifact\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"LoopCharacteristics\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"MultiInstanceLoopCharacteristics\",\n\t\tsuperClass: [\n\t\t\t\"LoopCharacteristics\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"isSequential\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"behavior\",\n\t\t\t\ttype: \"MultiInstanceBehavior\",\n\t\t\t\t\"default\": \"All\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"loopCardinality\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"loopDataInputRef\",\n\t\t\t\ttype: \"ItemAwareElement\",\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"loopDataOutputRef\",\n\t\t\t\ttype: \"ItemAwareElement\",\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"inputDataItem\",\n\t\t\t\ttype: \"DataInput\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"property\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"outputDataItem\",\n\t\t\t\ttype: \"DataOutput\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"property\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"complexBehaviorDefinition\",\n\t\t\t\ttype: \"ComplexBehaviorDefinition\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"completionCondition\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"oneBehaviorEventRef\",\n\t\t\t\ttype: \"EventDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"noneBehaviorEventRef\",\n\t\t\t\ttype: \"EventDefinition\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"StandardLoopCharacteristics\",\n\t\tsuperClass: [\n\t\t\t\"LoopCharacteristics\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"testBefore\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"loopCondition\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"loopMaximum\",\n\t\t\t\ttype: \"Integer\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"CallActivity\",\n\t\tsuperClass: [\n\t\t\t\"Activity\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"calledElement\",\n\t\t\t\ttype: \"String\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Task\",\n\t\tsuperClass: [\n\t\t\t\"Activity\",\n\t\t\t\"InteractionNode\"\n\t\t]\n\t},\n\t{\n\t\tname: \"SendTask\",\n\t\tsuperClass: [\n\t\t\t\"Task\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"implementation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"operationRef\",\n\t\t\t\ttype: \"Operation\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageRef\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ReceiveTask\",\n\t\tsuperClass: [\n\t\t\t\"Task\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"implementation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"instantiate\",\n\t\t\t\t\"default\": false,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"operationRef\",\n\t\t\t\ttype: \"Operation\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageRef\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ScriptTask\",\n\t\tsuperClass: [\n\t\t\t\"Task\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"scriptFormat\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"script\",\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"BusinessRuleTask\",\n\t\tsuperClass: [\n\t\t\t\"Task\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"implementation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"AdHocSubProcess\",\n\t\tsuperClass: [\n\t\t\t\"SubProcess\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"completionCondition\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ordering\",\n\t\t\t\ttype: \"AdHocOrdering\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"cancelRemainingInstances\",\n\t\t\t\t\"default\": true,\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Transaction\",\n\t\tsuperClass: [\n\t\t\t\"SubProcess\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"protocol\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"method\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"GlobalScriptTask\",\n\t\tsuperClass: [\n\t\t\t\"GlobalTask\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"scriptLanguage\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"script\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"GlobalBusinessRuleTask\",\n\t\tsuperClass: [\n\t\t\t\"GlobalTask\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"implementation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ComplexBehaviorDefinition\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"condition\",\n\t\t\t\ttype: \"FormalExpression\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"event\",\n\t\t\t\ttype: \"ImplicitThrowEvent\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ResourceRole\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"resourceRef\",\n\t\t\t\ttype: \"Resource\",\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"resourceParameterBindings\",\n\t\t\t\ttype: \"ResourceParameterBinding\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"resourceAssignmentExpression\",\n\t\t\t\ttype: \"ResourceAssignmentExpression\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ResourceParameterBinding\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"expression\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"parameterRef\",\n\t\t\t\ttype: \"ResourceParameter\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"ResourceAssignmentExpression\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"expression\",\n\t\t\t\ttype: \"Expression\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"Import\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"importType\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"location\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"namespace\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Definitions\",\n\t\tsuperClass: [\n\t\t\t\"BaseElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"targetNamespace\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"expressionLanguage\",\n\t\t\t\t\"default\": \"http://www.w3.org/1999/XPath\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"typeLanguage\",\n\t\t\t\t\"default\": \"http://www.w3.org/2001/XMLSchema\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"imports\",\n\t\t\t\ttype: \"Import\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"extensions\",\n\t\t\t\ttype: \"Extension\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"rootElements\",\n\t\t\t\ttype: \"RootElement\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"diagrams\",\n\t\t\t\tisMany: true,\n\t\t\t\ttype: \"bpmndi:BPMNDiagram\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"exporter\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"relationships\",\n\t\t\t\ttype: \"Relationship\",\n\t\t\t\tisMany: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"exporterVersion\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t}\n];\nvar enumerations = [\n\t{\n\t\tname: \"ProcessType\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"None\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Public\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Private\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"GatewayDirection\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"Unspecified\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Converging\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Diverging\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Mixed\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"EventBasedGatewayType\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"Parallel\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Exclusive\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"RelationshipDirection\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"None\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Forward\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Backward\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Both\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ItemKind\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"Physical\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Information\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ChoreographyLoopType\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"None\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Standard\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"MultiInstanceSequential\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"MultiInstanceParallel\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"AssociationDirection\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"None\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"One\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Both\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"MultiInstanceBehavior\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"None\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"One\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"All\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Complex\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"AdHocOrdering\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"Parallel\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Sequential\"\n\t\t\t}\n\t\t]\n\t}\n];\nvar prefix = \"bpmn\";\nvar xml = {\n\ttagAlias: \"lowerCase\",\n\ttypePrefix: \"t\"\n};\nvar BpmnPackage = {\n\tname: name,\n\turi: uri,\n\tassociations: associations,\n\ttypes: types,\n\tenumerations: enumerations,\n\tprefix: prefix,\n\txml: xml\n};\n\nvar name$1 = \"BPMNDI\";\nvar uri$1 = \"http://www.omg.org/spec/BPMN/20100524/DI\";\nvar types$1 = [\n\t{\n\t\tname: \"BPMNDiagram\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"plane\",\n\t\t\t\ttype: \"BPMNPlane\",\n\t\t\t\tredefines: \"di:Diagram#rootElement\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"labelStyle\",\n\t\t\t\ttype: \"BPMNLabelStyle\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"di:Diagram\"\n\t\t]\n\t},\n\t{\n\t\tname: \"BPMNPlane\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"bpmnElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"bpmn:BaseElement\",\n\t\t\t\tredefines: \"di:DiagramElement#modelElement\"\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"di:Plane\"\n\t\t]\n\t},\n\t{\n\t\tname: \"BPMNShape\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"bpmnElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"bpmn:BaseElement\",\n\t\t\t\tredefines: \"di:DiagramElement#modelElement\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isHorizontal\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isExpanded\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isMarkerVisible\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"label\",\n\t\t\t\ttype: \"BPMNLabel\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isMessageVisible\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Boolean\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"participantBandKind\",\n\t\t\t\ttype: \"ParticipantBandKind\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"choreographyActivityShape\",\n\t\t\t\ttype: \"BPMNShape\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"di:LabeledShape\"\n\t\t]\n\t},\n\t{\n\t\tname: \"BPMNEdge\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"label\",\n\t\t\t\ttype: \"BPMNLabel\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"bpmnElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"bpmn:BaseElement\",\n\t\t\t\tredefines: \"di:DiagramElement#modelElement\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"sourceElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"di:DiagramElement\",\n\t\t\t\tredefines: \"di:Edge#source\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"targetElement\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"di:DiagramElement\",\n\t\t\t\tredefines: \"di:Edge#target\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"messageVisibleKind\",\n\t\t\t\ttype: \"MessageVisibleKind\",\n\t\t\t\tisAttr: true,\n\t\t\t\t\"default\": \"initiating\"\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"di:LabeledEdge\"\n\t\t]\n\t},\n\t{\n\t\tname: \"BPMNLabel\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"labelStyle\",\n\t\t\t\ttype: \"BPMNLabelStyle\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisReference: true,\n\t\t\t\tredefines: \"di:DiagramElement#style\"\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"di:Label\"\n\t\t]\n\t},\n\t{\n\t\tname: \"BPMNLabelStyle\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"font\",\n\t\t\t\ttype: \"dc:Font\"\n\t\t\t}\n\t\t],\n\t\tsuperClass: [\n\t\t\t\"di:Style\"\n\t\t]\n\t}\n];\nvar enumerations$1 = [\n\t{\n\t\tname: \"ParticipantBandKind\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"top_initiating\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"middle_initiating\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"bottom_initiating\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"top_non_initiating\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"middle_non_initiating\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"bottom_non_initiating\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"MessageVisibleKind\",\n\t\tliteralValues: [\n\t\t\t{\n\t\t\t\tname: \"initiating\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"non_initiating\"\n\t\t\t}\n\t\t]\n\t}\n];\nvar associations$1 = [\n];\nvar prefix$1 = \"bpmndi\";\nvar BpmnDiPackage = {\n\tname: name$1,\n\turi: uri$1,\n\ttypes: types$1,\n\tenumerations: enumerations$1,\n\tassociations: associations$1,\n\tprefix: prefix$1\n};\n\nvar name$2 = \"DC\";\nvar uri$2 = \"http://www.omg.org/spec/DD/20100524/DC\";\nvar types$2 = [\n\t{\n\t\tname: \"Boolean\"\n\t},\n\t{\n\t\tname: \"Integer\"\n\t},\n\t{\n\t\tname: \"Real\"\n\t},\n\t{\n\t\tname: \"String\"\n\t},\n\t{\n\t\tname: \"Font\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\ttype: \"String\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"size\",\n\t\t\t\ttype: \"Real\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isBold\",\n\t\t\t\ttype: \"Boolean\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isItalic\",\n\t\t\t\ttype: \"Boolean\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isUnderline\",\n\t\t\t\ttype: \"Boolean\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"isStrikeThrough\",\n\t\t\t\ttype: \"Boolean\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Point\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"x\",\n\t\t\t\ttype: \"Real\",\n\t\t\t\t\"default\": \"0\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"y\",\n\t\t\t\ttype: \"Real\",\n\t\t\t\t\"default\": \"0\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Bounds\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"x\",\n\t\t\t\ttype: \"Real\",\n\t\t\t\t\"default\": \"0\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"y\",\n\t\t\t\ttype: \"Real\",\n\t\t\t\t\"default\": \"0\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"width\",\n\t\t\t\ttype: \"Real\",\n\t\t\t\tisAttr: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"height\",\n\t\t\t\ttype: \"Real\",\n\t\t\t\tisAttr: true\n\t\t\t}\n\t\t]\n\t}\n];\nvar prefix$2 = \"dc\";\nvar associations$2 = [\n];\nvar DcPackage = {\n\tname: name$2,\n\turi: uri$2,\n\ttypes: types$2,\n\tprefix: prefix$2,\n\tassociations: associations$2\n};\n\nvar name$3 = \"DI\";\nvar uri$3 = \"http://www.omg.org/spec/DD/20100524/DI\";\nvar types$3 = [\n\t{\n\t\tname: \"DiagramElement\",\n\t\tisAbstract: true,\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"id\",\n\t\t\t\ttype: \"String\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisId: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"extension\",\n\t\t\t\ttype: \"Extension\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"owningDiagram\",\n\t\t\t\ttype: \"Diagram\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"owningElement\",\n\t\t\t\ttype: \"DiagramElement\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"modelElement\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true,\n\t\t\t\ttype: \"Element\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"style\",\n\t\t\t\ttype: \"Style\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ownedElement\",\n\t\t\t\ttype: \"DiagramElement\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Node\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"DiagramElement\"\n\t\t]\n\t},\n\t{\n\t\tname: \"Edge\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"DiagramElement\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"source\",\n\t\t\t\ttype: \"DiagramElement\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"target\",\n\t\t\t\ttype: \"DiagramElement\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisReference: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"waypoint\",\n\t\t\t\tisUnique: false,\n\t\t\t\tisMany: true,\n\t\t\t\ttype: \"dc:Point\",\n\t\t\t\txml: {\n\t\t\t\t\tserialize: \"xsi:type\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Diagram\",\n\t\tisAbstract: true,\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"id\",\n\t\t\t\ttype: \"String\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisId: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"rootElement\",\n\t\t\t\ttype: \"DiagramElement\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"name\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"documentation\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"resolution\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"Real\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ownedStyle\",\n\t\t\t\ttype: \"Style\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tisVirtual: true,\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Shape\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"Node\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"bounds\",\n\t\t\t\ttype: \"dc:Bounds\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Plane\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"Node\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"planeElement\",\n\t\t\t\ttype: \"DiagramElement\",\n\t\t\t\tsubsettedProperty: \"DiagramElement-ownedElement\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"LabeledEdge\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"Edge\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"ownedLabel\",\n\t\t\t\ttype: \"Label\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tsubsettedProperty: \"DiagramElement-ownedElement\",\n\t\t\t\tisVirtual: true,\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"LabeledShape\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"Shape\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"ownedLabel\",\n\t\t\t\ttype: \"Label\",\n\t\t\t\tisReadOnly: true,\n\t\t\t\tsubsettedProperty: \"DiagramElement-ownedElement\",\n\t\t\t\tisVirtual: true,\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Label\",\n\t\tisAbstract: true,\n\t\tsuperClass: [\n\t\t\t\"Node\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"bounds\",\n\t\t\t\ttype: \"dc:Bounds\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Style\",\n\t\tisAbstract: true,\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"id\",\n\t\t\t\ttype: \"String\",\n\t\t\t\tisAttr: true,\n\t\t\t\tisId: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"Extension\",\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"values\",\n\t\t\t\ttype: \"Element\",\n\t\t\t\tisMany: true\n\t\t\t}\n\t\t]\n\t}\n];\nvar associations$3 = [\n];\nvar prefix$3 = \"di\";\nvar xml$1 = {\n\ttagAlias: \"lowerCase\"\n};\nvar DiPackage = {\n\tname: name$3,\n\turi: uri$3,\n\ttypes: types$3,\n\tassociations: associations$3,\n\tprefix: prefix$3,\n\txml: xml$1\n};\n\nvar name$4 = \"bpmn.io colors for BPMN\";\nvar uri$4 = \"http://bpmn.io/schema/bpmn/biocolor/1.0\";\nvar prefix$4 = \"bioc\";\nvar types$4 = [\n\t{\n\t\tname: \"ColoredShape\",\n\t\t\"extends\": [\n\t\t\t\"bpmndi:BPMNShape\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"stroke\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"fill\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tname: \"ColoredEdge\",\n\t\t\"extends\": [\n\t\t\t\"bpmndi:BPMNEdge\"\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tname: \"stroke\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"fill\",\n\t\t\t\tisAttr: true,\n\t\t\t\ttype: \"String\"\n\t\t\t}\n\t\t]\n\t}\n];\nvar enumerations$2 = [\n];\nvar associations$4 = [\n];\nvar BiocPackage = {\n\tname: name$4,\n\turi: uri$4,\n\tprefix: prefix$4,\n\ttypes: types$4,\n\tenumerations: enumerations$2,\n\tassociations: associations$4\n};\n\nvar packages = {\n  bpmn: BpmnPackage,\n  bpmndi: BpmnDiPackage,\n  dc: DcPackage,\n  di: DiPackage,\n  bioc: BiocPackage\n};\nfunction simple (additionalPackages, options) {\n  var pks = assign({}, packages, additionalPackages);\n  return new BpmnModdle(pks, options);\n}\n\nmodule.exports = simple;\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-engine/dist/bpmn-moddle.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-engine/index.js":
          /*!*******************************************!*\
  !*** ./node_modules/bpmn-engine/index.js ***!
  \*******************************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            "use strict";
            eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nconst BpmnModdle = __webpack_require__(/*! ./dist/bpmn-moddle */ \"./node_modules/bpmn-engine/dist/bpmn-moddle.js\");\nconst DebugLogger = __webpack_require__(/*! ./lib/Logger */ \"./node_modules/bpmn-engine/lib/Logger.js\");\nconst elements = __webpack_require__(/*! bpmn-elements */ \"./node_modules/bpmn-elements/index.js\");\nconst getOptionsAndCallback = __webpack_require__(/*! ./lib/getOptionsAndCallback */ \"./node_modules/bpmn-engine/lib/getOptionsAndCallback.js\");\nconst JavaScripts = __webpack_require__(/*! ./lib/JavaScripts */ \"./node_modules/bpmn-engine/lib/JavaScripts.js\");\nconst ProcessOutputDataObject = __webpack_require__(/*! ./lib/extensions/ProcessOutputDataObject */ \"./node_modules/bpmn-engine/lib/extensions/ProcessOutputDataObject.js\");\nconst {Broker} = __webpack_require__(/*! smqp */ \"./node_modules/smqp/index.js\");\nconst {default: serializer, deserialize, TypeResolver} = __webpack_require__(/*! moddle-context-serializer */ \"./node_modules/moddle-context-serializer/index.js\");\nconst {EventEmitter} = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nconst {version: engineVersion} = __webpack_require__(/*! ./package.json */ \"./node_modules/bpmn-engine/package.json\");\n\nmodule.exports = {Engine};\n\nfunction Engine(options = {}) {\n  options = {Logger: DebugLogger, scripts: JavaScripts(), ...options};\n\n  let {name, Logger} = options;\n\n  let loadedDefinitions, execution;\n  const logger = Logger('engine');\n\n  const sources = [];\n  const typeResolver = TypeResolver({\n    ...elements,\n    ...(options.elements || {})\n  }, defaultTypeResolver);\n\n  function defaultTypeResolver(elementTypes) {\n    if (options.typeResolver) return options.typeResolver(elementTypes);\n    elementTypes['bpmn:DataObject'] = ProcessOutputDataObject;\n  }\n\n  const pendingSources = [];\n  if (options.source) pendingSources.push(serializeSource(options.source));\n  if (options.moddleContext) pendingSources.push(serializeModdleContext(options.moddleContext));\n\n  const environment = elements.Environment(options);\n  const emitter = new EventEmitter();\n\n  const engine = Object.assign(emitter, {\n    environment,\n    execute,\n    logger,\n    getDefinitionById,\n    getDefinitions,\n    getState,\n    recover,\n    resume,\n    stop,\n    waitFor,\n  });\n\n  const broker = Broker(engine);\n  broker.assertExchange('event', 'topic', {autoDelete: false});\n\n  Object.defineProperty(engine, 'broker', {\n    enumerable: true,\n    get() {\n      return broker;\n    }\n  });\n\n  Object.defineProperty(engine, 'name', {\n    enumerable: true,\n    get() {\n      return name;\n    },\n    set(value) {\n      name = value;\n    },\n  });\n\n  Object.defineProperty(engine, 'state', {\n    enumerable: true,\n    get() {\n      if (execution) return execution.state;\n      return 'idle';\n    },\n  });\n\n  Object.defineProperty(engine, 'stopped', {\n    enumerable: true,\n    get() {\n      if (execution) return execution.stopped;\n      return false;\n    },\n  });\n\n  Object.defineProperty(engine, 'execution', {\n    enumerable: true,\n    get() {\n      return execution;\n    },\n  });\n\n  return engine;\n\n  async function execute(...args) {\n    const [executeOptions, callback] = getOptionsAndCallback(...args);\n    let runSources;\n    try {\n      runSources = await Promise.all(pendingSources);\n    } catch (err) {\n      if (callback) return callback(err);\n      throw err;\n    }\n    const definitions = runSources.map((source) => loadDefinition(source, executeOptions));\n    execution = Execution(engine, definitions, options);\n    return execution.execute(executeOptions, callback);\n  }\n\n  async function stop() {\n    if (!execution) return;\n    return execution.stop();\n  }\n\n  function recover(savedState) {\n    if (!name) name = savedState.name;\n    if (!savedState.definitions) return engine;\n\n    logger.debug(`<${name}> recover`);\n\n    loadedDefinitions = savedState.definitions.map((dState) => {\n      const source = deserialize(JSON.parse(dState.source), typeResolver);\n\n      logger.debug(`<${name}> recover ${dState.type} <${dState.id}>`);\n\n      const definition = loadDefinition(source);\n      definition.recover(dState);\n\n      return definition;\n    });\n\n    return engine;\n  }\n\n  async function resume(...args) {\n    const [resumeOptions, callback] = getOptionsAndCallback(...args);\n\n    if (!execution) {\n      const definitions = await getDefinitions();\n      execution = Execution(engine, definitions, options);\n    }\n\n    return execution.resume(resumeOptions, callback);\n  }\n\n  async function getDefinitions(executeOptions) {\n    if (loadedDefinitions && loadedDefinitions.length) return loadedDefinitions;\n    return Promise.all(pendingSources).then((srcs) => srcs.map((src) => loadDefinition(src, executeOptions)));\n  }\n\n  async function getDefinitionById(id) {\n    return (await getDefinitions()).find((d) => d.id === id);\n  }\n\n  async function getState() {\n    if (execution) return execution.getState();\n\n    const definitions = await getDefinitions();\n    return Execution(engine, definitions, options).getState();\n  }\n\n  function loadDefinition(serializedContext, executeOptions) {\n    const context = elements.Context(serializedContext, environment.clone({\n      listener: environment.options.listener,\n      ...executeOptions,\n      source: serializedContext,\n    }));\n\n    return elements.Definition(context);\n  }\n\n  async function serializeSource(source) {\n    const moddleContext = await getModdleContext(source);\n    return serializeModdleContext(moddleContext);\n  }\n\n  function serializeModdleContext(moddleContext) {\n    const serialized = serializer(moddleContext, typeResolver);\n    sources.push(serialized);\n    return serialized;\n  }\n\n  function getModdleContext(source) {\n    return new Promise((resolve, reject) => {\n      const bpmnModdle = new BpmnModdle(options.moddleOptions);\n      bpmnModdle.fromXML(Buffer.isBuffer(source) ? source.toString() : source.trim(), (err, _, moddleContext) => {\n        if (err) return reject(err);\n        resolve(moddleContext);\n      });\n    });\n  }\n\n  async function waitFor(eventName) {\n    return new Promise((resolve, reject) => {\n      engine.once(eventName, onEvent);\n      engine.once('error', onError);\n\n      function onEvent(api) {\n        engine.removeListener('error', onError);\n        resolve(api);\n      }\n      function onError(err) {\n        engine.removeListener(eventName, onError);\n        reject(err);\n      }\n    });\n  }\n}\n\nfunction Execution(engine, definitions, options) {\n  const {environment, logger, waitFor, broker} = engine;\n  broker.on('return', onBrokerReturn);\n\n  let state = 'idle';\n  let stopped;\n\n  return {\n    get state() {\n      return state;\n    },\n    get stopped() {\n      return stopped;\n    },\n    execute,\n    getState,\n    resume,\n    stop,\n  };\n\n  function execute(executeOptions, callback) {\n    setup(executeOptions);\n    stopped = false;\n    logger.debug(`<${engine.name}> execute`);\n\n    addConsumerCallbacks(callback);\n    definitions.forEach((definition) => definition.run());\n\n    return Api();\n  }\n\n  function resume(resumeOptions, callback) {\n    setup(resumeOptions);\n\n    stopped = false;\n    logger.debug(`<${engine.name}> resume`);\n    addConsumerCallbacks(callback);\n\n    definitions.forEach((definition) => definition.resume());\n\n    return Api();\n  }\n\n  function addConsumerCallbacks(callback) {\n    if (!callback) return;\n\n    broker.off('return', onBrokerReturn);\n\n    clearConsumers();\n\n    broker.subscribeOnce('event', 'engine.stop', cbLeave, {consumerTag: 'ctag-cb-stop'});\n    broker.subscribeOnce('event', 'engine.end', cbLeave, {consumerTag: 'ctag-cb-end'});\n    broker.subscribeOnce('event', 'engine.error', cbError, {consumerTag: 'ctag-cb-error'});\n\n    function cbLeave() {\n      clearConsumers();\n      return callback(null, Api());\n    }\n    function cbError(_, message) {\n      clearConsumers();\n      return callback(message.content);\n    }\n\n    function clearConsumers() {\n      broker.cancel('ctag-cb-stop');\n      broker.cancel('ctag-cb-end');\n      broker.cancel('ctag-cb-error');\n      broker.on('return', onBrokerReturn);\n    }\n  }\n\n  function stop() {\n    const prom = waitFor('stop');\n    definitions.forEach((d) => d.stop());\n    return prom;\n  }\n\n  function setup(setupOptions = {}) {\n    const listener = setupOptions.listener || options.listener;\n    if (listener && typeof listener.emit !== 'function') throw new Error('listener.emit is not a function');\n\n    definitions.forEach(setupDefinition);\n\n    function setupDefinition(definition) {\n      if (listener) definition.environment.options.listener = listener;\n\n      definition.broker.subscribeTmp('event', 'definition.#', onChildMessage, {noAck: true, consumerTag: '_engine_definition'});\n      definition.broker.subscribeTmp('event', 'process.#', onChildMessage, {noAck: true, consumerTag: '_engine_process'});\n      definition.broker.subscribeTmp('event', 'activity.#', onChildMessage, {noAck: true, consumerTag: '_engine_activity'});\n      definition.broker.subscribeTmp('event', 'flow.#', onChildMessage, {noAck: true, consumerTag: '_engine_flow'});\n    }\n  }\n\n  function onChildMessage(routingKey, message, owner) {\n    const {environment: ownerEnvironment} = owner;\n    const listener = ownerEnvironment.options && ownerEnvironment.options.listener;\n    state = 'running';\n\n    let executionStopped, executionCompleted, executionErrored;\n    const elementApi = owner.getApi && owner.getApi(message);\n\n    switch (routingKey) {\n      case 'definition.stop':\n        teardownDefinition(owner);\n        if (definitions.some((d) => d.isRunning)) break;\n\n        executionStopped = true;\n        stopped = true;\n        break;\n      case 'definition.leave':\n        teardownDefinition(owner);\n        if (definitions.some((d) => d.isRunning)) break;\n\n        executionCompleted = true;\n        break;\n      case 'definition.error':\n        teardownDefinition(owner);\n        executionErrored = true;\n        break;\n      case 'activity.wait': {\n        emitListenerEvent('wait', owner.getApi(message), Api());\n        break;\n      }\n      case 'process.end': {\n        if (!message.content.output) break;\n        for (const key in message.content.output) {\n          switch (key) {\n            case 'data': {\n              environment.output.data = environment.output.data || {};\n              environment.output.data = {...environment.output.data, ...message.content.output.data};\n              break;\n            }\n            default: {\n              environment.output[key] = message.content.output[key];\n            }\n          }\n        }\n        break;\n      }\n    }\n\n    emitListenerEvent(routingKey, elementApi, Api());\n    broker.publish('event', routingKey, {...message.content}, {...message.properties, mandatory: false});\n\n    if (executionStopped) {\n      state = 'stopped';\n      logger.debug(`<${engine.name}> stopped`);\n      onComplete('stop');\n    } else if (executionCompleted) {\n      state = 'idle';\n      logger.debug(`<${engine.name}> completed`);\n      onComplete('end');\n    } else if (executionErrored) {\n      state = 'error';\n      logger.debug(`<${engine.name}> error`);\n      onError(message.content.error);\n    }\n\n    function onComplete(eventName) {\n      broker.publish('event', `engine.${eventName}`, {}, {type: eventName});\n      engine.emit(eventName, Api());\n    }\n\n    function onError(err) {\n      broker.publish('event', 'engine.error', err, {type: 'error', mandatory: true});\n    }\n\n    function emitListenerEvent(...args) {\n      if (!listener) return;\n      listener.emit(...args);\n    }\n  }\n\n  function teardownDefinition(definition) {\n    definition.broker.cancel('_engine_definition');\n    definition.broker.cancel('_engine_process');\n    definition.broker.cancel('_engine_activity');\n    definition.broker.cancel('_engine_flow');\n  }\n\n  function getState() {\n    return {\n      name: engine.name,\n      state,\n      stopped,\n      engineVersion,\n      definitions: definitions.map(getDefinitionState),\n    };\n  }\n\n  function getDefinitionState(definition) {\n    return {\n      ...definition.getState(),\n      source: definition.environment.options.source.serialize(),\n    };\n  }\n\n  function onBrokerReturn(message) {\n    if (message.properties.type === 'error') {\n      engine.emit('error', message.content);\n    }\n  }\n\n  function Api() {\n    return {\n      name: engine.name,\n      get state() {\n        return state;\n      },\n      get stopped() {\n        return stopped;\n      },\n      environment,\n      definitions,\n      stop,\n      getState,\n      getPostponed() {\n        return definitions.reduce((result, definition) => {\n          result = result.concat(definition.getPostponed());\n          return result;\n        }, []);\n      },\n    };\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-engine/index.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-engine/lib/JavaScripts.js":
          /*!*****************************************************!*\
  !*** ./node_modules/bpmn-engine/lib/JavaScripts.js ***!
  \*****************************************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            "use strict";
            eval("\n\nconst {Script} = __webpack_require__(/*! vm */ \"./node_modules/vm-browserify/index.js\");\n\nmodule.exports = function Scripts() {\n  const scripts = {};\n\n  return {\n    getScript,\n    register,\n  };\n\n  function register({id, type, behaviour}) {\n    let scriptBody, language = 'javascript';\n\n    switch (type) {\n      case 'bpmn:SequenceFlow': {\n        if (!behaviour.conditionExpression) return;\n        language = behaviour.conditionExpression.language;\n        scriptBody = behaviour.conditionExpression.body;\n        break;\n      }\n      default: {\n        language = behaviour.scriptFormat;\n        scriptBody = behaviour.script;\n      }\n    }\n\n    if (!/^javascript$/i.test(language)) return;\n    scripts[id] = new Script(scriptBody, {filename: `${type}/${id}`});\n  }\n\n  function getScript(scriptType, {id}) {\n    if (!/^javascript$/i.test(scriptType)) return;\n    const script = scripts[id];\n    if (!script) return;\n\n    return {\n      execute,\n    };\n\n    function execute(executionContext, callback) {\n      return script.runInNewContext({...executionContext, next: callback});\n    }\n  }\n};\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-engine/lib/JavaScripts.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-engine/lib/Logger.js":
          /*!************************************************!*\
  !*** ./node_modules/bpmn-engine/lib/Logger.js ***!
  \************************************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            "use strict";
            eval("\n\nconst Debug = __webpack_require__(/*! debug */ \"./node_modules/bpmn-engine/node_modules/debug/src/browser.js\");\n\nmodule.exports = function Logger(scope) {\n  return {\n    debug: Debug('bpmn-engine:' + scope),\n    error: Debug('bpmn-engine:error:' + scope),\n    warn: Debug('bpmn-engine:warn:' + scope),\n  };\n};\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-engine/lib/Logger.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-engine/lib/extensions/ProcessOutputDataObject.js":
          /*!****************************************************************************!*\
  !*** ./node_modules/bpmn-engine/lib/extensions/ProcessOutputDataObject.js ***!
  \****************************************************************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            "use strict";
            eval("\n\nmodule.exports = function ProcessOutputDataObject(dataObjectDef, {environment}) {\n  const {id, type, name, behaviour, parent} = dataObjectDef;\n\n  const source = {\n    id,\n    name,\n    type,\n    behaviour,\n    parent,\n    read(broker, exchange, routingKeyPrefix, messageProperties) {\n      const value = environment.variables.data && environment.variables.data[id];\n      return broker.publish(exchange, `${routingKeyPrefix}response`, {id, name, type, value}, messageProperties);\n    },\n    write(broker, exchange, routingKeyPrefix, value, messageProperties) {\n      environment.variables.data = environment.variables.data || {};\n      environment.variables.data[id] = value;\n\n      environment.output.data = environment.output.data || {};\n      environment.output.data[id] = value;\n\n      return broker.publish(exchange, `${routingKeyPrefix}response`, {id, name, type, value}, messageProperties);\n    },\n  };\n\n  return source;\n};\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-engine/lib/extensions/ProcessOutputDataObject.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-engine/lib/getOptionsAndCallback.js":
          /*!***************************************************************!*\
  !*** ./node_modules/bpmn-engine/lib/getOptionsAndCallback.js ***!
  \***************************************************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            "use strict";
            eval("\n\nmodule.exports = function getOptionsAndCallback(optionsOrCallback, callback) {\n  let options;\n  if (typeof optionsOrCallback === 'function') {\n    callback = optionsOrCallback;\n  } else {\n    options = optionsOrCallback;\n  }\n\n  return [options, callback];\n};\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-engine/lib/getOptionsAndCallback.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-engine/node_modules/debug/src/browser.js":
          /*!********************************************************************!*\
  !*** ./node_modules/bpmn-engine/node_modules/debug/src/browser.js ***!
  \********************************************************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            eval("/* WEBPACK VAR INJECTION */(function(process) {/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/bpmn-engine/node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-engine/node_modules/debug/src/browser.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-engine/node_modules/debug/src/common.js":
          /*!*******************************************************************!*\
  !*** ./node_modules/bpmn-engine/node_modules/debug/src/common.js ***!
  \*******************************************************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/ms/index.js\");\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-engine/node_modules/debug/src/common.js?");

            /***/ }),

          /***/ "./node_modules/bpmn-engine/package.json":
          /*!***********************************************!*\
  !*** ./node_modules/bpmn-engine/package.json ***!
  \***********************************************/
          /*! exports provided: _args, _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _spec, _where, author, bugs, dependencies, description, devDependencies, engines, files, homepage, keywords, license, licenses, main, name, nyc, repository, scripts, version, default */
          /***/ (function(module) {

            eval("module.exports = JSON.parse(\"{\\\"_args\\\":[[\\\"bpmn-engine@6.3.0\\\",\\\"/Users/Lorenzo/snapclinical-offline-engine\\\"]],\\\"_from\\\":\\\"bpmn-engine@6.3.0\\\",\\\"_id\\\":\\\"bpmn-engine@6.3.0\\\",\\\"_inBundle\\\":false,\\\"_integrity\\\":\\\"sha512-tWyqFqyuUhPJP6zCKfoXnkmof31p5ADl+bR1fWHNR63GwBcZeZjH12tSo8hHCDN59pI1vUZhE6bDmoGsJsxQ0g==\\\",\\\"_location\\\":\\\"/bpmn-engine\\\",\\\"_phantomChildren\\\":{\\\"ms\\\":\\\"2.1.2\\\"},\\\"_requested\\\":{\\\"type\\\":\\\"version\\\",\\\"registry\\\":true,\\\"raw\\\":\\\"bpmn-engine@6.3.0\\\",\\\"name\\\":\\\"bpmn-engine\\\",\\\"escapedName\\\":\\\"bpmn-engine\\\",\\\"rawSpec\\\":\\\"6.3.0\\\",\\\"saveSpec\\\":null,\\\"fetchSpec\\\":\\\"6.3.0\\\"},\\\"_requiredBy\\\":[\\\"/\\\"],\\\"_resolved\\\":\\\"https://registry.npmjs.org/bpmn-engine/-/bpmn-engine-6.3.0.tgz\\\",\\\"_spec\\\":\\\"6.3.0\\\",\\\"_where\\\":\\\"/Users/Lorenzo/snapclinical-offline-engine\\\",\\\"author\\\":{\\\"name\\\":\\\"Pål Edman\\\",\\\"url\\\":\\\"https://github.com/paed01\\\"},\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/paed01/bpmn-engine/issues\\\"},\\\"dependencies\\\":{\\\"bpmn-elements\\\":\\\"^0.3.0\\\",\\\"debug\\\":\\\"^4.1.1\\\",\\\"moddle-context-serializer\\\":\\\"^0.4.0\\\",\\\"smqp\\\":\\\"^1.6.0\\\"},\\\"description\\\":\\\"BPMN 2.0 execution engine. Open source javascript workflow engine.\\\",\\\"devDependencies\\\":{\\\"@babel/cli\\\":\\\"^7.5.0\\\",\\\"@babel/core\\\":\\\"^7.5.0\\\",\\\"@babel/preset-env\\\":\\\"^7.5.0\\\",\\\"bent\\\":\\\"^1.5.13\\\",\\\"bpmn-moddle\\\":\\\"^5.2.0\\\",\\\"camunda-bpmn-moddle\\\":\\\"^3.2.0\\\",\\\"chai\\\":\\\"^4.1.2\\\",\\\"coveralls\\\":\\\"^3.0.4\\\",\\\"eslint\\\":\\\"^6.0.1\\\",\\\"markdown-toc\\\":\\\"^1.2.0\\\",\\\"mocha\\\":\\\"^6.1.3\\\",\\\"mocha-cakes-2\\\":\\\"^3.3.0\\\",\\\"nock\\\":\\\"^10.0.6\\\",\\\"nyc\\\":\\\"^14.1.1\\\",\\\"rollup\\\":\\\"^1.16.6\\\",\\\"rollup-plugin-babel\\\":\\\"^4.3.3\\\",\\\"rollup-plugin-commonjs\\\":\\\"^10.0.1\\\",\\\"rollup-plugin-json\\\":\\\"^4.0.0\\\",\\\"rollup-plugin-license\\\":\\\"^0.9.0\\\",\\\"rollup-plugin-node-resolve\\\":\\\"^5.2.0\\\",\\\"unnecessary\\\":\\\"^1.3.3\\\"},\\\"engines\\\":{\\\"node\\\":\\\">=10\\\"},\\\"files\\\":[\\\"dist/\\\",\\\"lib/\\\",\\\"index.js\\\"],\\\"homepage\\\":\\\"https://github.com/paed01/bpmn-engine#readme\\\",\\\"keywords\\\":[\\\"workflow\\\",\\\"engine\\\",\\\"process\\\",\\\"automation\\\",\\\"bpmn\\\",\\\"bpmn 2\\\"],\\\"license\\\":\\\"MIT\\\",\\\"licenses\\\":[{\\\"type\\\":\\\"MIT\\\",\\\"url\\\":\\\"https://github.com/paed01/bpmn-engine/master/LICENSE\\\"}],\\\"main\\\":\\\"index.js\\\",\\\"name\\\":\\\"bpmn-engine\\\",\\\"nyc\\\":{\\\"exclude\\\":[\\\"dist\\\",\\\"test\\\",\\\"rollup.config.js\\\"]},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"git://github.com/paed01/bpmn-engine.git\\\"},\\\"scripts\\\":{\\\"bundle\\\":\\\"rollup -c rollup.config.js\\\",\\\"posttest\\\":\\\"eslint . --cache && npm run toc\\\",\\\"prepare\\\":\\\"npm run bundle\\\",\\\"pretest\\\":\\\"npm run bundle\\\",\\\"test\\\":\\\"mocha -R dot\\\",\\\"test-md\\\":\\\"node scripts/test-markdown.js ./docs/API.md && node scripts/test-markdown.js ./docs/Examples.md\\\",\\\"toc\\\":\\\"node scripts/generate-api-toc ./docs/API.md,./docs/Examples.md\\\",\\\"wintest\\\":\\\"mocha\\\"},\\\"version\\\":\\\"6.3.0\\\"}\");\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/bpmn-engine/package.json?");

            /***/ }),

          /***/ "./node_modules/buffer/index.js":
          /*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            "use strict";
            eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/buffer/index.js?");

            /***/ }),

          /***/ "./node_modules/debug/node_modules/ms/index.js":
          /*!*****************************************************!*\
  !*** ./node_modules/debug/node_modules/ms/index.js ***!
  \*****************************************************/
          /*! no static exports found */
          /***/ (function(module, exports) {

            eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/debug/node_modules/ms/index.js?");

            /***/ }),

          /***/ "./node_modules/debug/src/browser.js":
          /*!*******************************************!*\
  !*** ./node_modules/debug/src/browser.js ***!
  \*******************************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(/*! ./debug */ \"./node_modules/debug/src/debug.js\");\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/debug/src/browser.js?");

            /***/ }),

          /***/ "./node_modules/debug/src/debug.js":
          /*!*****************************************!*\
  !*** ./node_modules/debug/src/debug.js ***!
  \*****************************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(/*! ms */ \"./node_modules/debug/node_modules/ms/index.js\");\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/debug/src/debug.js?");

            /***/ }),

          /***/ "./node_modules/events/events.js":
          /*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            "use strict";
            eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/events/events.js?");

            /***/ }),

          /***/ "./node_modules/ieee754/index.js":
          /*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
          /*! no static exports found */
          /***/ (function(module, exports) {

            eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/ieee754/index.js?");

            /***/ }),

          /***/ "./node_modules/isarray/index.js":
          /*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
          /*! no static exports found */
          /***/ (function(module, exports) {

            eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/isarray/index.js?");

            /***/ }),

          /***/ "./node_modules/iso8601-duration/lib/index.js":
          /*!****************************************************!*\
  !*** ./node_modules/iso8601-duration/lib/index.js ***!
  \****************************************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            "use strict";
            eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @description A module for parsing ISO8601 durations\n */\n\n/**\n * The pattern used for parsing ISO8601 duration (PnYnMnDTnHnMnS).\n * This does not cover the week format PnW.\n */\n\n// PnYnMnDTnHnMnS\nvar numbers = '\\\\d+(?:[\\\\.,]\\\\d+)?';\nvar weekPattern = '(' + numbers + 'W)';\nvar datePattern = '(' + numbers + 'Y)?(' + numbers + 'M)?(' + numbers + 'D)?';\nvar timePattern = 'T(' + numbers + 'H)?(' + numbers + 'M)?(' + numbers + 'S)?';\n\nvar iso8601 = 'P(?:' + weekPattern + '|' + datePattern + '(?:' + timePattern + ')?)';\nvar objMap = ['weeks', 'years', 'months', 'days', 'hours', 'minutes', 'seconds'];\n\n/**\n * The ISO8601 regex for matching / testing durations\n */\nvar pattern = exports.pattern = new RegExp(iso8601);\n\n/** Parse PnYnMnDTnHnMnS format to object\n * @param {string} durationString - PnYnMnDTnHnMnS formatted string\n * @return {Object} - With a property for each part of the pattern\n */\nvar parse = exports.parse = function parse(durationString) {\n  // Slice away first entry in match-array\n  return durationString.match(pattern).slice(1).reduce(function (prev, next, idx) {\n    prev[objMap[idx]] = parseFloat(next) || 0;\n    return prev;\n  }, {});\n};\n\n/**\n * Convert ISO8601 duration object to an end Date.\n *\n * @param {Object} duration - The duration object\n * @param {Date} startDate - The starting Date for calculating the duration\n * @return {Date} - The resulting end Date\n */\nvar end = exports.end = function end(duration, startDate) {\n  // Create two equal timestamps, add duration to 'then' and return time difference\n  var timestamp = startDate ? startDate.getTime() : Date.now();\n  var then = new Date(timestamp);\n\n  then.setFullYear(then.getFullYear() + duration.years);\n  then.setMonth(then.getMonth() + duration.months);\n  then.setDate(then.getDate() + duration.days);\n  then.setHours(then.getHours() + duration.hours);\n  then.setMinutes(then.getMinutes() + duration.minutes);\n  // Then.setSeconds(then.getSeconds() + duration.seconds);\n  then.setMilliseconds(then.getMilliseconds() + duration.seconds * 1000);\n  // Special case weeks\n  then.setDate(then.getDate() + duration.weeks * 7);\n\n  return then;\n};\n\n/**\n * Convert ISO8601 duration object to seconds\n *\n * @param {Object} duration - The duration object\n * @param {Date} startDate - The starting point for calculating the duration\n * @return {Number}\n */\nvar toSeconds = exports.toSeconds = function toSeconds(duration, startDate) {\n  var timestamp = startDate ? startDate.getTime() : Date.now();\n  var now = new Date(timestamp);\n  var then = end(duration, now);\n\n  var seconds = (then.getTime() - now.getTime()) / 1000;\n  return seconds;\n};\n\nexports.default = {\n  end: end,\n  toSeconds: toSeconds,\n  pattern: pattern,\n  parse: parse\n};\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/iso8601-duration/lib/index.js?");

            /***/ }),

          /***/ "./node_modules/moddle-context-serializer/index.js":
          /*!*********************************************************!*\
  !*** ./node_modules/moddle-context-serializer/index.js ***!
  \*********************************************************/
          /*! exports provided: default, TypeResolver, resolveTypes, map, deserialize */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TypeResolver\", function() { return TypeResolver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resolveTypes\", function() { return resolveTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"map\", function() { return mapModdleContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deserialize\", function() { return deserialize; });\n/* harmony default export */ __webpack_exports__[\"default\"] = (context);\n\n\n\nfunction TypeResolver(types, extender) {\n  const {\n    BpmnError,\n    Definition,\n    Dummy,\n    ServiceImplementation,\n  } = types;\n\n  const typeMapper = {};\n\n  typeMapper['bpmn:DataObjectReference'] = Dummy;\n  typeMapper['bpmn:Definitions'] = Definition;\n  typeMapper['bpmn:Error'] = BpmnError;\n\n  if (extender) extender(typeMapper);\n\n  return function resolve(entity) {\n    const {type, behaviour = {}} = entity;\n\n    switch (type) {\n      case 'bpmn:SendTask':\n      case 'bpmn:ServiceTask':\n        entity.Behaviour = getBehaviourFromType(type);\n        if (behaviour.implementation) {\n          behaviour.Service = ServiceImplementation;\n        }\n        break;\n      default:\n        entity.Behaviour = getBehaviourFromType(type);\n    }\n\n    if (behaviour.loopCharacteristics) {\n      resolve(behaviour.loopCharacteristics);\n    }\n\n    if (behaviour.eventDefinitions) {\n      behaviour.eventDefinitions.forEach(resolve);\n    }\n\n    if (behaviour.ioSpecification) {\n      resolve(behaviour.ioSpecification);\n    }\n  };\n\n  function getBehaviourFromType(type) {\n    let activityType = typeMapper[type];\n    if (!activityType && type) {\n      const nonPrefixedType = type.split(':').slice(1).join(':');\n      activityType = types[nonPrefixedType];\n    }\n\n    if (!activityType) {\n      throw new Error(`Unknown activity type ${type}`);\n    }\n\n    return activityType;\n  }\n}\n\nfunction context(moddleContext, typeResolver) {\n  const mapped = mapModdleContext(moddleContext);\n  return contextApi(resolveTypes(mapped, typeResolver));\n}\n\nfunction deserialize(deserializedContext, typeResolver) {\n  return contextApi(resolveTypes(deserializedContext, typeResolver));\n}\n\nfunction contextApi(mapped) {\n  const {\n    activities,\n    dataObjects,\n    definition,\n    errors,\n    messageFlows,\n    processes,\n    sequenceFlows,\n  } = mapped;\n\n  return {\n    id: definition.id,\n    type: definition.type,\n    name: definition.name,\n    getActivities,\n    getActivityById,\n    getDataObjects,\n    getDataObjectById,\n    getErrorById,\n    getErrors,\n    getExecutableProcesses,\n    getInboundSequenceFlows,\n    getMessageFlows,\n    getOutboundSequenceFlows,\n    getProcessById,\n    getProcesses,\n    getSequenceFlowById,\n    getSequenceFlows,\n    serialize,\n  };\n\n  function serialize() {\n    return JSON.stringify({\n      id: definition.id,\n      type: definition.type,\n      name: definition.name,\n      activities,\n      dataObjects,\n      definition,\n      errors,\n      messageFlows,\n      processes,\n      sequenceFlows,\n    });\n  }\n\n  function getProcessById(processId) {\n    return processes.find(({id}) => id === processId);\n  }\n\n  function getProcesses() {\n    return processes;\n  }\n\n  function getExecutableProcesses() {\n    return processes.filter((p) => p.behaviour.isExecutable);\n  }\n\n  function getInboundSequenceFlows(activityId) {\n    return sequenceFlows.filter((flow) => flow.targetId === activityId);\n  }\n\n  function getOutboundSequenceFlows(activityId) {\n    return sequenceFlows.filter((flow) => flow.sourceId === activityId);\n  }\n\n  function getMessageFlows(scopeId) {\n    if (scopeId) return messageFlows.filter((flow) => flow.source.processId === scopeId);\n    return messageFlows;\n  }\n\n  function getSequenceFlows(scopeId) {\n    if (scopeId) return sequenceFlows.filter((flow) => flow.parent.id === scopeId);\n    return sequenceFlows;\n  }\n\n  function getSequenceFlowById(flowId) {\n    return sequenceFlows.find(({id}) => id === flowId);\n  }\n\n  function getActivities(scopeId) {\n    if (!scopeId) return activities;\n    return activities.filter((activity) => activity.parent.id === scopeId);\n  }\n\n  function getDataObjects() {\n    return dataObjects;\n  }\n\n  function getErrors() {\n    return errors;\n  }\n\n  function getErrorById(errorId) {\n    return errors.find(({id}) => id === errorId);\n  }\n\n  function getDataObjectById(dataObjectId) {\n    return dataObjects.find(({id}) => id === dataObjectId);\n  }\n\n  function getActivityById(actvitiyId) {\n    return activities.find((activity) => activity.id === actvitiyId);\n  }\n}\n\nfunction resolveTypes(mappedContext, typeResolver) {\n  const {\n    definition,\n    activities,\n    dataObjects,\n    errors,\n    messageFlows,\n    processes,\n    sequenceFlows,\n  } = mappedContext;\n\n  definition.Behaviour = typeResolver(definition);\n  processes.forEach(typeResolver);\n  activities.forEach(typeResolver);\n  dataObjects.forEach(typeResolver);\n  errors.forEach(typeResolver);\n  messageFlows.forEach(typeResolver);\n  sequenceFlows.forEach(typeResolver);\n\n  return mappedContext;\n}\n\nfunction mapModdleContext(moddleContext) {\n  const {elementsById, references, rootHandler} = moddleContext;\n  const refKeyPattern = /^(?!\\$).+?Ref$/;\n\n  const definition = {\n    id: rootHandler.element.id,\n    type: rootHandler.element.$type,\n    name: rootHandler.element.name,\n    targetNamespace: rootHandler.element.targetNamespace,\n    exporter: rootHandler.element.exporter,\n    exporterVersion: rootHandler.element.exporterVersion,\n  };\n\n  const {\n    refs,\n    dataInputAssociations,\n    dataOutputAssociations,\n    flowRefs,\n  } = prepareReferences();\n\n  const {\n    activities,\n    dataObjects,\n    errors,\n    messageFlows,\n    processes,\n    sequenceFlows,\n  } = prepareElements(definition, rootHandler.element.rootElements);\n\n  return {\n    definition,\n    activities,\n    dataObjects,\n    errors,\n    messageFlows,\n    processes,\n    sequenceFlows,\n  };\n\n  function prepareReferences() {\n    return references.reduce((result, r) => {\n      const {property, element} = r;\n\n      switch (property) {\n        case 'bpmn:sourceRef': {\n          const flow = upsertFlowRef(element.id, {\n            id: element.id,\n            $type: element.$type,\n            sourceId: r.id,\n            element: elementsById[element.id],\n          });\n          const outbound = result.sourceRefs[r.id] = result.sourceRefs[r.id] || [];\n          outbound.push(flow);\n          break;\n        }\n        case 'bpmn:targetRef': {\n          const flow = upsertFlowRef(element.id, {\n            targetId: r.id,\n          });\n          const inbound = result.targetRefs[r.id] = result.targetRefs[r.id] || [];\n          inbound.push(flow);\n          break;\n        }\n        case 'bpmn:default':\n          upsertFlowRef(r.id, {isDefault: true});\n          break;\n        case 'bpmn:dataObjectRef':\n          result.refs.push(r);\n          break;\n      }\n\n      switch (element.$type) {\n        case 'bpmn:OutputSet':\n        case 'bpmn:InputSet': {\n          break;\n        }\n        case 'bpmn:DataInputAssociation':\n          result.dataInputAssociations.push(r);\n          break;\n        case 'bpmn:DataOutputAssociation':\n          result.dataOutputAssociations.push(r);\n          break;\n      }\n\n      return result;\n\n      function upsertFlowRef(id, value) {\n        const flow = result.flowRefs[id] = result.flowRefs[id] || {};\n        Object.assign(flow, value);\n        return flow;\n      }\n    }, {\n      refs: [],\n      dataInputAssociations: [],\n      dataOutputAssociations: [],\n      flowRefs: {},\n      sourceRefs: {},\n      targetRefs: {},\n    });\n  }\n\n  function prepareElements(parent, elements) {\n    if (!elements) return {};\n\n    return elements.reduce((result, element) => {\n      const {id, $type: type, name} = element;\n\n      let attachedTo;\n      switch (element.$type) {\n        case 'bpmn:DataObjectReference':\n        case 'bpmn:Message':\n          break;\n        case 'bpmn:Collaboration': {\n          if (element.messageFlows) {\n            const {messageFlows: flows} = prepareElements(parent, element.messageFlows);\n            result.messageFlows = result.messageFlows.concat(flows);\n          }\n          break;\n        }\n        case 'bpmn:MessageFlow': {\n          const flowRef = flowRefs[element.id];\n          result.messageFlows.push({\n            ...flowRef,\n            id,\n            type,\n            name,\n            parent: {\n              id: parent.id,\n              type: parent.type,\n            },\n            source: {\n              processId: getElementProcessId(flowRef.sourceId),\n              id: flowRef.sourceId,\n            },\n            target: {\n              processId: getElementProcessId(flowRef.targetId),\n              id: flowRef.targetId,\n            },\n            behaviour: {...element},\n          });\n          break;\n        }\n        case 'bpmn:Error': {\n          result.errors.push({\n            id,\n            type,\n            name,\n            parent: {\n              id: parent.id,\n              type: parent.type,\n            },\n            behaviour: {...element},\n          });\n          break;\n        }\n        case 'bpmn:DataObject': {\n          result.dataObjects.push({\n            id,\n            name,\n            type,\n            parent: {\n              id: parent.id,\n              type: parent.type,\n            },\n            references: prepareDataObjectReferences(),\n            behaviour: {...element},\n          });\n          break;\n        }\n        case 'bpmn:SequenceFlow': {\n          const flowRef = flowRefs[element.id];\n          result.sequenceFlows.push({\n            id,\n            name,\n            type,\n            parent: {\n              id: parent.id,\n              type: parent.type,\n            },\n            isDefault: flowRef.isDefault,\n            targetId: flowRef.targetId,\n            sourceId: flowRef.sourceId,\n            behaviour: {...element},\n          });\n          break;\n        }\n        case 'bpmn:SubProcess':\n        case 'bpmn:Process': {\n          const bp = {\n            id,\n            type,\n            name,\n            parent: {\n              id: parent.id,\n              type: parent.type,\n            },\n            behaviour: prepareActivityBehaviour(),\n          };\n          if (type === 'bpmn:Process') result.processes.push(bp);\n          else result.activities.push(bp);\n\n          const subElements = prepareElements({id, type}, element.flowElements);\n          if (subElements.activities) {\n            result.activities = result.activities.concat(subElements.activities);\n          }\n          if (subElements.sequenceFlows) {\n            result.sequenceFlows = result.sequenceFlows.concat(subElements.sequenceFlows);\n          }\n          if (subElements.dataObjects) {\n            result.dataObjects = result.dataObjects.concat(subElements.dataObjects);\n          }\n\n          break;\n        }\n        case 'bpmn:BoundaryEvent': {\n          attachedTo = spreadRef(element.attachedToRef);\n          result.activities.push(prepareActivity({attachedTo}));\n          break;\n        }\n        case 'bpmn:SendTask':\n        case 'bpmn:ServiceTask': {\n          result.activities.push(prepareActivity());\n          break;\n        }\n        default: {\n          result.activities.push(prepareActivity());\n        }\n      }\n\n      return result;\n\n      function prepareActivity(behaviour) {\n        return {\n          id,\n          type,\n          name,\n          parent: {\n            id: parent.id,\n            type: parent.type,\n          },\n          behaviour: prepareActivityBehaviour(behaviour),\n        };\n      }\n\n      function prepareActivityBehaviour(behaviour) {\n        const resources = element.resources && element.resources.map(mapResource);\n\n        return {\n          ...behaviour,\n          ...element,\n          eventDefinitions: element.eventDefinitions && element.eventDefinitions.map(mapActivityBehaviour),\n          loopCharacteristics: element.loopCharacteristics && mapActivityBehaviour(element.loopCharacteristics),\n          ioSpecification: element.ioSpecification && mapActivityBehaviour(element.ioSpecification),\n          resources,\n        };\n      }\n\n      function prepareDataObjectReferences() {\n        const objectRefs = refs.filter((objectRef) => objectRef.id === element.id);\n\n        return objectRefs.map((objectRef) => {\n          return {\n            id: objectRef.element.id,\n            type: objectRef.element.$type,\n            behaviour: {...objectRef.element},\n          };\n        });\n      }\n    }, {\n      activities: [],\n      dataObjects: [],\n      errors: [],\n      messageFlows: [],\n      processes: [],\n      sequenceFlows: [],\n    });\n  }\n\n  function getElementProcessId(elementId) {\n    const bp = rootHandler.element.rootElements.find((e) => e.$type === 'bpmn:Process' && e.flowElements.find((ce) => ce.id === elementId));\n    return bp.id;\n  }\n\n  function mapResource(resource) {\n    if (!resource) return;\n\n    const {$type: type, resourceAssignmentExpression} = resource;\n\n    return {\n      type,\n      expression: resourceAssignmentExpression.expression && resourceAssignmentExpression.expression.body,\n      behaviour: {...resource},\n    };\n  }\n\n  function mapActivityBehaviour(ed) {\n    if (!ed) return;\n\n    const {$type: type} = ed;\n    let behaviour = {...ed};\n\n    const keys = Object.getOwnPropertyNames(ed);\n    for (const key of keys) {\n      if (refKeyPattern.test(key)) behaviour[key] = spreadRef(ed[key]);\n    }\n\n    switch (type) {\n      case 'bpmn:ConditionalEventDefinition': {\n        behaviour.expression = behaviour.condition && behaviour.condition.body;\n        break;\n      }\n      case 'bpmn:InputOutputSpecification': {\n        behaviour = prepareIoSpecificationBehaviour(ed);\n        break;\n      }\n      case 'bpmn:MultiInstanceLoopCharacteristics': {\n        behaviour.loopCardinality = ed.loopCardinality && ed.loopCardinality.body;\n        behaviour.completionCondition = ed.completionCondition && ed.completionCondition.body;\n        break;\n      }\n      case 'bpmn:TimerEventDefinition': {\n        behaviour.timeDuration = ed.timeDuration && ed.timeDuration.body;\n        break;\n      }\n    }\n\n    return {\n      type,\n      behaviour,\n    };\n  }\n\n  function prepareIoSpecificationBehaviour(ioSpecificationDef) {\n    const {dataInputs, dataOutputs} = ioSpecificationDef;\n\n    return {\n      dataInputs: dataInputs && dataInputs.map((dataDef) => {\n        return {\n          ...dataDef,\n          type: dataDef.$type,\n          behaviour: getDataInputBehaviour(dataDef.id),\n        };\n      }),\n      dataOutputs: dataOutputs && dataOutputs.map((dataDef) => {\n        return {\n          ...dataDef,\n          type: dataDef.$type,\n          behaviour: getDataOutputBehaviour(dataDef.id),\n        };\n      }),\n    };\n  }\n\n  function getDataInputBehaviour(dataInputId) {\n    const target = dataInputAssociations.find((assoc) => assoc.property === 'bpmn:targetRef' && assoc.id === dataInputId && assoc.element);\n    const source = target && dataInputAssociations.find((assoc) => assoc.property === 'bpmn:sourceRef' && assoc.element && assoc.element.id === target.element.id);\n\n    return {\n      association: {\n        source: source && {...source, dataObject: getDataObjectRef(source.id)},\n        target: target && {...target},\n      },\n    };\n  }\n\n  function getDataObjectRef(dataObjectReferenceId) {\n    const dataObjectRef = refs.find((dor) => dor.element && dor.element.id === dataObjectReferenceId);\n    if (!dataObjectRef) return;\n    return {...dataObjectRef};\n  }\n\n  function getDataOutputBehaviour(dataOutputId) {\n    const source = dataOutputAssociations.find((assoc) => assoc.property === 'bpmn:sourceRef' && assoc.id === dataOutputId && assoc.element);\n    const target = source && dataOutputAssociations.find((assoc) => assoc.property === 'bpmn:targetRef' && assoc.element && assoc.element.id === source.element.id);\n\n    return {\n      association: {\n        source: source && {...source},\n        target: target && {...target, dataObject: getDataObjectRef(target.id)},\n      },\n    };\n  }\n\n  function spreadRef(ref) {\n    if (!ref) return;\n    const {id, $type: type, name} = ref;\n    return {id, type, name};\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/moddle-context-serializer/index.js?");

            /***/ }),

          /***/ "./node_modules/ms/index.js":
          /*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
          /*! no static exports found */
          /***/ (function(module, exports) {

            eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/ms/index.js?");

            /***/ }),

          /***/ "./node_modules/process/browser.js":
          /*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
          /*! no static exports found */
          /***/ (function(module, exports) {

            eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/process/browser.js?");

            /***/ }),

          /***/ "./node_modules/smqp/index.js":
          /*!************************************!*\
  !*** ./node_modules/smqp/index.js ***!
  \************************************/
          /*! exports provided: default, Broker, getRoutingKeyPattern */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_Broker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Broker */ \"./node_modules/smqp/src/Broker.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Broker\", function() { return _src_Broker__WEBPACK_IMPORTED_MODULE_0__[\"Broker\"]; });\n\n/* harmony import */ var _src_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/shared */ \"./node_modules/smqp/src/shared.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getRoutingKeyPattern\", function() { return _src_shared__WEBPACK_IMPORTED_MODULE_1__[\"getRoutingKeyPattern\"]; });\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_src_Broker__WEBPACK_IMPORTED_MODULE_0__[\"Broker\"]);\n\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/smqp/index.js?");

            /***/ }),

          /***/ "./node_modules/smqp/src/Broker.js":
          /*!*****************************************!*\
  !*** ./node_modules/smqp/src/Broker.js ***!
  \*****************************************/
          /*! exports provided: Broker */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Broker\", function() { return Broker; });\n/* harmony import */ var _Exchange__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Exchange */ \"./node_modules/smqp/src/Exchange.js\");\n/* harmony import */ var _Queue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Queue */ \"./node_modules/smqp/src/Queue.js\");\n\n\n\nfunction Broker(owner) {\n  const exchanges = [];\n  const queues = [];\n  const consumers = [];\n  const events = Object(_Exchange__WEBPACK_IMPORTED_MODULE_0__[\"EventExchange\"])();\n\n  const broker = {\n    owner,\n    subscribe,\n    subscribeOnce,\n    subscribeTmp,\n    unsubscribe,\n    assertExchange,\n    ack,\n    ackAll,\n    nack,\n    nackAll,\n    cancel,\n    close,\n    deleteExchange,\n    bindExchange,\n    bindQueue,\n    assertQueue,\n    consume,\n    createQueue,\n    deleteQueue,\n    get: getMessageFromQueue,\n    getExchange,\n    getQueue,\n    getState,\n    on,\n    off,\n    prefetch: setPrefetch,\n    publish,\n    purgeQueue,\n    recover,\n    reject,\n    sendToQueue,\n    stop,\n    unbindExchange,\n    unbindQueue,\n  };\n\n  Object.defineProperty(broker, 'exchangeCount', {\n    enumerable: true,\n    get: () => exchanges.length\n  });\n\n  Object.defineProperty(broker, 'queueCount', {\n    enumerable: true,\n    get: () => queues.length\n  });\n\n  Object.defineProperty(broker, 'consumerCount', {\n    enumerable: true,\n    get: () => consumers.length\n  });\n\n  return broker;\n\n  function subscribe(exchangeName, pattern, queueName, onMessage, options = {durable: true}) {\n    if (!exchangeName || !pattern || typeof onMessage !== 'function') throw new Error('exchange name, pattern, and message callback are required');\n    if (options && options.consumerTag) validateConsumerTag(options.consumerTag);\n\n    assertExchange(exchangeName);\n    const queue = assertQueue(queueName, options);\n\n    bindQueue(queue.name, exchangeName, pattern, options);\n\n    return queue.assertConsumer(onMessage, options, owner);\n  }\n\n  function subscribeTmp(exchangeName, pattern, onMessage, options = {}) {\n    return subscribe(exchangeName, pattern, null, onMessage, {...options, durable: false});\n  }\n\n  function subscribeOnce(exchangeName, pattern, onMessage, options = {}) {\n    if (typeof onMessage !== 'function') throw new Error('message callback is required');\n    if (options && options.consumerTag) validateConsumerTag(options.consumerTag);\n\n    assertExchange(exchangeName);\n    const onceOptions = {autoDelete: true, durable: false, priority: options.priority || 0};\n    const onceQueue = createQueue(null, onceOptions);\n\n    bindQueue(onceQueue.name, exchangeName, pattern, {...onceOptions});\n\n    return consume(onceQueue.name, wrappedOnMessage, {noAck: true, consumerTag: options.consumerTag});\n\n    function wrappedOnMessage(...args) {\n      onceQueue.delete();\n      onMessage(...args);\n    }\n  }\n\n  function unsubscribe(queueName, onMessage) {\n    const queue = getQueue(queueName);\n    if (!queue) return;\n    queue.dismiss(onMessage);\n  }\n\n  function assertExchange(exchangeName, type, options) {\n    let exchange = getExchangeByName(exchangeName);\n    if (exchange) {\n      if (type && exchange.type !== type) throw new Error('Type doesn\\'t match');\n    } else {\n      exchange = Object(_Exchange__WEBPACK_IMPORTED_MODULE_0__[\"Exchange\"])(exchangeName, type || 'topic', options);\n      exchange.on('delete', () => {\n        const idx = exchanges.indexOf(exchange);\n        if (idx === -1) return;\n        exchanges.splice(idx, 1);\n      });\n      exchange.on('return', (_, msg) => {\n        events.publish('return', msg);\n      });\n      exchanges.push(exchange);\n    }\n\n    return exchange;\n  }\n\n  function getExchangeByName(exchangeName) {\n    return exchanges.find((exchange) => exchange.name === exchangeName);\n  }\n\n  function bindQueue(queueName, exchangeName, pattern, bindOptions) {\n    const exchange = getExchange(exchangeName);\n    const queue = getQueue(queueName);\n    exchange.bind(queue, pattern, bindOptions);\n  }\n\n  function unbindQueue(queueName, exchangeName, pattern) {\n    const exchange = getExchange(exchangeName);\n    if (!exchange) return;\n    const queue = getQueue(queueName);\n    if (!queue) return;\n    exchange.unbind(queue, pattern);\n  }\n\n  function consume(queueName, onMessage, options) {\n    const queue = getQueue(queueName);\n    if (!queue) throw new Error(`Queue with name <${queueName}> was not found`);\n\n    if (options) validateConsumerTag(options.consumerTag);\n\n    return queue.consume(onMessage, options, owner);\n  }\n\n  function cancel(consumerTag) {\n    const consumer = consumers.find((c) => c.consumerTag === consumerTag);\n    if (!consumer) return false;\n    consumer.cancel(false);\n    return true;\n  }\n\n  function getExchange(exchangeName) {\n    return exchanges.find(({name}) => name === exchangeName);\n  }\n\n  function deleteExchange(exchangeName, {ifUnused} = {}) {\n    const idx = exchanges.findIndex((exchange) => exchange.name === exchangeName);\n    if (idx === -1) return false;\n\n    const exchange = exchanges[idx];\n    if (ifUnused && exchange.bindingCount) return false;\n\n    exchanges.splice(idx, 1);\n    exchange.close();\n    return true;\n  }\n\n  function stop() {\n    exchanges.forEach((exchange) => exchange.stop());\n    queues.forEach((queue) => queue.stop());\n  }\n\n  function close() {\n    exchanges.forEach((e) => e.close());\n    queues.forEach((q) => q.close());\n  }\n\n  function getState() {\n    return {\n      exchanges: getExchangeState(),\n      queues: getQueuesState(),\n    };\n\n    function getExchangeState() {\n      return exchanges.reduce((result, exchange) => {\n        if (!exchange.options.durable) return result;\n        if (!result) result = [];\n        result.push(exchange.getState());\n        return result;\n      }, undefined);\n    }\n  }\n\n  function recover(state) {\n    if (!state) {\n      queues.forEach((queue) => queue.stopped && queue.recover());\n      exchanges.forEach((exchange) => exchange.stopped && exchange.recover(null, getQueue));\n      return;\n    }\n\n    if (state.queues) state.queues.forEach(recoverQueue);\n    queues.forEach((queue) => queue.stopped && queue.recover());\n\n    if (state.exchanges) state.exchanges.forEach(recoverExchange);\n    exchanges.forEach((exchange) => exchange.stopped && exchange.recover(null, getQueue));\n\n    return broker;\n\n    function recoverQueue(qState) {\n      const queue = assertQueue(qState.name, qState.options);\n      queue.recover(qState);\n    }\n\n    function recoverExchange(eState) {\n      const exchange = assertExchange(eState.name, eState.type, eState.options);\n      exchange.recover(eState, getQueue);\n    }\n  }\n\n  function bindExchange() {}\n  function unbindExchange() {}\n\n  function publish(exchangeName, routingKey, content, options) {\n    const exchange = getExchangeByName(exchangeName);\n    if (!exchange) return;\n    return exchange.publish(routingKey, content, options);\n  }\n\n  function purgeQueue(queueName) {\n    const queue = getQueue(queueName);\n    if (!queue) return;\n    return queue.purge();\n  }\n\n  function sendToQueue(queueName, content, options) {\n    const queue = getQueue(queueName);\n    if (!queue) throw new Error(`Queue named ${queueName} doesn't exists`);\n    return queue.queueMessage(null, content, options);\n  }\n\n  function getQueuesState() {\n    return queues.reduce((result, queue) => {\n      if (!queue.options.durable) return result;\n      if (!result) result = [];\n      result.push(queue.getState());\n      return result;\n    }, undefined);\n  }\n\n  function createQueue(queueName, options) {\n    if (getQueue(queueName)) throw new Error(`Queue named ${queueName} already exists`);\n\n    const queue = Object(_Queue__WEBPACK_IMPORTED_MODULE_1__[\"Queue\"])(queueName, options, Object(_Exchange__WEBPACK_IMPORTED_MODULE_0__[\"EventExchange\"])());\n    queue.on('delete', onDelete);\n    queue.on('dead-letter', onDeadLetter);\n    queue.on('consume', (_, event) => consumers.push(event.content));\n    queue.on('consumer.cancel', (_, event) => {\n      const idx = consumers.indexOf(event.content);\n      consumers.splice(idx, 1);\n    });\n\n    queues.push(queue);\n    return queue;\n\n    function onDelete() {\n      const idx = queues.indexOf(queue);\n      if (idx === -1) return;\n      queues.splice(idx, 1);\n    }\n\n    function onDeadLetter(_, {content}) {\n      const exchange = getExchange(content.deadLetterExchange);\n      if (!exchange) return;\n      exchange.publish(content.message.fields.routingKey, content.message.content, content.message.properties);\n    }\n  }\n\n  function getQueue(queueName) {\n    if (!queueName) return;\n    const idx = queues.findIndex((queue) => queue.name === queueName);\n    if (idx > -1) return queues[idx];\n  }\n\n  function assertQueue(queueName, options = {}) {\n    if (!queueName) return createQueue(null, options);\n\n    const queue = getQueue(queueName);\n    options = {durable: true, ...options};\n    if (!queue) return createQueue(queueName, options);\n\n    if (queue.options.durable !== options.durable) throw new Error('Durable doesn\\'t match');\n    return queue;\n  }\n\n  function deleteQueue(queueName, options) {\n    if (!queueName) return false;\n    const queue = getQueue(queueName);\n    if (!queue) return false;\n    return queue.delete(options);\n  }\n\n  function getMessageFromQueue(queueName, {noAck} = {}) {\n    const queue = getQueue(queueName);\n    if (!queue) return;\n\n    return queue.get({noAck});\n  }\n\n  function ack(message, allUpTo) {\n    message.ack(allUpTo);\n  }\n\n  function ackAll() {\n    queues.forEach((q) => q.ackAll());\n  }\n\n  function nack(message, allUpTo, requeue) {\n    message.nack(allUpTo, requeue);\n  }\n\n  function nackAll(requeue) {\n    queues.forEach((q) => q.nackAll(requeue));\n  }\n\n  function reject(message, requeue) {\n    message.reject(requeue);\n  }\n\n  function validateConsumerTag(consumerTag) {\n    if (!consumerTag) return true;\n\n    if (consumers.find((c) => c.consumerTag === consumerTag)) {\n      throw new Error(`Consumer tag must be unique, ${consumerTag} is occupied`);\n    }\n\n    return true;\n  }\n\n  function on(eventName, callback) {\n    switch (eventName) {\n      case 'return': {\n        return events.on('return', getEventCallback(), {origin: callback});\n      }\n    }\n\n    function getEventCallback() {\n      return function eventCallback(_, msg) {\n        callback(msg.content.content);\n      };\n    }\n  }\n\n  function off(eventName, callback) {\n    for (const binding of events.bindings) {\n      if (binding.pattern === eventName) {\n        for (const consumer of binding.queue.consumers) {\n          if (consumer.options && consumer.options.origin === callback) {\n            consumer.cancel();\n          }\n        }\n      }\n    }\n  }\n\n  function setPrefetch() {}\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/smqp/src/Broker.js?");

            /***/ }),

          /***/ "./node_modules/smqp/src/Exchange.js":
          /*!*******************************************!*\
  !*** ./node_modules/smqp/src/Exchange.js ***!
  \*******************************************/
          /*! exports provided: Exchange, EventExchange */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Exchange\", function() { return Exchange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventExchange\", function() { return EventExchange; });\n/* harmony import */ var _Message__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Message */ \"./node_modules/smqp/src/Message.js\");\n/* harmony import */ var _Queue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Queue */ \"./node_modules/smqp/src/Queue.js\");\n/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared */ \"./node_modules/smqp/src/shared.js\");\n\n\n\n\n\n\nfunction Exchange(name, type, options) {\n  const eventExchange = EventExchange();\n  return ExchangeBase(name, true, type, options, eventExchange);\n}\n\nfunction EventExchange(name) {\n  if (!name) name = `smq.ename-${Object(_shared__WEBPACK_IMPORTED_MODULE_2__[\"generateId\"])()}`;\n  return ExchangeBase(name, false, 'topic', {durable: false, autoDelete: true});\n}\n\nfunction ExchangeBase(name, isExchange, type = 'topic', options = {}, eventExchange) {\n  if (!name) throw new Error('Exchange name is required');\n  if (['topic', 'direct'].indexOf(type) === -1) throw Error('Exchange type must be one of topic or direct');\n\n  const deliveryQueue = Object(_Queue__WEBPACK_IMPORTED_MODULE_1__[\"Queue\"])('delivery-q', {}, {emit: onInternalQueueEmit});\n  let consumer = deliveryQueue.consume(type === 'topic' ? topic : direct);\n  if (!isExchange) eventExchange = undefined;\n\n  const bindings = [];\n  let stopped;\n  options = {durable: true, autoDelete: true, ...options};\n\n  const exchange = {\n    name,\n    type,\n    options,\n    bind,\n    close,\n    emit,\n    getBinding,\n    getState,\n    on,\n    off,\n    publish,\n    recover,\n    stop,\n    unbind,\n    unbindQueueByName,\n  };\n\n  Object.defineProperty(exchange, 'bindingCount', {\n    enumerable: true,\n    get: () => bindings.length\n  });\n\n  Object.defineProperty(exchange, 'bindings', {\n    enumerable: true,\n    get: () => bindings.slice()\n  });\n\n  Object.defineProperty(exchange, 'stopped', {\n    enumerable: true,\n    get: () => stopped\n  });\n\n  return exchange;\n\n  function publish(routingKey, content, properties = {}) {\n    if (stopped) return;\n    return deliveryQueue.queueMessage({routingKey}, {\n      content,\n      properties,\n    });\n  }\n\n  function topic(routingKey, message) {\n    const deliverTo = getConcernedBindings(routingKey);\n    const publishedMsg = message.content;\n\n    if (!deliverTo.length) {\n      message.ack();\n      if (publishedMsg.properties.mandatory) {\n        emitReturn(routingKey, publishedMsg);\n      }\n      return 0;\n    }\n\n    message.ack();\n    deliverTo.forEach(({queue}) => publishToQueue(queue, routingKey, publishedMsg.content, publishedMsg.properties));\n  }\n\n  function direct(routingKey, message) {\n    const deliverTo = getConcernedBindings(routingKey);\n    const publishedMsg = message.content;\n\n    const first = deliverTo[0];\n    if (!first) {\n      message.ack();\n      if (publishedMsg.properties.mandatory) {\n        emitReturn(routingKey, publishedMsg);\n      }\n      return 0;\n    }\n\n    if (deliverTo.length > 1) shift(deliverTo[0]);\n\n    message.ack();\n    publishToQueue(first.queue, routingKey, publishedMsg.content, publishedMsg.properties);\n  }\n\n  function publishToQueue(queue, routingKey, content, properties) {\n    queue.queueMessage({routingKey, exchange: name}, content, properties);\n  }\n\n  function emitReturn(routingKey, returnMessage) {\n    emit('return', Object(_Message__WEBPACK_IMPORTED_MODULE_0__[\"Message\"])({routingKey, exchange: name}, returnMessage.content, returnMessage.properties));\n  }\n\n  function getConcernedBindings(routingKey) {\n    return bindings.reduce((result, bound) => {\n      if (bound.testPattern(routingKey)) result.push(bound);\n      return result;\n    }, []);\n  }\n\n  function shift(bound) {\n    const idx = bindings.indexOf(bound);\n    bindings.splice(idx, 1);\n    bindings.push(bound);\n  }\n\n  function bind(queue, pattern, bindOptions) {\n    const bound = bindings.find((bq) => bq.queue === queue && bq.pattern === pattern);\n    if (bound) return bound;\n\n    const binding = Binding(queue, pattern, bindOptions);\n    bindings.push(binding);\n    bindings.sort(_shared__WEBPACK_IMPORTED_MODULE_2__[\"sortByPriority\"]);\n\n    emit('bind', binding);\n\n    return binding;\n  }\n\n  function unbind(queue, pattern) {\n    const idx = bindings.findIndex((bq) => bq.queue === queue && bq.pattern === pattern);\n    if (idx === -1) return;\n\n    const [binding] = bindings.splice(idx, 1);\n    binding.close();\n\n    emit('unbind', binding);\n\n    if (!bindings.length && options.autoDelete) emit('delete', exchange);\n  }\n\n  function unbindQueueByName(queueName) {\n    const bounds = bindings.filter((bq) => bq.queue.name === queueName);\n    bounds.forEach((bound) => {\n      unbind(bound.queue, bound.pattern);\n    });\n  }\n\n  function close() {\n    bindings.slice().forEach((binding) => binding.close());\n    deliveryQueue.unbindConsumer(consumer);\n    deliveryQueue.close();\n  }\n\n  function getState() {\n    return JSON.parse(JSON.stringify({\n      name: name,\n      type,\n      options: {...options},\n      deliveryQueue,\n      bindings: getBoundState()}));\n\n    function getBoundState() {\n      return bindings.reduce((result, binding) => {\n        if (!binding.queue.options.durable) return result;\n        if (!result) result = [];\n        result.push(binding);\n        return result;\n      }, undefined);\n    }\n  }\n\n  function stop() {\n    stopped = true;\n  }\n\n  function recover(state, getQueue) {\n    stopped = false;\n\n    recoverBindings();\n    if (state) {\n      name = exchange.name = state.name;\n      deliveryQueue.recover(state.deliveryQueue);\n      consumer = deliveryQueue.consume(type === 'topic' ? topic : direct);\n    }\n\n    return exchange;\n\n    function recoverBindings() {\n      if (!state || !state.bindings) return;\n      state.bindings.forEach((bindingState) => {\n        const queue = getQueue(bindingState.queueName);\n        if (!queue) return;\n        bind(queue, bindingState.pattern, bindingState.options);\n      });\n    }\n  }\n\n  function getBinding(queueName, pattern) {\n    return bindings.find((binding) => binding.queue.name === queueName && binding.pattern === pattern);\n  }\n\n  function emit(eventName, content) {\n    if (isExchange) return eventExchange.publish(`exchange.${eventName}`, content);\n    publish(eventName, content);\n  }\n\n  function on(pattern, handler, consumeOptions = {}) {\n    if (isExchange) return eventExchange.on(`exchange.${pattern}`, handler);\n\n    const eventQueue = Object(_Queue__WEBPACK_IMPORTED_MODULE_1__[\"Queue\"])(null, {durable: false, autoDelete: true});\n    bind(eventQueue, pattern);\n    const eventConsumer = eventQueue.consume(handler, {...consumeOptions, noAck: true}, exchange);\n    return eventConsumer;\n  }\n\n  function off(pattern, handler) {\n    if (isExchange) return eventExchange.off(`exchange.${pattern}`, handler);\n\n    for (const binding of bindings) {\n      if (binding.pattern === pattern) {\n        binding.queue.dismiss(handler);\n      }\n    }\n  }\n\n  function Binding(queue, pattern, bindOptions = {}) {\n    const rPattern = Object(_shared__WEBPACK_IMPORTED_MODULE_2__[\"getRoutingKeyPattern\"])(pattern);\n    queue.on('delete', closeBinding);\n\n    const binding = {\n      id: `${queue.name}/${pattern}`,\n      options: {priority: 0, ...bindOptions},\n      pattern,\n      close: closeBinding,\n      testPattern,\n    };\n\n    Object.defineProperty(binding, 'queue', {\n      enumerable: false,\n      value: queue,\n    });\n\n    Object.defineProperty(binding, 'queueName', {\n      enumerable: true,\n      get: () => queue.name,\n    });\n\n    return binding;\n\n    function testPattern(routingKey) {\n      return rPattern.test(routingKey);\n    }\n\n    function closeBinding() {\n      unbind(queue, pattern);\n    }\n  }\n\n  function onInternalQueueEmit() {}\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/smqp/src/Exchange.js?");

            /***/ }),

          /***/ "./node_modules/smqp/src/Message.js":
          /*!******************************************!*\
  !*** ./node_modules/smqp/src/Message.js ***!
  \******************************************/
          /*! exports provided: Message */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Message\", function() { return Message; });\n/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared */ \"./node_modules/smqp/src/shared.js\");\n\n\n\n\nfunction Message(fields = {}, content, properties = {}, onConsumed) {\n  let pending = false;\n  let consumedCallback;\n\n  const messageId = properties.messageId || `smq.mid-${Object(_shared__WEBPACK_IMPORTED_MODULE_0__[\"generateId\"])()}`;\n  const message = {\n    fields: {...fields, consumerTag: undefined},\n    content,\n    properties: {...properties, messageId},\n    consume,\n    ack,\n    nack,\n    reject,\n  };\n\n  Object.defineProperty(message, 'messageId', {\n    get: () => messageId\n  });\n\n  Object.defineProperty(message, 'consumerTag', {\n    get: () => message.fields.consumerTag,\n    set: (value) => {\n      message.fields.consumerTag = value;\n    },\n  });\n\n  Object.defineProperty(message, 'pending', {\n    get: () => pending\n  });\n\n  return message;\n\n  function consume({consumerTag} = {}, consumedCb) {\n    pending = true;\n    message.fields.consumerTag = consumerTag;\n    consumedCallback = consumedCb;\n  }\n\n  function reset() {\n    pending = false;\n  }\n\n  function ack(allUpTo) {\n    if (!pending) return;\n    consumed('ack', allUpTo);\n  }\n\n  function nack(allUpTo, requeue = true) {\n    if (!pending) return;\n    consumed('nack', allUpTo, requeue);\n  }\n\n  function reject(requeue = true) {\n    nack(false, requeue);\n  }\n\n  function consumed(operation, allUpTo, requeue) {\n    [consumedCallback, onConsumed, reset].forEach((fn) => {\n      if (fn) fn(message, operation, allUpTo, requeue);\n    });\n  }\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/smqp/src/Message.js?");

            /***/ }),

          /***/ "./node_modules/smqp/src/Queue.js":
          /*!****************************************!*\
  !*** ./node_modules/smqp/src/Queue.js ***!
  \****************************************/
          /*! exports provided: Queue, Consumer */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Queue\", function() { return Queue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Consumer\", function() { return Consumer; });\n/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared */ \"./node_modules/smqp/src/shared.js\");\n/* harmony import */ var _Message__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Message */ \"./node_modules/smqp/src/Message.js\");\n\n\n\n\n\nfunction Queue(name, options = {}, eventEmitter) {\n  if (!name) name = `smq.qname-${Object(_shared__WEBPACK_IMPORTED_MODULE_0__[\"generateId\"])()}`;\n\n  const messages = [], consumers = [];\n  let exclusivelyConsumed, stopped, pendingMessageCount = 0;\n  options = {autoDelete: true, ...options};\n\n  let maxLength = 'maxLength' in options ? options.maxLength : Infinity;\n\n  const {deadLetterExchange, deadLetterRoutingKey} = options;\n\n  const queue = {\n    name,\n    options,\n    messages,\n    ack,\n    ackAll,\n    assertConsumer,\n    cancel,\n    close,\n    consume,\n    delete: deleteQueue,\n    dequeueMessage,\n    dismiss,\n    get,\n    getState,\n    nack,\n    nackAll,\n    on,\n    peek,\n    purge,\n    queueMessage,\n    recover,\n    reject,\n    stop,\n    unbindConsumer,\n  };\n\n  Object.defineProperty(queue, 'messageCount', {\n    enumerable: true,\n    get: () => messages.length\n  });\n\n  Object.defineProperty(queue, 'consumers', {\n    get: () => consumers.slice()\n  });\n\n  Object.defineProperty(queue, 'consumerCount', {\n    get: () => consumers.length\n  });\n\n  Object.defineProperty(queue, 'stopped', {\n    get: () => stopped\n  });\n\n  Object.defineProperty(queue, 'exclusive', {\n    get: () => exclusivelyConsumed\n  });\n\n  Object.defineProperty(queue, 'maxLength', {\n    set(value) {\n      maxLength = options.maxLength = value;\n    },\n    get: () => maxLength\n  });\n\n  Object.defineProperty(queue, 'capacity', {\n    get: getCapacity\n  });\n\n  return queue;\n\n  function queueMessage(fields, content, properties, onMessageQueued) {\n    if (stopped) return;\n\n    const message = Object(_Message__WEBPACK_IMPORTED_MODULE_1__[\"Message\"])(fields, content, properties, onMessageConsumed);\n\n    const capacity = getCapacity();\n    messages.push(message);\n    pendingMessageCount++;\n\n    let discarded;\n    switch (capacity) {\n      case 0:\n        discarded = evictOld();\n      case 1:\n        emit('saturated');\n    }\n\n    if (onMessageQueued) onMessageQueued(message);\n    emit('message', message);\n\n    return discarded ? 0 : consumeNext();\n\n    function evictOld() {\n      const evict = get();\n      if (!evict) return;\n      evict.nack(false, false);\n      return evict === message;\n    }\n  }\n\n  function consumeNext() {\n    if (stopped) return;\n    if (!pendingMessageCount) return;\n    if (!consumers.length) return;\n\n    const readyConsumers = consumers.filter((consumer) => consumer.ready);\n    if (!readyConsumers.length) return 0;\n\n    let consumed = 0;\n    for (const consumer of readyConsumers) {\n      const msgs = consumeMessages(consumer.capacity, consumer.options);\n      if (!msgs.length) return consumed;\n      consumer.push(msgs);\n      consumed += msgs.length;\n    }\n\n    return consumed;\n  }\n\n  function consume(onMessage, consumeOptions = {}, owner) {\n    if (exclusivelyConsumed && consumers.length) throw new Error(`Queue ${name} is exclusively consumed by ${consumers[0].consumerTag}`);\n    else if (consumeOptions.exclusive && consumers.length) throw new Error(`Queue ${name} already has consumers and cannot be exclusively consumed`);\n\n    const consumer = Consumer(queue, onMessage, consumeOptions, owner, consumerEmitter());\n    consumers.push(consumer);\n    consumers.sort(_shared__WEBPACK_IMPORTED_MODULE_0__[\"sortByPriority\"]);\n\n    exclusivelyConsumed = consumer.options.exclusive;\n\n    emit('consume', consumer);\n\n    const pendingMessages = consumeMessages(consumer.capacity, consumer.options);\n    if (pendingMessages.length) consumer.push(pendingMessages);\n\n    return consumer;\n\n    function consumerEmitter() {\n      return {\n        emit: onConsumerEmit,\n        on: onConsumer,\n      };\n\n      function onConsumerEmit(eventName, ...args) {\n        if (eventName === 'consumer.cancel') {\n          unbindConsumer(consumer);\n        }\n        emit(eventName, ...args);\n      }\n\n      function onConsumer(...args) {\n        if (eventEmitter && eventEmitter.on) return;\n        eventEmitter.on(...args);\n      }\n    }\n  }\n\n  function assertConsumer(onMessage, consumeOptions = {}, owner) {\n    if (!consumers.length) return consume(onMessage, consumeOptions, owner);\n    for (const consumer of consumers) {\n      if (consumer.onMessage !== onMessage) continue;\n\n      if (consumeOptions.consumerTag && consumeOptions.consumerTag !== consumer.consumerTag) {\n        continue;\n      } else if ('exclusive' in consumeOptions && consumeOptions.exclusive !== consumer.options.exclusive) {\n        continue;\n      }\n\n      return consumer;\n    }\n    return consume(onMessage, consumeOptions, owner);\n  }\n\n  function get({noAck, consumerTag} = {}) {\n    const message = consumeMessages(1, {noAck, consumerTag})[0];\n    if (!message) return;\n    if (noAck) dequeue(message);\n\n    return message;\n  }\n\n  function consumeMessages(n, consumeOptions) {\n    if (stopped || !pendingMessageCount || !n) return [];\n\n    const msgs = [];\n    for (const message of messages) {\n      if (message.pending) continue;\n      message.consume(consumeOptions);\n      pendingMessageCount--;\n      msgs.push(message);\n      if (!--n) break;\n    }\n\n    return msgs;\n  }\n\n  function ack(message, allUpTo) {\n    onMessageConsumed(message, 'ack', allUpTo);\n  }\n\n  function nack(message, allUpTo, requeue = true) {\n    onMessageConsumed(message, 'nack', allUpTo, requeue);\n  }\n\n  function reject(message, requeue = true) {\n    onMessageConsumed(message, 'nack', false, requeue);\n  }\n\n  function onMessageConsumed(message, operation, allUpTo, requeue) {\n    if (stopped) return;\n    const pending = allUpTo && getPendingMessages(message);\n\n    switch (operation) {\n      case 'ack': {\n        if (!dequeue(message)) return;\n        break;\n      }\n      case 'nack':\n        if (requeue) {\n          requeueMessage(message);\n          break;\n        }\n\n        if (!dequeue(message)) return;\n        break;\n    }\n\n    let capacity;\n    if (!messages.length) emit('depleted', queue);\n    else if ((capacity = getCapacity()) === 1) emit('ready', capacity);\n\n    if (!pending || !pending.length) consumeNext();\n\n    if (deadLetterExchange) {\n      const deadMessage = Object(_Message__WEBPACK_IMPORTED_MODULE_1__[\"Message\"])(message.fields, message.content, message.properties);\n      if (deadLetterRoutingKey) deadMessage.fields.routingKey = deadLetterRoutingKey;\n\n      emit('dead-letter', {\n        deadLetterExchange,\n        message: deadMessage\n      });\n    }\n\n    if (pending && pending.length) {\n      pending.forEach((msg) => msg[operation](false, requeue));\n    }\n  }\n\n  function ackAll() {\n    getPendingMessages().forEach((msg) => msg.ack(false));\n  }\n\n  function nackAll(requeue = true) {\n    getPendingMessages().forEach((msg) => msg.nack(false, requeue));\n  }\n\n  function getPendingMessages(fromAndNotIncluding) {\n    if (!fromAndNotIncluding) return messages.filter((msg) => msg.pending);\n\n    const msgIdx = messages.indexOf(fromAndNotIncluding);\n    if (msgIdx === -1) return [];\n\n    return messages.slice(0, msgIdx).filter((msg) => msg.pending);\n  }\n\n  function requeueMessage(message) {\n    const msgIdx = messages.indexOf(message);\n    if (msgIdx === -1) return;\n    pendingMessageCount++;\n    messages.splice(msgIdx, 1, Object(_Message__WEBPACK_IMPORTED_MODULE_1__[\"Message\"])({...message.fields, redelivered: true}, message.content, message.properties, onMessageConsumed));\n  }\n\n  function peek(ignoreDelivered) {\n    const message = messages[0];\n    if (!message) return;\n\n    if (!ignoreDelivered) return message;\n    if (!message.pending) return message;\n\n    for (let idx = 1; idx < messages.length; idx++) {\n      if (!messages[idx].pending) {\n        return messages[idx];\n      }\n    }\n  }\n\n  function cancel(consumerTag) {\n    const idx = consumers.findIndex((c) => c.consumerTag === consumerTag);\n    if (idx === -1) return;\n\n    return unbindConsumer(consumers[idx]);\n  }\n\n  function dismiss(onMessage) {\n    const consumer = consumers.find((c) => c.onMessage === onMessage);\n    if (!consumer) return;\n    unbindConsumer(consumer);\n  }\n\n  function unbindConsumer(consumer) {\n    const idx = consumers.indexOf(consumer);\n    if (idx === -1) return;\n\n    consumers.splice(idx, 1);\n\n    if (exclusivelyConsumed) {\n      exclusivelyConsumed = false;\n    }\n\n    consumer.stop();\n\n    if (options.autoDelete && !consumers.length) return deleteQueue();\n\n    consumer.nackAll(true);\n  }\n\n  function emit(eventName, content) {\n    if (!eventEmitter || !eventEmitter.emit) return;\n    const routingKey = `queue.${eventName}`;\n    eventEmitter.emit(routingKey, content);\n  }\n\n  function on(eventName, handler) {\n    if (!eventEmitter || !eventEmitter.on) return;\n    const pattern = `queue.${eventName}`;\n    return eventEmitter.on(pattern, handler);\n  }\n\n  function purge() {\n    const toDelete = messages.filter(({pending}) => !pending);\n    pendingMessageCount = 0;\n\n    toDelete.forEach(dequeue);\n\n    if (!messages.length) emit('depleted', queue);\n    return toDelete.length;\n  }\n\n  function dequeueMessage(message) {\n    if (message.pending) return nack(message, false, false);\n\n    message.consume({});\n\n    nack(message, false, false);\n  }\n\n  function dequeue(message) {\n    const msgIdx = messages.indexOf(message);\n    if (msgIdx === -1) return;\n\n    messages.splice(msgIdx, 1);\n\n    return true;\n  }\n\n  function getState() {\n    return JSON.parse(JSON.stringify(queue));\n  }\n\n  function recover(state) {\n    stopped = false;\n    if (!state) return consumeNext();\n\n    name = queue.name = state.name;\n    messages.splice(0);\n\n    let continueConsume;\n    if (consumers.length) {\n      consumers.forEach((c) => c.nackAll(false));\n      continueConsume = true;\n    }\n\n    state.messages.forEach(({fields, content, properties}) => {\n      if (properties.persistent === false) return;\n      const msg = Object(_Message__WEBPACK_IMPORTED_MODULE_1__[\"Message\"])({...fields, redelivered: true}, content, properties, onMessageConsumed);\n      messages.push(msg);\n    });\n    pendingMessageCount = messages.length;\n    consumers.forEach((c) => c.recover());\n    if (continueConsume) {\n      consumeNext();\n    }\n  }\n\n  function deleteQueue({ifUnused, ifEmpty} = {}) {\n    if (ifUnused && consumers.length) return;\n    if (ifEmpty && messages.length) return;\n\n    const messageCount = messages.length;\n    queue.stop();\n\n    const deleteConsumers = consumers.splice(0);\n    deleteConsumers.forEach((consumer) => {\n      consumer.cancel();\n    });\n\n    if (deadLetterExchange) nackAll(false);\n    else messages.splice(0);\n\n    emit('delete', queue);\n    return {messageCount};\n  }\n\n  function close() {\n    consumers.splice(0).forEach((consumer) => consumer.cancel());\n    exclusivelyConsumed = false;\n  }\n\n  function stop() {\n    stopped = true;\n  }\n\n  function getCapacity() {\n    return maxLength - messages.length;\n  }\n}\n\nfunction Consumer(queue, onMessage, options = {}, owner, eventEmitter) {\n  options = {prefetch: 1, priority: 0, noAck: false, ...options};\n  if (!options.consumerTag) options.consumerTag = `smq.ctag-${Object(_shared__WEBPACK_IMPORTED_MODULE_0__[\"generateId\"])()}`;\n\n  let ready = true, stopped = false, consuming;\n  const internalQueue = Queue(`${options.consumerTag}-q`, {maxLength: options.prefetch}, {emit: onInternalQueueEvent});\n\n  const consumer = {\n    queue,\n    options,\n    on,\n    onMessage,\n    ackAll,\n    cancel,\n    nackAll,\n    prefetch,\n    push,\n    recover,\n    stop,\n  };\n\n  Object.defineProperty(consumer, 'consumerTag', {\n    value: options.consumerTag\n  });\n\n  Object.defineProperty(consumer, 'messageCount', {\n    get: () => internalQueue.messageCount\n  });\n\n  Object.defineProperty(consumer, 'capacity', {\n    get: () => internalQueue.capacity\n  });\n\n  Object.defineProperty(consumer, 'queueName', {\n    get: () => queue.name\n  });\n\n  Object.defineProperty(consumer, 'ready', {\n    get: () => ready && !stopped\n  });\n\n  Object.defineProperty(consumer, 'stopped', {\n    get: () => stopped\n  });\n\n  return consumer;\n\n  function push(messages) {\n    messages.forEach((message) => {\n      internalQueue.queueMessage(message.fields, message, message.properties, onInternalMessageQueued);\n    });\n    if (!consuming) {\n      consume();\n    }\n  }\n\n  function onInternalMessageQueued(msg) {\n    const message = msg.content;\n    message.consume(options, onConsumed);\n\n    function onConsumed() {\n      internalQueue.dequeueMessage(msg);\n    }\n  }\n\n  function consume() {\n    if (stopped) return;\n    consuming = true;\n\n    const msg = internalQueue.get();\n\n    if (!msg) {\n      consuming = false;\n      return;\n    }\n\n    msg.consume(options);\n    const message = msg.content;\n    message.consume(options, onConsumed);\n\n    if (options.noAck) msg.content.ack();\n    onMessage(msg.fields.routingKey, msg.content, owner);\n\n    consuming = false;\n\n    return consume();\n\n    function onConsumed() {\n      msg.nack(false, false);\n    }\n  }\n\n  function onInternalQueueEvent(eventName) {\n    switch (eventName) {\n      case 'queue.saturated': {\n        ready = false;\n        break;\n      }\n      case 'queue.depleted':\n      case 'queue.ready':\n        ready = true;\n        break;\n    }\n  }\n\n  function nackAll(requeue) {\n    internalQueue.messages.slice().forEach((msg) => {\n      msg.content.nack(false, requeue);\n    });\n  }\n\n  function ackAll() {\n    internalQueue.messages.slice().forEach((msg) => {\n      msg.content.ack(false);\n    });\n  }\n\n  function cancel(requeue = true) {\n    emit('cancel', consumer);\n    nackAll(requeue);\n  }\n\n  function prefetch(value) {\n    options.prefetch = internalQueue.maxLength = value;\n  }\n\n  function emit(eventName, content) {\n    if (!eventEmitter) return;\n    const routingKey = `consumer.${eventName}`;\n    eventEmitter.emit(routingKey, content);\n  }\n\n  function on(eventName, handler) {\n    if (!eventEmitter) return;\n    const pattern = `consumer.${eventName}`;\n    return eventEmitter.on(pattern, handler);\n  }\n\n  function recover() {\n    stopped = false;\n  }\n\n  function stop() {\n    stopped = true;\n  }\n}\n\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/smqp/src/Queue.js?");

            /***/ }),

          /***/ "./node_modules/smqp/src/shared.js":
          /*!*****************************************!*\
  !*** ./node_modules/smqp/src/shared.js ***!
  \*****************************************/
          /*! exports provided: generateId, getRoutingKeyPattern, sortByPriority */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateId\", function() { return generateId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRoutingKeyPattern\", function() { return getRoutingKeyPattern; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sortByPriority\", function() { return sortByPriority; });\n\n\nfunction generateId() {\n  const min = 110000;\n  const max = 9999999;\n  const rand = Math.floor(Math.random() * (max - min)) + min;\n\n  return rand.toString(16);\n}\n\nfunction getRoutingKeyPattern(pattern) {\n  const len = pattern.length;\n  const hashIdx = pattern.indexOf('#');\n  const astxIdx = pattern.indexOf('*');\n  if (hashIdx === -1) {\n    if (astxIdx === -1) {\n      return directMatch();\n    }\n  } else if (hashIdx === len - 1 && astxIdx === -1) {\n    return endMatch();\n  }\n\n  const rpattern = pattern\n    .replace('.', '\\\\.')\n    .replace('*', '[^.]+?')\n    .replace('#', '.+?');\n\n  return new RegExp(`^${rpattern}$`);\n\n  function directMatch() {\n    return {\n      test\n    };\n    function test(routingKey) {\n      return routingKey === pattern;\n    }\n  }\n\n  function endMatch() {\n    const testString = pattern.replace('#', '');\n    return {\n      test\n    };\n    function test(routingKey) {\n      return routingKey.indexOf(testString) === 0;\n    }\n  }\n}\n\nfunction sortByPriority(a, b) {\n  return (b.options.priority || 0) - (a.options.priority || 0);\n}\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/smqp/src/shared.js?");

            /***/ }),

          /***/ "./node_modules/vm-browserify/index.js":
          /*!*********************************************!*\
  !*** ./node_modules/vm-browserify/index.js ***!
  \*********************************************/
          /*! no static exports found */
          /***/ (function(module, exports) {

            eval("var indexOf = function (xs, item) {\n    if (xs.indexOf) return xs.indexOf(item);\n    else for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === item) return i;\n    }\n    return -1;\n};\nvar Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({}, '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj, name, {\n                writable: true,\n                enumerable: false,\n                configurable: true,\n                value: value\n            })\n        };\n    } catch(e) {\n        return function(obj, name, value) {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];\n\nfunction Context() {}\nContext.prototype = {};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInContext = function (context) {\n    if (!(context instanceof Context)) {\n        throw new TypeError(\"needs a 'context' argument.\");\n    }\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    var wEval = win.eval, wExecScript = win.execScript;\n\n    if (!wEval && wExecScript) {\n        // win.eval() magically appears when this is called in IE:\n        wExecScript.call(win, 'null');\n        wEval = win.eval;\n    }\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n    forEach(globals, function (key) {\n        if (context[key]) {\n            win[key] = context[key];\n        }\n    });\n    \n    var winKeys = Object_keys(win);\n\n    var res = wEval.call(win, this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        // Avoid copying circular objects like `top` and `window` by only\n        // updating existing context properties or new properties in the `win`\n        // that was only introduced after the eval.\n        if (key in context || indexOf(winKeys, key) === -1) {\n            context[key] = win[key];\n        }\n    });\n\n    forEach(globals, function (key) {\n        if (!(key in context)) {\n            defineProp(context, key, win[key]);\n        }\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInNewContext = function (context) {\n    var ctx = Script.createContext(context);\n    var res = this.runInContext(ctx);\n\n    if (context) {\n        forEach(Object_keys(ctx), function (key) {\n            context[key] = ctx[key];\n        });\n    }\n\n    return res;\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.isContext = function (context) {\n    return context instanceof Context;\n};\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    var copy = new Context();\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./node_modules/vm-browserify/index.js?");

            /***/ }),

          /***/ "./node_modules/webpack/buildin/global.js":
          /*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
          /*! no static exports found */
          /***/ (function(module, exports) {

            eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/(webpack)/buildin/global.js?");

            /***/ }),

          /***/ "./src/Logger.js":
          /*!***********************!*\
  !*** ./src/Logger.js ***!
  \***********************/
          /*! exports provided: Logger */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Logger\", function() { return Logger; });\n\nconst Debug = __webpack_require__(/*! debug */ \"./node_modules/debug/src/browser.js\");\n\nclass Logger {\n  constructor(tag) {\n    this.debug = Debug(tag);\n  }\n  log(scope) { this.debug(scope); }\n}\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./src/Logger.js?");

            /***/ }),

          /***/ "./src/bpmn-engine.js":
          /*!****************************!*\
  !*** ./src/bpmn-engine.js ***!
  \****************************/
          /*! exports provided: BpmnEngine, default */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BpmnEngine\", function() { return BpmnEngine; });\n/* harmony import */ var bpmn_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bpmn-engine */ \"./node_modules/bpmn-engine/index.js\");\n/* harmony import */ var bpmn_engine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bpmn_engine__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _service_tasks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./service-tasks */ \"./src/service-tasks.js\");\n/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Logger */ \"./src/Logger.js\");\n/* harmony import */ var _expressions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./expressions */ \"./src/expressions.js\");\n\n\n\n\n\n\n/** @namespace LiquidCore suppress warnings related to LiquidCore references **/\n\nclass BpmnEngine {\n  constructor () {\n    this.logger = new _Logger__WEBPACK_IMPORTED_MODULE_3__[\"Logger\"](\"BpmnEngine Class\");\n    this._engine = null;\n    this._eventListener = new events__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]();\n    this._flow = null;\n    this._flowDefinitionKey = null;\n    this._forms = null;\n    this._lastUserTaskContext = null;\n    this._timeMachine = [{ filledForms: null, context: null, processVariables: null, state: null }];\n    /** @namespace this._lastUserTaskContext.owner **/\n\n    try {\n      this.useLiquidCore = (LiquidCore instanceof Object );\n    }\n    catch (e) {\n      this.useLiquidCore = false;\n    }\n  }\n\n  loadFlow(flowId, xml) {\n    this._flowDefinitionKey = flowId;\n    this._flow = xml;\n  }\n\n  addForm(processKey, formId, jsonData) {\n    if (!this._forms) this._forms = {};\n    this._forms[formId] = jsonData instanceof Object ? jsonData : JSON.parse(jsonData);\n  }\n\n  initEngine() {\n    this._timeMachine = [];\n\n    if (!this._engine) {\n      const resolveServiceTaskExpression = _service_tasks__WEBPACK_IMPORTED_MODULE_2__[\"ServiceTasks\"].resolveExpression;\n      const evaluateConditionExpression = _expressions__WEBPACK_IMPORTED_MODULE_4__[\"Expressions\"].evaluateConditionExpression;\n      _service_tasks__WEBPACK_IMPORTED_MODULE_2__[\"ServiceTasks\"].bpmnEngine = this;\n\n      this._engine = new bpmn_engine__WEBPACK_IMPORTED_MODULE_0__[\"Engine\"]({\n        name: this._flowDefinitionKey,\n        source: this._flow,\n        moddleOptions: {\n          flowable: __webpack_require__(/*! ../modules/flowable-bpmn-moddle/resources/flowable */ \"./modules/flowable-bpmn-moddle/resources/flowable.json\")\n        },\n        extensions: {\n          // These are executed at engine startup for every task element\n          extendActivity(activity) {\n            // activity.run__ = function (context) {\n            //   this.deactivateRunConsumers();\n            //   this.run(context);\n            // }\n          },\n          executeServiceTask(activity) {\n            if (activity.behaviour.$type.indexOf(\"ServiceTask\") < 0 || !activity.behaviour.expression) return;\n            activity.behaviour.Service = resolveServiceTaskExpression;\n          },\n          overrideEvaluateConditions(activity) {\n            if (!activity.outbound || activity.outbound.length < 2) return;\n            activity.outbound.forEach( out => {\n              if (out.evaluateCondition) {\n                out.evaluateCondition = evaluateConditionExpression;\n              }\n            });\n          },\n          executionListener(activity) {\n            if (activity.behaviour[\"extensionElements\"] && activity.behaviour[\"extensionElements\"].values.length > 0) {\n              let eventListeners = {};\n              activity.behaviour[\"extensionElements\"].values.forEach( el => {\n                if (el.$type === \"flowable:ExecutionListener\") {\n                  eventListeners[el.event] = { expression: el.expression };\n                }\n              });\n              activity.behaviour.eventListeners = eventListeners;\n            }\n          },\n        }\n      });\n    }\n\n    // function recoverStatePromise (state) {\n    //   return new Promise((resolve, reject) => {\n    //     Engine().recover(this._timeMachine[this._timeMachine.length - 1].state, {} , () => {\n    //       resolve();\n    //     });\n    //   });\n    // }\n\n\n    this._eventListener.removeAllListeners(\"back_event\");\n    this._eventListener.on(\"back_event\", async (elementApi, engineApi) => {\n      // this.logger.log(\"Back Event\");\n      // this._engine = null;\n      // this._engine = await recoverStatePromise(this._timeMachine[this._timeMachine.length - 1].state);\n      // this._engine.resume({\n      //   listener: this._eventListener\n      // }, (err, execution) => {\n      //   if (err) {\n      //     this._eventListener.emit(\"error\", err);\n      //   }\n      //   else {\n      //     this._eventListener.emit(\"end\", execution);\n      //   }\n      //   this.logger.log(\"Flow Completed! (GNORP)\");\n      // });\n\n    });\n\n    this._eventListener.removeAllListeners(\"activity.enter\");\n    this._eventListener.on(\"activity.enter\", (elementApi, engineApi) => {\n      this.logger.log(`${elementApi.type} <${elementApi.id}> (${elementApi[\"owner\"].name}) of ${engineApi.name} is entered`);\n    });\n    this._eventListener.on(\"activity.end\", async (element, engine) => {\n      this.logger.log(\"activity.end:\", element, engine);\n      if (element.owner.behaviour.eventListeners &&\n        element.owner.behaviour.eventListeners[\"end\"]) {\n        // &&\n        // element.environment.variables.processVariables &&\n        // element.environment.variables.processVariables[\"form_\" + this._lastUserTaskContext.owner.behaviour.formKey + \"_outcome\"].value === \"back\") {\n        let expression = element.owner.behaviour.eventListeners[\"end\"][\"expression\"];\n        await this.evaluateExpression(expression, element, engine);\n      }\n    });\n  }\n  recoverStatePromise (state) {\n    return new Promise((resolve, reject) => {\n      // Engine().recover(this._timeMachine[this._timeMachine.length - 1].state, {} , () => {\n      //   resolve();\n      // });\n      // let newEngine =\n      // Engine().recover(state);\n      resolve(Object(bpmn_engine__WEBPACK_IMPORTED_MODULE_0__[\"Engine\"])().recover(state));\n    });\n  }\n\n  async recoverOldState(state) {\n    this.logger.log(\"recoverOldState\");\n    this._engine = null;\n    this._engine = await this.recoverStatePromise(state);\n    // await this._engine.resume({\n    //   listener: this._eventListener\n    // }, (err, execution) => {\n    //   if (err) {\n    //     this._eventListener.emit(\"error\", err);\n    //   }\n    //   else {\n    //     this._eventListener.emit(\"end\", execution);\n    //   }\n    //   this.logger.log(\"Flow Completed! (GNORP)\");\n    // });\n    this.logger.log(\"Old State recovered\");\n  }\n\n  async resumeExecution() {\n    await this._engine.resume({\n      listener: this._eventListener\n    }, (err, execution) => {\n      if (err) {\n        this._eventListener.emit(\"error\", err);\n      }\n      else {\n        this._eventListener.emit(\"end\", execution);\n      }\n      this.logger.log(\"Flow Completed! (GNORP)\");\n    });\n    this.logger.log(\"Old State resumed\");\n  }\n\n  /** This is meant to evaluate expression fields in forms\n   *\n   * @param expression\n   * @return {*}   the evaluation result\n   */\n  evaluateExpressionField(expression) {\n    // TODO: add expression field parsing rules\n    if (this._engine) return expression; // do nothing\n    return expression;\n  }\n\n  /** This is meant to evaluate expressions\n   *\n   * @param expression\n   * @return {*}   the evaluation result\n   */\n  async evaluateExpression(expression, element, engine) {\n\n    let result = null;\n\n    let serviceTask = _expressions__WEBPACK_IMPORTED_MODULE_4__[\"Expressions\"].getServiceTaskInfo(expression);\n\n    let outcomeVariable = \"form_\" + this._lastUserTaskContext.owner.behaviour.formKey + \"_outcome\";\n\n    if ((serviceTask.name === \"autoBack\") &&\n        (serviceTask.method === \"go\") &&\n        this._lastUserTaskContext.environment.variables.processVariables &&\n        (this._lastUserTaskContext.environment.variables.processVariables[outcomeVariable].value === \"back\")) {\n\n      this.logger.log(\"autoBack.go():\", element, engine);\n      // TODO: set previous form field value based on processVariable value\n      element.owner.discard();\n\n      delete this._lastUserTaskContext.environment.variables.processVariables[outcomeVariable];\n\n      this._timeMachine.pop();\n\n      let oneStepBack = this._timeMachine[this._timeMachine.length - 1];\n      this._lastUserTaskContext = oneStepBack.context;\n\n      this.logger.log(\"autoBack.go(): resume\");\n\n      outcomeVariable = \"form_\" + this._lastUserTaskContext.owner.behaviour.formKey + \"_outcome\";\n\n      // Reset outcome variable\n      delete this._lastUserTaskContext.environment.variables.processVariables[outcomeVariable];\n\n      oneStepBack.context.owner.run();\n\n      // await this.recoverOldState(this._timeMachine[this._timeMachine.length - 1].state);\n      // this._eventListener.emit(\"back_event\", element, engine);\n\n      // this._lastUserTaskContext = this._timeMachine[this._timeMachine.length - 1].context;\n\n\n      this._timeMachine.pop(); // this will be added back in the wait step\n    }\n    return result;\n  }\n\n  // processEventListener() {\n  //\n  // }\n\n  // stopAndSaveState() {\n  //   this.logger.log(\"stopAndSaveState: not  yet implemented\");\n  // }\n\n  // recoverStateAndResume() {\n  //   this.logger.log(\"recoverStateAndResume: \");\n  // }\n\n  translateToProcessData(context) {\n    const processDefinitionKey = context.content.parent.id;\n    const processDefinitionId = \"offline_\" + processDefinitionKey;\n    const processInstanceId = \"offline_\" + context.content.parent[\"executionId\"];\n\n    let tasks = [];\n\n    const formKey = context.owner.behaviour.formKey;\n\n    let task = {\n      \"taskId\": context.id,\n      formKey,\n      \"name\": context.owner.behaviour.name,\n      processDefinitionId,\n      processDefinitionKey,\n      processInstanceId,\n      \"processVariables\": [],\n      \"formProperties\": [],\n    };\n\n    if (formKey) {\n      task.formData = {\n        \"name\": this._forms[formKey].name,\n        \"key\": this._forms[formKey].key,\n        // \"version\": this._forms[formKey].editorJson.version,\n        // \"fields\": this._forms[formKey].editorJson.fields,\n        // \"outcomes\": this._forms[formKey].editorJson.outcomes,\n        // \"properties\": this._forms[formKey].editorJson.properties,\n        \"fields\": [],\n        \"version\": this._forms[formKey].version,\n        \"outcomes\": this._forms[formKey].outcomes,\n        \"properties\": this._forms[formKey].properties,\n      };\n\n      this._forms[formKey].fields.forEach( field => {\n        let newField = field;\n        if (newField[\"type\"] === \"expression\") {\n          newField[\"value\"] = this.evaluateExpressionField(newField[\"expression\"]);\n        }\n        else {\n          newField[\"value\"] = null;\n        }\n\n        task.formData[\"fields\"].push(newField);\n\n      });\n    }\n\n    context.environment.variables.processVariables && Object.keys(context.environment.variables.processVariables).forEach( key => {\n      task.processVariables.push(context.environment.variables.processVariables[key]);\n    });\n\n    tasks.push(task);\n\n    return  {\n      processDefinitionId,\n      processInstanceId,\n      tasks\n    };\n  }\n\n  async waitForUserInput(context, resolve, LQEvent) {\n    console.log(\"BPMN Engine waitForUserInput\");\n    await this.logJourneyState(context);\n    const responseData = this.translateToProcessData(context);\n    if (this.useLiquidCore) LiquidCore.emit(LQEvent, {data: responseData});\n    resolve(responseData);\n  }\n\n  getNewOrResumeProcess(processData, initiator) {\n    this.initEngine();\n\n    // TODO: add input validation\n    return new Promise ( (resolve, reject)=> {\n      this._eventListener.once(\"wait\", async (context) => {\n        this.logger.log(\"BPMN Engine (GNORP): received event: wait\");\n        await this.waitForUserInput(context, resolve, \"onProcessReady\");\n        // this.logJourneyState(context);\n        // const responseData = this.translateToProcessData(context);\n        // if (this.useLiquidCore) LiquidCore.emit(\"onProcessReady\", {data: responseData});\n        // resolve(responseData);\n      });\n      this._eventListener.once(\"error\", (context) => {\n        this.logger.log(\"BPMN Engine (CAGN): received event: error (once)\");\n\n        this._lastUserTaskContext = null;\n        const resultData = this.translateToProcessData(context);\n        if (this.useLiquidCore) LiquidCore.emit(\"onProcessReady\", {data: resultData});\n        if (this.useLiquidCore) LiquidCore.emit(\"onFlowEnd\", {data: resultData});\n        resolve(resultData);\n      });\n      this._engine.once(\"end\", (context) => {\n        this.logger.log(\"BPMN Engine (GNORP): received event: end (once)\");\n\n        this._lastUserTaskContext = context;\n        const resultData = {\n          processDefinitionId: \"offline_\" + this._lastUserTaskContext.content.parent.id,\n          processInstanceId: \"offline_\" + this._lastUserTaskContext.content.parent[\"executionId\"],\n          tasks: []\n        };\n        this._lastUserTaskContext = null;\n        if (this.useLiquidCore) LiquidCore.emit(\"onProcessReady\", {data: resultData});\n        if (this.useLiquidCore) LiquidCore.emit(\"onFlowEnd\", {data: resultData});\n      });\n\n      //TODO: this is only get new\n      //TODO: implement 'Resume' part\n\n      let processVariables = {\n        initiator: {\n          name: \"initiator\",\n          type: \"string\",\n          value: initiator\n        }\n      };\n      processData.processVariables.forEach( (el) => {\n        processVariables[el.name] = el;\n      });\n\n      this._engine.execute({\n        listener: this._eventListener,\n        variables: {\n          processVariables\n        }\n        // settings: {enableDummyService:true},\n        // services: this._serviceTasks.serialize()\n      }, (err, execution) => {\n        if (err) {\n          reject(err);\n          this._eventListener.emit(\"error\", err);\n        }\n        else {\n          this._eventListener.emit(\"end\", execution);\n        }\n        this.logger.log(\"Flow Completed! (GNORP)\");\n      }\n      );\n    });\n  }\n\n  completeAndGetNext(taskData) {\n    // TODO: add input validation\n    return new Promise ( async (resolve)=> {\n      if (this._engine.execution.state !== \"running\") {\n        resolve(null);\n      }\n\n      // if (taskData.outcome.id === \"back\") {\n      //   // TODO: ADD checks\n      //\n      //   this.logger.log(\"Going Back\");\n      //   this._timeMachine.pop();\n      //\n      //   await this.recoverOldState(this._timeMachine[this._timeMachine.length - 1].state);\n      // }\n\n      // Setup Event Handlers\n      this._eventListener.removeAllListeners(\"wait\");\n      this._eventListener.once(\"wait\", async (context) => {\n        this.logger.log(\"BPMN Engine (CAGN): received event: wait\");\n        await this.waitForUserInput(context, resolve, \"onNextReady\");\n\n        // this.logJourneyState(context);\n        // const resultData = this.translateToProcessData(context);\n        // if (this.useLiquidCore) LiquidCore.emit(\"onNextReady\", {data: resultData});\n        // resolve(resultData);\n      });\n      this._engine.removeAllListeners(\"end\");\n      this._engine.once(\"end\", (context) => {\n        this.logger.log(\"BPMN Engine (CAGN): received event: end (once)\");\n        console.log(\"BPMN Engine (CAGN): received event: end (once)\");\n\n        const resultData = {\n          processDefinitionId: \"offline_\" + this._lastUserTaskContext.content.parent.id,\n          processInstanceId: \"offline_\" + this._lastUserTaskContext.content.parent[\"executionId\"],\n          tasks: []\n        };\n        this._lastUserTaskContext = null;\n        if (this.useLiquidCore) LiquidCore.emit(\"onNextReady\", {data: resultData});\n        if (this.useLiquidCore) LiquidCore.emit(\"onFlowEnd\", {data: resultData});\n        resolve(resultData);\n      });\n      this._eventListener.removeAllListeners(\"error\");\n      this._eventListener.once(\"error\", (context) => {\n        this.logger.log(\"BPMN Engine (CAGN): received event: error (once)\");\n\n        const resultData = {\n          processDefinitionId: \"offline_\" + this._lastUserTaskContext.content.parent.id,\n          processInstanceId: \"offline_\" + this._lastUserTaskContext.content.parent[\"executionId\"],\n          tasks: []\n        };\n        this._lastUserTaskContext = null;\n        if (this.useLiquidCore) LiquidCore.emit(\"onNextReady\", {data: resultData});\n        if (this.useLiquidCore) LiquidCore.emit(\"onFlowEnd\", {data: resultData});\n        resolve(resultData);\n      });\n      // End Setup Event Handlers\n\n      // edit/add variables\n      this._lastUserTaskContext && taskData.processVariables.forEach(el => {\n        this._lastUserTaskContext.environment.variables[\"processVariables\"][el.name] = el;\n      });\n\n      const outcomeVariable = \"form_\" + this._lastUserTaskContext.owner.behaviour.formKey + \"_outcome\";\n\n      this._lastUserTaskContext.environment.variables[\"processVariables\"][outcomeVariable] = {\n        name: outcomeVariable,\n        type: \"string\",\n        value: taskData.outcome.id\n      };\n\n      let answersItem = {\n        \"taskId\": taskData.taskId,\n        \"answers\": []\n      };\n\n\n      taskData.fields.forEach( field => {\n\n        // set field related process variables\n        let type = typeof field.value;\n        type = type === \"number\" ? \"numeric\" : type;\n        this._lastUserTaskContext.environment.variables[\"processVariables\"][field.id] = {\n          name: field.id,\n          type: type,\n          value: field.value\n        };\n\n        // set answers record\n        const formKey = this._lastUserTaskContext[\"owner\"].behaviour.formKey;\n        this._forms[formKey].fields.forEach( formField => {\n          if (formField.id === field.id) {\n            answersItem.answers.push({\n              \"id\": field.id,\n              \"name\": formField.name,\n              \"value\": field.value,\n              \"reference\": formField.params[\"trialref\"],\n              \"fieldType\": formField.type,\n              \"reasonCode\": null,\n              \"options\":formField.options\n            });\n          }\n        });\n      });\n\n      if (taskData.outcome.id !== \"back_DISABLED\") {\n        this._timeMachine[this._timeMachine.length - 1].filledForms = answersItem;\n        this._timeMachine[this._timeMachine.length - 1].processVariables =\n          this.jsonClone(this._lastUserTaskContext.environment.variables[\"processVariables\"]);\n        this._lastUserTaskContext && this._lastUserTaskContext.signal();\n      }\n      else {\n        this.resumeExecution();\n        // this._eventListener.emit(\"wait\", this._timeMachine[this._timeMachine.length - 1].context);\n        // this._timeMachine[this._timeMachine.length - 1].context.signal();\n      }\n    });\n  }\n\n  callApiService(params) {\n    const {url, method, body} = params;\n    if (this.useLiquidCore) {\n      LiquidCore.emit(\"fetch\", {url, method, body});\n    }\n    else {\n      this._eventListener.emit(\"fetch\", {url, method, body});\n    }\n  }\n\n\n  async logJourneyState(context) {\n    // this._contextsLog.push(this._lastUserTaskContext);\n    this._lastUserTaskContext = context;\n    let state = await this._engine.getState();\n    this._timeMachine.push({\n      filledForms: null,\n      context: context,\n      processVariables: null,\n      state\n    });\n  }\n\n  jsonClone(json) {\n    return JSON.parse(JSON.stringify(json));\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BpmnEngine);\n\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./src/bpmn-engine.js?");

            /***/ }),

          /***/ "./src/expressions.js":
          /*!****************************!*\
  !*** ./src/expressions.js ***!
  \****************************/
          /*! exports provided: Expressions */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Expressions\", function() { return Expressions; });\n/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Logger */ \"./src/Logger.js\");\n\n\nconst expressionPattern = /\\${ *(.+?)[ ;]*}/;\nconst serviceTaskPattern = /(.+)\\.([^.]+?)\\((.*)\\)/;\n\nconst thisLogger = new _Logger__WEBPACK_IMPORTED_MODULE_0__[\"Logger\"](\"BpmnEngine:Expressions Class\");\n\n\nclass Expressions {\n\n  static getInnerExpression(expression) {\n    let expressionMatch = expression.match(expressionPattern);\n    if (expressionMatch) {\n      return expressionMatch[1];\n    }\n    return expression;\n  }\n\n  static getServiceTaskInfo(expression) {\n    let cleanExpr = Expressions.getInnerExpression(expression);\n    let expressionMatch = cleanExpr.match(serviceTaskPattern);\n    if (expressionMatch && expressionMatch.length > 3) {\n      const name = expressionMatch[1];\n      const method = expressionMatch[2];\n      const argString = expressionMatch[3];\n\n      return { name, method, args: argString.split(\",\").map( (e) => (e.trim())) };\n    }\n    return {};\n  }\n\n\n  // TODO: test with creator on pga flow\n\n\n  static evaluateConditionExpression(message, onEvaluateError) {\n    const condition = this.getCondition(message);\n    if (!condition) return true;\n\n    const expression = this.behaviour.conditionExpression;\n\n\n    let cleanExpr = Expressions.getInnerExpression(expression.body);\n\n    // TODO: interpret service tasks\n\n    // Set variables scope\n    let varSetupEval = \"\";\n    Object.keys(this.environment.variables[\"processVariables\"]).forEach( varName => {\n      if (this.environment.variables[\"processVariables\"][varName].type === 'string')\n        varSetupEval += `let ${varName} = \"${this.environment.variables[\"processVariables\"][varName].value}\";`;\n      else {\n        varSetupEval += `let ${varName} = ${this.environment.variables[\"processVariables\"][varName].value};`;\n      }\n    });\n\n    let result = eval(varSetupEval + cleanExpr);\n\n    thisLogger.log(\"Evaluated Condition Expression: \" + cleanExpr + \" as \" + result);\n    return result;\n  }\n\n\n}\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./src/expressions.js?");

            /***/ }),

          /***/ "./src/index.js":
          /*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
          /*! exports provided: bpmnEngine, BpmnEngine, ServiceTasks */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bpmnEngine\", function() { return bpmnEngine; });\n/* harmony import */ var _bpmn_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bpmn-engine */ \"./src/bpmn-engine.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BpmnEngine\", function() { return _bpmn_engine__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _service_tasks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./service-tasks */ \"./src/service-tasks.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ServiceTasks\", function() { return _service_tasks__WEBPACK_IMPORTED_MODULE_1__[\"ServiceTasks\"]; });\n\n\n\n\n// to keep alive\n(setInterval(() => function(){}, 1000));\n\nconsole.log(\"Loading local BPMN Engine from JS\");\n\nconst bpmnEngine = new _bpmn_engine__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n\nif (bpmnEngine.useLiquidCore) {\n  console.log(\"LiquidCore initialized\");\n\n  // Test the communication with external platform\n  LiquidCore.on(\"test\", function() { console.log(\"responding\");});\n\n  // Load flow and forms on engine\n  LiquidCore.on(\"loadFlow\", function(processMap) {\n    console.log(\"loading flow start\");\n    bpmnEngine.loadFlow(processMap.key, processMap.xml);\n    console.log(\"xml is loaded\");\n    const forms = JSON.parse(processMap.forms);\n    console.log(\"forms are ready to be imported\");\n    for (const formKey of Object.keys(forms)) {\n      console.log(\"loading form: \", forms[formKey].key);\n      bpmnEngine.addForm(processMap.key, forms[formKey].key, forms[formKey]);\n    }\n    console.log(\"loading flow end\");\n    LiquidCore.emit(\"flowLoaded\");\n  });\n\n  // Start a process using data\n  LiquidCore.on(\"getNewOrResumeProcess\", function(processData) {\n    bpmnEngine.getNewOrResumeProcess(processData.data, processData.initiator);\n  });\n\n  // Move to next step using data\n  LiquidCore.on(\"completeAndGetNext\", function(taskData) {\n    bpmnEngine.completeAndGetNext(taskData);\n  });\n\n  // Kill process (need to check if required)\n  LiquidCore.on(\"kill\", function() { process.exit(0); });\n\n  // Notify engine is ready\n  LiquidCore.emit(\"ready\");\n\n}\n\nconsole.log(\"Local BPMN Engine has been loaded\");\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./src/index.js?");

            /***/ }),

          /***/ "./src/service-tasks.js":
          /*!******************************!*\
  !*** ./src/service-tasks.js ***!
  \******************************/
          /*! exports provided: ServiceTasks */
          /***/ (function(module, __webpack_exports__, __webpack_require__) {

            "use strict";
            eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServiceTasks\", function() { return ServiceTasks; });\n/* harmony import */ var _expressions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expressions */ \"./src/expressions.js\");\n\n\n\nclass ServiceTasks {\n  /**\n   * Returns a json object feeding the Engine execute method\n   */\n  static resolveExpression(activity) {\n    const {type: atype, behaviour, environment} = activity;\n    const expression = behaviour.expression;\n    const type = `${atype}:expression`;\n    const initiator = environment.variables.processVariables.initiator.value;\n    return {\n      initiator,\n      type,\n      expression,\n      execute,\n    };\n    async function execute(scope, callback) {\n\n      const { name, method, args} = _expressions__WEBPACK_IMPORTED_MODULE_0__[\"Expressions\"].getServiceTaskInfo(expression);\n\n      if (ServiceTasks[name]) {\n        await ServiceTasks[name][method]( initiator, scope, callback, args);\n      }\n      callback(null, null);\n    }\n  }\n\n  // static getExpressionInfo(expression) {\n  //   const expressionPattern = /\\${(.+)\\.([^.]+?)\\((.*)\\)}/;\n  //   const expressionMatch = expression.match(expressionPattern);\n  //   const name = expressionMatch[1];\n  //   const method = expressionMatch[2];\n  //   const argString = expressionMatch[3];\n  //\n  //   return { name, method, args: argString.split(\",\") };\n  // }\n\n  static useLiquidCore() {\n    let useLiquidCore;\n    try {\n      useLiquidCore = (LiquidCore instanceof Object );\n    }\n    catch (e) {\n      useLiquidCore = false;\n    }\n\n    return useLiquidCore;\n  }\n}\n\nServiceTasks.results = {\n  save: function (initiator, context, callback, args) {\n    console.log(\"Executing service Task: results.save()\", context);\n\n    // TODO add EPRO and VISIT section\n    // TODO: Sync  device TIME with NTP SERVER\n\n    let body = {\n      \"epro\": null,\n      \"visit\": null,\n      \"type\": \"questionnaire\",\n      \"subject\": {\n        \"name\": initiator\n      },\n      \"properties\": {\n        \"createdDate\": {\n          \"id\": null,\n          \"name\": \"Record Date\",\n          \"value\": (new Date()).toISOString(),\n          \"propertyName\": \"createdDate\"\n        },\n        \"createdBy\": {\n          \"name\": initiator,\n          \"propertyName\": \"createdBy\"\n        },\n        \"processDefinitionKey\": {\n          \"id\": null,\n          \"name\": \"Process Definition Key\",\n          \"value\": context.content.parent.id,\n          \"propertyName\": \"processDefinitionKey\"\n        },\n        \"processInstanceId\": {\n          \"id\": null,\n          \"name\": \"Process Instance Id\",\n          \"value\": \"offline_\" + context.content.parent.executionId,\n          \"propertyName\": \"processInstanceId\"\n        }\n      },\n      \"questions\": []\n    };\n\n    ServiceTasks.bpmnEngine._timeMachine.forEach(logItem => {\n      logItem.filledForms.answers.forEach( answer => {\n        body.questions.push(answer);\n      });\n    });\n\n    ServiceTasks.bpmnEngine.callApiService({url:\"/snap-api/clinicaldata/save\", method: \"POST\", body: body})\n\n  }\n};\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/./src/service-tasks.js?");

            /***/ }),

          /***/ 0:
          /*!****************************!*\
  !*** multi ./src/index.js ***!
  \****************************/
          /*! no static exports found */
          /***/ (function(module, exports, __webpack_require__) {

            eval("module.exports = __webpack_require__(/*! ./src/index.js */\"./src/index.js\");\n\n\n//# sourceURL=webpack://snapclinicalOfflineEngine/multi_./src/index.js?");

            /***/ })

          /******/ });
      });

      /***/ }),
    /* 60 */
    /***/ (function(module, __webpack_exports__, __webpack_require__) {

      "use strict";
      /**
       * Print current lib version on the console log
       */
      class Version {
        /**
         * Prints the current lib version on the console log
         */
        static print() {
          console.log("snapClinical JS SDK Version: " + "1.2.13" );
        }

        /**
         * Return the current lib version
         * @return (String)     - the current js sdk library version
         */
        static get() {
          return ("snapClinical JS SDK Version: " + "1.2.13" );
        }

      }


      /* harmony default export */ __webpack_exports__["a"] = (Version);

      /***/ })
    /******/ ]);
});

/***/ }),
/* 226 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 227 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__JavascriptDistLib_core_js__ = __webpack_require__(143);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__objects_base_object_base_object_module_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__objects_label_label_module_js__ = __webpack_require__(171);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__objects_button_button_module_js__ = __webpack_require__(148);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__objects_network_network_module_js__ = __webpack_require__(178);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__objects_json_json_module_js__ = __webpack_require__(170);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__objects_connio_connio_module_js__ = __webpack_require__(153);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__objects_animation_animation_module_js__ = __webpack_require__(144);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__objects_screen_screen_module_js__ = __webpack_require__(183);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__objects_dictionary_dictionary_module_js__ = __webpack_require__(158);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__objects_textLibrary_textLibrary_module_js__ = __webpack_require__(190);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__objects_image_image_module_js__ = __webpack_require__(168);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__objects_imageLibrary_imageLibrary_module_js__ = __webpack_require__(169);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__objects_container_container_module_js__ = __webpack_require__(154);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__objects_location_location_module_js__ = __webpack_require__(174);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__objects_mathLibrary_mathLibrary_module_js__ = __webpack_require__(176);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__objects_lists_lists_module_js__ = __webpack_require__(172);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__objects_application_application_module_js__ = __webpack_require__(145);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__objects_graphview_graphview_module_js__ = __webpack_require__(165);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__objects_storage_storage_module_js__ = __webpack_require__(188);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__objects_gauge_gauge_module_js__ = __webpack_require__(163);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__objects_webview_webview_module_js__ = __webpack_require__(197);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__objects_colourLibrary_colourLibrary_module_js__ = __webpack_require__(152);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__objects_timeLibrary_timeLibrary_module_js__ = __webpack_require__(193);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__objects_mapview_mapview_module_js__ = __webpack_require__(175);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__objects_textbox_textbox_module_js__ = __webpack_require__(192);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__objects_slider_slider_module_js__ = __webpack_require__(185);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__objects_videoview_videoview_module_js__ = __webpack_require__(196);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__objects_videoLibrary_videoLibrary_module_js__ = __webpack_require__(195);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__objects_snapclinical_snapclinical_module_js__ = __webpack_require__(187);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__objects_dialog_dialog_module_js__ = __webpack_require__(157);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__objects_bluetooth_bluetooth_module_js__ = __webpack_require__(147);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__objects_gridview_gridview_module_js__ = __webpack_require__(166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__objects_clock_clock_module_js__ = __webpack_require__(151);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__objects_listview_listview_module_js__ = __webpack_require__(173);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__objects_motion_motion_module_js__ = __webpack_require__(177);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__objects_notification_notification_module_js__ = __webpack_require__(179);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__objects_audioLibrary_audioLibrary_module_js__ = __webpack_require__(146);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__objects_smartdevices_smartdevices_module_js__ = __webpack_require__(186);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__objects_camera_camera_module_js__ = __webpack_require__(149);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__objects_cameraview_cameraview_module_js__ = __webpack_require__(150);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__objects_phone_phone_module_js__ = __webpack_require__(181);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__objects_widgetcanvas_widgetcanvas_module_js__ = __webpack_require__(198);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__objects_system_system_module_js__ = __webpack_require__(189);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__objects_pageview_pageview_module_js__ = __webpack_require__(180);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__objects_firebase_firebase_module_js__ = __webpack_require__(162);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__objects_qrcodescanner_qrcodescanner_module_js__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__objects_docusign_docusign_module_js__ = __webpack_require__(159);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__objects_device_device_module_js__ = __webpack_require__(156);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__objects_list_grid_common_list_grid_common_module_js__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__objects_googlefit_googlefit_module_js__ = __webpack_require__(164);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__objects_drawview_drawview_module_js__ = __webpack_require__(160);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__objects_healthkit_healthkit_module_js__ = __webpack_require__(167);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__objects_textarea_textarea_module_js__ = __webpack_require__(191);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__objects_shape_shape_module_js__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__objects_eventLibrary_eventlisteners_module_js__ = __webpack_require__(161);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__objects_videoCall_videocall_module_js__ = __webpack_require__(194);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__objects_debug_debug_module_js__ = __webpack_require__(155);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58_moment_timezone__ = __webpack_require__(142);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58_moment_timezone___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_58_moment_timezone__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59_crypto_js__ = __webpack_require__(141);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59_crypto_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_59_crypto_js__);
// ES6 imports




























































// External libraries



var distLib = new __WEBPACK_IMPORTED_MODULE_0__JavascriptDistLib_core_js__["a" /* default */]();
distLib.BaseObject = new __WEBPACK_IMPORTED_MODULE_1__objects_base_object_base_object_module_js__["a" /* default */]();
distLib.Animation = new __WEBPACK_IMPORTED_MODULE_7__objects_animation_animation_module_js__["a" /* default */]();
distLib.Button = new __WEBPACK_IMPORTED_MODULE_3__objects_button_button_module_js__["a" /* default */]();
distLib.Connio = new __WEBPACK_IMPORTED_MODULE_6__objects_connio_connio_module_js__["a" /* default */]();
distLib.Container = new __WEBPACK_IMPORTED_MODULE_13__objects_container_container_module_js__["a" /* default */]();
distLib.Dictionary = new __WEBPACK_IMPORTED_MODULE_9__objects_dictionary_dictionary_module_js__["a" /* default */]();
distLib.Image = new __WEBPACK_IMPORTED_MODULE_11__objects_image_image_module_js__["a" /* default */]();
distLib.ImageLibrary = new __WEBPACK_IMPORTED_MODULE_12__objects_imageLibrary_imageLibrary_module_js__["a" /* default */]();
distLib.JSON = new __WEBPACK_IMPORTED_MODULE_5__objects_json_json_module_js__["a" /* default */]();
distLib.Label = new __WEBPACK_IMPORTED_MODULE_2__objects_label_label_module_js__["a" /* default */]();
distLib.ListLibrary = new __WEBPACK_IMPORTED_MODULE_16__objects_lists_lists_module_js__["a" /* default */]();
distLib.Location = new __WEBPACK_IMPORTED_MODULE_14__objects_location_location_module_js__["a" /* default */]();
distLib.MathLibrary = new __WEBPACK_IMPORTED_MODULE_15__objects_mathLibrary_mathLibrary_module_js__["a" /* default */]();
distLib.GraphContainer = new __WEBPACK_IMPORTED_MODULE_18__objects_graphview_graphview_module_js__["a" /* default */]();
distLib.Network = new __WEBPACK_IMPORTED_MODULE_4__objects_network_network_module_js__["a" /* default */]();
distLib.Screen = new __WEBPACK_IMPORTED_MODULE_8__objects_screen_screen_module_js__["a" /* default */]();
distLib.TextLib = new __WEBPACK_IMPORTED_MODULE_10__objects_textLibrary_textLibrary_module_js__["a" /* default */]();
distLib.Application = new __WEBPACK_IMPORTED_MODULE_17__objects_application_application_module_js__["a" /* default */]();
distLib.Storage = new __WEBPACK_IMPORTED_MODULE_19__objects_storage_storage_module_js__["a" /* default */]();
distLib.Gauge = new __WEBPACK_IMPORTED_MODULE_20__objects_gauge_gauge_module_js__["a" /* default */]();
distLib.WebContainer = new __WEBPACK_IMPORTED_MODULE_21__objects_webview_webview_module_js__["a" /* default */]();
distLib.ColourLibrary = new __WEBPACK_IMPORTED_MODULE_22__objects_colourLibrary_colourLibrary_module_js__["a" /* default */]();
distLib.TimeLibrary = new __WEBPACK_IMPORTED_MODULE_23__objects_timeLibrary_timeLibrary_module_js__["a" /* default */]();
distLib.MomentLibrary = __WEBPACK_IMPORTED_MODULE_58_moment_timezone__;
distLib.MapContainer = new __WEBPACK_IMPORTED_MODULE_24__objects_mapview_mapview_module_js__["a" /* default */]();
distLib.Textbox = new __WEBPACK_IMPORTED_MODULE_25__objects_textbox_textbox_module_js__["a" /* default */]();
distLib.Slider = new __WEBPACK_IMPORTED_MODULE_26__objects_slider_slider_module_js__["a" /* default */]();
distLib.VideoView = new __WEBPACK_IMPORTED_MODULE_27__objects_videoview_videoview_module_js__["a" /* default */]();
distLib.VideoLibrary = new __WEBPACK_IMPORTED_MODULE_28__objects_videoLibrary_videoLibrary_module_js__["a" /* default */]();
distLib.SnapClinical = new __WEBPACK_IMPORTED_MODULE_29__objects_snapclinical_snapclinical_module_js__["a" /* default */]();
distLib.Clock = new __WEBPACK_IMPORTED_MODULE_33__objects_clock_clock_module_js__["a" /* default */]();
distLib.Dialog = new __WEBPACK_IMPORTED_MODULE_30__objects_dialog_dialog_module_js__["a" /* default */]();
distLib.Debug = new __WEBPACK_IMPORTED_MODULE_57__objects_debug_debug_module_js__["a" /* default */]();
distLib.Bluetooth = new __WEBPACK_IMPORTED_MODULE_31__objects_bluetooth_bluetooth_module_js__["a" /* default */]();
distLib.GridView = new __WEBPACK_IMPORTED_MODULE_32__objects_gridview_gridview_module_js__["a" /* default */]();
distLib.ListView = new __WEBPACK_IMPORTED_MODULE_34__objects_listview_listview_module_js__["a" /* default */]();
distLib.AudioLibrary = new __WEBPACK_IMPORTED_MODULE_37__objects_audioLibrary_audioLibrary_module_js__["a" /* default */]();
distLib.Motion = new __WEBPACK_IMPORTED_MODULE_35__objects_motion_motion_module_js__["a" /* default */]();
distLib.SmartDevices = new __WEBPACK_IMPORTED_MODULE_38__objects_smartdevices_smartdevices_module_js__["a" /* default */]();
distLib.Notification = new __WEBPACK_IMPORTED_MODULE_36__objects_notification_notification_module_js__["a" /* default */]();
distLib.CameraLibrary = new __WEBPACK_IMPORTED_MODULE_39__objects_camera_camera_module_js__["a" /* default */]();
distLib.Camera = new __WEBPACK_IMPORTED_MODULE_40__objects_cameraview_cameraview_module_js__["a" /* default */]();
distLib.Phone = new __WEBPACK_IMPORTED_MODULE_41__objects_phone_phone_module_js__["a" /* default */]();
distLib.WidgetCanvas = new __WEBPACK_IMPORTED_MODULE_42__objects_widgetcanvas_widgetcanvas_module_js__["a" /* default */]();
distLib.System = new __WEBPACK_IMPORTED_MODULE_43__objects_system_system_module_js__["a" /* default */]();
distLib.PageView = new __WEBPACK_IMPORTED_MODULE_44__objects_pageview_pageview_module_js__["a" /* default */]();
distLib.FireBase = new __WEBPACK_IMPORTED_MODULE_45__objects_firebase_firebase_module_js__["a" /* default */]();
distLib.QRCodeScanner = new __WEBPACK_IMPORTED_MODULE_46__objects_qrcodescanner_qrcodescanner_module_js__["a" /* default */]();
distLib.DocuSign = new __WEBPACK_IMPORTED_MODULE_47__objects_docusign_docusign_module_js__["a" /* default */]();
distLib.Device = new __WEBPACK_IMPORTED_MODULE_48__objects_device_device_module_js__["a" /* default */]();
distLib.ListGridCommon = new __WEBPACK_IMPORTED_MODULE_49__objects_list_grid_common_list_grid_common_module_js__["a" /* default */]();
distLib.GoogleFit = new __WEBPACK_IMPORTED_MODULE_50__objects_googlefit_googlefit_module_js__["a" /* default */]();
distLib.DrawViewContainer = new __WEBPACK_IMPORTED_MODULE_51__objects_drawview_drawview_module_js__["a" /* default */]();
distLib.HealthKit = new __WEBPACK_IMPORTED_MODULE_52__objects_healthkit_healthkit_module_js__["a" /* default */]();
distLib.Textarea = new __WEBPACK_IMPORTED_MODULE_53__objects_textarea_textarea_module_js__["a" /* default */]();
distLib.Shape = new __WEBPACK_IMPORTED_MODULE_54__objects_shape_shape_module_js__["a" /* default */]();
distLib.EventListeners = new __WEBPACK_IMPORTED_MODULE_55__objects_eventLibrary_eventlisteners_module_js__["a" /* default */]();
distLib.VideoCall = new __WEBPACK_IMPORTED_MODULE_56__objects_videoCall_videocall_module_js__["a" /* default */]();
distLib.Crypto = __WEBPACK_IMPORTED_MODULE_59_crypto_js__;

// setting the global variable
com = com || {};
com.fc = com.fc || {};
com.fc.JavaScriptDistLib = distLib;

/***/ }),
/* 228 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
class TimeZones {
  getList() {
    return ["Africa/Abidjan\n",
      "Africa/Accra\n",
      "Africa/Addis_Ababa\n",
      "Africa/Algiers\n",
      "Africa/Asmera\n",
      "Africa/Bamako\n",
      "Africa/Bangui\n",
      "Africa/Banjul\n",
      "Africa/Bissau\n",
      "Africa/Blantyre\n",
      "Africa/Brazzaville\n",
      "Africa/Bujumbura\n",
      "Africa/Cairo\n",
      "Africa/Casablanca\n",
      "Africa/Conakry\n",
      "Africa/Dakar\n",
      "Africa/Dar_es_Salaam\n",
      "Africa/Djibouti\n",
      "Africa/El_Aaiun\n",
      "Africa/Freetown\n",
      "Africa/Gaborone\n",
      "Africa/Harare\n",
      "Africa/Johannesburg\n",
      "Africa/Kampala\n",
      "Africa/Khartoum\n",
      "Africa/Kigali\n",
      "Africa/Kinshasa\n",
      "Africa/Lagos\n",
      "Africa/Lagos\n",
      "Africa/Libreville\n",
      "Africa/Lome\n",
      "Africa/Luanda\n",
      "Africa/Lubumbashi\n",
      "Africa/Lusaka\n",
      "Africa/Malabo\n",
      "Africa/Maputo\n",
      "Africa/Maseru\n",
      "Africa/Mbabane\n",
      "Africa/Mogadishu\n",
      "Africa/Monrovia\n",
      "Africa/Nairobi\n",
      "Africa/Ndjamena\n",
      "Africa/Niamey\n",
      "Africa/Nouakchott\n",
      "Africa/Ouagadougou\n",
      "Africa/Porto-Novo\n",
      "Africa/Sao_Tome\n",
      "Africa/Tripoli\n",
      "Africa/Tunis\n",
      "Africa/Windhoek\n",
      "America/Anchorage\n",
      "America/Anguilla\n",
      "America/Antigua\n",
      "America/Araguaina\n",
      "America/Argentina/Buenos_Aires\n",
      "America/Argentina/Catamarca\n",
      "America/Argentina/Cordoba\n",
      "America/Argentina/Jujuy\n",
      "America/Argentina/La_Rioja\n",
      "America/Argentina/Mendoza\n",
      "America/Argentina/Rio_Gallegos\n",
      "America/Argentina/San_Juan\n",
      "America/Argentina/Tucuman\n",
      "America/Argentina/Ushuaia\n",
      "America/Aruba\n",
      "America/Asuncion\n",
      "America/Bahia\n",
      "America/Barbados\n",
      "America/Belem\n",
      "America/Belize\n",
      "America/Boa_Vista\n",
      "America/Bogota\n",
      "America/Campo_Grande\n",
      "America/Cancun\n",
      "America/Caracas\n",
      "America/Cayenne\n",
      "America/Cayman\n",
      "America/Chicago\n",
      "America/Chihuahua\n",
      "America/Costa_Rica\n",
      "America/Cuiaba\n",
      "America/Denver\n",
      "America/Dominica\n",
      "America/Edmonton\n",
      "America/El_Salvador\n",
      "America/Fortaleza\n",
      "America/Godthab\n",
      "America/Grand_Turk\n",
      "America/Grenada\n",
      "America/Guadeloupe\n",
      "America/Guatemala\n",
      "America/Guayaquil\n",
      "America/Guyana\n",
      "America/Halifax\n",
      "America/Havana\n",
      "America/Hermosillo\n",
      "America/Indianapolis\n",
      "America/Jamaica\n",
      "America/La_Paz\n",
      "America/Lima\n",
      "America/Los_Angeles\n",
      "America/Maceio\n",
      "America/Managua\n",
      "America/Manaus\n",
      "America/Martinique\n",
      "America/Mazatlan\n",
      "America/Merida\n",
      "America/Mexico_City\n",
      "America/Miquelon\n",
      "America/Monterrey\n",
      "America/Montevideo\n",
      "America/Montreal\n",
      "America/Montserrat\n",
      "America/Nassau\n",
      "America/New_York\n",
      "America/Noronha\n",
      "America/Panama\n",
      "America/Paramaribo\n",
      "America/Phoenix\n",
      "America/Port-au-Prince\n",
      "America/Porto_Velho\n",
      "America/Port_of_Spain\n",
      "America/Puerto_Rico\n",
      "America/Puerto_Rico\n",
      "America/Rankin_Inlet\n",
      "America/Regina\n",
      "America/Rio_Branco\n",
      "America/Santo_Domingo\n",
      "America/Sao_Paulo\n",
      "America/St_Johns\n",
      "America/St_Kitts\n",
      "America/St_Lucia\n",
      "America/St_Thomas\n",
      "America/St_Vincent\n",
      "America/Tegucigalpa\n",
      "America/Tijuana\n",
      "America/Toronto\n",
      "America/Tortola\n",
      "America/Vancouver\n",
      "America/Virgin\n",
      "America/Whitehorse\n",
      "America/Winnipeg\n",
      "America/Yellowknife\n",
      "Arctic/Longyearbyen\n",
      "Asia/Aden\n",
      "Asia/Almaty\n",
      "Asia/Amman\n",
      "Asia/Anadyr\n",
      "Asia/Aqtau\n",
      "Asia/Aqtobe\n",
      "Asia/Ashgabat\n",
      "Asia/Baghdad\n",
      "Asia/Bahrain\n",
      "Asia/Baku\n",
      "Asia/Bangkok\n",
      "Asia/Beirut\n",
      "Asia/Bishkek\n",
      "Asia/Brunei\n",
      "Asia/Calcutta\n",
      "Asia/Choibalsan\n",
      "Asia/Chongqing\n",
      "Asia/Colombo\n",
      "Asia/Damascus\n",
      "Asia/Dhaka\n",
      "Asia/Dubai\n",
      "Asia/Dushanbe\n",
      "Asia/Gaza\n",
      "Asia/Hong_Kong\n",
      "Asia/Hovd\n",
      "Asia/Irkutsk\n",
      "Asia/Istanbul\n",
      "Asia/Jakarta\n",
      "Asia/Jakarta\n",
      "Asia/Jayapura\n",
      "Asia/Jerusalem\n",
      "Asia/Kabul\n",
      "Asia/Kamchatka\n",
      "Asia/Karachi\n",
      "Asia/Katmandu\n",
      "Asia/Krasnoyarsk\n",
      "Asia/Kuala_Lumpur\n",
      "Asia/Kuwait\n",
      "Asia/Macao\n",
      "Asia/Magadan\n",
      "Asia/Manila\n",
      "Asia/Muscat\n",
      "Asia/Nicosia\n",
      "Asia/Novosibirsk\n",
      "Asia/Omsk\n",
      "Asia/Oral\n",
      "Asia/Phnom_Penh\n",
      "Asia/Phnom_Penh\n",
      "Asia/Pyongyang\n",
      "Asia/Qatar\n",
      "Asia/Qyzylorda\n",
      "Asia/Rangoon\n",
      "Asia/Riyadh\n",
      "Asia/Seoul\n",
      "Asia/Singapore\n",
      "Asia/Taipei\n",
      "Asia/Tashkent\n",
      "Asia/Tbilisi\n",
      "Asia/Tehran\n",
      "Asia/Thimphu\n",
      "Asia/Tokyo\n",
      "Asia/Ujung_Pandang\n",
      "Asia/Ulaanbaatar\n",
      "Asia/Vientiane\n",
      "Asia/Vladivostok\n",
      "Asia/Yakutsk\n",
      "Asia/Yekaterinburg\n",
      "Asia/Yerevan\n",
      "Atlantic/Azores\n",
      "Atlantic/Bermuda\n",
      "Atlantic/Canary\n",
      "Atlantic/Cape_Verde\n",
      "Atlantic/Faeroe\n",
      "Atlantic/Madeira\n",
      "Atlantic/Reykjavik\n",
      "Atlantic/South_Georgia\n",
      "Atlantic/Stanley\n",
      "Atlantic/St_Helena\n",
      "Australia/Canberra\n",
      "Australia/North\n",
      "Australia/NSW\n",
      "Australia/Queensland\n",
      "Australia/South\n",
      "Australia/Tasmania\n",
      "Australia/Victoria\n",
      "Australia/West\n",
      "Chile/Continental\n",
      "Europe/Amsterdam\n",
      "Europe/Andorra\n",
      "Europe/Athens\n",
      "Europe/Belgrade\n",
      "Europe/Berlin\n",
      "Europe/Bratislava\n",
      "Europe/Brussels\n",
      "Europe/Bucharest\n",
      "Europe/Budapest\n",
      "Europe/Chisinau\n",
      "Europe/Copenhagen\n",
      "Europe/Dublin\n",
      "Europe/Gibraltar\n",
      "Europe/Guernsey\n",
      "Europe/Helsinki\n",
      "Europe/Isle_of_Man\n",
      "Europe/Jersey\n",
      "Europe/Kaliningrad\n",
      "Europe/Kiev\n",
      "Europe/Lisbon\n",
      "Europe/Ljubljana\n",
      "Europe/London\n",
      "Europe/Luxembourg\n",
      "Europe/Madrid\n",
      "Europe/Malta\n",
      "Europe/Mariehamn\n",
      "Europe/Minsk\n",
      "Europe/Monaco\n",
      "Europe/Moscow\n",
      "Europe/Oslo\n",
      "Europe/Paris\n",
      "Europe/Podgorica\n",
      "Europe/Prague\n",
      "Europe/Riga\n",
      "Europe/Rome\n",
      "Europe/Samara\n",
      "Europe/San_Marino\n",
      "Europe/Sarajevo\n",
      "Europe/Skopje\n",
      "Europe/Sofia\n",
      "Europe/Stockholm\n",
      "Europe/Tallinn\n",
      "Europe/Tirane\n",
      "Europe/Vaduz\n",
      "Europe/Vatican\n",
      "Europe/Vienna\n",
      "Europe/Vilnius\n",
      "Europe/Warsaw\n",
      "Europe/Zagreb\n",
      "Europe/Zurich\n",
      "Indian/Antananarivo\n",
      "Indian/Chagos\n",
      "Indian/Christmas\n",
      "Indian/Cocos\n",
      "Indian/Comoro\n",
      "Indian/Kerguelen\n",
      "Indian/Mahe\n",
      "Indian/Maldives\n",
      "Indian/Mauritius\n",
      "Indian/Mayotte\n",
      "Indian/Reunion\n",
      "Pacific/Auckland\n",
      "Pacific/Chatham\n",
      "Pacific/Efate\n",
      "Pacific/Enderbury\n",
      "Pacific/Fakaofo\n",
      "Pacific/Fiji\n",
      "Pacific/Fiji\n",
      "Pacific/Funafuti\n",
      "Pacific/Galapagos\n",
      "Pacific/Guadalcanal\n",
      "Pacific/Guam\n",
      "Pacific/Honolulu\n",
      "Pacific/Kiritimati\n",
      "Pacific/Kosrae\n",
      "Pacific/Nauru\n",
      "Pacific/Niue\n",
      "Pacific/Norfolk\n",
      "Pacific/Noumea\n",
      "Pacific/Palau\n",
      "Pacific/Pitcairn\n",
      "Pacific/Ponape\n",
      "Pacific/Port_Moresby\n",
      "Pacific/Rarotonga\n",
      "Pacific/Saipan\n",
      "Pacific/Samoa\n",
      "Pacific/Tahiti\n",
      "Pacific/Tarawa\n",
      "Pacific/Tongatapu\n",
      "Pacific/Truk\n",
      "Pacific/Wallis\n",
      "Pacific/Yap\n",
      "US/Samoa"];
  }
}
/* harmony export (immutable) */ __webpack_exports__["a"] = TimeZones;


/***/ })
/******/ ]);